<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/</path>
    <filename>src_2CMakeLists_8txt</filename>
  </compound>
  <compound kind="file">
    <name>sup/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/</path>
    <filename>sup_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>SET</name>
      <anchorfile>sup_2CMakeLists_8txt.html</anchorfile>
      <anchor>a2dfc5236836633d782f99eacf3528197</anchor>
      <arglist>(SOURCE mac.cpp) TRIBITS_ADD_LIBRARY(xpetra-sup HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Kokkos_ConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/FakeKokkos/</path>
    <filename>Kokkos__ConfigDefs_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="no" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Kokkos__SerialNode_8hpp" name="Kokkos_SerialNode.hpp" local="yes" imported="no">Kokkos_SerialNode.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Kokkos_DefaultNode.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/FakeKokkos/</path>
    <filename>Kokkos__DefaultNode_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="no" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Kokkos__SerialNode_8hpp" name="Kokkos_SerialNode.hpp" local="no" imported="no">Kokkos_SerialNode.hpp</includes>
    <class kind="class">KokkosClassic::DefaultNode</class>
    <namespace>KokkosClassic</namespace>
    <namespace>KokkosClassic::Details</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; NodeType &gt;</type>
      <name>getNode</name>
      <anchorfile>namespaceKokkosClassic_1_1Details.html</anchorfile>
      <anchor>a3aa2ced8cf76cc93342a67df7ce3ba8a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Kokkos_SerialNode.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/FakeKokkos/</path>
    <filename>Kokkos__SerialNode_8hpp</filename>
    <class kind="class">Kokkos::Compat::KokkosSerialWrapperNode</class>
    <namespace>Kokkos</namespace>
    <namespace>Kokkos::Compat</namespace>
  </compound>
  <compound kind="file">
    <name>mac.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/</path>
    <filename>mac_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>libxpetra_sup</name>
      <anchorfile>mac_8cpp.html</anchorfile>
      <anchor>a2ea81b6fc3a8433c4381ed8d8f5e3e3f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_BlockedCrsMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedCrsMatrix/</path>
    <filename>Xpetra__BlockedCrsMatrix_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__MapFactory_8hpp" name="Xpetra_MapFactory.hpp" local="yes" imported="no">Xpetra_MapFactory.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__BlockedMultiVector_8hpp" name="Xpetra_BlockedMultiVector.hpp" local="yes" imported="no">Xpetra_BlockedMultiVector.hpp</includes>
    <includes id="Xpetra__MultiVectorFactory_8hpp" name="Xpetra_MultiVectorFactory.hpp" local="yes" imported="no">Xpetra_MultiVectorFactory.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixFactory_8hpp" name="Xpetra_CrsMatrixFactory.hpp" local="yes" imported="no">Xpetra_CrsMatrixFactory.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="yes" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__MatrixFactory_8hpp" name="Xpetra_MatrixFactory.hpp" local="yes" imported="no">Xpetra_MatrixFactory.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::BlockedCrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_BLOCKEDCRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__BlockedCrsMatrix_8hpp.html</anchorfile>
      <anchor>ae51cfe35a4c25259da69e6589b0599cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>viewLabel_t</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a25431b04cbddd92f36ce3d3858361f9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_BlockedCrsMatrix_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__BlockedCrsMatrix__fwd_8hpp</filename>
    <class kind="class">Xpetra::BlockedCrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_BLOCKEDCRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__BlockedCrsMatrix__fwd_8hpp.html</anchorfile>
      <anchor>ae51cfe35a4c25259da69e6589b0599cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_BlockedMultiVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedMultiVector/</path>
    <filename>Xpetra__BlockedMultiVector_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="yes" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::BlockedMultiVector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_BLOCKEDMULTIVECTOR_SHORT</name>
      <anchorfile>Xpetra__BlockedMultiVector_8hpp.html</anchorfile>
      <anchor>a17ddcf3d04ba1368cd9608c6432c768c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_BlockReorderManager.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedCrsMatrix/</path>
    <filename>Xpetra__BlockReorderManager_8cpp</filename>
    <includes id="Xpetra__BlockReorderManager_8hpp" name="Xpetra_BlockReorderManager.hpp" local="no" imported="no">Xpetra_BlockReorderManager.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>void</type>
      <name>tokenize</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf68475a762f02929ba48a16624aa308</anchor>
      <arglist>(std::string srcInput, std::string whitespace, std::string prefer, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::const_iterator</type>
      <name>buildSubBlock</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1e98998280db72d98762ea7ef36af6ad</anchor>
      <arglist>(std::vector&lt; std::string &gt;::const_iterator begin, std::vector&lt; std::string &gt;::const_iterator end, std::vector&lt; std::string &gt; &amp;subBlock)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Xpetra::BlockReorderManager &gt;</type>
      <name>blockedReorderFromTokens</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5b96b785c5e0e100e40db17c38f5e9c7</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt;</type>
      <name>blockedReorderFromString</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af27a8e25c793eddcb17ec2496ce7a64d</anchor>
      <arglist>(std::string reorder)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_BlockReorderManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedCrsMatrix/</path>
    <filename>Xpetra__BlockReorderManager_8hpp</filename>
    <class kind="class">Xpetra::BlockReorderManager</class>
    <class kind="class">Xpetra::BlockReorderLeaf</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>void</type>
      <name>tokenize</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf68475a762f02929ba48a16624aa308</anchor>
      <arglist>(std::string srcInput, std::string whitespace, std::string prefer, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::const_iterator</type>
      <name>buildSubBlock</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1e98998280db72d98762ea7ef36af6ad</anchor>
      <arglist>(std::vector&lt; std::string &gt;::const_iterator begin, std::vector&lt; std::string &gt;::const_iterator end, std::vector&lt; std::string &gt; &amp;subBlock)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Xpetra::BlockReorderManager &gt;</type>
      <name>blockedReorderFromTokens</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5b96b785c5e0e100e40db17c38f5e9c7</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt;</type>
      <name>blockedReorderFromString</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af27a8e25c793eddcb17ec2496ce7a64d</anchor>
      <arglist>(std::string reorder)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Cloner.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Cloner/</path>
    <filename>Xpetra__Cloner_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CLONER_SHORT</name>
      <anchorfile>Xpetra__Cloner_8hpp.html</anchorfile>
      <anchor>a22a252dcf77ad2163667316ef67257ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aba9027f08349389316953e97722cc069</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node1 &gt; &amp;map, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a0bd5df9f8415f9768162135d683e7ae1</anchor>
      <arglist>(const Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node1 &gt; &amp;matrix, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a32c4324df7f0052140818f3ecc244bb6</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node1 &gt; &amp;MV, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__ConfigDefs_8hpp</filename>
    <includes id="Kokkos__ConfigDefs_8hpp" name="Kokkos_ConfigDefs.hpp" local="no" imported="no">Kokkos_ConfigDefs.hpp</includes>
    <class kind="class">Xpetra::firstArg</class>
    <class kind="class">Xpetra::secondArg</class>
    <namespace>Xpetra</namespace>
    <namespace>XpetraExamples</namespace>
    <member kind="define">
      <type>#define</type>
      <name>__cplusplus</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a1b391bc7ed92f79666c4a5d840aa1edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_THROWS_EFFICIENCY_WARNINGS</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a5d1aaced8e0af47a8925a5d6392f50c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_PRINTS_EFFICIENCY_WARNINGS</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a566903ed66cdae16b3f99bd190227945</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_THROWS_ABUSE_WARNINGS</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a0fd5a82047ef6924fbab0d9f2808a295</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_PRINTS_ABUSE_WARNINGS</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a00b878c8de773c5e9c5d663b969c23c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MONITOR</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a777b973859a62f234fd7527af2c1db08</anchor>
      <arglist>(funcName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TEST_FOR_EXCEPTION</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>aca3a4cc27031d622ee414b7b5f0806af</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_ERR_CHECK</name>
      <anchorfile>Xpetra__ConfigDefs_8hpp.html</anchorfile>
      <anchor>aacfbdb8ffb57f9b401ccd8a337d5249f</anchor>
      <arglist>(arg)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Array_size_type</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a737a987da6fbd808a0790c47256db3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>global_size_t</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a271d58cd036f8c847275f21bc88427d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LocalGlobal</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a733dea33b13c79ffdb050d2d77b2d9ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocallyReplicated</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a733dea33b13c79ffdb050d2d77b2d9eea7c64f79f602e0540f2cce83be92b819a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GloballyDistributed</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a733dea33b13c79ffdb050d2d77b2d9eea83c716a253a277393f1f95561765c9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LookupStatus</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acc0107be8b975856d67ae8474f405831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllIDsPresent</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acc0107be8b975856d67ae8474f405831a57c8a1871e76d9d2b595ed91ced97c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDNotPresent</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acc0107be8b975856d67ae8474f405831ae4192ed380addaa94d3603e5f71f7c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProfileType</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b201fad6cdd588bcec6b63f12574a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StaticProfile</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b201fad6cdd588bcec6b63f12574a16ac62230bb1457844b730a9d10c76b80fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DynamicProfile</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b201fad6cdd588bcec6b63f12574a16ae6a9596b9cfb42880be9435c07a847f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OptimizeOption</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf2f4e410836d369c8795783875fd7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoOptimizeStorage</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf2f4e410836d369c8795783875fd7c5a238ae931d6e36566c7675a5d41f3a051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoNotOptimizeStorage</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf2f4e410836d369c8795783875fd7c5ad6094ce4cdf70639d701f890aeeac404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CombineMode</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADD</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15a23e72c1381f91906e00f1afc0f909ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSERT</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15a856eb04ad1bcaa5c9fc550eebdca753a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSMAX</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15a6d271944d562f741bb38a908f154f7a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsGraph.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsGraph/</path>
    <filename>Xpetra__CrsGraph_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__DistObject_8hpp" name="Xpetra_DistObject.hpp" local="yes" imported="no">Xpetra_DistObject.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <class kind="struct">Xpetra::RowInfo</class>
    <class kind="class">Xpetra::CrsGraph</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSGRAPH_SHORT</name>
      <anchorfile>Xpetra__CrsGraph_8hpp.html</anchorfile>
      <anchor>a42397527ba5afb1ededbc7ff1e2c1b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ELocalGlobal</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a26e9513753e3104bfbaee9999acfca90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalIndices</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a26e9513753e3104bfbaee9999acfca90ae1c118d6a640d73505f2a530d16412b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GlobalIndices</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a26e9513753e3104bfbaee9999acfca90aee52c89b5a066d19e2ff6f7522e254fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsGraph_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__CrsGraph__fwd_8hpp</filename>
    <class kind="class">Xpetra::CrsGraph</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSGRAPH_SHORT</name>
      <anchorfile>Xpetra__CrsGraph__fwd_8hpp.html</anchorfile>
      <anchor>a42397527ba5afb1ededbc7ff1e2c1b2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsGraphFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsGraph/</path>
    <filename>Xpetra__CrsGraphFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__TpetraCrsGraph_8hpp" name="Xpetra_TpetraCrsGraph.hpp" local="yes" imported="no">Xpetra_TpetraCrsGraph.hpp</includes>
    <includes id="Xpetra__EpetraCrsGraph_8hpp" name="Xpetra_EpetraCrsGraph.hpp" local="yes" imported="no">Xpetra_EpetraCrsGraph.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::CrsGraphFactory</class>
    <class kind="class">Xpetra::CrsGraphFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::CrsGraphFactory&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSGRAPHFACTORY_SHORT</name>
      <anchorfile>Xpetra__CrsGraphFactory_8hpp.html</anchorfile>
      <anchor>ae0e4a8770c019596e54d858c85ec1ed1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsGraphFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__CrsGraphFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::CrsGraphFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSGRAPHFACTORY_SHORT</name>
      <anchorfile>Xpetra__CrsGraphFactory__fwd_8hpp.html</anchorfile>
      <anchor>ae0e4a8770c019596e54d858c85ec1ed1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsMatrix/</path>
    <filename>Xpetra__CrsMatrix_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__RowMatrix_8hpp" name="Xpetra_RowMatrix.hpp" local="yes" imported="no">Xpetra_RowMatrix.hpp</includes>
    <includes id="Xpetra__DistObject_8hpp" name="Xpetra_DistObject.hpp" local="yes" imported="no">Xpetra_DistObject.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <class kind="class">Xpetra::CrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__CrsMatrix_8hpp.html</anchorfile>
      <anchor>a7a87b2629cf56bc3805a9f8a73f122ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsMatrix_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__CrsMatrix__fwd_8hpp</filename>
    <class kind="class">Xpetra::CrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__CrsMatrix__fwd_8hpp.html</anchorfile>
      <anchor>a7a87b2629cf56bc3805a9f8a73f122ba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsMatrixFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsMatrix/</path>
    <filename>Xpetra__CrsMatrixFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__TpetraCrsMatrix_8hpp" name="Xpetra_TpetraCrsMatrix.hpp" local="yes" imported="no">Xpetra_TpetraCrsMatrix.hpp</includes>
    <includes id="Xpetra__EpetraCrsMatrix_8hpp" name="Xpetra_EpetraCrsMatrix.hpp" local="yes" imported="no">Xpetra_EpetraCrsMatrix.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::CrsMatrixFactory</class>
    <class kind="class">Xpetra::CrsMatrixFactory&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::CrsMatrixFactory&lt; double, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSMATRIXFACTORY_SHORT</name>
      <anchorfile>Xpetra__CrsMatrixFactory_8hpp.html</anchorfile>
      <anchor>aa18daef808cc6266540b809730083ea0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsMatrixFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__CrsMatrixFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::CrsMatrixFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSMATRIXFACTORY_SHORT</name>
      <anchorfile>Xpetra__CrsMatrixFactory__fwd_8hpp.html</anchorfile>
      <anchor>aa18daef808cc6266540b809730083ea0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsMatrixWrap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Matrix/</path>
    <filename>Xpetra__CrsMatrixWrap_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixFactory_8hpp" name="Xpetra_CrsMatrixFactory.hpp" local="yes" imported="no">Xpetra_CrsMatrixFactory.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <class kind="class">Xpetra::CrsMatrixWrap</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSMATRIXWRAP_SHORT</name>
      <anchorfile>Xpetra__CrsMatrixWrap_8hpp.html</anchorfile>
      <anchor>a87c24473f49aa3e0364469dac3fddcb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_CrsMatrixWrap_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__CrsMatrixWrap__fwd_8hpp</filename>
    <class kind="class">Xpetra::CrsMatrixWrap</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_CRSMATRIXWRAP_SHORT</name>
      <anchorfile>Xpetra__CrsMatrixWrap__fwd_8hpp.html</anchorfile>
      <anchor>a87c24473f49aa3e0364469dac3fddcb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_DefaultPlatform.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Platform/</path>
    <filename>Xpetra__DefaultPlatform_8cpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__DefaultPlatform_8hpp" name="Xpetra_DefaultPlatform.hpp" local="yes" imported="no">Xpetra_DefaultPlatform.hpp</includes>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_DefaultPlatform.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Platform/</path>
    <filename>Xpetra__DefaultPlatform_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__SerialPlatform_8hpp" name="Xpetra_SerialPlatform.hpp" local="yes" imported="no">Xpetra_SerialPlatform.hpp</includes>
    <class kind="class">Xpetra::DefaultPlatform</class>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_DefaultPlatform_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__DefaultPlatform__fwd_8hpp</filename>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_DEFAULTPLATFORM_SHORT</name>
      <anchorfile>Xpetra__DefaultPlatform__fwd_8hpp.html</anchorfile>
      <anchor>abf95849fec0ae4ab06c76fa1563a4dc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_DistObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/DistObject/</path>
    <filename>Xpetra__DistObject_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Import_8hpp" name="Xpetra_Import.hpp" local="yes" imported="no">Xpetra_Import.hpp</includes>
    <includes id="Xpetra__Export_8hpp" name="Xpetra_Export.hpp" local="yes" imported="no">Xpetra_Export.hpp</includes>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <class kind="class">Xpetra::DistObject</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_DISTOBJECT_SHORT</name>
      <anchorfile>Xpetra__DistObject_8hpp.html</anchorfile>
      <anchor>adb751d51fb205c99c4ce06eaf38d2289</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_DistObject_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__DistObject__fwd_8hpp</filename>
    <class kind="class">Xpetra::DistObject</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_DISTOBJECT_SHORT</name>
      <anchorfile>Xpetra__DistObject__fwd_8hpp.html</anchorfile>
      <anchor>adb751d51fb205c99c4ce06eaf38d2289</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_DoxygenDocumentation.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/doc/</path>
    <filename>Xpetra__DoxygenDocumentation_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__EpetraConfigDefs_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraCrsGraph.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsGraph/</path>
    <filename>Xpetra__EpetraCrsGraph_8cpp</filename>
    <includes id="Xpetra__EpetraCrsGraph_8hpp" name="Xpetra_EpetraCrsGraph.hpp" local="yes" imported="no">Xpetra_EpetraCrsGraph.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const Epetra_CrsGraph &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a49bbbf68284dd886947e71ffa7800b1c</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a7075a879cb1bd5b3ed32afc2169e84ff</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const CrsGraph&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c498f34c4c46c1407d362b42e1927aa</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_CrsGraph &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa94e775c808a256440c10b2811fe37e1</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, int, Xpetra::EpetraNode &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const CrsGraph&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aba29d0f978e83a62a3490d163981ff2d</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_CrsGraph &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4e3c90f0a46f9c02bec4de6ba20c1419</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, long long, Xpetra::EpetraNode &gt; &gt; &amp;graph)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraCrsGraph.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsGraph/</path>
    <filename>Xpetra__EpetraCrsGraph_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__EpetraUtils_8hpp" name="Xpetra_EpetraUtils.hpp" local="yes" imported="no">Xpetra_EpetraUtils.hpp</includes>
    <class kind="class">Xpetra::EpetraCrsGraphT</class>
    <class kind="class">Xpetra::EpetraCrsGraphT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraCrsGraphT&lt; long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a7075a879cb1bd5b3ed32afc2169e84ff</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_CrsGraph &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a49bbbf68284dd886947e71ffa7800b1c</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraCrsGraph_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraCrsGraph__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraCrsGraphT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRACRSGRAPH_SHORT</name>
      <anchorfile>Xpetra__EpetraCrsGraph__fwd_8hpp.html</anchorfile>
      <anchor>abe2c68e1ba68077ee6f5d0b78b6d70a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraCrsGraphT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraCrsGraph</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af1b82be780dccc1c3a8d5090aa143e95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraCrsMatrix.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsMatrix/</path>
    <filename>Xpetra__EpetraCrsMatrix_8cpp</filename>
    <includes id="Xpetra__EpetraCrsMatrix_8hpp" name="Xpetra_EpetraCrsMatrix.hpp" local="yes" imported="no">Xpetra_EpetraCrsMatrix.hpp</includes>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraCrsMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsMatrix/</path>
    <filename>Xpetra__EpetraCrsMatrix_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__EpetraVector_8hpp" name="Xpetra_EpetraVector.hpp" local="yes" imported="no">Xpetra_EpetraVector.hpp</includes>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="yes" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <includes id="Xpetra__EpetraCrsGraph_8hpp" name="Xpetra_EpetraCrsGraph.hpp" local="yes" imported="no">Xpetra_EpetraCrsGraph.hpp</includes>
    <includes id="Xpetra__MapFactory_8hpp" name="Xpetra_MapFactory.hpp" local="yes" imported="no">Xpetra_MapFactory.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::EpetraCrsMatrixT</class>
    <class kind="class">Xpetra::EpetraCrsMatrixT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraCrsMatrixT&lt; long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRACRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__EpetraCrsMatrix_8hpp.html</anchorfile>
      <anchor>af75968927aa22e298624bc9d44500ce4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraCrsMatrix_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraCrsMatrix__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraCrsMatrixT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRACRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__EpetraCrsMatrix__fwd_8hpp.html</anchorfile>
      <anchor>af75968927aa22e298624bc9d44500ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraCrsMatrixT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraCrsMatrix</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a29eddd56bbeb56fde978a1f4af08c7d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraExceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__EpetraExceptions_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>IF_EPETRA_EXCEPTION_THEN_THROW_GLOBAL_INVALID_ARG</name>
      <anchorfile>Xpetra__EpetraExceptions_8hpp.html</anchorfile>
      <anchor>a1268b19bfe5db983da8d613b1517739f</anchor>
      <arglist>(sourceCode)  </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraExport.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Export/</path>
    <filename>Xpetra__EpetraExport_8cpp</filename>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>RCP&lt; const Export&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a34c6fabb75c71319f6a1ec765b4e7518</anchor>
      <arglist>(const Epetra_Export *exp)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Export&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1c2818a43f0abfbc578c5e621130459e</anchor>
      <arglist>(const Epetra_Export *)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Export&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4754c13a5c32f53a7a578093b105d314</anchor>
      <arglist>(const Epetra_Export *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraExport.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Export/</path>
    <filename>Xpetra__EpetraExport_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Export_8hpp" name="Xpetra_Export.hpp" local="yes" imported="no">Xpetra_Export.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <class kind="class">Xpetra::EpetraExportT</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const Epetra_Export &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad527aae3b5d453be3e530572defd5d50</anchor>
      <arglist>(const Export&lt; int, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a34c6fabb75c71319f6a1ec765b4e7518</anchor>
      <arglist>(const Epetra_Export *exp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraExport_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraExport__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraExportT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAEXPORT_SHORT</name>
      <anchorfile>Xpetra__EpetraExport__fwd_8hpp.html</anchorfile>
      <anchor>a269548a378d53a5579383bcb983b5e1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraExportT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraExport</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aed26855c54e32e5e923e4f35f1010901</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraImport.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Import/</path>
    <filename>Xpetra__EpetraImport_8cpp</filename>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>RCP&lt; const Import&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ab1a8b235eb2ace8e27235461f47bcdaf</anchor>
      <arglist>(const Epetra_Import *import)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Import&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1d1a895ad2ed898d9fdcd53820cd55b1</anchor>
      <arglist>(const Epetra_Import *)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Import&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a20a99aa72e3283c6694b66aaede36cac</anchor>
      <arglist>(const Epetra_Import *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraImport.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Import/</path>
    <filename>Xpetra__EpetraImport_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Import_8hpp" name="Xpetra_Import.hpp" local="yes" imported="no">Xpetra_Import.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <class kind="class">Xpetra::EpetraImportT</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>RCP&lt; const Import&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ab1a8b235eb2ace8e27235461f47bcdaf</anchor>
      <arglist>(const Epetra_Import *import)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraImport_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraImport__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraImportT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAIMPORT_SHORT</name>
      <anchorfile>Xpetra__EpetraImport__fwd_8hpp.html</anchorfile>
      <anchor>a867e1a9ecd306044a1ce6d46c2bbe040</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraImportT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraImport</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a0c48066f4ec7b33406b5c498eb5cc9a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraIntVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__EpetraIntVector_8cpp</filename>
    <includes id="Xpetra__EpetraIntVector_8hpp" name="Xpetra_EpetraIntVector.hpp" local="yes" imported="no">Xpetra_EpetraIntVector.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraIntVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__EpetraIntVector_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="yes" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <class kind="class">Xpetra::EpetraIntVectorT</class>
    <class kind="class">Xpetra::EpetraIntVectorT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraIntVectorT&lt; long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraIntVector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraIntVector__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraIntVectorT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAINTVECTOR_SHORT</name>
      <anchorfile>Xpetra__EpetraIntVector__fwd_8hpp.html</anchorfile>
      <anchor>acee7ba9fa534e64b941e7c47e05c90c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraIntVectorT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraIntVector</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a31bb6a1da25158ae6a349a4fad5720c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraMap.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Map/</path>
    <filename>Xpetra__EpetraMap_8cpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa3831335e40432d4b84c6bb8bd8b8963</anchor>
      <arglist>(const Map&lt; int, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af0c954fb36dd6b70dc8c3f9568de6f2b</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af42104134f1099138d9385771c3d366f</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const RCP&lt; const Map&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b82fd40d42fc0f8a8d955fc9a9c8ac7</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa17ecc8864d7d9cd45167ae98af232da</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, Xpetra::EpetraNode &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a56cabdf52ddcc9297d727a54c5c8abb7</anchor>
      <arglist>(const Map&lt; int, int, Xpetra::EpetraNode &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const RCP&lt; const Map&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac86ccaba291f673c068674c72d18e279</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad1a8f7531e2c1719b517253142a4604d</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, Xpetra::EpetraNode &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5aeed265a35e51eb7547457b55f6bfcf</anchor>
      <arglist>(const Map&lt; int, long long, Xpetra::EpetraNode &gt; &amp;map)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraMap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Map/</path>
    <filename>Xpetra__EpetraMap_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__EpetraUtils_8hpp" name="Xpetra_EpetraUtils.hpp" local="yes" imported="no">Xpetra_EpetraUtils.hpp</includes>
    <includes id="Xpetra__EpetraExceptions_8hpp" name="Xpetra_EpetraExceptions.hpp" local="yes" imported="no">Xpetra_EpetraExceptions.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <class kind="class">Xpetra::EpetraMapT</class>
    <class kind="class">Xpetra::EpetraMapT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraMapT&lt; long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa3831335e40432d4b84c6bb8bd8b8963</anchor>
      <arglist>(const Map&lt; int, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af0c954fb36dd6b70dc8c3f9568de6f2b</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af42104134f1099138d9385771c3d366f</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraMap_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraMap__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraMapT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAMAP_SHORT</name>
      <anchorfile>Xpetra__EpetraMap__fwd_8hpp.html</anchorfile>
      <anchor>a6ffdfdc976c98b2c12f96afd00d34c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraMapT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraMap</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a43f97f386f208b8652996ecea549ef0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraMultiVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/MultiVector/</path>
    <filename>Xpetra__EpetraMultiVector_8cpp</filename>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="yes" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__EpetraVector_8hpp" name="Xpetra_EpetraVector.hpp" local="yes" imported="no">Xpetra_EpetraVector.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const Epetra_MultiVector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a9bf4f2e2a303ad2951a031cc2e9c524b</anchor>
      <arglist>(const MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a075c625e509917a701638d156f4270b6</anchor>
      <arglist>(MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af496bccfd9a343313af71b7dc213e754</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a237750706317f237250c84b79c902919</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt;)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a07b3674b54a6f90aa3e5850b323e9e4e</anchor>
      <arglist>(MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>afcdd3f8724eeb4a30caeae20bd60ecb5</anchor>
      <arglist>(const MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6c99d40cd5254445facec2cb20873558</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt;)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac6d5daae03345307d745709216c7602a</anchor>
      <arglist>(MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6cb8b0f28aa99d6d3cbf4102c700c7a</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraMultiVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/MultiVector/</path>
    <filename>Xpetra__EpetraMultiVector_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__EpetraUtils_8hpp" name="Xpetra_EpetraUtils.hpp" local="yes" imported="no">Xpetra_EpetraUtils.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__EpetraVector_8hpp" name="Xpetra_EpetraVector.hpp" local="yes" imported="no">Xpetra_EpetraVector.hpp</includes>
    <class kind="class">Xpetra::EpetraMultiVectorT</class>
    <class kind="class">Xpetra::EpetraMultiVectorT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraMultiVectorT&lt; long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const Epetra_MultiVector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a9bf4f2e2a303ad2951a031cc2e9c524b</anchor>
      <arglist>(const MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a075c625e509917a701638d156f4270b6</anchor>
      <arglist>(MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af496bccfd9a343313af71b7dc213e754</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt; vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraMultiVector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraMultiVector__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraMultiVectorT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAMULTIVECTOR_SHORT</name>
      <anchorfile>Xpetra__EpetraMultiVector__fwd_8hpp.html</anchorfile>
      <anchor>a036acd4e4d2c411e25a4c62de098fe96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraMultiVectorT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraMultiVector</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1127fc7b5f38af9b874f046161251e93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraOperator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Operator/</path>
    <filename>Xpetra__EpetraOperator_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="yes" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <includes id="Xpetra__Operator_8hpp" name="Xpetra_Operator.hpp" local="yes" imported="no">Xpetra_Operator.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <class kind="class">Xpetra::EpetraOperator</class>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraOperator_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraOperator__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraOperatorT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAOPERATOR_SHORT</name>
      <anchorfile>Xpetra__EpetraOperator__fwd_8hpp.html</anchorfile>
      <anchor>a9caa3056144be6f0e2377758d4321dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraOperatorT&lt; int &gt;</type>
      <name>EpetraOperator</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae8b9faeffe6a5d2769ede1bb3438885e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__EpetraUtils_8cpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__EpetraUtils_8hpp" name="Xpetra_EpetraUtils.hpp" local="yes" imported="no">Xpetra_EpetraUtils.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const RCP&lt; const Epetra_Comm &gt;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ab168d46c0c042be2f8b0f66506b77b9f</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac6bec3d26507b5e8a6a9026d530bf5da</anchor>
      <arglist>(const Epetra_Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a2ee6585fccc69a0eb02dea89c6e1f9e5</anchor>
      <arglist>(Teuchos::ETransp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__EpetraUtils_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>const RCP&lt; const Epetra_Comm &gt;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ab168d46c0c042be2f8b0f66506b77b9f</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac6bec3d26507b5e8a6a9026d530bf5da</anchor>
      <arglist>(const Epetra_Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a2ee6585fccc69a0eb02dea89c6e1f9e5</anchor>
      <arglist>(Teuchos::ETransp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__EpetraVector_8cpp</filename>
    <includes id="Xpetra__EpetraVector_8hpp" name="Xpetra_EpetraVector.hpp" local="yes" imported="no">Xpetra_EpetraVector.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>Epetra_Vector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aeb0d393494cee0093faae841e78dff09</anchor>
      <arglist>(Vector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Vector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac856becf599570abf5c21c48cf66c6b9</anchor>
      <arglist>(const Vector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_Vector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8e10003334dc788850a241cd296fc472</anchor>
      <arglist>(Vector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Vector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a7b6305d78533589e8576719915c25098</anchor>
      <arglist>(const Vector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_Vector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a70cf6d637058d6115fe79bce8ba8d617</anchor>
      <arglist>(Vector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Vector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5550917c013affe26655f4fb5f332cbc</anchor>
      <arglist>(const Vector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__EpetraVector_8hpp</filename>
    <includes id="Xpetra__EpetraConfigDefs_8hpp" name="Xpetra_EpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_EpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="yes" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::EpetraVectorT</class>
    <class kind="class">Xpetra::EpetraVectorT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraVectorT&lt; long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>Epetra_Vector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aeb0d393494cee0093faae841e78dff09</anchor>
      <arglist>(Vector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Vector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac856becf599570abf5c21c48cf66c6b9</anchor>
      <arglist>(const Vector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_EpetraVector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__EpetraVector__fwd_8hpp</filename>
    <class kind="class">Xpetra::EpetraVectorT</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EPETRAVECTOR_SHORT</name>
      <anchorfile>Xpetra__EpetraVector__fwd_8hpp.html</anchorfile>
      <anchor>ae6cc9d6785791b088a896accf495cdf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraVectorT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraVector</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae297d897ac14765bcb69ca46389cdd8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Exceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__Exceptions_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <class kind="class">Xpetra::Exceptions::BadCast</class>
    <class kind="class">Xpetra::Exceptions::NotImplemented</class>
    <class kind="class">Xpetra::Exceptions::RuntimeError</class>
    <class kind="class">Xpetra::Exceptions::Incompatible</class>
    <namespace>Xpetra</namespace>
    <namespace>Xpetra::Exceptions</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_COMMA</name>
      <anchorfile>Xpetra__Exceptions_8hpp.html</anchorfile>
      <anchor>aa3ef484c637bfd27f8acbd16f5653f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_DYNAMIC_CAST</name>
      <anchorfile>Xpetra__Exceptions_8hpp.html</anchorfile>
      <anchor>a71478b43a470ff742de4d054657eb631</anchor>
      <arglist>(type, obj, newObj, exceptionMsg)                    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_RCP_DYNAMIC_CAST</name>
      <anchorfile>Xpetra__Exceptions_8hpp.html</anchorfile>
      <anchor>a8e8d5c746628beab4d75ab350351e7b5</anchor>
      <arglist>(type, obj, newObj, exceptionMsg)            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_FACTORY_ERROR_IF_EPETRA</name>
      <anchorfile>Xpetra__Exceptions_8hpp.html</anchorfile>
      <anchor>a1c786136954665a1bd92b0d38d4fe627</anchor>
      <arglist>(lib)                                                    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_FACTORY_END</name>
      <anchorfile>Xpetra__Exceptions_8hpp.html</anchorfile>
      <anchor>ad04790542c3e784371202f6cdfc1123d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRA_ETI_EXCEPTION</name>
      <anchorfile>Xpetra__Exceptions_8hpp.html</anchorfile>
      <anchor>a7f6cbbebc26907583b98d3166ec79ca1</anchor>
      <arglist>(cl, obj, go, node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Export.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Export/</path>
    <filename>Xpetra__Export_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <class kind="class">Xpetra::Export</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EXPORT_SHORT</name>
      <anchorfile>Xpetra__Export_8hpp.html</anchorfile>
      <anchor>a84a9f6c1d0d21d00b9b690ecc3391374</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Export_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Export__fwd_8hpp</filename>
    <class kind="class">Xpetra::Export</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EXPORT_SHORT</name>
      <anchorfile>Xpetra__Export__fwd_8hpp.html</anchorfile>
      <anchor>a84a9f6c1d0d21d00b9b690ecc3391374</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ExportFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Export/</path>
    <filename>Xpetra__ExportFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Export_8hpp" name="Xpetra_Export.hpp" local="yes" imported="no">Xpetra_Export.hpp</includes>
    <includes id="Xpetra__TpetraExport_8hpp" name="Xpetra_TpetraExport.hpp" local="yes" imported="no">Xpetra_TpetraExport.hpp</includes>
    <includes id="Xpetra__EpetraExport_8hpp" name="Xpetra_EpetraExport.hpp" local="yes" imported="no">Xpetra_EpetraExport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::ExportFactory</class>
    <class kind="class">Xpetra::ExportFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::ExportFactory&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EXPORTFACTORY_SHORT</name>
      <anchorfile>Xpetra__ExportFactory_8hpp.html</anchorfile>
      <anchor>a8efd96bc0c3fc6dc3ee1c4d2c4db1be9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ExportFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__ExportFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::ExportFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_EXPORTFACTORY_SHORT</name>
      <anchorfile>Xpetra__ExportFactory__fwd_8hpp.html</anchorfile>
      <anchor>a8efd96bc0c3fc6dc3ee1c4d2c4db1be9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Import.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Import/</path>
    <filename>Xpetra__Import_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <class kind="class">Xpetra::Import</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_IMPORT_SHORT</name>
      <anchorfile>Xpetra__Import_8hpp.html</anchorfile>
      <anchor>a214a8fb10f207719836eb745fb084f42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Import_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Import__fwd_8hpp</filename>
    <class kind="class">Xpetra::Import</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_IMPORT_SHORT</name>
      <anchorfile>Xpetra__Import__fwd_8hpp.html</anchorfile>
      <anchor>a214a8fb10f207719836eb745fb084f42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ImportFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Import/</path>
    <filename>Xpetra__ImportFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Import_8hpp" name="Xpetra_Import.hpp" local="yes" imported="no">Xpetra_Import.hpp</includes>
    <includes id="Xpetra__TpetraImport_8hpp" name="Xpetra_TpetraImport.hpp" local="yes" imported="no">Xpetra_TpetraImport.hpp</includes>
    <includes id="Xpetra__EpetraImport_8hpp" name="Xpetra_EpetraImport.hpp" local="yes" imported="no">Xpetra_EpetraImport.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::ImportFactory</class>
    <class kind="class">Xpetra::ImportFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::ImportFactory&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_IMPORTFACTORY_SHORT</name>
      <anchorfile>Xpetra__ImportFactory_8hpp.html</anchorfile>
      <anchor>a6c4b240ff67a1033dcb9b3d20b779539</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ImportFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__ImportFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::ImportFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_IMPORTFACTORY_SHORT</name>
      <anchorfile>Xpetra__ImportFactory__fwd_8hpp.html</anchorfile>
      <anchor>a6c4b240ff67a1033dcb9b3d20b779539</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_IO.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__IO_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__EpetraUtils_8hpp" name="Xpetra_EpetraUtils.hpp" local="no" imported="no">Xpetra_EpetraUtils.hpp</includes>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="no" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="no" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__TpetraCrsMatrix_8hpp" name="Xpetra_TpetraCrsMatrix.hpp" local="no" imported="no">Xpetra_TpetraCrsMatrix.hpp</includes>
    <includes id="Xpetra__TpetraBlockCrsMatrix_8hpp" name="Xpetra_TpetraBlockCrsMatrix.hpp" local="no" imported="no">Xpetra_TpetraBlockCrsMatrix.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="no" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__MatrixMatrix_8hpp" name="Xpetra_MatrixMatrix.hpp" local="yes" imported="no">Xpetra_MatrixMatrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__BlockedCrsMatrix_8hpp" name="Xpetra_BlockedCrsMatrix.hpp" local="yes" imported="no">Xpetra_BlockedCrsMatrix.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__StridedMap_8hpp" name="Xpetra_StridedMap.hpp" local="yes" imported="no">Xpetra_StridedMap.hpp</includes>
    <includes id="Xpetra__StridedMapFactory_8hpp" name="Xpetra_StridedMapFactory.hpp" local="yes" imported="no">Xpetra_StridedMapFactory.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="yes" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__MatrixFactory_8hpp" name="Xpetra_MatrixFactory.hpp" local="yes" imported="no">Xpetra_MatrixFactory.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::IO</class>
    <class kind="class">Xpetra::IO&lt; Scalar, int, int, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_IO_SHORT</name>
      <anchorfile>Xpetra__IO_8hpp.html</anchorfile>
      <anchor>aec269809db39d8fedbe7eaf3bc72ef32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a955c07569a0ff9030f54e05d3e64fcd7</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a9e61b4cd91a895283272c6b152aa47ee</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_IteratorOps.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__IteratorOps_8cpp</filename>
    <includes id="Xpetra__IteratorOps_8hpp" name="Xpetra_IteratorOps.hpp" local="yes" imported="no">Xpetra_IteratorOps.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>void</type>
      <name>Jacobi&lt; double, int, int, EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a35a56383e41679317cc51026bdfbabaa</anchor>
      <arglist>(double omega, const Xpetra::Vector&lt; double, int, int, EpetraNode &gt; &amp;Dinv, const Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;B, Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;C, bool call_FillComplete_on_result, bool doOptimizeStorage, const std::string &amp;label, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi&lt; double, int, long long, EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a29a726fd49fc5241770da13f1c6b6b4e</anchor>
      <arglist>(double omega, const Xpetra::Vector&lt; double, int, long long, EpetraNode &gt; &amp;Dinv, const Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;B, Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;C, bool call_FillComplete_on_result, bool doOptimizeStorage, const std::string &amp;label, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_IteratorOps.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__IteratorOps_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__MatrixMatrix_8hpp" name="Xpetra_MatrixMatrix.hpp" local="yes" imported="no">Xpetra_MatrixMatrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__StridedMap_8hpp" name="Xpetra_StridedMap.hpp" local="yes" imported="no">Xpetra_StridedMap.hpp</includes>
    <includes id="Xpetra__StridedMapFactory_8hpp" name="Xpetra_StridedMapFactory.hpp" local="yes" imported="no">Xpetra_StridedMapFactory.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="yes" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__MatrixFactory_8hpp" name="Xpetra_MatrixFactory.hpp" local="yes" imported="no">Xpetra_MatrixFactory.hpp</includes>
    <includes id="Xpetra__BlockedCrsMatrix_8hpp" name="Xpetra_BlockedCrsMatrix.hpp" local="yes" imported="no">Xpetra_BlockedCrsMatrix.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::IteratorOps</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_ITERATOROPS_SHORT</name>
      <anchorfile>Xpetra__IteratorOps_8hpp.html</anchorfile>
      <anchor>a0354dc4d473847fb19e113eb33ea834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a822616e4943ea3b99ddce6a46c98aed6</anchor>
      <arglist>(Scalar omega, const Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Dinv, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;C, bool call_FillComplete_on_result=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi&lt; double, int, int, EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a35a56383e41679317cc51026bdfbabaa</anchor>
      <arglist>(double omega, const Xpetra::Vector&lt; double, int, int, EpetraNode &gt; &amp;Dinv, const Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;B, Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;C, bool call_FillComplete_on_result, bool doOptimizeStorage, const std::string &amp;label, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi&lt; double, int, long long, EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a29a726fd49fc5241770da13f1c6b6b4e</anchor>
      <arglist>(double omega, const Xpetra::Vector&lt; double, int, long long, EpetraNode &gt; &amp;Dinv, const Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;B, Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;C, bool call_FillComplete_on_result, bool doOptimizeStorage, const std::string &amp;label, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Map.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Map/</path>
    <filename>Xpetra__Map_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <class kind="class">Xpetra::Map</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAP_SHORT</name>
      <anchorfile>Xpetra__Map_8hpp.html</anchorfile>
      <anchor>a6e776c1206c2319abba5cbd41278a288</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosSerialWrapperNode</type>
      <name>EpetraNode</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad5ddcd6aa4bc47973d3cdf2b85e91880</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnderlyingLib</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13afa179b1b9c5e04a6cb49c2da1b06354c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13afaa7f6cc303d9a12e5c36e75ee7eea495e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotSpecified</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13afa397240a547a44c58fe292fcb6baad0a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Map_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Map__fwd_8hpp</filename>
    <class kind="class">Xpetra::Map</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAP_SHORT</name>
      <anchorfile>Xpetra__Map__fwd_8hpp.html</anchorfile>
      <anchor>a6e776c1206c2319abba5cbd41278a288</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapExtractor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedCrsMatrix/</path>
    <filename>Xpetra__MapExtractor_8hpp</filename>
    <includes id="Xpetra__Import_8hpp" name="Xpetra_Import.hpp" local="no" imported="no">Xpetra_Import.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="no" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__ImportFactory_8hpp" name="Xpetra_ImportFactory.hpp" local="no" imported="no">Xpetra_ImportFactory.hpp</includes>
    <includes id="Xpetra__MapFactory_8hpp" name="Xpetra_MapFactory.hpp" local="no" imported="no">Xpetra_MapFactory.hpp</includes>
    <includes id="Xpetra__MapUtils_8hpp" name="Xpetra_MapUtils.hpp" local="no" imported="no">Xpetra_MapUtils.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="no" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__MultiVectorFactory_8hpp" name="Xpetra_MultiVectorFactory.hpp" local="no" imported="no">Xpetra_MultiVectorFactory.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="no" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__VectorFactory_8hpp" name="Xpetra_VectorFactory.hpp" local="no" imported="no">Xpetra_VectorFactory.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::MapExtractor</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPEXTRACTOR_SHORT</name>
      <anchorfile>Xpetra__MapExtractor_8hpp.html</anchorfile>
      <anchor>a88fe7da81be07576dafd5fee9abdefab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapExtractor_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MapExtractor__fwd_8hpp</filename>
    <class kind="class">Xpetra::MapExtractor</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPEXTRACTOR_SHORT</name>
      <anchorfile>Xpetra__MapExtractor__fwd_8hpp.html</anchorfile>
      <anchor>a88fe7da81be07576dafd5fee9abdefab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapExtractorFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedCrsMatrix/</path>
    <filename>Xpetra__MapExtractorFactory_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="no" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::MapExtractorFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPEXTRACTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__MapExtractorFactory_8hpp.html</anchorfile>
      <anchor>ab8544caff278719562b134cca81a783b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapExtractorFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MapExtractorFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::MapExtractorFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPEXTRACTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__MapExtractorFactory__fwd_8hpp.html</anchorfile>
      <anchor>ab8544caff278719562b134cca81a783b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Map/</path>
    <filename>Xpetra__MapFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__EpetraMap_8hpp" name="Xpetra_EpetraMap.hpp" local="yes" imported="no">Xpetra_EpetraMap.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::MapFactory</class>
    <class kind="class">Xpetra::MapFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MapFactory&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPFACTORY_SHORT</name>
      <anchorfile>Xpetra__MapFactory_8hpp.html</anchorfile>
      <anchor>adba244605f77ec8b0d0844598376204f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MapFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::MapFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPFACTORY_SHORT</name>
      <anchorfile>Xpetra__MapFactory__fwd_8hpp.html</anchorfile>
      <anchor>adba244605f77ec8b0d0844598376204f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__MapUtils_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__UseShortNamesOrdinal_8hpp" name="Xpetra_UseShortNamesOrdinal.hpp" local="yes" imported="no">Xpetra_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">Xpetra::MapUtils</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPUTILS_SHORT</name>
      <anchorfile>Xpetra__MapUtils_8hpp.html</anchorfile>
      <anchor>a72c694c0927142de68196d944ef62e13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MapUtils_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MapUtils__fwd_8hpp</filename>
    <class kind="class">Xpetra::MapUtils</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MAPUTILS_SHORT</name>
      <anchorfile>Xpetra__MapUtils__fwd_8hpp.html</anchorfile>
      <anchor>a72c694c0927142de68196d944ef62e13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Matrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Matrix/</path>
    <filename>Xpetra__Matrix_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixFactory_8hpp" name="Xpetra_CrsMatrixFactory.hpp" local="yes" imported="no">Xpetra_CrsMatrixFactory.hpp</includes>
    <includes id="Xpetra__MatrixView_8hpp" name="Xpetra_MatrixView.hpp" local="yes" imported="no">Xpetra_MatrixView.hpp</includes>
    <includes id="Xpetra__Operator_8hpp" name="Xpetra_Operator.hpp" local="yes" imported="no">Xpetra_Operator.hpp</includes>
    <includes id="Xpetra__StridedMap_8hpp" name="Xpetra_StridedMap.hpp" local="yes" imported="no">Xpetra_StridedMap.hpp</includes>
    <includes id="Xpetra__StridedMapFactory_8hpp" name="Xpetra_StridedMapFactory.hpp" local="yes" imported="no">Xpetra_StridedMapFactory.hpp</includes>
    <class kind="class">Xpetra::Matrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIX_SHORT</name>
      <anchorfile>Xpetra__Matrix_8hpp.html</anchorfile>
      <anchor>a310780567e7c40bbae1c102ba2a8a959</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Matrix_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Matrix__fwd_8hpp</filename>
    <class kind="class">Xpetra::Matrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIX_SHORT</name>
      <anchorfile>Xpetra__Matrix__fwd_8hpp.html</anchorfile>
      <anchor>a310780567e7c40bbae1c102ba2a8a959</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Matrix/</path>
    <filename>Xpetra__MatrixFactory_8cpp</filename>
    <includes id="Xpetra__MatrixFactory_8hpp" name="Xpetra_MatrixFactory.hpp" local="yes" imported="no">Xpetra_MatrixFactory.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY_CPP</name>
      <anchorfile>Xpetra__MatrixFactory_8cpp.html</anchorfile>
      <anchor>affb798d2bd4c9f17b3a364ffb37082fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Matrix/</path>
    <filename>Xpetra__MatrixFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__MapExtractor__fwd_8hpp" name="Xpetra_MapExtractor_fwd.hpp" local="yes" imported="no">Xpetra_MapExtractor_fwd.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__BlockedCrsMatrix__fwd_8hpp" name="Xpetra_BlockedCrsMatrix_fwd.hpp" local="yes" imported="no">Xpetra_BlockedCrsMatrix_fwd.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::MatrixFactory2</class>
    <class kind="class">Xpetra::MatrixFactory2&lt; double, int, int, Node &gt;</class>
    <class kind="class">Xpetra::MatrixFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY2_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory_8hpp.html</anchorfile>
      <anchor>a4935f0fb5c46dd878b319541dc56c144</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY2_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory_8hpp.html</anchorfile>
      <anchor>a4935f0fb5c46dd878b319541dc56c144</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY2_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory_8hpp.html</anchorfile>
      <anchor>a4935f0fb5c46dd878b319541dc56c144</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory_8hpp.html</anchorfile>
      <anchor>a36ee67e0f17371430128e3cf5b1c0e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory_8hpp.html</anchorfile>
      <anchor>a36ee67e0f17371430128e3cf5b1c0e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY2_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory_8hpp.html</anchorfile>
      <anchor>a4935f0fb5c46dd878b319541dc56c144</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MatrixFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::MatrixFactory</class>
    <class kind="class">Xpetra::MatrixFactory2</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXFACTORY_SHORT</name>
      <anchorfile>Xpetra__MatrixFactory__fwd_8hpp.html</anchorfile>
      <anchor>a36ee67e0f17371430128e3cf5b1c0e5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__MatrixMatrix_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__BlockedCrsMatrix_8hpp" name="Xpetra_BlockedCrsMatrix.hpp" local="yes" imported="no">Xpetra_BlockedCrsMatrix.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="yes" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__MatrixFactory_8hpp" name="Xpetra_MatrixFactory.hpp" local="yes" imported="no">Xpetra_MatrixFactory.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__StridedMapFactory_8hpp" name="Xpetra_StridedMapFactory.hpp" local="yes" imported="no">Xpetra_StridedMapFactory.hpp</includes>
    <includes id="Xpetra__StridedMap_8hpp" name="Xpetra_StridedMap.hpp" local="yes" imported="no">Xpetra_StridedMap.hpp</includes>
    <includes id="Xpetra__EpetraCrsMatrix__fwd_8hpp" name="Xpetra_EpetraCrsMatrix_fwd.hpp" local="no" imported="no">Xpetra_EpetraCrsMatrix_fwd.hpp</includes>
    <includes id="Xpetra__TpetraCrsMatrix_8hpp" name="Xpetra_TpetraCrsMatrix.hpp" local="no" imported="no">Xpetra_TpetraCrsMatrix.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="no" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__TpetraVector_8hpp" name="Xpetra_TpetraVector.hpp" local="no" imported="no">Xpetra_TpetraVector.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::Helpers</class>
    <class kind="class">Xpetra::MatrixMatrix</class>
    <class kind="class">Xpetra::MatrixMatrix&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MatrixMatrix&lt; double, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXMATRIX_SHORT</name>
      <anchorfile>Xpetra__MatrixMatrix_8hpp.html</anchorfile>
      <anchor>ad5f10f459443809e2957bcb1f7eb00af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__MatrixUtils_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__MapUtils_8hpp" name="Xpetra_MapUtils.hpp" local="yes" imported="no">Xpetra_MapUtils.hpp</includes>
    <includes id="Xpetra__StridedMap_8hpp" name="Xpetra_StridedMap.hpp" local="yes" imported="no">Xpetra_StridedMap.hpp</includes>
    <includes id="Xpetra__MapFactory_8hpp" name="Xpetra_MapFactory.hpp" local="yes" imported="no">Xpetra_MapFactory.hpp</includes>
    <includes id="Xpetra__MapExtractor_8hpp" name="Xpetra_MapExtractor.hpp" local="yes" imported="no">Xpetra_MapExtractor.hpp</includes>
    <includes id="Xpetra__MapExtractorFactory_8hpp" name="Xpetra_MapExtractorFactory.hpp" local="yes" imported="no">Xpetra_MapExtractorFactory.hpp</includes>
    <includes id="Xpetra__Matrix_8hpp" name="Xpetra_Matrix.hpp" local="yes" imported="no">Xpetra_Matrix.hpp</includes>
    <includes id="Xpetra__MatrixFactory_8hpp" name="Xpetra_MatrixFactory.hpp" local="yes" imported="no">Xpetra_MatrixFactory.hpp</includes>
    <includes id="Xpetra__BlockedCrsMatrix_8hpp" name="Xpetra_BlockedCrsMatrix.hpp" local="yes" imported="no">Xpetra_BlockedCrsMatrix.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::MatrixUtils</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXUTILS_SHORT</name>
      <anchorfile>Xpetra__MatrixUtils_8hpp.html</anchorfile>
      <anchor>a2611332db98eab1e225473ba2781d935</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixUtils_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MatrixUtils__fwd_8hpp</filename>
    <class kind="class">Xpetra::MatrixUtils</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXUTILS_SHORT</name>
      <anchorfile>Xpetra__MatrixUtils__fwd_8hpp.html</anchorfile>
      <anchor>a2611332db98eab1e225473ba2781d935</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixView.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Matrix/</path>
    <filename>Xpetra__MatrixView_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <class kind="class">Xpetra::MatrixView</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXVIEW_SHORT</name>
      <anchorfile>Xpetra__MatrixView_8hpp.html</anchorfile>
      <anchor>a0a8b51ec63c06cb31da3023efc6c9e33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MatrixView_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MatrixView__fwd_8hpp</filename>
    <class kind="class">Xpetra::MatrixView</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MATRIXVIEW_SHORT</name>
      <anchorfile>Xpetra__MatrixView__fwd_8hpp.html</anchorfile>
      <anchor>a0a8b51ec63c06cb31da3023efc6c9e33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MpiPlatform.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Platform/</path>
    <filename>Xpetra__MpiPlatform_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <class kind="class">Xpetra::MpiPlatform</class>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_MpiPlatform_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MpiPlatform__fwd_8hpp</filename>
    <class kind="class">Xpetra::MpiPlatform</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MPIPLATFORM_SHORT</name>
      <anchorfile>Xpetra__MpiPlatform__fwd_8hpp.html</anchorfile>
      <anchor>a266a88c82727470fe354fbf9112abbd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MultiVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/MultiVector/</path>
    <filename>Xpetra__MultiVector_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__DistObject_8hpp" name="Xpetra_DistObject.hpp" local="yes" imported="no">Xpetra_DistObject.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <class kind="class">Xpetra::MultiVector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MULTIVECTOR_SHORT</name>
      <anchorfile>Xpetra__MultiVector_8hpp.html</anchorfile>
      <anchor>a79b1563ad988fb3d8495509e374c438c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MultiVector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MultiVector__fwd_8hpp</filename>
    <class kind="class">Xpetra::MultiVector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MULTIVECTOR_SHORT</name>
      <anchorfile>Xpetra__MultiVector__fwd_8hpp.html</anchorfile>
      <anchor>a79b1563ad988fb3d8495509e374c438c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MultiVectorFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/MultiVector/</path>
    <filename>Xpetra__MultiVectorFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="yes" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__EpetraMultiVector_8hpp" name="Xpetra_EpetraMultiVector.hpp" local="yes" imported="no">Xpetra_EpetraMultiVector.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::MultiVectorFactory</class>
    <class kind="class">Xpetra::MultiVectorFactory&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MultiVectorFactory&lt; double, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MULTIVECTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__MultiVectorFactory_8hpp.html</anchorfile>
      <anchor>a2e23048cba0e8ceba26241f52cb6c6cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_MultiVectorFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__MultiVectorFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::MultiVectorFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_MULTIVECTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__MultiVectorFactory__fwd_8hpp.html</anchorfile>
      <anchor>a2e23048cba0e8ceba26241f52cb6c6cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Operator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Operator/</path>
    <filename>Xpetra__Operator_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <class kind="class">Xpetra::Operator</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_OPERATOR_SHORT</name>
      <anchorfile>Xpetra__Operator_8hpp.html</anchorfile>
      <anchor>abe286d39ce77a6ff1b83263c22ccf075</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Operator_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Operator__fwd_8hpp</filename>
    <class kind="class">Xpetra::Operator</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_OPERATOR_SHORT</name>
      <anchorfile>Xpetra__Operator__fwd_8hpp.html</anchorfile>
      <anchor>abe286d39ce77a6ff1b83263c22ccf075</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Parameters.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__Parameters_8hpp</filename>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="no" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="no" imported="no">Xpetra_Utils.hpp</includes>
    <class kind="class">Xpetra::Parameters</class>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_Parameters_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Parameters__fwd_8hpp</filename>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_PARAMETERS_SHORT</name>
      <anchorfile>Xpetra__Parameters__fwd_8hpp.html</anchorfile>
      <anchor>a70a8f4d948cce4c2c4a6426c0ee7580f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ReorderedBlockedCrsMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/BlockedCrsMatrix/</path>
    <filename>Xpetra__ReorderedBlockedCrsMatrix_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__MapUtils_8hpp" name="Xpetra_MapUtils.hpp" local="yes" imported="no">Xpetra_MapUtils.hpp</includes>
    <includes id="Xpetra__CrsMatrixWrap_8hpp" name="Xpetra_CrsMatrixWrap.hpp" local="yes" imported="no">Xpetra_CrsMatrixWrap.hpp</includes>
    <includes id="Xpetra__BlockedCrsMatrix_8hpp" name="Xpetra_BlockedCrsMatrix.hpp" local="yes" imported="no">Xpetra_BlockedCrsMatrix.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::ReorderedBlockedCrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_REORDEREDBLOCKEDCRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__ReorderedBlockedCrsMatrix_8hpp.html</anchorfile>
      <anchor>ab4fc0f37fa8f0b65d8af9a86c735fd57</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlockMaps</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa3580a22e899f850d22ec436272ec22b</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; brm, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat, bool bThyraMode)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlocks</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>adb79c13f174379e2e10b0d717ea674ab</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; rowMgr, Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; colMgr, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlocksThyra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5ee2245a22d3e690d259500f664757be</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; rowMgr, Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; colMgr, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>buildReorderedBlockedCrsMatrix</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a11a8077cf952a98996be0c4b28b187b6</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; brm, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ReorderedBlockedCrsMatrix_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__ReorderedBlockedCrsMatrix__fwd_8hpp</filename>
    <class kind="class">Xpetra::ReorderedBlockedCrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_REORDEREDBLOCKEDCRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__ReorderedBlockedCrsMatrix__fwd_8hpp.html</anchorfile>
      <anchor>ab4fc0f37fa8f0b65d8af9a86c735fd57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_RowGraph.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/RowGraph/</path>
    <filename>Xpetra__RowGraph_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Import_8hpp" name="Xpetra_Import.hpp" local="yes" imported="no">Xpetra_Import.hpp</includes>
    <includes id="Xpetra__Export_8hpp" name="Xpetra_Export.hpp" local="yes" imported="no">Xpetra_Export.hpp</includes>
    <class kind="class">Xpetra::RowGraph</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_ROWGRAPH_SHORT</name>
      <anchorfile>Xpetra__RowGraph_8hpp.html</anchorfile>
      <anchor>abfa46d78ce52d1df6a33b9110769565c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_RowMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/RowMatrix/</path>
    <filename>Xpetra__RowMatrix_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <class kind="class">Xpetra::RowMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_ROWMATRIX_SHORT</name>
      <anchorfile>Xpetra__RowMatrix_8hpp.html</anchorfile>
      <anchor>a7fcef649e7e624e135259ac8990e35cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_SerialPlatform.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Platform/</path>
    <filename>Xpetra__SerialPlatform_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="no" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <class kind="class">Xpetra::SerialPlatform</class>
    <namespace>Xpetra</namespace>
  </compound>
  <compound kind="file">
    <name>Xpetra_SerialPlatform_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__SerialPlatform__fwd_8hpp</filename>
    <class kind="class">Xpetra::SerialPlatform</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_SERIALPLATFORM_SHORT</name>
      <anchorfile>Xpetra__SerialPlatform__fwd_8hpp.html</anchorfile>
      <anchor>aebacaeb0c99a48d291ff1dc8a0484685</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_StridedMap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/StridedMap/</path>
    <filename>Xpetra__StridedMap_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__MapFactory_8hpp" name="Xpetra_MapFactory.hpp" local="yes" imported="no">Xpetra_MapFactory.hpp</includes>
    <includes id="Xpetra__UseShortNamesOrdinal_8hpp" name="Xpetra_UseShortNamesOrdinal.hpp" local="yes" imported="no">Xpetra_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">Xpetra::StridedMap</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_STRIDEDMAP_SHORT</name>
      <anchorfile>Xpetra__StridedMap_8hpp.html</anchorfile>
      <anchor>ac5e925d48ee5d3d55e6bb134627b6081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_StridedMap_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__StridedMap__fwd_8hpp</filename>
    <class kind="class">Xpetra::StridedMap</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_STRIDEDMAP_SHORT</name>
      <anchorfile>Xpetra__StridedMap__fwd_8hpp.html</anchorfile>
      <anchor>ac5e925d48ee5d3d55e6bb134627b6081</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_StridedMapFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/StridedMap/</path>
    <filename>Xpetra__StridedMapFactory_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__StridedMap_8hpp" name="Xpetra_StridedMap.hpp" local="yes" imported="no">Xpetra_StridedMap.hpp</includes>
    <includes id="Xpetra__UseShortNamesOrdinal_8hpp" name="Xpetra_UseShortNamesOrdinal.hpp" local="yes" imported="no">Xpetra_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">Xpetra::StridedMapFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_STRIDEDMAPFACTORY_SHORT</name>
      <anchorfile>Xpetra__StridedMapFactory_8hpp.html</anchorfile>
      <anchor>a650843b312a2b26afb0362aeec21dd06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_StridedMapFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__StridedMapFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::StridedMapFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_STRIDEDMAPFACTORY_SHORT</name>
      <anchorfile>Xpetra__StridedMapFactory__fwd_8hpp.html</anchorfile>
      <anchor>a650843b312a2b26afb0362aeec21dd06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_StridedTpetraMap_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__StridedTpetraMap__fwd_8hpp</filename>
    <class kind="class">Xpetra::StridedTpetraMap</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_STRIDEDTPETRAMAP_SHORT</name>
      <anchorfile>Xpetra__StridedTpetraMap__fwd_8hpp.html</anchorfile>
      <anchor>a70c517d4f5528942452e647fa78a0c59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_ThyraUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__ThyraUtils_8cpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_ThyraUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/sup/Utils/</path>
    <filename>Xpetra__ThyraUtils_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraBlockCrsMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsMatrix/</path>
    <filename>Xpetra__TpetraBlockCrsMatrix_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="yes" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__TpetraVector_8hpp" name="Xpetra_TpetraVector.hpp" local="yes" imported="no">Xpetra_TpetraVector.hpp</includes>
    <includes id="Xpetra__TpetraCrsGraph_8hpp" name="Xpetra_TpetraCrsGraph.hpp" local="yes" imported="no">Xpetra_TpetraCrsGraph.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::TpetraBlockCrsMatrix</class>
    <class kind="class">Xpetra::TpetraBlockCrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraBlockCrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRABLOCKCRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__TpetraBlockCrsMatrix_8hpp.html</anchorfile>
      <anchor>a5991ea5a64b604814d1b2ec37da65b79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__TpetraConfigDefs_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraCrsGraph.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsGraph/</path>
    <filename>Xpetra__TpetraCrsGraph_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsGraph_8hpp" name="Xpetra_CrsGraph.hpp" local="yes" imported="no">Xpetra_CrsGraph.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__TpetraImport_8hpp" name="Xpetra_TpetraImport.hpp" local="yes" imported="no">Xpetra_TpetraImport.hpp</includes>
    <includes id="Xpetra__TpetraExport_8hpp" name="Xpetra_TpetraExport.hpp" local="yes" imported="no">Xpetra_TpetraExport.hpp</includes>
    <class kind="class">Xpetra::TpetraCrsGraph</class>
    <class kind="class">Xpetra::TpetraCrsGraph&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraCrsGraph&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRACRSGRAPH_SHORT</name>
      <anchorfile>Xpetra__TpetraCrsGraph_8hpp.html</anchorfile>
      <anchor>aad3478de8091659f91da22ca1c564009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a2129c1c160f7c90bb801171f8d3507ac</anchor>
      <arglist>(RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a99d05d641da042ec0b62a9070b230304</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraCrsGraph_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraCrsGraph__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraCrsGraph</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRACRSGRAPH_SHORT</name>
      <anchorfile>Xpetra__TpetraCrsGraph__fwd_8hpp.html</anchorfile>
      <anchor>aad3478de8091659f91da22ca1c564009</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraCrsMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/CrsMatrix/</path>
    <filename>Xpetra__TpetraCrsMatrix_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__CrsMatrix_8hpp" name="Xpetra_CrsMatrix.hpp" local="yes" imported="no">Xpetra_CrsMatrix.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="yes" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__TpetraVector_8hpp" name="Xpetra_TpetraVector.hpp" local="yes" imported="no">Xpetra_TpetraVector.hpp</includes>
    <includes id="Xpetra__TpetraCrsGraph_8hpp" name="Xpetra_TpetraCrsGraph.hpp" local="yes" imported="no">Xpetra_TpetraCrsGraph.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::TpetraCrsMatrix</class>
    <class kind="class">Xpetra::TpetraCrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraCrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRACRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__TpetraCrsMatrix_8hpp.html</anchorfile>
      <anchor>a32d0032673ba5ebe8ced2597afacca4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraCrsMatrix_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraCrsMatrix__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraCrsMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRACRSMATRIX_SHORT</name>
      <anchorfile>Xpetra__TpetraCrsMatrix__fwd_8hpp.html</anchorfile>
      <anchor>a32d0032673ba5ebe8ced2597afacca4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraExport.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Export/</path>
    <filename>Xpetra__TpetraExport_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Export_8hpp" name="Xpetra_Export.hpp" local="yes" imported="no">Xpetra_Export.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <class kind="class">Xpetra::TpetraExport</class>
    <class kind="class">Xpetra::TpetraExport&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraExport&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAEXPORT_SHORT</name>
      <anchorfile>Xpetra__TpetraExport_8hpp.html</anchorfile>
      <anchor>a5f6a9a159ba0f87a242e3894a1884e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3ae12e54d3752ae74dcd64591a852e2f</anchor>
      <arglist>(const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae398e5da3ae17c66fac21ef47df51c44</anchor>
      <arglist>(const RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraExport_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraExport__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraExport</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAEXPORT_SHORT</name>
      <anchorfile>Xpetra__TpetraExport__fwd_8hpp.html</anchorfile>
      <anchor>a5f6a9a159ba0f87a242e3894a1884e20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraImport.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Import/</path>
    <filename>Xpetra__TpetraImport_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Import_8hpp" name="Xpetra_Import.hpp" local="yes" imported="no">Xpetra_Import.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <class kind="class">Xpetra::TpetraImport</class>
    <class kind="class">Xpetra::TpetraImport&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraImport&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAIMPORT_SHORT</name>
      <anchorfile>Xpetra__TpetraImport_8hpp.html</anchorfile>
      <anchor>a15e203417a5c095394ff691244d7ea7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a290398f49a8a44477ffc37cc52874a99</anchor>
      <arglist>(const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae839be8deb301f5ecf1091fab7fe0fe0</anchor>
      <arglist>(const RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;import)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraImport_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraImport__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraImport</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAIMPORT_SHORT</name>
      <anchorfile>Xpetra__TpetraImport__fwd_8hpp.html</anchorfile>
      <anchor>a15e203417a5c095394ff691244d7ea7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraMap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Map/</path>
    <filename>Xpetra__TpetraMap_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::TpetraMap</class>
    <class kind="class">Xpetra::TpetraMap&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraMap&lt; int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <namespace>Xpetra::useTpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAMAP_SHORT</name>
      <anchorfile>Xpetra__TpetraMap_8hpp.html</anchorfile>
      <anchor>a05c33b728ae119e94e96d59ebd49132b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6b730b6dde874e3b33b45993bea0f483</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa618ba842966919b52263b3db0abafef</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a671496ea5f704454cdff32b60395597c</anchor>
      <arglist>(const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetraNonConst</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3b5f1e77120a6b8bbcc9bfa4e7d63730</anchor>
      <arglist>(const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetraNonZero</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a93f3f2bedd3a256fe5ce69ae7e615545</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMapWithNode</name>
      <anchorfile>namespaceXpetra_1_1useTpetra.html</anchorfile>
      <anchor>a2ab4169b03b7b20ea838676e3f8f02a6</anchor>
      <arglist>(size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const TpetraMap&lt; LocalOrdinal, GlobalOrdinal &gt; &gt;</type>
      <name>createContigMap</name>
      <anchorfile>namespaceXpetra_1_1useTpetra.html</anchorfile>
      <anchor>afb69ed87ce560dad91d05fc90a4e7b01</anchor>
      <arglist>(global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMapWithNode</name>
      <anchorfile>namespaceXpetra_1_1useTpetra.html</anchorfile>
      <anchor>a045598733725fde3aa2bc784ac08d115</anchor>
      <arglist>(global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>Xpetra__TpetraMap_8hpp.html</anchorfile>
      <anchor>a7af1171bbb875431ead6bdb9c12d1c75</anchor>
      <arglist>(const Xpetra::TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map1, const Xpetra::TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>Xpetra__TpetraMap_8hpp.html</anchorfile>
      <anchor>a62c03578e37395ba189628543deed842</anchor>
      <arglist>(const Xpetra::TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map1, const Xpetra::TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraMap_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraMap__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraMap</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAMAP_SHORT</name>
      <anchorfile>Xpetra__TpetraMap__fwd_8hpp.html</anchorfile>
      <anchor>a05c33b728ae119e94e96d59ebd49132b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraMultiVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/MultiVector/</path>
    <filename>Xpetra__TpetraMultiVector_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__TpetraImport_8hpp" name="Xpetra_TpetraImport.hpp" local="yes" imported="no">Xpetra_TpetraImport.hpp</includes>
    <includes id="Xpetra__TpetraExport_8hpp" name="Xpetra_TpetraExport.hpp" local="yes" imported="no">Xpetra_TpetraExport.hpp</includes>
    <includes id="Xpetra__TpetraVector_8hpp" name="Xpetra_TpetraVector.hpp" local="yes" imported="no">Xpetra_TpetraVector.hpp</includes>
    <class kind="class">Xpetra::TpetraMultiVector</class>
    <class kind="class">Xpetra::TpetraMultiVector&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraMultiVector&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAMULTIVECTOR_SHORT</name>
      <anchorfile>Xpetra__TpetraMultiVector_8hpp.html</anchorfile>
      <anchor>adcccca03e9da16c1f71d86c700a294c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4a9b1f70231951fa1569024564e194e6</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a16176b84415ef2077af763b1ef5353b9</anchor>
      <arglist>(MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a526721e559251f2d60870fa9080c80da</anchor>
      <arglist>(RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa4fdb6af6dec192a58894153f7655d7e</anchor>
      <arglist>(RCP&lt; const Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a0392ef005c2f1396d04777bdeab64b70</anchor>
      <arglist>(RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af56190690ed8247547c61ffebfa6495a</anchor>
      <arglist>(RCP&lt; const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraMultiVector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraMultiVector__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraMultiVector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAMULTIVECTOR_SHORT</name>
      <anchorfile>Xpetra__TpetraMultiVector__fwd_8hpp.html</anchorfile>
      <anchor>adcccca03e9da16c1f71d86c700a294c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraOperator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Operator/</path>
    <filename>Xpetra__TpetraOperator_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="yes" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__Operator_8hpp" name="Xpetra_Operator.hpp" local="yes" imported="no">Xpetra_Operator.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <class kind="class">Xpetra::TpetraOperator</class>
    <class kind="class">Xpetra::TpetraOperator&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraOperator&lt; double, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAOPERATOR_SHORT</name>
      <anchorfile>Xpetra__TpetraOperator_8hpp.html</anchorfile>
      <anchor>aca9e7632315a36f831379cd29e379add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraOperator_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraOperator__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraOperator</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAOPERATOR_SHORT</name>
      <anchorfile>Xpetra__TpetraOperator__fwd_8hpp.html</anchorfile>
      <anchor>aca9e7632315a36f831379cd29e379add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraRowMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/RowMatrix/</path>
    <filename>Xpetra__TpetraRowMatrix_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <includes id="Xpetra__RowGraph_8hpp" name="Xpetra_RowGraph.hpp" local="yes" imported="no">Xpetra_RowGraph.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__RowMatrix_8hpp" name="Xpetra_RowMatrix.hpp" local="yes" imported="no">Xpetra_RowMatrix.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <class kind="class">Xpetra::TpetraRowMatrix</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAROWMATRIX_SHORT</name>
      <anchorfile>Xpetra__TpetraRowMatrix_8hpp.html</anchorfile>
      <anchor>ab80f81b9c8636e33a05efab99b2801c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__TpetraVector_8hpp</filename>
    <includes id="Xpetra__TpetraConfigDefs_8hpp" name="Xpetra_TpetraConfigDefs.hpp" local="yes" imported="no">Xpetra_TpetraConfigDefs.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <includes id="Xpetra__TpetraMultiVector_8hpp" name="Xpetra_TpetraMultiVector.hpp" local="yes" imported="no">Xpetra_TpetraMultiVector.hpp</includes>
    <includes id="Xpetra__TpetraMap_8hpp" name="Xpetra_TpetraMap.hpp" local="yes" imported="no">Xpetra_TpetraMap.hpp</includes>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__TpetraImport_8hpp" name="Xpetra_TpetraImport.hpp" local="yes" imported="no">Xpetra_TpetraImport.hpp</includes>
    <includes id="Xpetra__TpetraExport_8hpp" name="Xpetra_TpetraExport.hpp" local="yes" imported="no">Xpetra_TpetraExport.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::TpetraVector</class>
    <class kind="class">Xpetra::TpetraVector&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraVector&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAVECTOR_SHORT</name>
      <anchorfile>Xpetra__TpetraVector_8hpp.html</anchorfile>
      <anchor>a7a809a8686b62a50caaf9ba15667303f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8433fd5277c0c83032781d0270ed9a4d</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8b2dd89f2095c9c9a629be79eba99b47</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa4fdb6af6dec192a58894153f7655d7e</anchor>
      <arglist>(RCP&lt; const Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a526721e559251f2d60870fa9080c80da</anchor>
      <arglist>(RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_TpetraVector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__TpetraVector__fwd_8hpp</filename>
    <class kind="class">Xpetra::TpetraVector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_TPETRAVECTOR_SHORT</name>
      <anchorfile>Xpetra__TpetraVector__fwd_8hpp.html</anchorfile>
      <anchor>a7a809a8686b62a50caaf9ba15667303f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_UseDefaultTypes.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__UseDefaultTypes_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_UseDefaultTypesComplex.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__UseDefaultTypesComplex_8hpp</filename>
    <includes id="Kokkos__DefaultNode_8hpp" name="Kokkos_DefaultNode.hpp" local="no" imported="no">Kokkos_DefaultNode.hpp</includes>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_UseShortNames.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__UseShortNames_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__UseShortNamesOrdinal_8hpp" name="Xpetra_UseShortNamesOrdinal.hpp" local="yes" imported="no">Xpetra_UseShortNamesOrdinal.hpp</includes>
    <includes id="Xpetra__UseShortNamesScalar_8hpp" name="Xpetra_UseShortNamesScalar.hpp" local="yes" imported="no">Xpetra_UseShortNamesScalar.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Xpetra_UseShortNamesOrdinal.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__UseShortNamesOrdinal_8hpp</filename>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>LO</name>
      <anchorfile>Xpetra__UseShortNamesOrdinal_8hpp.html</anchorfile>
      <anchor>a065eb6ce275af374b3102f457a390214</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>GO</name>
      <anchorfile>Xpetra__UseShortNamesOrdinal_8hpp.html</anchorfile>
      <anchor>a367de78a921aac799a74f22d4a2125e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>NO</name>
      <anchorfile>Xpetra__UseShortNamesOrdinal_8hpp.html</anchorfile>
      <anchor>a6ede6bcdc65c5faba1c28fb59dc2debc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_UseShortNamesScalar.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Headers/</path>
    <filename>Xpetra__UseShortNamesScalar_8hpp</filename>
    <member kind="typedef">
      <type>Scalar</type>
      <name>SC</name>
      <anchorfile>Xpetra__UseShortNamesScalar_8hpp.html</anchorfile>
      <anchor>a8768eab3771ccaf538e927e06dec82db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Utils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__Utils_8cpp</filename>
    <includes id="Xpetra__Utils_8hpp" name="Xpetra_Utils.hpp" local="yes" imported="no">Xpetra_Utils.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae4158557b035b0d1b6e2fd00cb7eb428</anchor>
      <arglist>(UnderlyingLib lib)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::LookupStatus</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad3a01b48f505e2a758b4df381e5046b0</anchor>
      <arglist>(Tpetra::LookupStatus)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::ProfileType</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a965e058950d1ba4ad97005bd0ec34b56</anchor>
      <arglist>(Xpetra::ProfileType)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::OptimizeOption</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1029d05ec8de93285152f58adf0d3a69</anchor>
      <arglist>(Xpetra::OptimizeOption)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::CombineMode</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c26611d59f02700d3fec2627db99874</anchor>
      <arglist>(Xpetra::CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::LocalGlobal</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c4d5bd477633014f495934f660cccfb</anchor>
      <arglist>(LocalGlobal lg)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::LookupStatus</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6abdbcd13f73c266858306e5efa13b1c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3bc6b6130c9c6d9aef352a24c3d6d26f</anchor>
      <arglist>(Xpetra::ProfileType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8c84d563f07c92034eb091a9cc41cb30</anchor>
      <arglist>(Xpetra::OptimizeOption)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_CombineMode</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1b85512714f7e168fadda4428fb4cc67</anchor>
      <arglist>(Xpetra::CombineMode CM)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Utils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/</path>
    <filename>Xpetra__Utils_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Map_8hpp" name="Xpetra_Map.hpp" local="yes" imported="no">Xpetra_Map.hpp</includes>
    <namespace>Xpetra</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae4158557b035b0d1b6e2fd00cb7eb428</anchor>
      <arglist>(UnderlyingLib lib)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::LookupStatus</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad3a01b48f505e2a758b4df381e5046b0</anchor>
      <arglist>(Tpetra::LookupStatus)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::ProfileType</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a965e058950d1ba4ad97005bd0ec34b56</anchor>
      <arglist>(Xpetra::ProfileType)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::OptimizeOption</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1029d05ec8de93285152f58adf0d3a69</anchor>
      <arglist>(Xpetra::OptimizeOption)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::CombineMode</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c26611d59f02700d3fec2627db99874</anchor>
      <arglist>(Xpetra::CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::LocalGlobal</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c4d5bd477633014f495934f660cccfb</anchor>
      <arglist>(LocalGlobal lg)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::LookupStatus</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6abdbcd13f73c266858306e5efa13b1c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3bc6b6130c9c6d9aef352a24c3d6d26f</anchor>
      <arglist>(Xpetra::ProfileType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8c84d563f07c92034eb091a9cc41cb30</anchor>
      <arglist>(Xpetra::OptimizeOption)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_CombineMode</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1b85512714f7e168fadda4428fb4cc67</anchor>
      <arglist>(Xpetra::CombineMode CM)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Vector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__Vector_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__MultiVector_8hpp" name="Xpetra_MultiVector.hpp" local="yes" imported="no">Xpetra_MultiVector.hpp</includes>
    <class kind="class">Xpetra::Vector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_VECTOR_SHORT</name>
      <anchorfile>Xpetra__Vector_8hpp.html</anchorfile>
      <anchor>a445196a7d4bce189bed5ddfcecce6bbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_Vector_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__Vector__fwd_8hpp</filename>
    <class kind="class">Xpetra::Vector</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_VECTOR_SHORT</name>
      <anchorfile>Xpetra__Vector__fwd_8hpp.html</anchorfile>
      <anchor>a445196a7d4bce189bed5ddfcecce6bbc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_VectorFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Vector/</path>
    <filename>Xpetra__VectorFactory_8hpp</filename>
    <includes id="Xpetra__ConfigDefs_8hpp" name="Xpetra_ConfigDefs.hpp" local="yes" imported="no">Xpetra_ConfigDefs.hpp</includes>
    <includes id="Xpetra__Vector_8hpp" name="Xpetra_Vector.hpp" local="yes" imported="no">Xpetra_Vector.hpp</includes>
    <includes id="Xpetra__TpetraVector_8hpp" name="Xpetra_TpetraVector.hpp" local="yes" imported="no">Xpetra_TpetraVector.hpp</includes>
    <includes id="Xpetra__EpetraVector_8hpp" name="Xpetra_EpetraVector.hpp" local="yes" imported="no">Xpetra_EpetraVector.hpp</includes>
    <includes id="Xpetra__EpetraIntVector_8hpp" name="Xpetra_EpetraIntVector.hpp" local="yes" imported="no">Xpetra_EpetraIntVector.hpp</includes>
    <includes id="Xpetra__Exceptions_8hpp" name="Xpetra_Exceptions.hpp" local="yes" imported="no">Xpetra_Exceptions.hpp</includes>
    <includes id="Xpetra__UseShortNames_8hpp" name="Xpetra_UseShortNames.hpp" local="yes" imported="no">Xpetra_UseShortNames.hpp</includes>
    <class kind="class">Xpetra::VectorFactory</class>
    <class kind="class">Xpetra::VectorFactory&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::VectorFactory&lt; double, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::VectorFactory&lt; int, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::VectorFactory&lt; int, int, long long, EpetraNode &gt;</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_VECTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__VectorFactory_8hpp.html</anchorfile>
      <anchor>a5cfc5b186b5753b47fe705185b8249a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_VECTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__VectorFactory_8hpp.html</anchorfile>
      <anchor>a5cfc5b186b5753b47fe705185b8249a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_VECTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__VectorFactory_8hpp.html</anchorfile>
      <anchor>a5cfc5b186b5753b47fe705185b8249a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Xpetra_VectorFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/xpetra/src/Utils/ForwardDeclaration/</path>
    <filename>Xpetra__VectorFactory__fwd_8hpp</filename>
    <class kind="class">Xpetra::VectorFactory</class>
    <namespace>Xpetra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>XPETRA_VECTORFACTORY_SHORT</name>
      <anchorfile>Xpetra__VectorFactory__fwd_8hpp.html</anchorfile>
      <anchor>a5cfc5b186b5753b47fe705185b8249a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Exceptions::BadCast</name>
    <filename>classXpetra_1_1Exceptions_1_1BadCast.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>BadCast</name>
      <anchorfile>classXpetra_1_1Exceptions_1_1BadCast.html</anchorfile>
      <anchor>adb62c43ed0a1c5dedf4fb72e15132ef0</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::BlockedCrsMatrix</name>
    <filename>classXpetra_1_1BlockedCrsMatrix.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Xpetra::Matrix</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a459f57aeec7ad8d577010b441704ae5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aa480079674bd95132f0b4276f6cf2ab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a74821dd2511a35f9790b012292b0a2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a6826aa512afdb0ff5ede9b8cd7a8cd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a5866228f5c968b5fb9d2778fe871bb93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ac7928e11e56bf80248d51bc7c632091e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a8912411f55ba7821502ca3ba3b6173c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a70644d0159d135794d9368560c966954</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a6606d2004c84907e29ae172b35fb1bdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a19867884d915225b4be3c2f96a62c748</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a7ca10c83d367d09a46f4303dabf0cec0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a905cbef471ed88f25730a9f8b036b279</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a84c5d9745f8a9b0a6fefbc698eb573e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ae6b4f37fb074e3a17535c0e5e1b79994</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a8c2285f0ab4d5662c05628bb3d50e5af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a2cc0583db3263e680cdd482ae110eeb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a320ca7e62a3598d4c34f08111dc09114</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ad8647062778fd3d79c6acd3d11f496e9</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a24d0b9e7c87dc6e2caf3b806a0eb1f36</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>af251e18b2c43ebefeb0adb3a253893e3</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a2986e924f0b866bb7547d2742dbdbbd7</anchor>
      <arglist>(Vector &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a872e2662e1802ac39cefb19ebcc2bdbf</anchor>
      <arglist>(const Vector &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>acdd69c03ca81816c305f01f85cb05302</anchor>
      <arglist>(const Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aee425e38ab38c36818b8166d94300214</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a571fd5e02529866bdffd07003d48c4b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a94bb6c1a3f03adca923153a50a5ccdbe</anchor>
      <arglist>(const Matrix &amp;source, const Import &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>af7b322693a810740774b1c2524bc6dfd</anchor>
      <arglist>(const Matrix &amp;dest, const Import &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a08c88a98284831194d3ac94f9dab20bd</anchor>
      <arglist>(const Matrix &amp;source, const Export &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a4ff40940340610ae3b02aa4e5d2e182a</anchor>
      <arglist>(const Matrix &amp;dest, const Export &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateDefaultView</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aef1b877e61bc804e5012f3a291ef1fa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const MapExtractor &gt;</type>
      <name>domainmaps_</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a0147875769969fc52f58be6a5f2e9e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const MapExtractor &gt;</type>
      <name>rangemaps_</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a20e4a341fac502c3d2c02c7a50d9c66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Matrix &gt; &gt;</type>
      <name>blocks_</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a562142f92c9b93635b9ab8c27a841645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bRangeThyraMode_</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aa6198c67361703ecee6f784204e25b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bDomainThyraMode_</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a438d1257a423b9c6e17c7ee02436b618</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a0fa2179f93d1e4bb43897d11f3ecb1e4</anchor>
      <arglist>(Teuchos::RCP&lt; const MapExtractor &gt; &amp;rangeMaps, Teuchos::RCP&lt; const MapExtractor &gt; &amp;domainMaps, size_t npr, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a5ce4454a69e56dfb7c44020accccbd51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a383010d88d00d36288c39fdab7e658d8</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ab5d6214591fcabc937bc059570e266eb</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>af49c1bb313bb02c64184dfc5bace17e7</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a6663dc7fcd715f285499fc8c8a5ecd4c</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a93d9d92086128bb7d9d718db25730a4f</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a8be2d5163d6e6e681c52c946094df8f1</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aa854129621ecd073b5e630f12744c670</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>adb35eceb9854efe2da326ec4fc9feb08</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a43844a08ecd8aa4914645362447e247a</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;domainMap, const RCP&lt; const Map &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ad26bbcd6cb0214993ba7699e84adcaeb</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>af908e73c1bf7f5c2404880f9d4419ec0</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>acb602f8dac0edee78b21293361b6c175</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a8782d69ba944e57308914d867290912c</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aed5f41bed25cc799559c38de6ad8b13e</anchor>
      <arglist>(size_t i, bool bThyraMode) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>afc2a84e8e442c8ddb46baa977eefa4dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ab04212d4e8c99b69f9c707185d865f35</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a744f64fa579d4c2d3439b5f2c997c9ba</anchor>
      <arglist>(size_t i, bool bThyraMode) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const MapExtractor &gt;</type>
      <name>getRangeMapExtractor</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a228db9a59a1df7f5638981d5f5e4d9b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const MapExtractor &gt;</type>
      <name>getDomainMapExtractor</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>afac6b7dfdef520e5a9be1faf13ac6f82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a724205f43a4ee168c44ef39ead4664c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a4f80bfb90097664dee8911799b4de840</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a3d069594c74fe40d16ff81424eeb40df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>Rows</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>ae17bd3db04052071b8797c88af4ffc81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>Cols</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a3498e40e31fe428d4f1c4c92d8a9fe78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>getCrsMatrix</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a6a3557d97a1cda5c55816717d6377a39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>getInnermostCrsMatrix</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a49ad4cff1399fdd87af54f3d15409b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>aafa112514348081e0dfeb42640b682d3</anchor>
      <arglist>(size_t r, size_t c) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMatrix</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a33e88f4fb16d2b2216ddcca533bee5b0</anchor>
      <arglist>(size_t r, size_t c, Teuchos::RCP&lt; Matrix &gt; mat)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>Merge</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a28149cd177b98859947bd19ee9d3642e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classXpetra_1_1BlockedCrsMatrix.html</anchorfile>
      <anchor>a37878645aa267401be5b8d0c69daf2bb</anchor>
      <arglist>(const Matrix &amp;A, const Scalar scalarA, Matrix &amp;B, const Scalar scalarB) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::BlockedMultiVector</name>
    <filename>classXpetra_1_1BlockedMultiVector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::MultiVector</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ad1dacca9ff748dc22a51e4870ee681ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a1f6f2e85730fca89490788a53680e003</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a4b7f336c3b19203bb2e20c92520f63c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a7c5c76148bb7a24069b8780f9299b370</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a824132a0dc9433ba1c31153947747ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MultiVector &gt;</type>
      <name>getMultiVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>af7aa91f1a259857f8f2893db64e96279</anchor>
      <arglist>(size_t r) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MultiVector &gt;</type>
      <name>getMultiVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a8d5dd96521cc77f72dd3cc45f6edac60</anchor>
      <arglist>(size_t r, bool bThyraMode) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMultiVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a38942c26888835a46c11d4475e200c1e</anchor>
      <arglist>(size_t r, Teuchos::RCP&lt; const MultiVector &gt; v, bool bThyraMode)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const MapExtractor &gt;</type>
      <name>getMapExtractor</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a12ffdf5cc60da65deef6e427081fd1b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MultiVector &gt;</type>
      <name>Merge</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a4bccdc9503f372f9374932462545d153</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a88acd57efac820d861f812e6bf3fd42e</anchor>
      <arglist>(const MultiVector &amp;rhs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const MapExtractor &gt;</type>
      <name>mapextractor_</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a54dd43474f496e94324f7f4f82d66e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; MultiVector &gt; &gt;</type>
      <name>vv_</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ae34d7d83645c8118712fb75038ce216c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bThyraMode_</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a3c1c327b83bea35ee4d6dccabb189f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>numVectors_</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ab55ca3455aebc8ee7a09e8f85b53a895</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedMultiVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>abdf97721b75d391e929a31cc7030d038</anchor>
      <arglist>(Teuchos::RCP&lt; const MapExtractor &gt; mapExtractor, Teuchos::RCP&lt; const MultiVector &gt; v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedMultiVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>adbae468dc8fa72eeb12f25b66b2e47a8</anchor>
      <arglist>(Teuchos::RCP&lt; const MapExtractor &gt; mapExtractor, Teuchos::RCP&lt; MultiVector &gt; v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedMultiVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a67394d0aea20050a2c9482d88f91edf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BlockedMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a1d5a48073875b4b0577525dae98bb47d</anchor>
      <arglist>(const MultiVector &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>aaf28f1fba05fb3609279fb003b48655d</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>abeca2fcdab299cd99e731558c8d5ebc9</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ace24a4026637eee235d0572496b316ce</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ad06a9167bc2a1d1cb19480c0135ae8c1</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a2be18916e734ca774cd368756fefcef4</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a505672691b05c8ff82e2c17d43d011ff</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Vector &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a6e7b83961b5632bee67021b773472c66</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a902e0de910e2d3c6c0c4f6b018c16ccf</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a9ef701ec18444c4e62cd8fa65f61c1af</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>aef12fae027d70ffeb3144a258c62ea30</anchor>
      <arglist>(const MultiVector &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a48cff68126a3d4cc03ffb6aa8370590e</anchor>
      <arglist>(const MultiVector &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a36d1ba7e89ff9a38aa8509f5ece4f15b</anchor>
      <arglist>(const MultiVector &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>acf4f18863d44774cbba364f5509c07fd</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>af067c3a3301c76d42a3d7701ee6863bd</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>adbb68ddb88316c66dca11bc0c8bef328</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ac7480fee0dcadc33674fb356e9e102ce</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector &amp;A, const Scalar &amp;beta, const MultiVector &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a970630bb09d9248cebaa87380b2b38c6</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a12082686432d3e3185178fb8e28ddf22</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a4c668941fc3df4e5232c4783db8d94b4</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>ad9e7551b8379d30cf657ffa63d961e2a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a69a0d4b5d9687d1ae58b88dff1d5f673</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector &amp;A, const MultiVector &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a22cb5e2ecb19e3f192516951e263bb5e</anchor>
      <arglist>(Scalar scalarAB, const Vector &amp;A, const MultiVector &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a4a945579eb300dfd89263ff4a37e6beb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a828a191661f116458b5fd7edd24494ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a62487fd3ed77ba5a73be0d9f978eca56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a7f2948d00e8b1202f87dc234bdf2dd69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a0ddc8a8cc71f60b05f3c05a4ee47a6ba</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a991596b4ba9a4bbb821a8dd40d29b335</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;map)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a7f6c0f21553bdc6a253c0f2534d24b91</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a567e5d92332b73949224c1de6b1a2717</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a6b067240ae075fff11bf29fe9ed82310</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>aec0accb7adf935a8c3af7d6ce838590a</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>afcc996a7ed6f007f7302fa871d8efbb5</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>a2dea0d9c0e68236422fb5b1b136f9e6f</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1BlockedMultiVector.html</anchorfile>
      <anchor>aa3e8ab1b20b276b04dd2c9b7940628d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::BlockReorderLeaf</name>
    <filename>classXpetra_1_1BlockReorderLeaf.html</filename>
    <base>Xpetra::BlockReorderManager</base>
    <member kind="function">
      <type></type>
      <name>BlockReorderLeaf</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a164dec3c44029bda477c2b14a1a97901</anchor>
      <arglist>(int ind)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockReorderLeaf</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>aba59a2c7236c4ed1209413bc1e948532</anchor>
      <arglist>(const BlockReorderLeaf &amp;brl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; BlockReorderManager &gt;</type>
      <name>Copy</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a02d591e5ccb4cecccd5b35e8ccba02fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>GetNumBlocks</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>ad47359245757fc5bd2dc169f276d7c28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetNumBlocks</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a49c120ced46df466a0ae426359c8004e</anchor>
      <arglist>(size_t sz)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a4b136fd20b0e65029b21bebde2822696</anchor>
      <arglist>(int blockIndex, int reorder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a858aefdbcfac842d41f0fe89bbfeeb8b</anchor>
      <arglist>(int blockIndex, const Teuchos::RCP&lt; BlockReorderManager &gt; &amp;reorder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; BlockReorderManager &gt;</type>
      <name>GetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a7acbec4293f325986b5619cdde7bdbb3</anchor>
      <arglist>(int blockIndex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; const BlockReorderManager &gt;</type>
      <name>GetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a888a3a7036a3e1409e5db6f52abd6673</anchor>
      <arglist>(int blockIndex) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetIndex</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>ad165bc72d209e10b4bd85c5aa29399fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a3c090f799ee1781a2cdc69e325bcc736</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LargestIndex</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>a341e794274da9d5aaa3a722f8a6a6bc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>value_</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>ae7bfebdac47be6e758195aa1c78476b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>BlockReorderLeaf</name>
      <anchorfile>classXpetra_1_1BlockReorderLeaf.html</anchorfile>
      <anchor>aa3809922360bca2d069924b169de2df3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::BlockReorderManager</name>
    <filename>classXpetra_1_1BlockReorderManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; BlockReorderManager &gt;</type>
      <name>Copy</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a6b540f77cddd7e87fe246ad92311f2aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetNumBlocks</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a88160f770bd4b1598f7820686e05f9dc</anchor>
      <arglist>(size_t sz)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>GetNumBlocks</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a77cc5a547f12170a85efadf13061cc00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>aabaa6ee4a531716c2d3b01378f7603e8</anchor>
      <arglist>(int blockIndex, int reorder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a91a5fec46e057d5518b01538b6830740</anchor>
      <arglist>(int blockIndex, const Teuchos::RCP&lt; BlockReorderManager &gt; &amp;reorder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; BlockReorderManager &gt;</type>
      <name>GetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a1539c4fbd7d24a3d56823763399a2c1b</anchor>
      <arglist>(int blockIndex)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; const BlockReorderManager &gt;</type>
      <name>GetBlock</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a56ea343ba265d7e1a96b5e3eb24acb56</anchor>
      <arglist>(int blockIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a1c5b41df28c7c903444371d12cb5b7db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LargestIndex</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a42b16e3be8eaf511bfa9652e557b649a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; BlockReorderManager &gt; &gt;</type>
      <name>children_</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a8ec35f39a0aefb236f495a6462736524</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockReorderManager</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a765a085453861087b38363df068e41b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockReorderManager</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a20864a036cf82bc1e825a8a693a61a82</anchor>
      <arglist>(const BlockReorderManager &amp;bmm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockReorderManager</name>
      <anchorfile>classXpetra_1_1BlockReorderManager.html</anchorfile>
      <anchor>a2eab2f3d5785989f8e02f7f18cd22690</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsGraph</name>
    <filename>classXpetra_1_1CrsGraph.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt;</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a326ddd4fadf7ca039030798290f049cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad330e9af0a899b31e5a603ad5ca2bf0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa51a8efe9daeedbfc8b102772efea8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsGraph</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a99245bcb30489a94ffaba52de72e686b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af008c390c3d15a299e37174ea1d51bf8</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2a53b720a3b344e70fc419073d374968</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4b8b7d779741b87d776f37716fd89a45</anchor>
      <arglist>(LocalOrdinal localRow)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5180b4550f7d457e655d96b733b6450e</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae15aceb5247c6fc79fe8c47e2f7f32a0</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a35bf3e2ea905b3ff3ea0205ca5fd5d18</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9ea5cb1c7b76391ce5b5d7563fdbfb3f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4f8f9efc158d6b7da1ed34c7e1dbcefc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8c0ef53103b0f35c261b660855ef1ea1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abbdd239d49bf45879358955c1b1e7ae4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a065d42af15c1829e6e4298e87c57ce8a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8a2c34e0a08638e56a87e3a20587ee57</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a1c89389d3067120e70a9a5084273b6ba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa62db959781a9f28958c8187eb2687f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a42f0cd89dc23cc13d4551f540fcf39c4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abce7b1050d285fbc9535169ffe6ae0f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae4c6f4873bf380d4e7c4daa0c5877313</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae18e30f31fef6b868d1efab67065188c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9a0af17776aa90ddf772796784b0126c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a36897c5f357127c3bf89441de9d9df64</anchor>
      <arglist>(GlobalOrdinal globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a3639dc83fc8e53336ae4d1f2602d780c</anchor>
      <arglist>(LocalOrdinal localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad3ca12caf30ae2a368bd34278bf1d0d4</anchor>
      <arglist>(GlobalOrdinal globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5e6b2ac19b03d0459dcab711a21e3ebb</anchor>
      <arglist>(LocalOrdinal localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0f4998dbe862de0e18093f355f487b3b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a6307cd145469e66e46aa7850c30e3743</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4da8f71356bff866446019bf5ba986fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0fdc3985539238e601b78d7a10a5f6b0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>afc26551d92759b5b295ed1bf341ed52c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a7da6eb211cb29cb56187b3e6dfab215c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2cf87a97e339a72002e24f575f9e3d22</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a673a89f160478e5c883084068c201089</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ab148e2e43b6b59c64f349a63e7dbe3ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d875800631f68207233c91038b7bd7a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d444d8ff93f78426f17808d27e8f3ec</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af0bd3d5441a19d3a257dfe8236f95cf4</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a841e584a07b14d967c765c35a4e28208</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ac3dfc25934563d166514ae5f0e827c9e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aba65790d50e546affbc26733b6141e65</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsGraph&lt; int, GlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1CrsGraph.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a326ddd4fadf7ca039030798290f049cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad330e9af0a899b31e5a603ad5ca2bf0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa51a8efe9daeedbfc8b102772efea8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsGraph</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a99245bcb30489a94ffaba52de72e686b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af008c390c3d15a299e37174ea1d51bf8</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2a53b720a3b344e70fc419073d374968</anchor>
      <arglist>(const int localRow, const ArrayView&lt; const int &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4b8b7d779741b87d776f37716fd89a45</anchor>
      <arglist>(int localRow)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5180b4550f7d457e655d96b733b6450e</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae15aceb5247c6fc79fe8c47e2f7f32a0</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a35bf3e2ea905b3ff3ea0205ca5fd5d18</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9ea5cb1c7b76391ce5b5d7563fdbfb3f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4f8f9efc158d6b7da1ed34c7e1dbcefc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8c0ef53103b0f35c261b660855ef1ea1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abbdd239d49bf45879358955c1b1e7ae4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Import&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a065d42af15c1829e6e4298e87c57ce8a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Export&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8a2c34e0a08638e56a87e3a20587ee57</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a1c89389d3067120e70a9a5084273b6ba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa62db959781a9f28958c8187eb2687f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a42f0cd89dc23cc13d4551f540fcf39c4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abce7b1050d285fbc9535169ffe6ae0f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae4c6f4873bf380d4e7c4daa0c5877313</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae18e30f31fef6b868d1efab67065188c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9a0af17776aa90ddf772796784b0126c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a36897c5f357127c3bf89441de9d9df64</anchor>
      <arglist>(GlobalOrdinal globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a3639dc83fc8e53336ae4d1f2602d780c</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad3ca12caf30ae2a368bd34278bf1d0d4</anchor>
      <arglist>(GlobalOrdinal globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5e6b2ac19b03d0459dcab711a21e3ebb</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0f4998dbe862de0e18093f355f487b3b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a6307cd145469e66e46aa7850c30e3743</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4da8f71356bff866446019bf5ba986fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0fdc3985539238e601b78d7a10a5f6b0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>afc26551d92759b5b295ed1bf341ed52c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a7da6eb211cb29cb56187b3e6dfab215c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2cf87a97e339a72002e24f575f9e3d22</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a673a89f160478e5c883084068c201089</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ab148e2e43b6b59c64f349a63e7dbe3ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d875800631f68207233c91038b7bd7a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d444d8ff93f78426f17808d27e8f3ec</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af0bd3d5441a19d3a257dfe8236f95cf4</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a841e584a07b14d967c765c35a4e28208</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ac3dfc25934563d166514ae5f0e827c9e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aba65790d50e546affbc26733b6141e65</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsGraph&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsGraph.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a326ddd4fadf7ca039030798290f049cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad330e9af0a899b31e5a603ad5ca2bf0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa51a8efe9daeedbfc8b102772efea8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsGraph</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a99245bcb30489a94ffaba52de72e686b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af008c390c3d15a299e37174ea1d51bf8</anchor>
      <arglist>(int globalRow, const ArrayView&lt; const int &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2a53b720a3b344e70fc419073d374968</anchor>
      <arglist>(const int localRow, const ArrayView&lt; const int &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4b8b7d779741b87d776f37716fd89a45</anchor>
      <arglist>(int localRow)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5180b4550f7d457e655d96b733b6450e</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae15aceb5247c6fc79fe8c47e2f7f32a0</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a35bf3e2ea905b3ff3ea0205ca5fd5d18</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9ea5cb1c7b76391ce5b5d7563fdbfb3f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4f8f9efc158d6b7da1ed34c7e1dbcefc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8c0ef53103b0f35c261b660855ef1ea1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abbdd239d49bf45879358955c1b1e7ae4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Import&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a065d42af15c1829e6e4298e87c57ce8a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Export&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8a2c34e0a08638e56a87e3a20587ee57</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a1c89389d3067120e70a9a5084273b6ba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa62db959781a9f28958c8187eb2687f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a42f0cd89dc23cc13d4551f540fcf39c4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abce7b1050d285fbc9535169ffe6ae0f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae4c6f4873bf380d4e7c4daa0c5877313</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae18e30f31fef6b868d1efab67065188c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9a0af17776aa90ddf772796784b0126c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a36897c5f357127c3bf89441de9d9df64</anchor>
      <arglist>(int globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a3639dc83fc8e53336ae4d1f2602d780c</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad3ca12caf30ae2a368bd34278bf1d0d4</anchor>
      <arglist>(int globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5e6b2ac19b03d0459dcab711a21e3ebb</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0f4998dbe862de0e18093f355f487b3b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a6307cd145469e66e46aa7850c30e3743</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4da8f71356bff866446019bf5ba986fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0fdc3985539238e601b78d7a10a5f6b0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>afc26551d92759b5b295ed1bf341ed52c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a7da6eb211cb29cb56187b3e6dfab215c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2cf87a97e339a72002e24f575f9e3d22</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a673a89f160478e5c883084068c201089</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ab148e2e43b6b59c64f349a63e7dbe3ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d875800631f68207233c91038b7bd7a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d444d8ff93f78426f17808d27e8f3ec</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af0bd3d5441a19d3a257dfe8236f95cf4</anchor>
      <arglist>(int GlobalRow, ArrayView&lt; const int &gt; &amp;Indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a841e584a07b14d967c765c35a4e28208</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ac3dfc25934563d166514ae5f0e827c9e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aba65790d50e546affbc26733b6141e65</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsGraph&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsGraph.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a326ddd4fadf7ca039030798290f049cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad330e9af0a899b31e5a603ad5ca2bf0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa51a8efe9daeedbfc8b102772efea8b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsGraph</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a99245bcb30489a94ffaba52de72e686b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af008c390c3d15a299e37174ea1d51bf8</anchor>
      <arglist>(long long globalRow, const ArrayView&lt; const long long &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2a53b720a3b344e70fc419073d374968</anchor>
      <arglist>(const int localRow, const ArrayView&lt; const int &gt; &amp;indices)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4b8b7d779741b87d776f37716fd89a45</anchor>
      <arglist>(int localRow)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5180b4550f7d457e655d96b733b6450e</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae15aceb5247c6fc79fe8c47e2f7f32a0</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a35bf3e2ea905b3ff3ea0205ca5fd5d18</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9ea5cb1c7b76391ce5b5d7563fdbfb3f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4f8f9efc158d6b7da1ed34c7e1dbcefc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8c0ef53103b0f35c261b660855ef1ea1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abbdd239d49bf45879358955c1b1e7ae4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Import&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a065d42af15c1829e6e4298e87c57ce8a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Export&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8a2c34e0a08638e56a87e3a20587ee57</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a1c89389d3067120e70a9a5084273b6ba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aa62db959781a9f28958c8187eb2687f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a42f0cd89dc23cc13d4551f540fcf39c4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>abce7b1050d285fbc9535169ffe6ae0f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae4c6f4873bf380d4e7c4daa0c5877313</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ae18e30f31fef6b868d1efab67065188c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a9a0af17776aa90ddf772796784b0126c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a36897c5f357127c3bf89441de9d9df64</anchor>
      <arglist>(long long globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a3639dc83fc8e53336ae4d1f2602d780c</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ad3ca12caf30ae2a368bd34278bf1d0d4</anchor>
      <arglist>(long long globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a5e6b2ac19b03d0459dcab711a21e3ebb</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0f4998dbe862de0e18093f355f487b3b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a6307cd145469e66e46aa7850c30e3743</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a4da8f71356bff866446019bf5ba986fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a0fdc3985539238e601b78d7a10a5f6b0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>afc26551d92759b5b295ed1bf341ed52c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a7da6eb211cb29cb56187b3e6dfab215c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a2cf87a97e339a72002e24f575f9e3d22</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a673a89f160478e5c883084068c201089</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ab148e2e43b6b59c64f349a63e7dbe3ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d875800631f68207233c91038b7bd7a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a8d444d8ff93f78426f17808d27e8f3ec</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>af0bd3d5441a19d3a257dfe8236f95cf4</anchor>
      <arglist>(long long GlobalRow, ArrayView&lt; const long long &gt; &amp;Indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>a841e584a07b14d967c765c35a4e28208</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>ac3dfc25934563d166514ae5f0e827c9e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsGraph.html</anchorfile>
      <anchor>aba65790d50e546affbc26733b6141e65</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsGraphFactory</name>
    <filename>classXpetra_1_1CrsGraphFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory.html</anchorfile>
      <anchor>a3c08745ae805609ab3232b6ec01cac70</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, ProfileType pftype=DynamicProfile)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CrsGraphFactory</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory.html</anchorfile>
      <anchor>a0923d297416b81f9741562c565bc3901</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsGraphFactory&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsGraphFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae25710783c11310a647bad68a2833a51</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, ProfileType pftype=DynamicProfile)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9948b5462654e83ef4d817470ca68d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0439269ac29d4396502bb0203dfb0180</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2eddca356388b3217e249eb3c9c1e077</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CrsGraphFactory</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a308a30685b48bfcdc07ce9f9982d6dcd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsGraphFactory&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsGraphFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acc7f4550c8b73cd70a156e93157a6a3d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, ProfileType pftype=DynamicProfile)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad992647f9ae18a3b5095fa7b7349738b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a263016971eaaa939aeae7aa9a182c157</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a17570a1f8665626fbf29e2f18e76330d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CrsGraphFactory</name>
      <anchorfile>classXpetra_1_1CrsGraphFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af6a7310cc6611b19e980472f5a456888</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsMatrix</name>
    <filename>classXpetra_1_1CrsMatrix.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Xpetra::RowMatrix</base>
    <base>DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt;</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>abd89fe8b553a9ba1d177e9da33dd4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a9182aa6f7c4b2c7e621b2eda5e5caef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1a197cccbed1c3bc493a0adc249bbbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac813cf9652355fc20a2f6a4a1b251291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5b4f0427777c854048554efa04afca04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aef45a68991f01affddb79b629758bd1a</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad1cd851de27dc0d03ce9d5748c6d2d6f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a33856247aa58d3ab387877a2d3a15058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa74027154572974fd40b707c0d35cb00</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ace754a27cbfdc9ec1daf22a603c3b72d</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5897ea503d19ea6d523563feaed54c43</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a04a92236068975a1a92f21de291cf9df</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a508b84177669d674df1652babd32c81a</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a22e738596a74deaeae8e4a45297e1b45</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ae0d5426afaf72583bec61d4cf1254775</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a37cc1c075ec1b0be3831ffafa03d3dab</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2a522f40c663e50e11f328ed9839ce1d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa4ca3f3324d1d162ed6e615383483d5f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1f2b4dcd7b4b1386df4bbd9476cb21e4</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4ddabbe69d1785de5a7c32d73c8d5a1b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a072030112dad49c7e0515bcd141b1fb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2c089bcb2bcdadd170834af316c4d7b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27c30dfa28b2e504fd7d1d7fd7317cb1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad45740f965a947715f8d8eff73032c66</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af32b0b1af58962def11bf1493dd59478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ab5a0bd7ba87738b0fa913168c8692d88</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27221ee333415215e542c10b02f108f5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7ef88ad2903409f12a974aaca677f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a09f2a01617cf5549458239cd25458784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d1b42773dc7dbebc40a02b8eb867798</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a527c13d71b17fcb6ca6f38eec7e98440</anchor>
      <arglist>(LocalOrdinal localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d5e486efaa4b2c77f25bf82acf622b7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aea59d6f7e7f19825e57b57c8bc7ddb11</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1825cf58d78484d226368e8f80fee731</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a414545f6032c833ae036ee9fdb52fb89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af976fa78d94967737b4a0154b06cf861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a406dabd57ab0763f2db530201e565984</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee7f908a428b50eda7187aec1ca92569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>afc766f79b89252e9f5c903f68753b29d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1e81ddbc505bb04194de0dd477f99e2e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a531612164c0b723b1535eb2cdb80e945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4f8883980767b430c964dd67f28a907f</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a14b2b081a5c09a473a0c6f7e4cac3016</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee456778ab7a0191fa8e1b4782d13f6b</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac965020e753a55b2482e984c2b2a6a43</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a8157f88ee2c359749db85de108ed4060</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a12de6049968156c0915dc267e92ce094</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a40520f52ace7b7f788a455fa046f7292</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a0d74a078eb855eb7b0859227e536879d</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4abe3c4d406f35fd2424097326d14ce4</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>adb8f32df1355bed78246d368e9cf3422</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aaf5138a7de6cf3d4844eef939166961b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a59a101b8870bed6650073399dfd29471</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af6900d6a178d179abdb545302695007e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a71506dc49f231d71ea0f5fc1af82e002</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsMatrix&lt; double, int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1CrsMatrix.html</filename>
    <base>Xpetra::RowMatrix</base>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>abd89fe8b553a9ba1d177e9da33dd4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a9182aa6f7c4b2c7e621b2eda5e5caef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1a197cccbed1c3bc493a0adc249bbbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac813cf9652355fc20a2f6a4a1b251291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5b4f0427777c854048554efa04afca04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aef45a68991f01affddb79b629758bd1a</anchor>
      <arglist>(int LocalRow, const ArrayView&lt; int &gt; &amp;Indices, const ArrayView&lt; double &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad1cd851de27dc0d03ce9d5748c6d2d6f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a33856247aa58d3ab387877a2d3a15058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa74027154572974fd40b707c0d35cb00</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, const ArrayView&lt; const EpetraGlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ace754a27cbfdc9ec1daf22a603c3b72d</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5897ea503d19ea6d523563feaed54c43</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, const ArrayView&lt; const EpetraGlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a04a92236068975a1a92f21de291cf9df</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a508b84177669d674df1652babd32c81a</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a22e738596a74deaeae8e4a45297e1b45</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ae0d5426afaf72583bec61d4cf1254775</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; int &gt; &amp;colind, ArrayRCP&lt; double &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a37cc1c075ec1b0be3831ffafa03d3dab</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; int &gt; &amp;colind, const ArrayRCP&lt; double &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2a522f40c663e50e11f328ed9839ce1d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const int &gt; &amp;colind, ArrayRCP&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa4ca3f3324d1d162ed6e615383483d5f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1f2b4dcd7b4b1386df4bbd9476cb21e4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4ddabbe69d1785de5a7c32d73c8d5a1b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a072030112dad49c7e0515bcd141b1fb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;newImporter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2c089bcb2bcdadd170834af316c4d7b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27c30dfa28b2e504fd7d1d7fd7317cb1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad45740f965a947715f8d8eff73032c66</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af32b0b1af58962def11bf1493dd59478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ab5a0bd7ba87738b0fa913168c8692d88</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27221ee333415215e542c10b02f108f5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7ef88ad2903409f12a974aaca677f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a09f2a01617cf5549458239cd25458784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d1b42773dc7dbebc40a02b8eb867798</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a527c13d71b17fcb6ca6f38eec7e98440</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d5e486efaa4b2c77f25bf82acf622b7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aea59d6f7e7f19825e57b57c8bc7ddb11</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1825cf58d78484d226368e8f80fee731</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a414545f6032c833ae036ee9fdb52fb89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af976fa78d94967737b4a0154b06cf861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a406dabd57ab0763f2db530201e565984</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee7f908a428b50eda7187aec1ca92569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>afc766f79b89252e9f5c903f68753b29d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1e81ddbc505bb04194de0dd477f99e2e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a531612164c0b723b1535eb2cdb80e945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4f8883980767b430c964dd67f28a907f</anchor>
      <arglist>(EpetraGlobalOrdinal GlobalRow, ArrayView&lt; const EpetraGlobalOrdinal &gt; &amp;indices, ArrayView&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a14b2b081a5c09a473a0c6f7e4cac3016</anchor>
      <arglist>(EpetraGlobalOrdinal GlobalRow, const ArrayView&lt; EpetraGlobalOrdinal &gt; &amp;indices, const ArrayView&lt; double &gt; &amp;values, size_t &amp;numEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee456778ab7a0191fa8e1b4782d13f6b</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac965020e753a55b2482e984c2b2a6a43</anchor>
      <arglist>(Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a12de6049968156c0915dc267e92ce094</anchor>
      <arglist>(Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a8157f88ee2c359749db85de108ed4060</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a40520f52ace7b7f788a455fa046f7292</anchor>
      <arglist>(const Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a0d74a078eb855eb7b0859227e536879d</anchor>
      <arglist>(const Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4abe3c4d406f35fd2424097326d14ce4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;newMap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>adb8f32df1355bed78246d368e9cf3422</anchor>
      <arglist>(const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=ScalarTraits&lt; double &gt;::one(), double beta=ScalarTraits&lt; double &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aaf5138a7de6cf3d4844eef939166961b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a59a101b8870bed6650073399dfd29471</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af6900d6a178d179abdb545302695007e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a71506dc49f231d71ea0f5fc1af82e002</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsMatrix&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsMatrix.html</filename>
    <base>Xpetra::RowMatrix</base>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>abd89fe8b553a9ba1d177e9da33dd4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a9182aa6f7c4b2c7e621b2eda5e5caef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1a197cccbed1c3bc493a0adc249bbbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac813cf9652355fc20a2f6a4a1b251291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5b4f0427777c854048554efa04afca04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aef45a68991f01affddb79b629758bd1a</anchor>
      <arglist>(int LocalRow, const ArrayView&lt; int &gt; &amp;Indices, const ArrayView&lt; double &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad1cd851de27dc0d03ce9d5748c6d2d6f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a33856247aa58d3ab387877a2d3a15058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa74027154572974fd40b707c0d35cb00</anchor>
      <arglist>(int globalRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ace754a27cbfdc9ec1daf22a603c3b72d</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5897ea503d19ea6d523563feaed54c43</anchor>
      <arglist>(int globalRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a04a92236068975a1a92f21de291cf9df</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a508b84177669d674df1652babd32c81a</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a22e738596a74deaeae8e4a45297e1b45</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ae0d5426afaf72583bec61d4cf1254775</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; int &gt; &amp;colind, ArrayRCP&lt; double &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a37cc1c075ec1b0be3831ffafa03d3dab</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; int &gt; &amp;colind, const ArrayRCP&lt; double &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2a522f40c663e50e11f328ed9839ce1d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const int &gt; &amp;colind, ArrayRCP&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa4ca3f3324d1d162ed6e615383483d5f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1f2b4dcd7b4b1386df4bbd9476cb21e4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4ddabbe69d1785de5a7c32d73c8d5a1b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a072030112dad49c7e0515bcd141b1fb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; int, int, EpetraNode &gt; &gt; &amp;newImporter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2c089bcb2bcdadd170834af316c4d7b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; int, int, EpetraNode &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; int, int, EpetraNode &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27c30dfa28b2e504fd7d1d7fd7317cb1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad45740f965a947715f8d8eff73032c66</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af32b0b1af58962def11bf1493dd59478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ab5a0bd7ba87738b0fa913168c8692d88</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27221ee333415215e542c10b02f108f5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7ef88ad2903409f12a974aaca677f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a09f2a01617cf5549458239cd25458784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d1b42773dc7dbebc40a02b8eb867798</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a527c13d71b17fcb6ca6f38eec7e98440</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d5e486efaa4b2c77f25bf82acf622b7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aea59d6f7e7f19825e57b57c8bc7ddb11</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1825cf58d78484d226368e8f80fee731</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a414545f6032c833ae036ee9fdb52fb89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af976fa78d94967737b4a0154b06cf861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a406dabd57ab0763f2db530201e565984</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee7f908a428b50eda7187aec1ca92569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>afc766f79b89252e9f5c903f68753b29d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1e81ddbc505bb04194de0dd477f99e2e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a531612164c0b723b1535eb2cdb80e945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4f8883980767b430c964dd67f28a907f</anchor>
      <arglist>(int GlobalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a14b2b081a5c09a473a0c6f7e4cac3016</anchor>
      <arglist>(int GlobalRow, const ArrayView&lt; int &gt; &amp;indices, const ArrayView&lt; double &gt; &amp;values, size_t &amp;numEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee456778ab7a0191fa8e1b4782d13f6b</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac965020e753a55b2482e984c2b2a6a43</anchor>
      <arglist>(Vector&lt; double, int, int, EpetraNode &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a12de6049968156c0915dc267e92ce094</anchor>
      <arglist>(Vector&lt; double, int, int, EpetraNode &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a8157f88ee2c359749db85de108ed4060</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a40520f52ace7b7f788a455fa046f7292</anchor>
      <arglist>(const Vector&lt; double, int, int, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a0d74a078eb855eb7b0859227e536879d</anchor>
      <arglist>(const Vector&lt; double, int, int, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4abe3c4d406f35fd2424097326d14ce4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;newMap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>adb8f32df1355bed78246d368e9cf3422</anchor>
      <arglist>(const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;X, MultiVector&lt; double, int, int, EpetraNode &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=ScalarTraits&lt; double &gt;::one(), double beta=ScalarTraits&lt; double &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aaf5138a7de6cf3d4844eef939166961b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a59a101b8870bed6650073399dfd29471</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af6900d6a178d179abdb545302695007e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a71506dc49f231d71ea0f5fc1af82e002</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsMatrix&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsMatrix.html</filename>
    <base>Xpetra::RowMatrix</base>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>abd89fe8b553a9ba1d177e9da33dd4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a9182aa6f7c4b2c7e621b2eda5e5caef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1a197cccbed1c3bc493a0adc249bbbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac813cf9652355fc20a2f6a4a1b251291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5b4f0427777c854048554efa04afca04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aef45a68991f01affddb79b629758bd1a</anchor>
      <arglist>(int LocalRow, const ArrayView&lt; int &gt; &amp;Indices, const ArrayView&lt; double &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad1cd851de27dc0d03ce9d5748c6d2d6f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a33856247aa58d3ab387877a2d3a15058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa74027154572974fd40b707c0d35cb00</anchor>
      <arglist>(long long globalRow, const ArrayView&lt; const long long &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ace754a27cbfdc9ec1daf22a603c3b72d</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5897ea503d19ea6d523563feaed54c43</anchor>
      <arglist>(long long globalRow, const ArrayView&lt; const long long &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a04a92236068975a1a92f21de291cf9df</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const double &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a508b84177669d674df1652babd32c81a</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a22e738596a74deaeae8e4a45297e1b45</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ae0d5426afaf72583bec61d4cf1254775</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; int &gt; &amp;colind, ArrayRCP&lt; double &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a37cc1c075ec1b0be3831ffafa03d3dab</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; int &gt; &amp;colind, const ArrayRCP&lt; double &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2a522f40c663e50e11f328ed9839ce1d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const int &gt; &amp;colind, ArrayRCP&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa4ca3f3324d1d162ed6e615383483d5f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1f2b4dcd7b4b1386df4bbd9476cb21e4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4ddabbe69d1785de5a7c32d73c8d5a1b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a072030112dad49c7e0515bcd141b1fb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; int, long long, EpetraNode &gt; &gt; &amp;newImporter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2c089bcb2bcdadd170834af316c4d7b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; int, long long, EpetraNode &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; int, long long, EpetraNode &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27c30dfa28b2e504fd7d1d7fd7317cb1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad45740f965a947715f8d8eff73032c66</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af32b0b1af58962def11bf1493dd59478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ab5a0bd7ba87738b0fa913168c8692d88</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27221ee333415215e542c10b02f108f5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7ef88ad2903409f12a974aaca677f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a09f2a01617cf5549458239cd25458784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d1b42773dc7dbebc40a02b8eb867798</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a527c13d71b17fcb6ca6f38eec7e98440</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d5e486efaa4b2c77f25bf82acf622b7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aea59d6f7e7f19825e57b57c8bc7ddb11</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1825cf58d78484d226368e8f80fee731</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a414545f6032c833ae036ee9fdb52fb89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af976fa78d94967737b4a0154b06cf861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a406dabd57ab0763f2db530201e565984</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee7f908a428b50eda7187aec1ca92569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>afc766f79b89252e9f5c903f68753b29d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1e81ddbc505bb04194de0dd477f99e2e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a531612164c0b723b1535eb2cdb80e945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4f8883980767b430c964dd67f28a907f</anchor>
      <arglist>(long long GlobalRow, ArrayView&lt; const long long &gt; &amp;indices, ArrayView&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a14b2b081a5c09a473a0c6f7e4cac3016</anchor>
      <arglist>(long long GlobalRow, const ArrayView&lt; long long &gt; &amp;indices, const ArrayView&lt; double &gt; &amp;values, size_t &amp;numEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee456778ab7a0191fa8e1b4782d13f6b</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const double &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac965020e753a55b2482e984c2b2a6a43</anchor>
      <arglist>(Vector&lt; double, int, long long, EpetraNode &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a12de6049968156c0915dc267e92ce094</anchor>
      <arglist>(Vector&lt; double, int, long long, EpetraNode &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a8157f88ee2c359749db85de108ed4060</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a40520f52ace7b7f788a455fa046f7292</anchor>
      <arglist>(const Vector&lt; double, int, long long, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a0d74a078eb855eb7b0859227e536879d</anchor>
      <arglist>(const Vector&lt; double, int, long long, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4abe3c4d406f35fd2424097326d14ce4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;newMap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>adb8f32df1355bed78246d368e9cf3422</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;X, MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=ScalarTraits&lt; double &gt;::one(), double beta=ScalarTraits&lt; double &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aaf5138a7de6cf3d4844eef939166961b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a59a101b8870bed6650073399dfd29471</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af6900d6a178d179abdb545302695007e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a71506dc49f231d71ea0f5fc1af82e002</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsMatrix.html</filename>
    <base>Xpetra::RowMatrix</base>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>abd89fe8b553a9ba1d177e9da33dd4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a9182aa6f7c4b2c7e621b2eda5e5caef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1a197cccbed1c3bc493a0adc249bbbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac813cf9652355fc20a2f6a4a1b251291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5b4f0427777c854048554efa04afca04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aef45a68991f01affddb79b629758bd1a</anchor>
      <arglist>(int LocalRow, const ArrayView&lt; int &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad1cd851de27dc0d03ce9d5748c6d2d6f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a33856247aa58d3ab387877a2d3a15058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa74027154572974fd40b707c0d35cb00</anchor>
      <arglist>(int globalRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ace754a27cbfdc9ec1daf22a603c3b72d</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5897ea503d19ea6d523563feaed54c43</anchor>
      <arglist>(int globalRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a04a92236068975a1a92f21de291cf9df</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a508b84177669d674df1652babd32c81a</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a22e738596a74deaeae8e4a45297e1b45</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ae0d5426afaf72583bec61d4cf1254775</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; int &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a37cc1c075ec1b0be3831ffafa03d3dab</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; int &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2a522f40c663e50e11f328ed9839ce1d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const int &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa4ca3f3324d1d162ed6e615383483d5f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1f2b4dcd7b4b1386df4bbd9476cb21e4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4ddabbe69d1785de5a7c32d73c8d5a1b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a072030112dad49c7e0515bcd141b1fb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; int, int, EpetraNode &gt; &gt; &amp;newImporter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2c089bcb2bcdadd170834af316c4d7b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; int, int, EpetraNode &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; int, int, EpetraNode &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27c30dfa28b2e504fd7d1d7fd7317cb1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad45740f965a947715f8d8eff73032c66</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af32b0b1af58962def11bf1493dd59478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ab5a0bd7ba87738b0fa913168c8692d88</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27221ee333415215e542c10b02f108f5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7ef88ad2903409f12a974aaca677f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a09f2a01617cf5549458239cd25458784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d1b42773dc7dbebc40a02b8eb867798</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a527c13d71b17fcb6ca6f38eec7e98440</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d5e486efaa4b2c77f25bf82acf622b7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aea59d6f7e7f19825e57b57c8bc7ddb11</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1825cf58d78484d226368e8f80fee731</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a414545f6032c833ae036ee9fdb52fb89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af976fa78d94967737b4a0154b06cf861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a406dabd57ab0763f2db530201e565984</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee7f908a428b50eda7187aec1ca92569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>afc766f79b89252e9f5c903f68753b29d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1e81ddbc505bb04194de0dd477f99e2e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a531612164c0b723b1535eb2cdb80e945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4f8883980767b430c964dd67f28a907f</anchor>
      <arglist>(int GlobalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a14b2b081a5c09a473a0c6f7e4cac3016</anchor>
      <arglist>(int GlobalRow, const ArrayView&lt; int &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee456778ab7a0191fa8e1b4782d13f6b</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac965020e753a55b2482e984c2b2a6a43</anchor>
      <arglist>(Vector&lt; Scalar, int, int, EpetraNode &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a12de6049968156c0915dc267e92ce094</anchor>
      <arglist>(Vector&lt; Scalar, int, int, EpetraNode &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a8157f88ee2c359749db85de108ed4060</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a40520f52ace7b7f788a455fa046f7292</anchor>
      <arglist>(const Vector&lt; Scalar, int, int, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a0d74a078eb855eb7b0859227e536879d</anchor>
      <arglist>(const Vector&lt; Scalar, int, int, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4abe3c4d406f35fd2424097326d14ce4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;newMap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>adb8f32df1355bed78246d368e9cf3422</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;X, MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aaf5138a7de6cf3d4844eef939166961b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a59a101b8870bed6650073399dfd29471</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af6900d6a178d179abdb545302695007e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a71506dc49f231d71ea0f5fc1af82e002</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsMatrix.html</filename>
    <base>Xpetra::RowMatrix</base>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>abd89fe8b553a9ba1d177e9da33dd4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a9182aa6f7c4b2c7e621b2eda5e5caef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1a197cccbed1c3bc493a0adc249bbbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac813cf9652355fc20a2f6a4a1b251291</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5b4f0427777c854048554efa04afca04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aef45a68991f01affddb79b629758bd1a</anchor>
      <arglist>(int LocalRow, const ArrayView&lt; int &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad1cd851de27dc0d03ce9d5748c6d2d6f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a33856247aa58d3ab387877a2d3a15058</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa74027154572974fd40b707c0d35cb00</anchor>
      <arglist>(long long globalRow, const ArrayView&lt; const long long &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ace754a27cbfdc9ec1daf22a603c3b72d</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a5897ea503d19ea6d523563feaed54c43</anchor>
      <arglist>(long long globalRow, const ArrayView&lt; const long long &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a04a92236068975a1a92f21de291cf9df</anchor>
      <arglist>(int localRow, const ArrayView&lt; const int &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a508b84177669d674df1652babd32c81a</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a22e738596a74deaeae8e4a45297e1b45</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ae0d5426afaf72583bec61d4cf1254775</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; int &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a37cc1c075ec1b0be3831ffafa03d3dab</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; int &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2a522f40c663e50e11f328ed9839ce1d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const int &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aa4ca3f3324d1d162ed6e615383483d5f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1f2b4dcd7b4b1386df4bbd9476cb21e4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4ddabbe69d1785de5a7c32d73c8d5a1b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a072030112dad49c7e0515bcd141b1fb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; int, long long, EpetraNode &gt; &gt; &amp;newImporter)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a2c089bcb2bcdadd170834af316c4d7b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; int, long long, EpetraNode &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; int, long long, EpetraNode &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27c30dfa28b2e504fd7d1d7fd7317cb1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ad45740f965a947715f8d8eff73032c66</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af32b0b1af58962def11bf1493dd59478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ab5a0bd7ba87738b0fa913168c8692d88</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a27221ee333415215e542c10b02f108f5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7ef88ad2903409f12a974aaca677f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a09f2a01617cf5549458239cd25458784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d1b42773dc7dbebc40a02b8eb867798</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a527c13d71b17fcb6ca6f38eec7e98440</anchor>
      <arglist>(int localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a7d5e486efaa4b2c77f25bf82acf622b7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aea59d6f7e7f19825e57b57c8bc7ddb11</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1825cf58d78484d226368e8f80fee731</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a414545f6032c833ae036ee9fdb52fb89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af976fa78d94967737b4a0154b06cf861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a406dabd57ab0763f2db530201e565984</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee7f908a428b50eda7187aec1ca92569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>afc766f79b89252e9f5c903f68753b29d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a1e81ddbc505bb04194de0dd477f99e2e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a531612164c0b723b1535eb2cdb80e945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4f8883980767b430c964dd67f28a907f</anchor>
      <arglist>(long long GlobalRow, ArrayView&lt; const long long &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a14b2b081a5c09a473a0c6f7e4cac3016</anchor>
      <arglist>(long long GlobalRow, const ArrayView&lt; long long &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aee456778ab7a0191fa8e1b4782d13f6b</anchor>
      <arglist>(int LocalRow, ArrayView&lt; const int &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>ac965020e753a55b2482e984c2b2a6a43</anchor>
      <arglist>(Vector&lt; Scalar, int, long long, EpetraNode &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a12de6049968156c0915dc267e92ce094</anchor>
      <arglist>(Vector&lt; Scalar, int, long long, EpetraNode &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a8157f88ee2c359749db85de108ed4060</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a40520f52ace7b7f788a455fa046f7292</anchor>
      <arglist>(const Vector&lt; Scalar, int, long long, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a0d74a078eb855eb7b0859227e536879d</anchor>
      <arglist>(const Vector&lt; Scalar, int, long long, EpetraNode &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a4abe3c4d406f35fd2424097326d14ce4</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;newMap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>adb8f32df1355bed78246d368e9cf3422</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;X, MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>aaf5138a7de6cf3d4844eef939166961b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a59a101b8870bed6650073399dfd29471</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>af6900d6a178d179abdb545302695007e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrix.html</anchorfile>
      <anchor>a71506dc49f231d71ea0f5fc1af82e002</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsMatrixFactory</name>
    <filename>classXpetra_1_1CrsMatrixFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>a95378524a5ec7a12059d73dae5d950d2</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>adb4ec1e070d8b29d2257c57ebe41abd1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=Xpetra::DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>ae309b24d0fcc69f50b6f1b4a738eba65</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>abff5d17c1c58b00083ad4be36427876c</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>af33e94189d4543e6a39ac36e9b4a9e03</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>ac8679185958b64fdfd5e4c37beb93595</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>ac445cc0c1873a93c8cf960865dc14b73</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Scalar &gt; &gt; &amp;domainMap=Teuchos::null, const RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Scalar &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CrsMatrixFactory</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory.html</anchorfile>
      <anchor>abf48e59ae5e0f51cbf67f16ef23fd644</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsMatrixFactory&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae6c3befa0fc832a6344700c7b18834a5</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2f7070cd33fe072d8001e112133c763</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=Xpetra::DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9885fec058076df1201723c85e17f38d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac1c3eedbf34da4fdb1fa4d9a7e425647</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a63f4f7fea5e2a4ac28c24197d52363a0</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6b26a33426dfe1bea5bdd6d0d29dd9bd</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3adafb59edc9851e1bc35d6a80aaccad</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac65ee6e732bba69d9a98390a334555f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afe67b4177718e7fadad40bae69aa6c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aebf94cf47401fd508e598e670a175848</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6c77a1fa965f75acec75bcf9d2e033fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CrsMatrixFactory</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8d5d778ca0981c9b184b7aa74b392e9a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsMatrixFactory&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2eb38cc892a6b8f5bc4b992f6b94dc6b</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad753b14f93e5de0bc9b8039e667848d9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=Xpetra::DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab3f472cfedd2c6f1949e8ce19813a27d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae971094d91330ddc1cc1bd6f1e3bf618</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2317f80141ccfca7cef5a9c8c434f02b</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a26f5838784f97f757aed99a25873c1b5</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a99770fabeb402eb43460af9b345bf0ea</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab9ce2ce59e66b1681737d7205ec83de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aced3212adad503fa02c5c72457f1029f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a41cdc246e0636dcf55583f2078784170</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7b9cfc9873f8b236dbc3f8644a591d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CrsMatrixFactory</name>
      <anchorfile>classXpetra_1_1CrsMatrixFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab75742205af196d81734431e899491cc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::CrsMatrixWrap</name>
    <filename>classXpetra_1_1CrsMatrixWrap.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Xpetra::Matrix</base>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6656a09caed58b7fca69066bfc50e4bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a4d5e5071c2f2e2ae76d34145cb4f1466</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>acb5ed01873d1c7e1d767cfb553525245</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ac24144a83e77b33d558ffcd3ac740652</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a3e453ddfb4dd3276ceb9a3a7a44be563</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a882d165f1816711eddd79772ee6e6ef9</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ae20ad57046e47dafd542e5c20cc5d5c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a57407075d905bbef2997dbed344ee2cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ad3edccacc0b558744772e36d0c1a0b7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ab0d25aee3c2a9ed201b21a2efbd3e829</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a5ef07fae18d0d469e4881132af68ed9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>acbc0678e6314dc7b9d65dbc99854000e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a0ffa863a3d49de1c249fdbb3e6b0f773</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a19d2ea1f2dee98790b9cc02d3b106c94</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ad027850d858f58056b245d8dd39c522f</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a0758a82d2fda6b86bb760f55bae17b33</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a4bfb10c7ba9534d73145e3fb080b0e75</anchor>
      <arglist>(Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a06bddf1e0577745985e385ef46cb8eed</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6e2ce44f935efec5142d042f552a6dfb</anchor>
      <arglist>(Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a7171f3a58a35ed09019ad4a4969be208</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a02446fa6b07166e089a98747c2c3ad63</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a2acff4cbf521809cb94bd3c1be49d4c9</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a9a3ce8fd741361fad3d6f7c897dd8a24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>aea2cf54ce9cd2e236276664307aeaca7</anchor>
      <arglist>(const Matrix &amp;source, const Xpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ab0e499250a8bd36159f2cd2f29d914ab</anchor>
      <arglist>(const Matrix &amp;dest, const Xpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ae5133e2332e26e4d6c2d4c39c47fcb17</anchor>
      <arglist>(const Matrix &amp;source, const Xpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a8ab3602fa2923fa5bed9a5acd78fde69</anchor>
      <arglist>(const Matrix &amp;dest, const Xpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>aac685216e7768caf5541986200f3a0a7</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a443250b4eec7c5aa70a19d4a1f2c852a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a21a622b8ea633a813c2ce7c06eca4945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Matrix</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a1e6171462bfb115317c28ffbc67f0917</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>afd10cad60bfc3b1bb1be5767675b3b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::TpetraCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a41569646b103b83787b7bcec87dec846</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrixFactory&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrixFactory</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a3b965637ac91d830729d3769040b2c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MatrixView&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MatrixView</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>aeebca1599cca11ea95b190dd31b37365</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CreateDefaultView</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a3d9d7370506b9882a0d48357a74accbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateDefaultView</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a7456d3c9dd8545bbe52a1326fbac5fa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>finalDefaultView_</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ab99681e34bc9df83cbda286f8d1af1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; CrsMatrix &gt;</type>
      <name>matrixData_</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a57204a29b01bb3cf6aa4dad32c219b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6b5b2c46228c67d91af60fe49a839633</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a8edc7930d56b56718b1a89ba8cc0ac1a</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>afe5279436020b6c785b9e8074bbc947f</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const RCP&lt; const Map &gt; &amp;colMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6b5309b2c432419750753ab00c6ace0f</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const RCP&lt; const Map &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a23c1640023c7c337a80a3a0d240d6d65</anchor>
      <arglist>(RCP&lt; CrsMatrix &gt; matrix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ace9953118c81af9cb1987ad5feca7e20</anchor>
      <arglist>(const RCP&lt; const CrsGraph &gt; &amp;graph, const RCP&lt; ParameterList &gt; &amp;paramList=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CrsMatrixWrap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6e7da9490d1dd59f2b4659f578cc90f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a5e72ab8224d5c7e6710f3f7cc23d28bc</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>adf4d6873f634b296a7d3ff3dab4afe5c</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a3e277c3ddff36df0d5482b8707d25af0</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6b173a360a495f7b07ffd709eac90137</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a408fe78f165554634d79cfdeb6433802</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a5ac1430b0cf2e56feb963bef4c510f02</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a64cde1d5552e4e6ce343561e4ef7e405</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a1fd061542e6880f17f5255967c388a17</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;domainMap, const RCP&lt; const Map &gt; &amp;rangeMap, const RCP&lt; Teuchos::ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6b336585ad98bf887887a4eb9f3b5dfc</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>af2dba7b37ba26886f11cb8a925b364f0</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ad3f40d6d5b688c3e018834a0d8777c0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a730d9a290fafa5db7dcdcbbf1cf93526</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt; &amp;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>afa4ead6680dc6547acdc2d1ef4f30268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt; &amp;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a3d04d447d005b39e89e2678db3de4c19</anchor>
      <arglist>(viewLabel_t viewLabel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>af5d40b5b501fa4a3693b19fdf7394735</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a8aa1f86e470bca45b17c312c7d03f996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>ada104f56abec1765bf386fa11e29a291</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a409ffcafdfb30ecc390ac278f668be39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CrsMatrix &gt;</type>
      <name>getCrsMatrix</name>
      <anchorfile>classXpetra_1_1CrsMatrixWrap.html</anchorfile>
      <anchor>a6a1be1e1ea9c39ffafb8ea533cc0725b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>KokkosClassic::DefaultNode</name>
    <filename>classKokkosClassic_1_1DefaultNode.html</filename>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosSerialWrapperNode</type>
      <name>DefaultNodeType</name>
      <anchorfile>classKokkosClassic_1_1DefaultNode.html</anchorfile>
      <anchor>ae09f8db1bf49f8ca36e1877ea6584b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; DefaultNodeType &gt;</type>
      <name>getDefaultNode</name>
      <anchorfile>classKokkosClassic_1_1DefaultNode.html</anchorfile>
      <anchor>a6db090b0e34010e33e022264921f0097</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::DefaultPlatform</name>
    <filename>classXpetra_1_1DefaultPlatform.html</filename>
    <member kind="typedef">
      <type>SerialPlatform&lt; KokkosClassic::DefaultNode::DefaultNodeType &gt;</type>
      <name>DefaultPlatformType</name>
      <anchorfile>classXpetra_1_1DefaultPlatform.html</anchorfile>
      <anchor>aa102434f71b936256c1dac9b8d1bd603</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DefaultPlatformType &amp;</type>
      <name>getDefaultPlatform</name>
      <anchorfile>classXpetra_1_1DefaultPlatform.html</anchorfile>
      <anchor>add460d10d80a2c1b26abdca289c699e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Teuchos::RCP&lt; DefaultPlatformType &gt;</type>
      <name>platform_</name>
      <anchorfile>classXpetra_1_1DefaultPlatform.html</anchorfile>
      <anchor>a37857eaad35f0820a196c5ef7f558e27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::DistObject</name>
    <filename>classXpetra_1_1DistObject.html</filename>
    <templarg>Packet</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DistObject</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0ac31b09d1fee2d6699ab5f5673e5d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>afab56fff7c5b97e626e22e01e488b43c</anchor>
      <arglist>(const DistObject&lt; Packet, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a572d8e111950579f6d82222e97eb87ae</anchor>
      <arglist>(const DistObject&lt; Packet, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6d44c8d5c78ff478f30bb838d1d1d9d4</anchor>
      <arglist>(const DistObject&lt; Packet, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6fa7a9ed58a1c561de84f5ac00f41b7b</anchor>
      <arglist>(const DistObject&lt; Packet, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0284158d2806ef3afdac3d7719867805</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a69dc5632efd25a130b29f027c38d462e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a2dba5d112f5e9f04e4dd41fff2da69ba</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1DistObject.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DistObject</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0ac31b09d1fee2d6699ab5f5673e5d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>afab56fff7c5b97e626e22e01e488b43c</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6d44c8d5c78ff478f30bb838d1d1d9d4</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a572d8e111950579f6d82222e97eb87ae</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6fa7a9ed58a1c561de84f5ac00f41b7b</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0284158d2806ef3afdac3d7719867805</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a69dc5632efd25a130b29f027c38d462e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a2dba5d112f5e9f04e4dd41fff2da69ba</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1DistObject.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DistObject</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0ac31b09d1fee2d6699ab5f5673e5d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>afab56fff7c5b97e626e22e01e488b43c</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6d44c8d5c78ff478f30bb838d1d1d9d4</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a572d8e111950579f6d82222e97eb87ae</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6fa7a9ed58a1c561de84f5ac00f41b7b</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0284158d2806ef3afdac3d7719867805</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a69dc5632efd25a130b29f027c38d462e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a2dba5d112f5e9f04e4dd41fff2da69ba</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1DistObject.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DistObject</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0ac31b09d1fee2d6699ab5f5673e5d7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>afab56fff7c5b97e626e22e01e488b43c</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6d44c8d5c78ff478f30bb838d1d1d9d4</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a572d8e111950579f6d82222e97eb87ae</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a6fa7a9ed58a1c561de84f5ac00f41b7b</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a0284158d2806ef3afdac3d7719867805</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a69dc5632efd25a130b29f027c38d462e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1DistObject.html</anchorfile>
      <anchor>a2dba5d112f5e9f04e4dd41fff2da69ba</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraCrsGraphT</name>
    <filename>classXpetra_1_1EpetraCrsGraphT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>CrsGraph&lt; int, GlobalOrdinal, Node &gt;</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>adc6fa39015e57d0a380ebebae2bfd1e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a44d84b126049504d3343ba75a5d45484</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a6f9e2dfcf7a9690d520b9705e86a0307</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a0b19c56b996e209a7707a24d7e0e2b47</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>af093c4c5a50111da79c768ce5b5f4a82</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a761435220a2b122533c31148d41b5567</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aa1c19a8a7fc28b9e422fe432b3dacda9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a98a1248d70c032bbd909562183fc6cd6</anchor>
      <arglist>(const RCP&lt; const map_type &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>acad21a49710be31fa0c8a86ecab50812</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>ad9bdf3f503f0e7fee5d9863fa2182acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a8e24886b1244094b5404c429c79c0d6a</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>ac28954a0ebafb0b2b76a62100251864d</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aa72b53000d8d5f2400766439a2456f43</anchor>
      <arglist>(LocalOrdinal localRow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a0c9195fc008bf5172bbe2a90b6d4f5ab</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a63f2d98dc9a291abdf221a6bee81ebd0</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>abb81949f3aa7c569bfbfab2e1a277601</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a47391b58fe98a8c5db6d3efa2fb2bab4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a985663005cfb8f54e5533dcc5f80c04c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>abde08e7c835eff5db0371c298510917c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a34c72d528f66f7a5bd6eb5271605a0ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aba83d6e010e7ff74ed384d2bdee7ac90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>abf87fc52b3ac448c17df01cde6359811</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>ad9326330b78f8956cd4bf445699d6da1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a63ce224eed534cec84029a49c662a86b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>ace81c70b88b86b3167d99a2836931c76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a06ec21397fd649f46a1ca74ad5d8fe5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>adfe93b3663f5cd67fb25fd293e96abdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a1846b016d6cb6c3379aec585b0a78ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aca263e42b2236ef1a413302df14ce450</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a05fd7116c6b8087ca0df614319870cef</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a5c21749eb5a90711d6a889df84f8982c</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aab59be09776f61d95ffe26482651b58d</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a13e7313635defaec43630704cc5ddf7f</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a739c9c8c36043fee1d0922530ce65f4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>af537cb10cddaf1d980ee4299cff924b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aace0f0fe75db6f411a62bb61ddde927e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a7ba31ed47a0c165269928e1ae6cc2f6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a224b95f5215deaa1dde37370113ca592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a2c9920e9f9e5e5c29e0da01fdfc69174</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>ac5faaff1def92fa13da9f7864d3cf92d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>acdf5fab07c5e85125fd7304f7f5ff06d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>abd65cc0961fbe08566ecd8f0a9b92dab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a84aaecc9230af6b922e06795e58fbefe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aed41041dee16c060d2fadf5b514bc947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a0d6799ba675b22b74df118f10f61f45b</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a32a1914e5700923d82cd275021aa3b56</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>af6339068b51ca335d3aefdbacf17cc95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>aff7457d2d90ece8c84fc2b1dfbd39d06</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>a05a33ec78e58d6350bfa4f9cf9bcb8d4</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_CrsGraph &gt;</type>
      <name>getEpetra_CrsGraph</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT.html</anchorfile>
      <anchor>adc0b6d787679262e8e6f282b1ee1742e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraCrsGraphT&lt; int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">CrsGraph&lt; int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9d4527feb86bcdb47a066771c58c34c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3c088d8c0e06c5067a3cdeffeab7d6f7</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7467d3eb531c3aedfff8f91cedefb1bf</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a58dc60e63de195cee891d84922fef868</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc8c7279efc27b10c4dc072e69914302</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a508a3a389ab0e45e5c614fb3c7b301d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa35dbb1f0109d9150de5bcf9c4c33244</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4533959daeb5dd13b932eabee7905d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ace58c622176fd698dab96bf6a2f66270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>graph_</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0ee6d59acaea92b702744e21f127eda5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a76a3ca248b13b16d8878afe55e3f9eda</anchor>
      <arglist>(const RCP&lt; const map_type &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8760f0b7283590466bf0e928b3e4887f</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abbe3fd7d8f9d1745e3128ed3c11df2d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acee677ac2e53fa48562d1fe6b7b37dfe</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a10e0f63d56d7857e914ec787b964359a</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7803de16390fbbce85a2a89e518ca573</anchor>
      <arglist>(LocalOrdinal localRow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac0584c7cb487ccf23517366a6582b362</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a16d1ee6bba7447604950bc46161d07db</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa6e85cadd815b452edfdff4c636436f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae178c1765898eef6e2aba2de791ef55b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3618ae8a6b561346bfa9d561583bcdf6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a47f41d75f44ec4aefed7a8f765aae3ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a678133ac79a48bced12a2ac9a24395fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52328e4f0a07b5d26bf22285b4d329fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6a46d2909bd3269c8db395034eed0a58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac960c248cf5297339967aba8aa7de582</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a76f889302aedc0a024a2c6bb543b5f2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6c07fddc195067e3720298e89c249ba7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1fe44a8aefd758b86283177cb121537d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2aa27c113d1336be23d2f9a9940786fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc5276bfa94381c6fc0a58e41ebdfb3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae6e76b6322173874eed53ee30c79a984</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adcd089e6659eb47d237d4cde1e5e4515</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2d8a0b989901ee2c9fca80272992007a</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac02b0dd8951e3b42f793cb161ff916de</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acf6196ae3d227de5391db980f3793f6f</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab008252413a38fe485eb1408272d3c9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a719359a0ece7d4f137a2ba7f31a20c3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abe7b2b714e3f07916cbe5ed2b7496ade</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a28330ae3170622aea290dbab731712eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a20f0da432e358d6107489c20a79d7882</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acf034cb32cc880970ec0192705f9babe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a840f0b90df1358f6d6db8f3a00005f23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aba1d6a425f384603dd96bdf93534c025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc4c93fa9598dae0acbed0eafe3abc21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af1d21ba0532d3929cb4d0bee8f359169</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a077eca3467469162faeac793c5faaf91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc56bf273d908eb04b653c17e8e3eb07</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3682b8e8607a43bb460047e200e86334</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa24f1a04a4012f1482ad1ecdd5015dc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f00622d0a3f81ac1a34d3cdd920e864</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a12e80210867fe35f820fd2e8670428d4</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_CrsGraph &gt;</type>
      <name>getEpetra_CrsGraph</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a54ae1b977c8e9d314cdc3425a824e313</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraCrsGraphT&lt; long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">CrsGraph&lt; int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1932e0ac94d01f74ff1cd8ac683129b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afb11b1d3b566ec126f52494394100372</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad7d055d489dfe8d09b847567fb2eeeac</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1e5e1316a934beedf20b37922d3cf35a</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab60a25e4cf35d9f3014eb1e0801a7a48</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7fa8443e8859010cd9ac71e56bdcce1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aabaca842c3b150ac559914e9d98a1ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afe70c6ff549d299d03ac483dd0cf3243</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a104a06808886ef3d0d74f47cee14ae5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>graph_</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af5a61abbca5865799d7da3cd51c53f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a78623e1d56a733b243ca497ff623cbb9</anchor>
      <arglist>(const RCP&lt; const map_type &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a10e39e9a154a9f07165428cb70d06d73</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a865e9061261895ddb4ad16fb9f1d6ce8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a95c634673afe7466f7af7d68babdc33f</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2baf76a74b18540871c8d9e5a4d5604c</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afb669ef49f34b80f9a7df6fbae089777</anchor>
      <arglist>(LocalOrdinal localRow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4b110b8d920a8ba02002aeeb8fab5a3</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad35d1572c078ca490f1e4d69b1be583b</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2f1eef934777c3232f6eb625d685708d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9edb55a98ef8dad137cd9e3d636c92e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adea0b98014c70346cdd10d836add04f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a676e3a15d7beca8223f005d355e2906a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a03cfa32d1937192aaba9e85b748089a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac8cfd0b95f1e88f35d32efc5b004613b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a254e990ed7bc75bb69cf1cd00166ed22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a714d9b91eccc4c0eee463aa3e3375c32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a27364c35237f8ad2360e3b15038caa2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad3774b763d3024132449a55f62ab9f44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a63761b6685931becda1744590fa98a25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae7a4a9c9596a5dab03b708eaaef02d39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7005306318145f5e10f07dede63bee26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3766f7ea2e2568be0dae21d046a40d29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac90a9876b73f71b0a2d68337a56f1689</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad3cf60a0bc9f3c7b13557b84c2bc8f0b</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8403296a39dfb1fd11ab91ae0a6eb487</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc84b9b4ce1efec55bed5c69869a8d56</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a23b4ead4457c653d7d32e2b0c5dee200</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad60fe57a8dda2405480ae80d97bd716f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af9b7637d64bb0f739fc2a93118bb0fc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac260b056ff3c181902970530e0bb0ad9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2768b8c704f7ea2e608f592876553f72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6f31cc51ac8766ad8bd1a0f38ca1fa1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a78e0a6723914f83186dbfbaaebbb12c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a26f8fff556cdd07a453f82523ff57838</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a753ed73ce850382a3deff3f122a4dec5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2381f203ca6ef4cb2dcdc3558f41b98b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9c60d489a6a977eda50a47e7168daa0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a86a1dd0152310db490b63756812e6bfe</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a923e6d26292972c2f0f304779fe9a29f</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac22727007190b04d3017c1c22feebf7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae6e7c700671af0fa6321b5775b30a8c7</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsGraphT</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5798eab8481a618c5d93c19d88f4aa16</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_CrsGraph &gt;</type>
      <name>getEpetra_CrsGraph</name>
      <anchorfile>classXpetra_1_1EpetraCrsGraphT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad2938e21035505d0011cc42b96a2161e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraCrsMatrixT</name>
    <filename>classXpetra_1_1EpetraCrsMatrixT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>CrsMatrix&lt; double, int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a75e7fe615ba4f3f8436ab72b0c5eb700</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aec27131189982845f376b66b58d6112a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aefd8ef985498cf761709cbeaaf3d3890</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a6393be8bdd3331652d1949377d72f410</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ad312c460358e1ebd20076169b2de0000</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a20976df4eac8d9ca964a1b9188a4d0f9</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a2855a0841e41e5b06d5f8eaac5d3e9a1</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a54f13f9050bb6983720c9c9879cfbce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a9ddbb391d28f49a3bd567ebdac2a6fd7</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a6ee7d9d875925b45e972a7d841210f52</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a1c3b30a76bb90469c084555ddc48c69b</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aa5d7d4c6043cd1de965e7e2fd126d370</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a2698a00cad01dc757cedd32a66d6a41b</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a1a47c931c5e3a6a41941e31abe431723</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a21f14c8f6feb0e146a072ea7d62e41e7</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a53594a24f69710b9d3720267918bfcb2</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a12bb57b8c8b11910b6cdff79f0264ec4</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a9a91a8f8b25adaa9d7a01f70027c2236</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a14c75eb9a2be209da2361fd38a058530</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a1bf03577a68fd3967073f1f2a81451b0</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a0ad8e243419e7728052b30baaaecc966</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ae654b97e4035a20dd33457031a2aa006</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>afa55f855e856353416584340533b87ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a4bd9390a6bb13b3bc9d4f56aef10d40b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>af7d962d742b253e9e3141329194b4daa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a332b28719fab7790c0a1fdad62b81c4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aaead15ad64204dba7a953fe12140a520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ae85e65500f9331c0370b9d9f9fcc96c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ae41bca53bfff0d9e12d01503ede03cc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a371877b239236e0a25b20b5b033be151</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a10d0a6a533cad374fd3d62d619a12f53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a3eba2ecf4f9c75a623309c7d454c835a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a80be363110e0e8dac1365c8610b9bf58</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a0170b601a59fa17c1912b584965c3439</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>abe09c7b3f687090ff9404d1afc572f57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a2af73411eb2d333e2feb30af7247183f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a0a13ac87d217619674274b10712597ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ad30dacc1541403785755cf43ffbf28e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a1ed70aee6a839776bf956e6250aed287</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aada61b8ad89178a9dda716a29087e795</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ac6b6c68c0e960afc32bdd914faab2c24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a861b0e2f97b95678110437843af04a0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>abb6ffe233e03e9e4dfbbe4c401939bfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>af693535a4dbdb42069ddb3098053ac7c</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a7c1cf221380c3abb947bf8cf3b98ee7c</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a822698808c75915afde8681d2028953b</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a12634071a014cabfaceb35e60c8a2224</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a2709de7fb3adb39491b6ee6ef589a21e</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a3a952a67ce64b88b316d99e665866ba2</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a022b5aa93abf8bdd7d3a763c956be4db</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a660f63608327231be32a72b80c01b25e</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a92b7a549d70bb533720e4fd64866326f</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a03e16afa44d5cdb83b4a6a41fec4dbc4</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a9c61e4610071383f7a749ea77e85792c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a500baccf1388239165ec1760473c2dac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a496bc5f581b5f2294446c6d31653a455</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aa6b1dd826e99aa1bce96b660a8be31e6</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>afb7afe197991caa1a5f8b0702c621954</anchor>
      <arglist>(const EpetraCrsMatrixT &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>abc339d9135aa0092d7950a160bdf10c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a417f3f3eb79314334be65df2d81dbefd</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a84811d3fd83ebd0c2497656156579b17</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>ab52a86d82db58ff8b9b2cf3873e5e99b</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a95895b1c9b3a0678002b7cc88a941b63</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a849e784b35d7db0a97cff6da25baf7ef</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a301b0e8e19a0358260e3df161f6bd75a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>adf885e0b2bb57123f93a003f76334779</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_CrsMatrix &gt;</type>
      <name>getEpetra_CrsMatrix</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>abb3a86faae03ec92cafb014083a522a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>getEpetra_CrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>aae167b1f40e24cd68bbd1c9b3cc361fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a52720666ead704a3bd730786e3ffebf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>CrsMatrix&lt; double, int, GlobalOrdinal, Node &gt;::scalar_type</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a4419dc83f775fd5566d449dc3e971c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>CrsMatrix&lt; double, int, GlobalOrdinal, Node &gt;::local_ordinal_type</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT.html</anchorfile>
      <anchor>a3542560718beada7bef477234a23aa5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraCrsMatrixT&lt; int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</filename>
    <base>CrsMatrix&lt; double, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1b5d30a0fd7e3b38b581d9d251490c5d</anchor>
      <arglist>(const EpetraCrsMatrixT &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a39be759af03d818011391c1b8fb3f592</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af6d16ae58e3cf9cffd50e9ce63fc4649</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a206a5d24dcd77d1cbc1ab68852802f75</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac22a3ca7ff674b582d1bf1914999ded7</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8785e667c547c99b8503c598fff3fd28</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aef973d67c8b34d689c52e656a13dd982</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab3df774c7c5395652f0c3bf5c98ba26e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0c95c8932c84a28a24f9b84b365da42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>CrsMatrix&lt; double, int, GlobalOrdinal, Node &gt;::scalar_type</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a80b64a40917b8ce0f53151956e0a7f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>CrsMatrix&lt; double, int, GlobalOrdinal, Node &gt;::local_ordinal_type</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3ac4b096cb4eb71e22d80566503ad494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>mtx_</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a72df64cb5a4b487512dd6d97344a00ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isFillResumed_</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3886545b55ca1b19e6f2a9a71faf1efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83c3a9704f8918a53966f26206c1817c</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae60a5b8b0559c3f617396230a093a6de</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5fe7db97f95746204fa1f01f8ec2a7f1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9023e2c1035b068219d39968632d6414</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a962a518206d7a0ba9158336b0d1ec0b1</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3bf2ac97386fac2ad7a3ee08dec9c705</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af40ff8628bea7ebdce87148b55707448</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ade4e5841b8c956754efe0f19ba00d411</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9c65ab90643c244ad68a80d3454a4980</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81bd2b6942ead1986bf5d03a5a13f6e7</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>accf434fb3c797c2ae4ee1a4a96d8c159</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; const Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9f0ac42bb0f4928c2253102df893a955</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices, const ArrayView&lt; const Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab33ef6973d78db83c14a9896a7be306f</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adbfebb901dbab0912a888b1e3d383312</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad95d017fcf0c86a6b590a694c0655383</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a09e5ecd15215a3204fa5d562db3711df</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad59aaf645948809a7bfeacae1affc13b</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a42d9f1a053eaac4b508cd0456b501410</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad979f6cad64ee4d1a9a83617bc71ac02</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a63b8be455bd32b4332b5aa633ea7b18f</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a25f67662218d362537981298cf17dee3</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a56703b8cd822d8a8047b1817850e8ef2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad20ffdcac1b5fc8a72af5ab9e0bbf7cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7505fbb4d865cedebc426d3e26d31b97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa1619551f9ab4040276499131a8b708a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9fdf5194c5528f68c8be1d3c4445d478</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9d13ee345132d72d2445944fc4bc20ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2c1b142485d840f05b2d692140fd0483</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aec2015f2e79fc3ee7d9c33dc94bbdc20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6dc73d9f82945bffe8763be702d92973</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4a1fbc9f0dc79eb420d01e9f5bec9f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa19c937ae9622eba7bea6d7257e212ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a90dcb1b2c062be9289e4855236a579f9</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2593fe56b1d72fe0485c3f0f2b006ccb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4a1fbd6bc681eb799a4d0977ecce53ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab3c9a5dd661a2e9aadbc4a5780a7989c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac51e04149f163075ead87a5bc2002094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a72f0dcf80c1980b098ed637ce730ab1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac50444e11f8ef0296fd3fd738ac3260a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2ace0dae8634dd708e580015b73b1d35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae9a3a6e083cd67f075af0e1190fd13ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9a3a73a42c0841769992add2759067f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a71e41168286ff635dc7e195f01dee099</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a95465e1929760d9f5a61b527b48089bc</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5a39d67eef02553b1c1ee876b60f38a0</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1303f0ac6ff084651dea4b366bdda539</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3928ba1c2380c71ab4d6f1bc8ac0f8f4</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab6a5cc52783d4e325352f0fe6e55a612</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a057f0a7247cc1f1644d805b8dc6da0a8</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acef793f3f2ba3273991b4f163c7427f7</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae4cbd6f5b5abafbe092686ad4eba5c6e</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ace6ab7b135fc7a0a454e2fb1df8be5d8</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a730a4305f72a64fb4a67b6c5d2d6d538</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8007a3006915dc5789c430b35b4c75d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5b59691e74deb0f77770a362225534cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7dcf6be35b5120cbd50a405a357182f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad59d81c86df8a9dda0761702e5f4b935</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa58f930bfc9603db1f4b34abb9eac562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a46d768a6c4f13b7b86bbe5da4a425e3f</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_CrsMatrix &gt;</type>
      <name>getEpetra_CrsMatrix</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeeb85b64ea0cc8500b65174371e7b8aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>getEpetra_CrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2e40abd3c3a939eeb1bc9b58b8cf3a52</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraCrsMatrixT&lt; long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base>CrsMatrix&lt; double, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9b358d69b4a25acb9feb7a27247e0090</anchor>
      <arglist>(const EpetraCrsMatrixT &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ade2b8e225bf8f963dfd437a831f4e62c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad9fcecfa43d9abb379f451a738ddce6e</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4c3b0503d15ff85dbc5931c294a0af21</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4f5e7cf494dbdc669c180cdba2c7a14</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7a851f979214917e494de12b0e82ba55</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa159b7118f198dd2b209e65afa639079</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a08fc6802c54e2a48289af7fb1298b789</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a813a3f641414440284063f2b9ce9d077</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>CrsMatrix&lt; double, int, GlobalOrdinal, Node &gt;::scalar_type</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6aeea629fa4d49a117741e57406941cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>CrsMatrix&lt; double, int, GlobalOrdinal, Node &gt;::local_ordinal_type</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b7a5c9fcdcb0ec5a31bfead3299dd10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>mtx_</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4cca7e4599cbf1f737babc96555c21f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isFillResumed_</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab15573dc60fce12bacabbc84d0dbeae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4c88eecf5a43b249d6b1cb6b412482f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a909b288418b20daee61384a24c016f02</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a98c7e84c45bf3b4b5a4eec106f92ef12</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afaffb320cc9a528a148b9a043a99e53a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2fbde9e07339b7f95f51303db7069749</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aff854046bbb0311abf8024aed2f02de9</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a940a553e6ebf919599debd9c657aa7bf</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aecae4359dbfbc22d44b875ec81a83d2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad2ccb4712f5652e6690a79aff1b709fd</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2c363f0f0788fddf09c6f16b3aa97fc1</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5ccefc08a12e358032bbf927b4f95b7e</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; const Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a41a919bd582493c95e9c854ed9ce8ef0</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices, const ArrayView&lt; const Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a202c97e2665ddf9c2a2d125e4635b2ac</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1aab4c99305be77ee019ee7eea44c962</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adb82e432ed6daf674fd465ff9b461c59</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af7f47b0b736e06a4f195c86e2a072c00</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a581bff8814effd9c126bed320f344eb3</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a852b3d73c601536a979ec4d2894bafdc</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aacc901e9673ebe20b16d36baf53d8860</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abfe3dbe33a14085bc6d6166e9a66dad8</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a476a246c0e34aed5bf06451b5ae558ee</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a43894f6b00a78d8a184f72544af7d6da</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa154498f7e38165a65ecc930817c9235</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab5b6d679edd4d73490cffa3b1ed16418</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af2b1e4540f6eef8784289f3dc7ceaeb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac78d5f7463141dcaab35a8d38a3142f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7fd33fda5f7cd57b89278069f3bd77ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acaaab74604a653ffd8410049d259b194</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4dbb81537450794e02d32a89aef00943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0f0815d2e5708d17be592720decff557</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc419803b69a44707fd8621eb38a6938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>add8d1fd851bcfa8a39b21d53cfa724be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab605f582d6f00afd037c5dcf64d2e8b3</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0254488c7d26df31269f50214c5812c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a23709d261fb2b0899d26c21f9dd1f02a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6f9104b7d2677b65f3cc55d4f09e4aa5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a53ca0be18a6594213f8a103fbf0477d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81e95f7dca9404dc7aa53bbdfb1d16ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae2e43fde481ceee57762f65da30264d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3325f1ea24be0f0d46d8ec277f1647d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af893126a55780858c23094860f1f3fc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0b387cbca35bb0923e47a8a7594acbb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaaa186432794df0b3cfb13fa3cacaa2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaaac2810ccdb38ee95477bd176eeccd4</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6df0458b02bdf52cffdf696534f91bec</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a323e5e8d1b823e638a2b6a9f98ab60c6</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a53c9e5a626fe11735a0b582af7c0fc61</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a12efb633f20d979e84826f9bb40456bf</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5fb5b611d35f2513012f05f860247821</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad2986d64a9b0100d86ceae949bb09cb3</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a05ab43a847c04c8b1cbdecda17bbe296</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0b24862caf9087d60e8d3c0f3112be0b</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac4a36c22f3dab171331063b78021f9d7</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa0ba2c03cff7bf978f836038301b9efc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f8cde980e5162c6e166ebd0bf508f38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa34e6fee71a14823b6c85ade8b57f698</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9a0ae126e9c9359843bf387600296fc5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abcb5f9b83fbd914cc2da5cb65437f86e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraCrsMatrixT</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a77be3b31170fc595b1225a058245f81d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_CrsMatrix &gt;</type>
      <name>getEpetra_CrsMatrix</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4ed2b121960028bbcb2463616bf51698</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>getEpetra_CrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1EpetraCrsMatrixT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a17743bb209f4514a3e779038f838dafd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraExportT</name>
    <filename>classXpetra_1_1EpetraExportT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Export&lt; int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>ae5f3b3da1f460dee77c9d10a2edc90fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>ae8394700b738e465e7b7729d28def162</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>ad3b701844a4a1705281e907bc4d3faf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Epetra_Export &gt;</type>
      <name>export_</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a777a47d34ec645b09eb4b9662ecccd56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraExportT</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a1c628b21832cf1633c0e555bd15f8641</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EpetraExportT</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a10a6ecdf9b0f0a08fa2e8d96f9c9482b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a0f3969cc51593b65e1b0d8e9d3b82224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a2ba96952376c85867682cf98568ff441</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a8c519613bf7891203640c9e231dbc8fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a1dadb0137bcebee81776adeed879dbbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>af598a6ddabf212244231b046fbf91e57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a975cb6344218e80dee8f7c1edac18f94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a474c459565cf96516817efc6ed99f263</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>aef7caa4105c6f5d199c858cff8f2a2c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a2db23a1622ddf46eccac9fef8a5712e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a298c8c6ec0a7ff7bc732a9ce266c6928</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a9d374ecacaea547c21e4824902846003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a5a9d5aed7d06bf31556ccfd4597b91a2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraExportT</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>aa6511deda1b620576edad04b4b2cdd2f</anchor>
      <arglist>(const RCP&lt; const Epetra_Export &gt; &amp;exp)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_Export &gt;</type>
      <name>getEpetra_Export</name>
      <anchorfile>classXpetra_1_1EpetraExportT.html</anchorfile>
      <anchor>a6e053bd7a863b5c095e9269413b59758</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraImportT</name>
    <filename>classXpetra_1_1EpetraImportT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Import&lt; int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a8215920d3193d39287915a734681700f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a918b882036a7a092b3e5356a0808f82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a8f4fbfeefae6a6cb9e8f453937e55386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Epetra_Import &gt;</type>
      <name>import_</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a98cd15d357d53edcab66e1af13ba8a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraImportT</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a9d26c2b38044241813110b751c57364a</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EpetraImportT</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a7efa37957d1f2c126572bcbce2c4b1dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>ab18841ac9d2790aa47b8e451e1d0afc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a24429ffc3963b2718b5e6ed206e8713c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a0b648e120d77e572b24bdd7caa041c15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a1f60073d84b3382abdc80c2576071a3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a73947a50057e38c7184da5a874a572c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>ad735619de8d2b2b0f9016e6df4bf8ad3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemotePIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a1a35a5c897dc1b31c0a0ec46d4fe3df4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a67d89cdc4bdfb93afaa8875fe747566b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a0f83df480c34244f572050980f02c4a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a617d7051485d9de9f77987d008ae08c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a4180ab0991dca0ecb271da3f0f10ee03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a4dd84b3555002e6c9279b8d6e25bc449</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a06af94726d16ba3d0f95fddc462e1482</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraImportT</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>ae1286f4acef3930a08998380b5fcf8e4</anchor>
      <arglist>(const RCP&lt; const Epetra_Import &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Epetra_Import &gt;</type>
      <name>getEpetra_Import</name>
      <anchorfile>classXpetra_1_1EpetraImportT.html</anchorfile>
      <anchor>a8bb11017c1d8bca7c05d6c93f95e7909</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraIntVectorT</name>
    <filename>classXpetra_1_1EpetraIntVectorT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Vector&lt; int, int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="function">
      <type>RCP&lt; Epetra_IntVector &gt;</type>
      <name>getEpetra_IntVector</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ad71c23cf44cda31115758fb19de5b657</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ade7edd27ed7ea9a8103444f057a64395</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a739b0778f0f7c2f0288ea7e9d29bb2d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a4a8818b82301a3ec5541c65184e20680</anchor>
      <arglist>(const DistObject&lt; int, int, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; int, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a237083ba8a3c7cc599f2673a7286e224</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; int, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a2f0de1935b02f33f0d013ae06d577405</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; int, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ac58250ad476599cba4f4ee5aea6a9c29</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; int, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a01f52c21664056302007a3c670642436</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a9e49c51b5210c9c876054b8958f06d15</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ace01f5dc8f58ebb108c7dc160e830435</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a4bd2ca2c48a2d11993706e2402792401</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a9435fc3dfad0ca01fb611fc6a102c7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraIntVectorT</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a25c5cd1c02200f3262b63d947490cb15</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EpetraIntVectorT</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aecac92b7a7ae2e701ec2187ec5ab8d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a5ae140de98477ec00fd0ae1a5ae35ed1</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a90a20c059b891e560e6235dfd9d5e58d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a8c922cddd3690f4596d6fffdf30594d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a33f9a5042e364d98df5d58b33067cb59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a79164bdb43ab77ce61251483ae610c1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a0adcbf457cc3be05febfbae27eb8317c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a21e96227d5ba9b691ad87971e014e445</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; int &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a04c379417cdbcfd9cef3927b22010c37</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a98efa67dd8340c6f27146d408f4c4147</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aeb937b56f0bbd23ae859c53315342ac4</anchor>
      <arglist>(const int &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>adc9c10e01c272a1818b74862687229e6</anchor>
      <arglist>(Teuchos::ArrayView&lt; const int &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>acd0d333c482a936a4a18b2789d28e348</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const int &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ab512c165ad57354a0dda82da055e1820</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const int &amp;beta, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, const int &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a4a229dee53dae4a5aed237c3a2584a71</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a05fb5ebfd1842b8944aca036324cf34b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ab4e220176a9d5e65d334386824fcb6d0</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aadbbbf3da5e25b3c4349011d65c8735d</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a5aded2aee450c13293d1f483cf1af952</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;maxs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a06b1dcae731a3812dd338e865f1ba29f</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, const int &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aafb4df99188ede2621e67a9eff35e20c</anchor>
      <arglist>(int scalarAB, const Vector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, int scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aba1c9a183420790dfe215c44e2cf8f01</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a85053a3df058835ba76cae7014a01639</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>af8b4e2fd8199a8c2297c9b719284a841</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aa8b42a2197259f7b2d18c71b9606e2c7</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a2b08b3b27bc347087fa1f5f114b66907</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a759f23db85e864150d9f807580f4080a</anchor>
      <arglist>(bool bUseXpetraImplementation=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>adf80a052818b86b8835499f6ae38e9f4</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aa94b4b9d947e3b40b2c2c305552dd03d</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aa4487903636d1e8c552c5c7faf60d6d7</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a2798a55fb7a81e7cb3cfafe492861832</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>ace084d9c5922774058be5a5231a88bce</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a53092971fd38221fa62240f895393b9b</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a7f2f32c9dade34095d16900e029af921</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const int &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a80a39ed13762b14fc8f2a98ecb0d7712</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a6e4fcbf38aa0ebc17fdc267285eb9c82</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a3191560a156d2bf2b2f0c866be31bc31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a9e7f5cff0d463cfbbb3ac4cf320eb303</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a0054b520976608aafa55233142152492</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>a3a41dd3a48b171be1109bf61da5d8612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT.html</anchorfile>
      <anchor>aeae0b6b25545c8a512c2ae43ae98f830</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraIntVectorT&lt; int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Vector&lt; int, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type>RCP&lt; Epetra_IntVector &gt;</type>
      <name>getEpetra_IntVector</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abf0dc4382a29933376e6a9bcb7a7dff8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4df04e3af618d5ed881abcf7d3e0612a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa56598b28ffe09852fd0d21ba9421c39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9fe2c61b096c6d9e304041dacff29a43</anchor>
      <arglist>(const DistObject&lt; int, int, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; int, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1b010a8566c043db99120dd178f1679a</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; int, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5872467c488a1cb7b4785817bd034048</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; int, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4953d5f37c85882547e5e2d7252d162</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; int, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2e5a39a7bd3ee2f6d0b3d4d3587e687b</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a46fd561278748844d35b168fd1353390</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af3a9c4de8b7379937e82e52275b5e3b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae3ec5583e0068ecb8e35c954ef3ae908</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae80b5d5ccfb0ee25898dba1db4709a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afff00fc1dc3ebc951a3a93f0b5603236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_IntVector &gt;</type>
      <name>vec_</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6d8efa47f612fdbb316759aa6a4811e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraIntVectorT</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a75e7167e2f56a6cf3e02242a0e30d945</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EpetraIntVectorT</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad006aa53c33c4c4cf19bfd7a1a9cc124</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae0c24369c474d3db030eb5c64173bb22</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a53353571d6892fe51ab56e8372be372e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7c1b8e4d4294b45a7ef029581754a435</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2f10742b268fd9b2ee6ab8e85799bae0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac7cd8153171ec48e75bb4c3e89a2416a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad1c7c0ee3ff7cdd0428cee3059dcc212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8e779579d13bf04f97e874bf6b272378</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; int &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adbbd6860e81010b7375c2626377aec25</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae6c2825e85450fc3c2973772aa24d006</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81a2c8b5fcbcdddb7f5440580f7a20f1</anchor>
      <arglist>(const int &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2770f5237103e9b91601c4a2408edc4a</anchor>
      <arglist>(Teuchos::ArrayView&lt; const int &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaac84e2ee57c37339404ff9dce3ec9e9</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const int &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2f56df745264863010865f7c4c7ba442</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const int &amp;beta, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, const int &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a822128ed64af320e30f6eab044d85605</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a46e0fe3e72aa88fc5ca31f7e511f5458</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a61b884cac20101b50c1ab6ec10e703e2</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a58653b72bc33428f4a55ec44c9ec8162</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac6351b3e2d5698ebc4262c643785742a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;maxs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9773d19c2049e6bc4808ed06f8d8cd1a</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, const int &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a982f2300f6230662d9adb367a4b6d11c</anchor>
      <arglist>(int scalarAB, const Vector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, int scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab092555c523b079fb847f5da53dca624</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a258870db9077a50e6170ac3b2bc40046</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad5fa20ac3aaac00a0047a33892f248c0</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2ba2fa78031e0076cdaa1663b8f58d3</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaa35776074dabbd5954f821a9ca3213f</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a351a5cf03c1585e76e68d72ace91b07e</anchor>
      <arglist>(bool bUseXpetraImplementation=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a790acae5212b55dc70a1e4527c1246af</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6918ecfa0438f0d325b55d026991420d</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b8b5274f06fb646409c8a69ef4bf2de</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afa7519fbeaa601a83769951efc2951e0</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9f9c9b5fb51a14ab4ea606a7afc1931f</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aceaf291418ce76f63e3f12382d9e7bc1</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac5654a9b43862908bbc05bc4da5cfb08</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const int &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8efc393f0c8f0e06197c06588358c47e</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad6e706871c252ef83e5230fe90e85f73</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a964de434f8c6bd62adc113910e090a9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a63e0b83e31ddcfa9e2e70bb9f1a02302</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aca53f07b7fe939f20b3445b9cb6bd7ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad424b859edfbf3b168c66d878f5ab15e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9a25476e5d241398f5b129382dfa1fec</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraIntVectorT&lt; long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Vector&lt; int, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type>RCP&lt; Epetra_IntVector &gt;</type>
      <name>getEpetra_IntVector</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aab86173b8a35ef64d7aed0b9e11ff3a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad6c9733e4b8613110defbde79760fe3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8c6d345169d905be9b887b98a606597a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa6ca036c5c03bf9147c6231bfae56419</anchor>
      <arglist>(const DistObject&lt; int, int, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; int, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aac80ae1a62889233382ed86641da640b</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; int, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0cba2ee3d8240d7896ecf7fcf3a3be50</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; int, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a49c7b0930784c162cfcf01899e464574</anchor>
      <arglist>(const DistObject&lt; int, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; int, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a126a7793a94f7733ab3ec63cf06ad63e</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a62cae2ebd3a65c63015e4f9ef8b9fea9</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac022b6d3f40498fc79eeb17a76589ed7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6b89d6bd38607cddf012e42d84cfcb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abcdd68bb5823601cd73b389313a6f843</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae2f70345b834aaa3fc0bf7a615dad518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_IntVector &gt;</type>
      <name>vec_</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3410ec71bd47caec0edc2020afb57540</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraIntVectorT</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae4ba3cd4389ddbad928f3df702450b7b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EpetraIntVectorT</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa256f9ba110d2e03789016749b48b4dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac11aed29c2701a800eda965cbaaae4d1</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52d5a9a8b31ad89e6856fcd6e73e96f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af3783d8901229e53053a41569c68a512</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3226726f1a64335d80aba7e867fa626d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a395abbfbd0e69bcda9c53b4dad759db2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab08c144be438ac9bcc1116e966eaf681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab94bd15e59c2f847313d71a6e1050ee8</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; int &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa2fcd55726017bfd230b3ac47f0d8b9b</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5fc3b579fa46452dc39fc7b7d90fe6b8</anchor>
      <arglist>(const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab3d704c830ea33fead43e718ed44f44b</anchor>
      <arglist>(const int &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2df8db5644bca254b129c7f5fa9cc526</anchor>
      <arglist>(Teuchos::ArrayView&lt; const int &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a052af3d4d276ec07c8d1979332b27e48</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const int &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3dd037d462f35cbe98ae832c6122f030</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const int &amp;beta, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, const int &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab6342f1b9662f92083534afcd55d6af8</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5fcf08871cc6aa23d176491b6a65091e</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a16e1e00e4b8b79bc03c40719ae1c8dfc</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1d2286cf7eefde735fc52cd6c833d360</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>maxValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab223f1df01824e04647187931c6c1169</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;maxs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83c78d4b5be0da559cb19e2f8d059ee5</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const int &amp;alpha, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, const int &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7368a269117e47eb05343b440e795744</anchor>
      <arglist>(int scalarAB, const Vector&lt; int, int, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, GlobalOrdinal, Node &gt; &amp;B, int scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7c987c58e060ec0bfa9a3594fdb5ad9e</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8d57ed0788a55eaff5ad6830cb791c8c</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a191271608ac84108d7043d27c6390352</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a221f9babb9bab98340df91f6b050dbaa</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a677b08a98c6ee0f8889e03dad2365b72</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6b036f79ffd09e773e4cb6f4511ce49e</anchor>
      <arglist>(bool bUseXpetraImplementation=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a225438a1b8fefd147f42c19cc855e180</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af7d09e9528ae180582a53d6932aaf7d4</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a099a9fd0d305efb311bede56ef78d43f</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0681209992ce2fccfd9a94a322d52e36</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a98e4c79d92bd0f80844db19384023e0f</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8d4d8071493439a317fb79c96455c4e3</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab9870d6a0ab065693e77081d1a2c9652</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const int &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a56f44021a052493cdfb5d7d7204c23df</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aed9d855576a710f2c4515c54d67aa2db</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaf179ca8ca61f15144f4d24db4411c65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac8c58ad6f08fd23ad2976010e62c3943</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af784681c825621a3a67c0643c1b0e554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7ad8b9956fb7433b430802ac054b438f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraIntVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0ffcee24ac2083b30aba01864fed0995</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraMapT</name>
    <filename>classXpetra_1_1EpetraMapT.html</filename>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base virtualness="virtual">Map&lt; int, GlobalOrdinal, Node &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a05628b70212e81119f29a78eb13aabe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>afdcadbe2a39a440d63a6848b7c6da9f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a0cc64d8401f94c52c8f99d215c858115</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a62f7ffdbdebc176a92dd78184c02fb38</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a89dfb7c73d60aa957626fd89ee5d1cef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a826592f497974a2cd4fd121f74953829</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>abca7fcbc95fab8b580226cd671a990ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>acd52f664e6d37ea17e60fe7e883f227d</anchor>
      <arglist>(global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>acb2f94bec343e39721cb046d7512597e</anchor>
      <arglist>(global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a477fd912b78d8fbe67a2ce8ad345d7ee</anchor>
      <arglist>(global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a9541b382700a383b61536f525635e349</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a0876e8644c05190edb82d8701ef41f07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a299457b62938cc5d251cb63cf8482e52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a0ba9af7f5e94a4b8f273b6cb39ba7d8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>aaa26d966a1a4fe4c3f929a20f2adf7f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>abb1e688287d312563fa584436012f721</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a0356ea0a7bcb5daf927b226581c5e909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>aa8e162e1eedc0a857713f1ddd203f1fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>ae311f5ece213add13bcea01d872a997b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>afc27c40f53bb2c1f5168abde43b6aa36</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a697fcbde4146f0db55b1be6c33d2c958</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a52ef1c9d0376ba1e84b7731c9f42b512</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a8fd5f6812ddc77a3e2dcc15f4624a97f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a9c1d84f191bf3fe1a7a57f5aa9f9a952</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a32e530fbd44a4b282f5b05c490d8edbf</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a332b73bacba67524dc481ee8ac9b237d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>ae6259f48ac81f6f20d2eb25feaf7bc7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a9a03f7f310591887358978f40a9a9a6f</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a2f329e9d1456e99c5bef545faccb4578</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>ac63fd5bf2dbb92267af9f3bc7599e5dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a60a53ea6c4cb635f2101db794cfa6d9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a6d6ef22b6667acdeb2406bd49e0aa2b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a4a9324aa86ec6da2ca636216eef1fbf7</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a8de80f95c99db87a69283fe55c737cb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>ae6862eea42fcd478a0bc72b8aecf4ce5</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a3b102e5cc92b4ca48972203ea9c00dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a90c8fc4083f4347ce66d9d62ec3e4c24</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>aeef529925750835b272ded28792b661c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_BlockMap &amp;</type>
      <name>getEpetra_BlockMap</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>a3f5e43294947278a70dbf93b2fef24a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>getEpetra_Map</name>
      <anchorfile>classXpetra_1_1EpetraMapT.html</anchorfile>
      <anchor>af9374ca3b4e75b71c95a0d43b1f9e135</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraMapT&lt; int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Map&lt; int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a748318e2143d64a62627ba948bb9c65c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2a687a06dd1b2f845c429fa1803f98ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2840ebc68d2b445ebc14302d8a4386cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b56fb0ca647aadbc8742e897eeb6686</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad7b21832fd2a0b26a445f5708869fcd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7c1cb564522ec7f533433db431cde705</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9bb4e0c43ce1ff9bfa6bb9e05632812a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a85375f29585a7a9912e55b962a4358e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aada3feabbc4b684e01601971e3393d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afbc6db2ab7e1b786c8baab9f1fc26342</anchor>
      <arglist>(global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a08a99ae7ecb462c85d42a6f78d16926d</anchor>
      <arglist>(global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6f899ae56c35372a4be34485c25951c3</anchor>
      <arglist>(global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae3e6db3cb31747635f4355afc9c1429a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab2712c6997269ea42c129b3a85bc0d38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a176aa49f76735637b326ed7dc1ee7e29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a80329fdb522a96dc867666fe8cf9ad74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83006fe99aa583f00af7d34229ef3dc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa3eff62ec71f1d74ebdda91c71504e89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab4c8c3561368bf25403aa2821794bbd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaa9c39ff992e310c7878bb6068ca5132</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6cd3c403da545a2ee112572f4c73448c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae2c7884a45a06810f2803edeef616b0d</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9908464d7283d2320ed9eadfae657279</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2ed5aea48796f61ae63547e9f0ccf362</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a07f17e7c57ddb1403f3e3e03d74b6caf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7385429f661f67ba7a59a1ca89658198</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a860039e7f347dd874407ed86cf758ec6</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aea18ed0e86cb840126121f639bb85acd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a64668a5ae3cfe28d6084c5fafa9ca45c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f291f0b431615abd7c2da904612db29</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>accb1da2af5c756ee38f3b89dda28652a</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af0f649d1b4cd49540c77ea16a97551b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7ec2a02ab7d5434d19365769df401ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b7d9104dee94b257b48c9b47ad75785</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adae221d4e8a8ee13941a4bb94f31d838</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1287e9a5d957abe01ec79541018018ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b7a1c025fb9ae2d073157da0831e27f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afe508c34bb2e0677599b04c42d1e0e5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7cbe28e3adb96df6ae9fdb22152e9338</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aabeb73ae5e6ca2f6568a959b15fb8559</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_BlockMap &amp;</type>
      <name>getEpetra_BlockMap</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aabde84c52afd687ebe4b6a5b2cbd9e70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>getEpetra_Map</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acea449879cfcdc1a4de2464b2c52325a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraMapT&lt; long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Map&lt; int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a358a506f4d5aab2a7483b9322b0a9a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab148f6978b23c5243c0e5d35d0820f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa0dab21259042dd19e94fba83a35bcb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adb4fdb010a2da49b5c9a9232f0e89815</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab03d60711e109f94b8b773bcc6c79f1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a43a3f05f3fa811efc618f24e2b309162</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a33ed7af522e11112f3c5ce173e159b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b8cf6abd12c6c82370779095a2e6a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4c6d73b45683a749224f03c29fabdeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a57b12114185f337481fb235d6e42a0be</anchor>
      <arglist>(global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a02c372fb21b0c197c8d33f0b468044b0</anchor>
      <arglist>(global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0f1640112e9b7e0bbb65b47e2e631120</anchor>
      <arglist>(global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee6f4c3aff5a902890d0f7faa6613953</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab77007c8ae762aa3cd98f148927ea1fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeb1e38476d01548ea2af6217bd4a974b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a20ec4e7202fa72191c7fc7d37842100c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae8e895f0c12a397881679f0905c84f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a44c49663167ee56bf5cda5f5ca8af015</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a70969e719f53a858f1298b6979566f31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a24c47122152bd6cb8ca47eb2384cad66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3f9aa9488632a309a3749ce6aa88ec72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab94ab1b358a91c1c8b7e53b910e82397</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a118528c5f28dbd9c2013bdbb19ac22ae</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a644a1c642445278c68682e11a59b13a6</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aab7df9c1b7a6522574c51821399f837c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa317a3320a37b3ddd843a9b136a1f7ec</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6659f0eefa42b200aa930e3907ae290f</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a989f98077a2955fdd8782c92301dc881</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9a2b1807d2b4ed598b48f798a3ea5860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a82c7e18d1a346533ed711fad787df660</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a86adf79db91531d8e9c0b7a02b0d2614</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7b9d35c8de969fcd6a6f496e998484c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adfbfe2c98188431cd7c231035533941a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a79f232bb0778120c198c381034532799</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a08dc1ef16ee7a011d4bf48afd7525bca</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8897f72fef209ca4c8b57f97c6d6644f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9e493280154d184e75faa4cfa92432cf</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa2e3dca83a93fda3554b9070029d5ab5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMapT</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a28fa43bf67f315a508d54a594278ec65</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9c754895c938f3ff951d37d12d07df29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_BlockMap &amp;</type>
      <name>getEpetra_BlockMap</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aff6e5496561e745b273b71fcf241b31f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>getEpetra_Map</name>
      <anchorfile>classXpetra_1_1EpetraMapT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2fc762a01a79038fa97284d101747f1c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraMultiVectorT</name>
    <filename>classXpetra_1_1EpetraMultiVectorT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>add25e227f63af08aff528dd557ab5eb2</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a67928c917dd207ad2403463f9e5b3da8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ac46ecac6cfafc5c4f07c520871f4ac37</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a2ddcc41e80a06911a82194459f5c0002</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a0cf48771466bdd229a9499c8dea3fc01</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a2a3083461c3973c142423b96576cc64f</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a7e2574a4e1acb1eb6d804cd43926a4ba</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a5407cb9f0face5afeceaff3f520c9fbc</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ab0e94c522f3ae6ce89f1a3b65d723a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a71e1394d428b844787b03ddcd47fec70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a46c3acec785cbb32d0bdc14c4cfdf864</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>aad7a4805b9a4dbdd92f7ed220d8ceefd</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a0fcaf9a08a0b5beb0d8ead6905c99384</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ac19941652dd94e9e8456206365fd4dd3</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ad515463da284ed584b535b93d36b3587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>aeb2c041aebb0cebe5b72602b490e0340</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a731fff8ac245380af8a6fa1cd72d70c1</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ad2870023cda35e01d3d5904dd3e2f59a</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>afa943caa371a857db7953c1d0dc4fd77</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a52aba855488d6124f0c9589d70626501</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; double, int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ac5efd5f372ddb982e6613206b6e4ecc0</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; double, int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a7075f8a5c08b7f6f8915ece18cedef5f</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a178dcbbc34ea9b7e1c8f36e62c53e9df</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>af6c8b06c529f80e186bdf0acad10d3e0</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a1b2fffbc04d26388f5613e76fe00d403</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a78aaa86b0bf3abb694ccdb11088224eb</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>abf67f806b5f9a03fb994b0ffcf54110a</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>abeed2f6383830b6dfa16a26a74b77fc7</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>aa060a2881c1ef7434569a077476ddf04</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ac6215e84dbddd83f812ff86a325e4ad4</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a7740ce7686c371f3ad4104fda8a3958c</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ae08eaa7c058973bc340eea87b0703112</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>aca1c6ebb01c06b699aa4edb8c47ba96f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a6e302cdfaf8b92975fa89170537e84a7</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a6f56b81a961a3a93d6151f80ba340bf3</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a0421ae43dae1f81374d7ad0121eab1e2</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a82321d37cd3ed00fc36df539e3343d55</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a5563e9f0e8fe9759af00d8ebb35493ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>aac8ae66b7ed0c5c9026152cdd0dfc267</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a05bebb73d9df736590b00d45a877c49e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ae47175dc1fc0d0e0c47a953bce367895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>ad04147999e997efe88561016f7daf9b9</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>abdcc3263f9baeccbda913bbc5a74fed1</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_MultiVector &gt;</type>
      <name>getEpetra_MultiVector</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a3e0dbdec717e28f549c6e172f4277001</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT.html</anchorfile>
      <anchor>a670981d7471b34a54926b1e36730fbb4</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraMultiVectorT&lt; int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">MultiVector&lt; double, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a371e530943bdcbe99e414fbc0d1f0cc9</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a37a77710fe1b19f665282ef8ed1805ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a960f12bc9c4464773b50540f09520623</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ada4ec45d422dffd37636a32352d2ef2d</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0049de99d5061a4e5d0c67e44bdf68cf</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad78961cdc2746acf2b1aa9d29dd20eb9</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a189f21a48d596d8090fc6c82449cbdce</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae4c8e871c0ba24b2d5e6af550148e0b3</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a91b63b01916344b24d84dbbc191a8866</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a074b1db83d73b761e7a1bab8011face1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4d846996d9f29c45d710c198bd10ec24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acf97298f63ba46c1e9f5b5ba38f595ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_MultiVector &gt;</type>
      <name>vec_</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a966eeef7b6da5d9b15da3b4dd7b7d4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acef2515b25eea9069421d86393009bd2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afcd0d201dea4843231e4f5cb6a13c517</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa88f6c9b7d8e90de1e181a3d97b68783</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a42402e97ff58ff00b2b1097d278084de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a08443183b324963314a34a258636cd54</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0e45e83a2655a6da186c793b7643a97c</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5d9ca913f1378286b3697441fd1f5094</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3cc3dee3baa558bf97871a06bb4a2f5a</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7a383275bb334e8ec9f0587426bf3072</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; double, int, int, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a632918f9a5d66c7fc56778aa4829c472</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; double, int, int, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a99e5b0ff906122cab119e92ba4527914</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a222383a367de2d95a058d4d74583a036</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0a66575bfab89cdcb24553cd853fa580</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee1a92267ff88aeafc5a0fd42bfd8459</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3c64978cf2508a3cf805b0cb3dff5f79</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b4fd5bd10337d42b0534917e2e5c9ea</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7f13d63d1bae7270dc5a264d455d67fb</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aecbf22a2b7e7b514bb8f20ad5bfad43c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a927979603ade9eadba307e94d62c07a9</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5ce6caba96d69f89a72bc1b27e154764</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abb4021b3e9a67ef902aab8396132aeef</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4bb1691ee1894ed86f515bbca3a57df4</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af4ff63177031b5e5f6cf258e194f6fe2</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a49ea55833a096bf398dbfff132090524</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a06fee3a673a888e7c6c6ec3b43b224e7</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9087ce0b09f79a880bbd597df22dfac4</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a85abecf714c10c381fd8b073f0133fc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a682b055c7d88591536e4703d525212ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2bcc95868957763ad8da2fcd317d2b9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afca4dbe8de3f5ca587745c64f7c45af6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8150bc92b8479db8194d0c3a5c2763a8</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ade87715aed42fa6d871bd094dde382d1</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_MultiVector &gt;</type>
      <name>getEpetra_MultiVector</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0ce5892bfac6689a294a1a3df3fd99ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4af0a0aa05c3efeab24f6ab5bacdf1c6</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraMultiVectorT&lt; long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">MultiVector&lt; double, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abe17483b61c51cc0db8ff1e055ef0c42</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa848d091caec07c8abf1b78744022e97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa25f754c3f4ad701b3dd4e3d24c007d0</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7d08a78e84f3d53b0357531f35e0e6b2</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae5e81180b4a307990a27cc5938faa579</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad2d958b7cec8c576da706e664a9db5fb</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad9c6d943623a74fd6c37a22b3afa2107</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a62e45465e585cd4cfb637bf98134377e</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3ecdb7ec5175a8486562d1a580e90b25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a414dbe32c44c18589bda16b538d7cd70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9843904c6427873df69582487985e5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a361696badea61e6ba1f472f3ad6cc60e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_MultiVector &gt;</type>
      <name>vec_</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a70e3ca843f689c7205cb0f4a815c241d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2224bcb6dc770919ee3ccd4664ae3a3e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a85f3c652683e5d734d5cea11010a7817</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4aa6c5b1466861c2883c4f412d03caf3</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae16db7178ff4e8f14ad765d88b56ad13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4d0267fc75c5dc1bc2b24d1ba919e5e7</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6e701c537a2da9474d2f7c7695023f58</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a92eedea94a75582f5315e33b10dca6aa</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab50427b9f787c003d350a162de545462</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4c4f913dbf6b5cea298e5d134715dda0</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; double, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0df07c74f1297c9e241467544ac79ec2</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; double, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a596c018f4f4b5b003074a997b194df56</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a80ca201d12b83e591a0e90cbf46caf12</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3449c00232bef3bb8182e1cf056e20b5</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae4bf7fd62d06aa0bcc7b81a89da3faea</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad50a4f2f0e0e77ca87c887786330e895</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a61dd0042cf469af9642d422b254ed230</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4fb790e154a35e488f70eaf2e210c7aa</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6261511b34188a1ff7938c18a1b29fe5</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>add1e9ceee442afce621eea78e506ebd4</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a62decb3176b55361cacc7aa07faa0b00</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a385e9c1d3b31b293c797bc9d07f52491</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>addf5300f40a8fbc785200be19417f24e</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aab049a5541a72a8d302c902d34b39c1f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6385a52051dfa3083e141aaf405dbcfc</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a857a35c41123de4b223bf234ae54a57b</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a37f27fbc5cae0cb2dcae3e9cb04b716d</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8db84577257074ad1a7bff564eea8962</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abef21da50c79d831403350d98a91025d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af0bc6a22e3698b57645ade18c5f4b3f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2647a454a9648f0e977d40c9184e5211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc142183da376d8a716c64e5cff4695c</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorT</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a15ba187e2339dfac827fdbaa56de84fe</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_MultiVector &gt;</type>
      <name>getEpetra_MultiVector</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a187189c827246d6cb104a0f8d7600412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1EpetraMultiVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abb70ad939f551dbbbf6f8fad96ca2d4e</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraOperator</name>
    <filename>classXpetra_1_1EpetraOperator.html</filename>
    <templarg></templarg>
    <base>Operator&lt; double, int, EpetraGlobalOrdinal &gt;</base>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a7a900d2477a559ccdb4d459dee9eafa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a2e9c661d6d678cee4f75ca6544e17381</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>abb4c25c7f14d29a7c5062cbc98eb8e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Operator&lt; double, int, GlobalOrdinal &gt;::node_type</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a8d5535db3263f562f635a1bea72cc40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_Operator &gt;</type>
      <name>op_</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a5589f411a2df384c41b87ef86070f6fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>ac8eed5a3d50e511fddc0156629889df9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a5d3b161b6cb421aa0c25a8c9d5c8ca09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>abadd299531a1f5fc6fd596422e01bc24</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a58bc628e00a8ee2416ed2d6432ab43d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a0cfdc998bb37d7da6e72a2d3f8412a1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>a842a1a0a687ab643b9b6503263e94a1a</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraOperator</name>
      <anchorfile>classXpetra_1_1EpetraOperator.html</anchorfile>
      <anchor>ac444345665c154ec9f0d522b5efd0d4b</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraOperatorT</name>
    <filename>classXpetra_1_1EpetraOperatorT.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraVectorT</name>
    <filename>classXpetra_1_1EpetraVectorT.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt;</base>
    <base>Xpetra::EpetraMultiVectorT</base>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a10c2460d46889c4aefeec3366aaba611</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a621dea2563dca69c0f174b76d136ef2b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a2e76f06369406248ad9e20e493150410</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a396f359e76308d0f3652506b1ae941fa</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a146572e45e7e0614a9e433d3cd837a8f</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a182b0cb2ce1b73d4d42519f62bc0b041</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a5d62c9001c9385bebffb0715a3560b05</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>aca22ace062656c98bc4b4fd3947f550b</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a207a854d9d6669a26a1aa7bea37bd7b5</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a3f17d8b3e877549b6734613744589f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>acc68553d85a1f900b37bb39287901c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraGlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a352dbdb37f829d6e89c2130a4e6e780e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>internalRefToBaseMV_</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>ade39d595e31e7cb527ee2fe4925c0413</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>af67104a2f931b7de1a66db678a6f21c5</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>afe5b72462e701912b945bef958feb47a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a5454656e0b6c437362f0a09fd613424b</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a9a569cc6ed932e9c5f63e008ed9c14dc</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>aeee7f713905354d7790886e6cf09a387</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a8e3bc402354d6288d20bd3fb837309b0</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a7dc6b5bf2d518ebc13a9578a88ec4dbf</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a55640dc253bd4ad40335e04257ff8105</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a640c33ba14876ab9919c58a7761e234f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a9f9f034809358b711d99b407f147fc34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a5b6924c49a81c72f70d061b248fc6962</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>af8d0d97246cab7d1e3204135210da409</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>aa846f058af948407be2653bebabf1df9</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>a672dd37bab6f0896c51d697eef8bb1c0</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Vector *</type>
      <name>getEpetra_Vector</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>ab4ec4c9c5b7d839713998fe166250eda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT.html</anchorfile>
      <anchor>aaef140990e6f7717da514753b8c76683</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;mv, size_t j)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraVectorT&lt; int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Vector&lt; double, int, int, EpetraNode &gt;</base>
    <base>Xpetra::EpetraMultiVectorT&lt; int, EpetraNode &gt;</base>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afd3d274bffd51118cac55102709025b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9940102852b5e52e009fbab8b4354c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a746a03e08bd5e094321d59a68e309dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afeb5d4819d5d5492ff0a2f448be7202b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>internalRefToBaseMV_</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>addd1a9a9bef235e98d1cd29311272e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae8072188a0aae51713c79c0b81734805</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adf9c049fc441168595fb0fc15a031d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a490a7f41bce42a00b30950dd28763b13</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0be6d1e691dc2fbc3a6b8515ae95bde7</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7f48e3fb0d59c7dfa54fc27364f55d94</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad6c7fe43934a6d48770d923772a13a15</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a63610afca4a75cc0ecbee69c75177a10</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acaa323fda51320c04a3714298c605fe8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adeddfb0c3ab4abe73664ee16a7edd9d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab0b2a1d9cf1a9181d6f02d463f42f0c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a92f120f6bcfff09233f40b2e84e89fc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aecfc484f63f23c74c576de0caa4a1c0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a40b1f2ad394bc61e2446531319cdadd0</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae15df67bfbc90445fab98e34b92ab863</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Vector *</type>
      <name>getEpetra_Vector</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4c06ae2c25534bc9ebd4a925473ecfb0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aff2db4281c05d19e68e87d5591c6d28f</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;mv, size_t j)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::EpetraVectorT&lt; long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Vector&lt; double, int, long long, EpetraNode &gt;</base>
    <base>Xpetra::EpetraMultiVectorT&lt; long long, EpetraNode &gt;</base>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5c7b9119e5216eac1697a5c244981ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6936edb51a758ed7e8e02062966cac46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac8947c032d5358f3c8be627ff9dd307f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad6e35c6d0f3808527d77200204697762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>internalRefToBaseMV_</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3535b9774ac7b44ef45bfac18db7d042</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a409a649d94fd4c735581b8f7b2069c93</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad25a66fa43e37587ce5fa723286bc0a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a91112af498443c728f13dda439a8f93f</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a55ce5c76d30936710f082b2fdae8aeb1</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a352826f98eff84ee72727fe7c97f301b</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a07606b114cfbfaa29ec3e152edc9be24</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5b139e48612a6bb0113d31bd36f105f8</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeed24e41e2e6d8abfefd73406245b650</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6e67d30fbc6c11c0e27d27a2e30d2469</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a894a819d22fa5d9be750d5cdb3e3362c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1856cd89d90a493da8bbe7aa9689251e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa9c6964ae3cbc26052c5b3f50664d73d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f9977383688af7ab25a87b7cc0e17d4</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae4d95d009ecb73804e2469ecc3948c9d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Vector *</type>
      <name>getEpetra_Vector</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af6c6a515854f3b8fdb305a2f206d68ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorT</name>
      <anchorfile>classXpetra_1_1EpetraVectorT_3_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0cae68f753965066f87205e11763e2a7</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;mv, size_t j)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Export</name>
    <filename>classXpetra_1_1Export.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>abb70084aabf87a52cc1f053ab6b87819</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19abe7cc9e021b20a9d0445a1127e50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a4dcdbd9ad6d9e4b7db01f8f2b9e377c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Export</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a995f5190a5aec277cb94e978e8ee9e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a9c6b854a2aa7d9966d32da5fd2300aba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a18a91d9610475bb77757f34c6096af42</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19ac8120c2ac20a8e273035958f3b4eb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a3869f8ededac5bfedc7d267f12476b09</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>acbe08cc39438749d432faad2f39209a3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a8ea363575044b007f52d1f1487c88635</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a60b7be079a06f4754999201b74ac2ff6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adeee407a2f47712942b3f684cfa6b410</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a622e049492b439e81ffc031353bc879e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adcc49f8f47f74853d1ec8991e2014dfe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a5425a076d30130fe059b1f992c370720</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a891e8ba29513f4d20448c75aebbb2cee</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Export&lt; int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1Export.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>abb70084aabf87a52cc1f053ab6b87819</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19abe7cc9e021b20a9d0445a1127e50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a4dcdbd9ad6d9e4b7db01f8f2b9e377c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Export</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a995f5190a5aec277cb94e978e8ee9e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a9c6b854a2aa7d9966d32da5fd2300aba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a18a91d9610475bb77757f34c6096af42</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19ac8120c2ac20a8e273035958f3b4eb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a3869f8ededac5bfedc7d267f12476b09</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>acbe08cc39438749d432faad2f39209a3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a8ea363575044b007f52d1f1487c88635</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a60b7be079a06f4754999201b74ac2ff6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adeee407a2f47712942b3f684cfa6b410</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a622e049492b439e81ffc031353bc879e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adcc49f8f47f74853d1ec8991e2014dfe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a5425a076d30130fe059b1f992c370720</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a891e8ba29513f4d20448c75aebbb2cee</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Export&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Export.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>abb70084aabf87a52cc1f053ab6b87819</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19abe7cc9e021b20a9d0445a1127e50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a4dcdbd9ad6d9e4b7db01f8f2b9e377c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Export</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a995f5190a5aec277cb94e978e8ee9e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a9c6b854a2aa7d9966d32da5fd2300aba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a18a91d9610475bb77757f34c6096af42</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19ac8120c2ac20a8e273035958f3b4eb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a3869f8ededac5bfedc7d267f12476b09</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>acbe08cc39438749d432faad2f39209a3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a8ea363575044b007f52d1f1487c88635</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a60b7be079a06f4754999201b74ac2ff6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adeee407a2f47712942b3f684cfa6b410</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a622e049492b439e81ffc031353bc879e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adcc49f8f47f74853d1ec8991e2014dfe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a5425a076d30130fe059b1f992c370720</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a891e8ba29513f4d20448c75aebbb2cee</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Export&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Export.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>abb70084aabf87a52cc1f053ab6b87819</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19abe7cc9e021b20a9d0445a1127e50f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a4dcdbd9ad6d9e4b7db01f8f2b9e377c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Export</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a995f5190a5aec277cb94e978e8ee9e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a9c6b854a2aa7d9966d32da5fd2300aba</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a18a91d9610475bb77757f34c6096af42</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a19ac8120c2ac20a8e273035958f3b4eb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a3869f8ededac5bfedc7d267f12476b09</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>acbe08cc39438749d432faad2f39209a3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a8ea363575044b007f52d1f1487c88635</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a60b7be079a06f4754999201b74ac2ff6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adeee407a2f47712942b3f684cfa6b410</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a622e049492b439e81ffc031353bc879e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>adcc49f8f47f74853d1ec8991e2014dfe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a5425a076d30130fe059b1f992c370720</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Export.html</anchorfile>
      <anchor>a891e8ba29513f4d20448c75aebbb2cee</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ExportFactory</name>
    <filename>classXpetra_1_1ExportFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1ExportFactory.html</anchorfile>
      <anchor>a5e1948049376415522272f39bcde21e8</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;source, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;target)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ExportFactory</name>
      <anchorfile>classXpetra_1_1ExportFactory.html</anchorfile>
      <anchor>a894b88ac00e53817d5661c9dddb9b38f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ExportFactory&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1ExportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6683fb72cfc36bb5bac2672e4ec9414c</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;source, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;target)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a35e5c37ddb51fcf9e26abfd2c57dc85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4572233f4dacd31e2aae75dd9c00519f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a85bd02e6b8de0467057337996fe5b5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ExportFactory</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aff6ab95159e79dc5751bb578cbe4ac7e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ExportFactory&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1ExportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9784e9429686a572f86d31c5b68abeb1</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;source, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;target)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3029b3397aaa272a5326d05e35890f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1df883944e599376ebae8c6545942d0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aefc50b7f86a9445bc683dbcf4b39793c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ExportFactory</name>
      <anchorfile>classXpetra_1_1ExportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b5da8611b2251f7c07c783b993ea186</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::firstArg</name>
    <filename>classXpetra_1_1firstArg.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Arg1</type>
      <name>first_argument_type</name>
      <anchorfile>classXpetra_1_1firstArg.html</anchorfile>
      <anchor>ae521d015c3dcfd1549fff3c841d8a9ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Arg2</type>
      <name>second_argument_type</name>
      <anchorfile>classXpetra_1_1firstArg.html</anchorfile>
      <anchor>a27aad70d70d41c4697039fb9f8c980c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Arg1</type>
      <name>result_type</name>
      <anchorfile>classXpetra_1_1firstArg.html</anchorfile>
      <anchor>a8f6015dcddaa90b3b118e5799c357a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Arg1</type>
      <name>operator()</name>
      <anchorfile>classXpetra_1_1firstArg.html</anchorfile>
      <anchor>a210b55b4cc447b90294c8b5ee006564a</anchor>
      <arglist>(const Arg1 &amp;arg1, const Arg2 &amp;arg2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Helpers</name>
    <filename>classXpetra_1_1Helpers.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Epetra_CrsMatrix &gt;</type>
      <name>Op2EpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>a3ba20662d2871ea0e8817778e65251a3</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>Op2NonConstEpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>ad5de5cafe74ede39e66f91f1320ce617</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_CrsMatrix &amp;</type>
      <name>Op2EpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>a1b3be775e6fe66f20b256331a93d130a</anchor>
      <arglist>(const Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Epetra_CrsMatrix &amp;</type>
      <name>Op2NonConstEpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>aac5e59354c2104fd8acab66da538bf04</anchor>
      <arglist>(const Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Op2TpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>a6b40025c4ecbdbe53646bbfb69f1a516</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Op2NonConstTpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>ac240b31ca5282fc3a7e2dc07990a6f7c</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &amp;</type>
      <name>Op2TpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>a450551b513543fca3f0f90d50831e24a</anchor>
      <arglist>(const Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &amp;</type>
      <name>Op2NonConstTpetraCrs</name>
      <anchorfile>classXpetra_1_1Helpers.html</anchorfile>
      <anchor>a28c802c1d0ed52bd2ef9b564f9bffbdd</anchor>
      <arglist>(const Matrix &amp;Op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Import</name>
    <filename>classXpetra_1_1Import.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ade3fa8407b3257756e2323d7fb6d8bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa05a23ea986230d4a895644c389273aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac9b3c09273af80b8bf4fe1e36644be66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Import</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a968f90a9b8f4779c4eb6330e6cfddbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a1472039fa73a433ca3e24ce484a59e70</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae81522243dd17e882cfb0aae80dcc131</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a149a082a8f15a74a4d6b918d087040be</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ad6b4e5ceab90daad338c5aa14a27c834</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a54c93860a36205b6d18b3332698d97f4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a57fbe101523a1c11100f9d81a4924c82</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>acedc0c85b424d3883a8ef52105e0762b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac3027f1df5b762e9be986e12949deb2f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aaa06dac1787f4df191c52257235a7252</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae3109f563df6a5f348d587e6027dd3ff</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa32c73e166ed19a21b7beae4108c2989</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a17172969244b309d2c1a11f8b53e5c99</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Import&lt; int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1Import.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ade3fa8407b3257756e2323d7fb6d8bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa05a23ea986230d4a895644c389273aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac9b3c09273af80b8bf4fe1e36644be66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Import</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a968f90a9b8f4779c4eb6330e6cfddbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a1472039fa73a433ca3e24ce484a59e70</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae81522243dd17e882cfb0aae80dcc131</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a149a082a8f15a74a4d6b918d087040be</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ad6b4e5ceab90daad338c5aa14a27c834</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a54c93860a36205b6d18b3332698d97f4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a57fbe101523a1c11100f9d81a4924c82</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>acedc0c85b424d3883a8ef52105e0762b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac3027f1df5b762e9be986e12949deb2f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aaa06dac1787f4df191c52257235a7252</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae3109f563df6a5f348d587e6027dd3ff</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa32c73e166ed19a21b7beae4108c2989</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a17172969244b309d2c1a11f8b53e5c99</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Import&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Import.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ade3fa8407b3257756e2323d7fb6d8bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa05a23ea986230d4a895644c389273aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac9b3c09273af80b8bf4fe1e36644be66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Import</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a968f90a9b8f4779c4eb6330e6cfddbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a1472039fa73a433ca3e24ce484a59e70</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae81522243dd17e882cfb0aae80dcc131</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a149a082a8f15a74a4d6b918d087040be</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ad6b4e5ceab90daad338c5aa14a27c834</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a54c93860a36205b6d18b3332698d97f4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a57fbe101523a1c11100f9d81a4924c82</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>acedc0c85b424d3883a8ef52105e0762b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac3027f1df5b762e9be986e12949deb2f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aaa06dac1787f4df191c52257235a7252</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae3109f563df6a5f348d587e6027dd3ff</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa32c73e166ed19a21b7beae4108c2989</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a17172969244b309d2c1a11f8b53e5c99</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Import&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Import.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ade3fa8407b3257756e2323d7fb6d8bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa05a23ea986230d4a895644c389273aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac9b3c09273af80b8bf4fe1e36644be66</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Import</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a968f90a9b8f4779c4eb6330e6cfddbae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a1472039fa73a433ca3e24ce484a59e70</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae81522243dd17e882cfb0aae80dcc131</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a149a082a8f15a74a4d6b918d087040be</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ad6b4e5ceab90daad338c5aa14a27c834</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a54c93860a36205b6d18b3332698d97f4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a57fbe101523a1c11100f9d81a4924c82</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>acedc0c85b424d3883a8ef52105e0762b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ac3027f1df5b762e9be986e12949deb2f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aaa06dac1787f4df191c52257235a7252</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>ae3109f563df6a5f348d587e6027dd3ff</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>aa32c73e166ed19a21b7beae4108c2989</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1Import.html</anchorfile>
      <anchor>a17172969244b309d2c1a11f8b53e5c99</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ImportFactory</name>
    <filename>classXpetra_1_1ImportFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1ImportFactory.html</anchorfile>
      <anchor>a845f5bdda9aed355ba22dac7f5134477</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;source, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;target)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ImportFactory</name>
      <anchorfile>classXpetra_1_1ImportFactory.html</anchorfile>
      <anchor>a138a9d01ee08a9d1aea653b6d939d6ca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ImportFactory&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1ImportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aea3bd0f50c93358499c0d8dd900e7e39</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;source, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;target)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1f201a63c5fffe4c46d91b10299c652b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a43fcac01338dd4057f3cda980bd6fd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae6d6c842a009b8ab365458eb194f5555</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ImportFactory</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab1f17fd42cd7a97759687516a37d1d9f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ImportFactory&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1ImportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52a5132bac366d8672c80962402e6026</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;source, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;target)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a05e748d3d26ddf2a7d1fc5a0ccddcc91</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af4764ed4daa021bc5642998fc490a83c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a47b1bf880f023f0c5be73c8b54f5fc7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ImportFactory</name>
      <anchorfile>classXpetra_1_1ImportFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a13c99426a66e2b122fc1e150214357bc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Exceptions::Incompatible</name>
    <filename>classXpetra_1_1Exceptions_1_1Incompatible.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>Incompatible</name>
      <anchorfile>classXpetra_1_1Exceptions_1_1Incompatible.html</anchorfile>
      <anchor>a90b492871c292fe64c95fba279baee97</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::IO</name>
    <filename>classXpetra_1_1IO.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; MultiVector &gt;</type>
      <name>ReadMultiVector</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>af897d148d5666f67a584aaf0edd03281</anchor>
      <arglist>(const std::string &amp;fileName, const RCP&lt; const Map &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Map &gt;</type>
      <name>ReadMap</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a0749a9d047ed25209918a2febcfaa9fc</anchor>
      <arglist>(const std::string &amp;fileName, Xpetra::UnderlyingLib lib, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ReadBlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a62e3c47318221fff52b1c58d7782fbe9</anchor>
      <arglist>(const std::string &amp;fileName, Xpetra::UnderlyingLib lib, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a64dd472a209f6a81726b42fd115ca34e</anchor>
      <arglist>(const T &amp;what)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_Map &amp;</type>
      <name>Map2EpetraMap</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>aab5fc3686013318ca8058edd45e68631</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Map2TpetraMap</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a3addf2875a7bfecab9c3822fafb9e078</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Write</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>abff52962dbc3e132d0bb209a079b74cd</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;M)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Write</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a7359f458450022df6f8862a64377c790</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Write</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a6f680fbbb6a104db2f9c2e081a0c9be1</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>WriteBlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a9d121821749e421065b7f5fa2d0f0c17</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Read</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a5c3fe406991888d14d811fb06cb5b421</anchor>
      <arglist>(const std::string &amp;fileName, Xpetra::UnderlyingLib lib, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, bool binary=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Read</name>
      <anchorfile>classXpetra_1_1IO.html</anchorfile>
      <anchor>a0973858191a9a4d9a20a36c5c6595d23</anchor>
      <arglist>(const std::string &amp;filename, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; rowMap, RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; colMap=Teuchos::null, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; domainMap=Teuchos::null, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; rangeMap=Teuchos::null, const bool callFillComplete=true, const bool binary=false, const bool tolerant=false, const bool debug=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::IO&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8de8dc354530e702522a5afc6690b3af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a473b5c07fcbf278f65e646132b4d78e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae071cd45203516c1ff24de273bc46c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ReadMultiVector</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afcbf43b7ddbec572e56e3e9a239b4f59</anchor>
      <arglist>(const std::string &amp;fileName, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ReadMap</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a45412ef360d9841b028509c9ba308ac4</anchor>
      <arglist>(const std::string &amp;fileName, Xpetra::UnderlyingLib lib, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ReadBlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ada869e322403588b6ed2fe878c0ff97e</anchor>
      <arglist>(const std::string &amp;fileName, Xpetra::UnderlyingLib lib, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9647b6bbff52cdaf3502036bee5efb50</anchor>
      <arglist>(const T &amp;what)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_Map &amp;</type>
      <name>Map2EpetraMap</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a69de0da5e730173e43483b73b7882019</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Map2TpetraMap</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a18fc090b30f7d1371cc771a0f400dd10</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Write</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab4f1d1163afcbf04b199ae1acd6d5be4</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;M)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Write</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aebfcd28989bbac4da2848a9adf43d46a</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Write</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5bdbfefba5313bc0ab5e23d893fb7f50</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>WriteBlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3451db84969f04a554b5389c1eb690cc</anchor>
      <arglist>(const std::string &amp;fileName, const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Read</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afb328f618f628ee65e0bdf4f3808c0d6</anchor>
      <arglist>(const std::string &amp;fileName, Xpetra::UnderlyingLib lib, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, bool binary=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Read</name>
      <anchorfile>classXpetra_1_1IO_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1020c6efde1c75ccf3c67fd3a1a9dc63</anchor>
      <arglist>(const std::string &amp;filename, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; rowMap, RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; colMap=Teuchos::null, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; domainMap=Teuchos::null, const RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; rangeMap=Teuchos::null, const bool callFillComplete=true, const bool binary=false, const bool tolerant=false, const bool debug=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::IteratorOps</name>
    <filename>classXpetra_1_1IteratorOps.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Jacobi</name>
      <anchorfile>classXpetra_1_1IteratorOps.html</anchorfile>
      <anchor>a5219cca16b404bd88d6c6f7b1f2b1f21</anchor>
      <arglist>(SC omega, const Vector &amp;Dinv, const Matrix &amp;A, const Matrix &amp;B, RCP&lt; Matrix &gt; C_in, Teuchos::FancyOStream &amp;fos, const std::string &amp;label, RCP&lt; ParameterList &gt; &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kokkos::Compat::KokkosSerialWrapperNode</name>
    <filename>classKokkos_1_1Compat_1_1KokkosSerialWrapperNode.html</filename>
    <member kind="function">
      <type></type>
      <name>KokkosSerialWrapperNode</name>
      <anchorfile>classKokkos_1_1Compat_1_1KokkosSerialWrapperNode.html</anchorfile>
      <anchor>a33a3a9399a7044a33cb1235c22c30d6c</anchor>
      <arglist>(Teuchos::ParameterList &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KokkosSerialWrapperNode</name>
      <anchorfile>classKokkos_1_1Compat_1_1KokkosSerialWrapperNode.html</anchorfile>
      <anchor>a620ffdbea2d60e21cdf86a45403ab1bb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Map</name>
    <filename>classXpetra_1_1Map.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac03cd59ebb4b0e6fb3cba1a7d11c2664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1e556ba6fb1d9729799523a3e9c2cd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a10ef580753fb13c2ded70348457104b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Map</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a62bac734cae28b1d907ca78ecba4161d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aca18ad7ca239472903a3cc461c00e4bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a3bea9fdc938882745bfbcb3375623e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a4d653e16171e780cc85e5fbcf608ed96</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a100826601eb576599b0b0782fb38d2e4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ad37acf0ce56338f4a8e6d66ba60bef7c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a883405178fbd3700ebaecead2a18f11a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7e27b30b2dd399e5d5ae1bf8a61068cb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7f7d4efa64f0cdecf681cd52ce6b8993</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8ab25102270f96f2d2aae76f58158fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>abd863592cde142b6489bc44ed023919a</anchor>
      <arglist>(GlobalOrdinal globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a9be56d3a4d427179af8343af83ec0e</anchor>
      <arglist>(LocalOrdinal localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1d6de3decb9b98ab975dd78ce11bad6f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2cdd097f523d12c124175e86dfc0e378</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a362e405f1d0336a5c3e02d0f495376c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa95650a6359feaef67342f3259c5cc9e</anchor>
      <arglist>(LocalOrdinal localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ae01d7602e4575c03be34a8834aa44588</anchor>
      <arglist>(GlobalOrdinal globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a911dcaacd6efb51201e7df11c457fcf4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aacbfcaeec808029ae803106fa5b75bb0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8d29dd0b69917ef9efd494eada5dbac</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>afd0ec6c884bdeb0477874b653ded0550</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ab10337eaa23476efb7c0f7268cc0fb75</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aea93e0b04f395ad4d24f666935c13e9b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a5f3ae8983ab40c67dcc469e5651f88aa</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa6329d0c5a9705a50cfaf3f7dd95d9b5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>acc049fb4d77fd6f54060473722144129</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a3ef89782239f91e9ea915e30a5464d30</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a330756fc6cb12256c5092e5f9572e58a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa80217907a9833b560bab51261f3006e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Map&lt; int, GlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1Map.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac03cd59ebb4b0e6fb3cba1a7d11c2664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1e556ba6fb1d9729799523a3e9c2cd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a10ef580753fb13c2ded70348457104b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Map</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a62bac734cae28b1d907ca78ecba4161d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aca18ad7ca239472903a3cc461c00e4bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a3bea9fdc938882745bfbcb3375623e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a4d653e16171e780cc85e5fbcf608ed96</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a100826601eb576599b0b0782fb38d2e4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ad37acf0ce56338f4a8e6d66ba60bef7c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a883405178fbd3700ebaecead2a18f11a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7e27b30b2dd399e5d5ae1bf8a61068cb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7f7d4efa64f0cdecf681cd52ce6b8993</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8ab25102270f96f2d2aae76f58158fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>abd863592cde142b6489bc44ed023919a</anchor>
      <arglist>(GlobalOrdinal globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a9be56d3a4d427179af8343af83ec0e</anchor>
      <arglist>(int localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1d6de3decb9b98ab975dd78ce11bad6f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; int &gt; &amp;LIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2cdd097f523d12c124175e86dfc0e378</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a362e405f1d0336a5c3e02d0f495376c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa95650a6359feaef67342f3259c5cc9e</anchor>
      <arglist>(int localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ae01d7602e4575c03be34a8834aa44588</anchor>
      <arglist>(GlobalOrdinal globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a911dcaacd6efb51201e7df11c457fcf4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aacbfcaeec808029ae803106fa5b75bb0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8d29dd0b69917ef9efd494eada5dbac</anchor>
      <arglist>(const Map&lt; int, GlobalOrdinal, Node &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>afd0ec6c884bdeb0477874b653ded0550</anchor>
      <arglist>(const Map&lt; int, GlobalOrdinal, Node &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ab10337eaa23476efb7c0f7268cc0fb75</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aea93e0b04f395ad4d24f666935c13e9b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a5f3ae8983ab40c67dcc469e5651f88aa</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa6329d0c5a9705a50cfaf3f7dd95d9b5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>acc049fb4d77fd6f54060473722144129</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a3ef89782239f91e9ea915e30a5464d30</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a330756fc6cb12256c5092e5f9572e58a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const Xpetra::Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa80217907a9833b560bab51261f3006e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Map&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Map.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac03cd59ebb4b0e6fb3cba1a7d11c2664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1e556ba6fb1d9729799523a3e9c2cd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a10ef580753fb13c2ded70348457104b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Map</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a62bac734cae28b1d907ca78ecba4161d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aca18ad7ca239472903a3cc461c00e4bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a3bea9fdc938882745bfbcb3375623e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a4d653e16171e780cc85e5fbcf608ed96</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a100826601eb576599b0b0782fb38d2e4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ad37acf0ce56338f4a8e6d66ba60bef7c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a883405178fbd3700ebaecead2a18f11a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7e27b30b2dd399e5d5ae1bf8a61068cb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7f7d4efa64f0cdecf681cd52ce6b8993</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8ab25102270f96f2d2aae76f58158fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>abd863592cde142b6489bc44ed023919a</anchor>
      <arglist>(int globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a9be56d3a4d427179af8343af83ec0e</anchor>
      <arglist>(int localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1d6de3decb9b98ab975dd78ce11bad6f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const int &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; int &gt; &amp;LIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2cdd097f523d12c124175e86dfc0e378</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const int &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayView&lt; const int &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a362e405f1d0336a5c3e02d0f495376c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa95650a6359feaef67342f3259c5cc9e</anchor>
      <arglist>(int localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ae01d7602e4575c03be34a8834aa44588</anchor>
      <arglist>(int globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a911dcaacd6efb51201e7df11c457fcf4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aacbfcaeec808029ae803106fa5b75bb0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8d29dd0b69917ef9efd494eada5dbac</anchor>
      <arglist>(const Map&lt; int, int, EpetraNode &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>afd0ec6c884bdeb0477874b653ded0550</anchor>
      <arglist>(const Map&lt; int, int, EpetraNode &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ab10337eaa23476efb7c0f7268cc0fb75</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; EpetraNode &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aea93e0b04f395ad4d24f666935c13e9b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a5f3ae8983ab40c67dcc469e5651f88aa</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa6329d0c5a9705a50cfaf3f7dd95d9b5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>acc049fb4d77fd6f54060473722144129</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a3ef89782239f91e9ea915e30a5464d30</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a330756fc6cb12256c5092e5f9572e58a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const Xpetra::Map&lt; int, int, EpetraNode &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa80217907a9833b560bab51261f3006e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Map&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Map.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac03cd59ebb4b0e6fb3cba1a7d11c2664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1e556ba6fb1d9729799523a3e9c2cd8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a10ef580753fb13c2ded70348457104b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Map</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a62bac734cae28b1d907ca78ecba4161d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aca18ad7ca239472903a3cc461c00e4bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a3bea9fdc938882745bfbcb3375623e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a4d653e16171e780cc85e5fbcf608ed96</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a100826601eb576599b0b0782fb38d2e4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ad37acf0ce56338f4a8e6d66ba60bef7c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a883405178fbd3700ebaecead2a18f11a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7e27b30b2dd399e5d5ae1bf8a61068cb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a7f7d4efa64f0cdecf681cd52ce6b8993</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8ab25102270f96f2d2aae76f58158fc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>abd863592cde142b6489bc44ed023919a</anchor>
      <arglist>(long long globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long long</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2a9be56d3a4d427179af8343af83ec0e</anchor>
      <arglist>(int localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a1d6de3decb9b98ab975dd78ce11bad6f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const long long &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; int &gt; &amp;LIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a2cdd097f523d12c124175e86dfc0e378</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const long long &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayView&lt; const long long &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a362e405f1d0336a5c3e02d0f495376c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa95650a6359feaef67342f3259c5cc9e</anchor>
      <arglist>(int localIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ae01d7602e4575c03be34a8834aa44588</anchor>
      <arglist>(long long globalIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a911dcaacd6efb51201e7df11c457fcf4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aacbfcaeec808029ae803106fa5b75bb0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ac8d29dd0b69917ef9efd494eada5dbac</anchor>
      <arglist>(const Map&lt; int, long long, EpetraNode &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>afd0ec6c884bdeb0477874b653ded0550</anchor>
      <arglist>(const Map&lt; int, long long, EpetraNode &gt; &amp;map) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>ab10337eaa23476efb7c0f7268cc0fb75</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; EpetraNode &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aea93e0b04f395ad4d24f666935c13e9b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a5f3ae8983ab40c67dcc469e5651f88aa</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa6329d0c5a9705a50cfaf3f7dd95d9b5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>acc049fb4d77fd6f54060473722144129</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a3ef89782239f91e9ea915e30a5464d30</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>a330756fc6cb12256c5092e5f9572e58a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const Xpetra::Map&lt; int, long long, EpetraNode &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1Map.html</anchorfile>
      <anchor>aa80217907a9833b560bab51261f3006e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MapExtractor</name>
    <filename>classXpetra_1_1MapExtractor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>abedf92f811c45065b3e673f70cbde95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a1595e905b7fea73fb3755d119b3c4032</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>ad892b0481ccc76f232b281df8e46ad29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a508116383cf368c000698ecf8c9ec306</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MapExtractor</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a1d433f6158ffaca0a126dadea3c74067</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;fullmap, const std::vector&lt; RCP&lt; const Map &gt; &gt; &amp;maps, bool bThyraMode=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MapExtractor</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>abf242aaff2274675828ad5f315378fc7</anchor>
      <arglist>(const std::vector&lt; RCP&lt; const Map &gt; &gt; &amp;maps, const std::vector&lt; RCP&lt; const Map &gt; &gt; &amp;thyramaps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MapExtractor</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a936f7f72e16c9d816fe667f9bbd6c8c5</anchor>
      <arglist>(const MapExtractor &amp;input)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a0d8b2d143d59bf23772e03c2b24337d9</anchor>
      <arglist>(size_t i, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a5442f665fc982cdbad9af84449faa59e</anchor>
      <arglist>(size_t i, size_t numvec, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getThyraMode</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>af0468557f26d0deb5102471578e9d625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CheckConsistency</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a00fc0f6814b3ad47f41a86ce7b7aeab3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>fullmap_</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a92091bf26401297b4379714fb300cf7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const Map &gt; &gt;</type>
      <name>maps_</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a6e6d3f8d3dd4c028348d694c2c7c3b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; Import &gt; &gt;</type>
      <name>importers_</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a0f6f2bb258371a247c53fd174f63d368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bThyraMode_</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>ac56d4b434ee71ba86f8abe17a2bd2e5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const Map &gt; &gt;</type>
      <name>thyraMaps_</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a6c2728225e6db2f419856c5138be7ce7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>aaafaf404e2b598730ea7e096934dfc7f</anchor>
      <arglist>(const Vector &amp;full, size_t block, Vector &amp;partial) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a4bde9118daadefca7450e7e4f8d0165d</anchor>
      <arglist>(const MultiVector &amp;full, size_t block, MultiVector &amp;partial) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>af2d62b2bfee9960f98438075dd429602</anchor>
      <arglist>(RCP&lt; const Vector &gt; &amp;full, size_t block, RCP&lt; Vector &gt; &amp;partial) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a0118e3d3f1be122f6b4a089805bc4357</anchor>
      <arglist>(RCP&lt; Vector &gt; &amp;full, size_t block, RCP&lt; Vector &gt; &amp;partial) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a5dc1f52269e9ac82951839c74b23f7bc</anchor>
      <arglist>(RCP&lt; const MultiVector &gt; &amp;full, size_t block, RCP&lt; MultiVector &gt; &amp;partial) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a9a77c471c5393676b3e40c023e773278</anchor>
      <arglist>(RCP&lt; MultiVector &gt; &amp;full, size_t block, RCP&lt; MultiVector &gt; &amp;partial) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Vector &gt;</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a69e1ac9fbd11e76f272486700f275858</anchor>
      <arglist>(RCP&lt; const Vector &gt; &amp;full, size_t block, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Vector &gt;</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a148d013ec92af9bda2bd4a0f3d1a3dea</anchor>
      <arglist>(RCP&lt; Vector &gt; &amp;full, size_t block, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a33582096c21cada5be0c007964698233</anchor>
      <arglist>(RCP&lt; const MultiVector &gt; &amp;full, size_t block, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>adc2decb1f0137027977b09b071ae2da7</anchor>
      <arglist>(RCP&lt; MultiVector &gt; &amp;full, size_t block, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a5cbcb78f658a520e9a0d5df5d84085b8</anchor>
      <arglist>(RCP&lt; const BlockedMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;full, size_t block, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>ExtractVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a4b6755021b77c07b600076d020781983</anchor>
      <arglist>(RCP&lt; Xpetra::BlockedMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;full, size_t block, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a2c89ca5997180d881f9a598cd07a3daa</anchor>
      <arglist>(const Vector &amp;partial, size_t block, Vector &amp;full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a6fc629976978c5c348c6cc820ced546e</anchor>
      <arglist>(const MultiVector &amp;partial, size_t block, MultiVector &amp;full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>abfaf7f7cdbcfbac1c08b9c07d0390634</anchor>
      <arglist>(RCP&lt; const Vector &gt; partial, size_t block, RCP&lt; Vector &gt; full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a7e714301307adcfe867c8168472b4e3d</anchor>
      <arglist>(RCP&lt; Vector &gt; partial, size_t block, RCP&lt; Vector &gt; full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>aa888e1b4cb4910be8091f47443725bab</anchor>
      <arglist>(RCP&lt; const MultiVector &gt; partial, size_t block, RCP&lt; MultiVector &gt; full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>ac73a75bd8faa28a11b10cea88af861e5</anchor>
      <arglist>(RCP&lt; MultiVector &gt; partial, size_t block, RCP&lt; MultiVector &gt; full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>af1571032ce19dc23eaa91bee6e9237bc</anchor>
      <arglist>(RCP&lt; const MultiVector &gt; partial, size_t block, RCP&lt; Xpetra::BlockedMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InsertVector</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a2a4cf7f41e6181e00edec6a1fdee550e</anchor>
      <arglist>(RCP&lt; MultiVector &gt; partial, size_t block, RCP&lt; Xpetra::BlockedMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; full, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumMaps</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a5a34e101dc19f7fba6f0cd6879942946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>a53241757d20be2d5c9d11a75110d041d</anchor>
      <arglist>(size_t i, bool bThyraMode=false) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>getFullMap</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>aee6ff826fa14cf9e48d8884572cecbba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getMapIndexForGID</name>
      <anchorfile>classXpetra_1_1MapExtractor.html</anchorfile>
      <anchor>aa189045a5a4652dda7c8ba2526247c8a</anchor>
      <arglist>(GlobalOrdinal gid) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MapExtractorFactory</name>
    <filename>classXpetra_1_1MapExtractorFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapExtractorFactory.html</anchorfile>
      <anchor>abb6194e2bd0f345fa8c2a4babf0c3f86</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;fullmap, const std::vector&lt; Teuchos::RCP&lt; const Map &gt; &gt; &amp;maps, bool bThyraMode=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MapExtractorFactory</name>
      <anchorfile>classXpetra_1_1MapExtractorFactory.html</anchorfile>
      <anchor>ad402fe6e68de62a44ce1c7f14ad76cc7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MapFactory</name>
    <filename>classXpetra_1_1MapFactory.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>ae7c12c47e607334d7e88962b6fa35b40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a80ed528c9076066c083b72ed2686ab42</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=Xpetra::GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a815c5f7889258537b16796d2ea2cf576</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a351883a966dfcaa6f923b652bd363d1b</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a879abeb1bce232727acf69be5f830266</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, LocalOrdinal numDofPerNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMap</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>ad3fd335d3326a34b81a27aab3ce8d8b7</anchor>
      <arglist>(UnderlyingLib lib, size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>ae9bad556217eae8ba21d54cc08f1001e</anchor>
      <arglist>(UnderlyingLib lib, size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createUniformContigMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a0de53ad5252b60eb6ee6f33f2fb3eace</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createUniformContigMap</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a2d915c8de0a3fa705904556e8aac5223</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMap</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a60c7d74c68050c2337a86af164584a27</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>a6ff32115f4c5b90dcc83d882d26d98c0</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MapFactory</name>
      <anchorfile>classXpetra_1_1MapFactory.html</anchorfile>
      <anchor>ac447e3f40c36262e783df6edabb5c885</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MapFactory&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab4232979b9518263672110cc0dea862b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae973dbdfeeed0f6f6f892b9be14b8396</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, int indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4e4025ee0c886fba8a3b982d896476f3</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, size_t numLocalElements, int indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a27012093285ebf8aca9006af5909c00e</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, int indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2a2a2e82d29aac05ca17a77c5440c190</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, LocalOrdinal numDofPerNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMap</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7b443e7d6a25fba55231c766903395cb</anchor>
      <arglist>(UnderlyingLib lib, size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc2e61d20ccfeaab2e4486e39752d020</anchor>
      <arglist>(UnderlyingLib lib, size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createUniformContigMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a41dadec81249241a5fd122b784008068</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createUniformContigMap</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acb2c66b86f321862f1269b59156d1818</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMap</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a240fc411c943e3211f09f136398d1617</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3ceceb1c9ae6e8d480191367e1803c8c</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0a4fcbd5d03ade335d65edef27092f56</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0fda2c35eb28db4866e4b73c3e4645a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a51a92e795705d56588759adc4d506335</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MapFactory</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a00429fbd5aa4814b492a88c2c36476f2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MapFactory&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afc74dca43ef37dbc548f821c38a11dd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adfe51cbe584726fbdd6bc585059eb163</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, int indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a676759bb74bee09321f53dded0fd7ddd</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, size_t numLocalElements, int indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac70c4a53e8a5a7741df992571e83a4f9</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, int indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a27a6a6d5a500a3f56e20c434db448653</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, LocalOrdinal numDofPerNode)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMap</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a26c069f18ffa009509b79aa2e6f4dc1a</anchor>
      <arglist>(UnderlyingLib lib, size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9f72f2461189869ef9a9e63e69cc17b7</anchor>
      <arglist>(UnderlyingLib lib, size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createUniformContigMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a773e2cd4c1ae8026eadaae55f4934775</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createUniformContigMap</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7b48a0c7020fe787d8dffec55fd77087</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMap</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aacde64856e1971406d3eab4b79569273</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMapWithNode</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0a7489cc515cd9af64736a66c6b18678</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8a7da48301c6a8ebf16b030651a8a706</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a41b325b57e2de6b4c093f3e162ba262e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a854e8148165819c458ca945b47734085</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MapFactory</name>
      <anchorfile>classXpetra_1_1MapFactory_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad56c376c144af90343bb7106b2fc77ec</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MapUtils</name>
    <filename>classXpetra_1_1MapUtils.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>concatenateMaps</name>
      <anchorfile>classXpetra_1_1MapUtils.html</anchorfile>
      <anchor>a4871d6c33c4ecb061adf85ac4832b762</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt; &amp;subMaps)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>shrinkMapGIDs</name>
      <anchorfile>classXpetra_1_1MapUtils.html</anchorfile>
      <anchor>a76de301e9fb5dd8ef98ac06cdd846da8</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;input, const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;nonOvlInput)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>transformThyra2XpetraGIDs</name>
      <anchorfile>classXpetra_1_1MapUtils.html</anchorfile>
      <anchor>ae2f8232d3272945049fade3e3454ae4d</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;input, const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;nonOvlInput, const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;nonOvlReferenceInput)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Matrix</name>
    <filename>classXpetra_1_1Matrix.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Xpetra::Operator</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a8926d4ca2e51879c4de444f01c01562a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a25395acb74939503b060a0143edfdc2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a885d1ef4b2e7ab0b27d4a2a91b4e0f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ae5407184f2693267a73caae743e4d96a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a4950c761b28d27df88606df4b9cb7de2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aa064cb112353b8f67c7cf9a7cea99904</anchor>
      <arglist>(const Matrix &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aab4c3efb674a7daf11b4b04620e283f1</anchor>
      <arglist>(const Matrix &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a593b3341f893070e09083ebc2f71aedd</anchor>
      <arglist>(const Matrix &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a7934f2dcf7ceef92a0a487419a2b0b01</anchor>
      <arglist>(const Matrix &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const CrsGraph &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a0ba23ed403171dcd8f91ad6a2abe28d4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFixedBlockSize</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a2bd42122f7c8fcf69eca2f8567a7eb59</anchor>
      <arglist>(LocalOrdinal blksize, GlobalOrdinal offset=0)</arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>GetFixedBlockSize</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a08b4e02f0da2dcbdec39dd38f9d0dd17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetMaxEigenvalueEstimate</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a5a6c54c856278a699c5991006fddb58d</anchor>
      <arglist>(Scalar const &amp;sigma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Scalar</type>
      <name>GetMaxEigenvalueEstimate</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a105d676e609bcfe4ce6ed935f3c32b56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Hashtable&lt; viewLabel_t, RCP&lt; MatrixView &gt; &gt;</type>
      <name>operatorViewTable_</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>abbac69cb90fb8f89de477a5cc4bf7126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>viewLabel_t</type>
      <name>defaultViewLabel_</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a7ba66f9922b9158a2f9f0dd286fd8c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>viewLabel_t</type>
      <name>currentViewLabel_</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a13c7531d710aef204d534c50b35c45d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a5b2e31554a54053eedf0fc254412e6fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrix</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a0347d6f3f2c906c1f6a5ac35f4526ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsGraph</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a161a2c0d76ce44c7e8da1e09c1633f33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrixFactory&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrixFactory</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a1e5ce1e227e40457caff3ca02cdf0e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MatrixView&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MatrixView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aadd42330b3aa643fcfbfdff332e3ee45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a45e450bd3ef0ddbca502257ac9bc0587</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Matrix</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a9558c9d1b12b8dced2f3c326e8bbe254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a0dd140e749ad01411a3efd585bbea2a1</anchor>
      <arglist>(viewLabel_t viewLabel, const RCP&lt; const Map &gt; &amp;rowMap, const RCP&lt; const Map &gt; &amp;colMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a2228471012cc93a36949c0e40be97e5f</anchor>
      <arglist>(const viewLabel_t viewLabel, const RCP&lt; const Matrix &gt; &amp;A, bool transposeA=false, const RCP&lt; const Matrix &gt; &amp;B=Teuchos::null, bool transposeB=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintViews</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ae10edbfa668a1ccef924cca36267fea6</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a903b4fcf9d3fb35c6c5b4f9e89d804b1</anchor>
      <arglist>(const viewLabel_t viewLabel)</arglist>
    </member>
    <member kind="function">
      <type>const viewLabel_t</type>
      <name>SwitchToView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aba5be844a3d357302ebd3295fca77bca</anchor>
      <arglist>(const viewLabel_t viewLabel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a06cfb6c8301aa0510df1a0c148715e6e</anchor>
      <arglist>(const viewLabel_t viewLabel) const </arglist>
    </member>
    <member kind="function">
      <type>const viewLabel_t</type>
      <name>SwitchToDefaultView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ad75c2ad1eb1605626c932c1f7d28ec38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const viewLabel_t &amp;</type>
      <name>GetDefaultViewLabel</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ae98ed14d7235befb929bf8ecbfb9a248</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const viewLabel_t &amp;</type>
      <name>GetCurrentViewLabel</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a5643601a9dfeb453ec7fc949eabb7b06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>afd6e8fae8dac584d29fc6a9ddf307fc8</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a65a2414eda558a1f181ef26198b4865b</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ab3ade61875969fc2e24f93a258d78b9a</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a2f75c4f6e3de50496ffb253a2ffc9804</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a607eca56d2018a8de189b290c90fa88f</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aec1f64dab4d160a4bb666775c00abeeb</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a503e471c85d34bf84e43235976abc48c</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a6e9f126b1facaac2c1d08611ef0273b7</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;domainMap, const RCP&lt; const Map &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a89ee1fdd42da80781f9960269951ddaf</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const RCP&lt; const Map &gt; &amp;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a7c7477586f462d83cb999b8cd6d1a996</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const RCP&lt; const Map &gt; &amp;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a761f62a05c7c519c459c5cf71a55be05</anchor>
      <arglist>(viewLabel_t viewLabel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const RCP&lt; const Map &gt; &amp;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a3c5388d7e7fc27512794913d59b2664c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const RCP&lt; const Map &gt; &amp;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>af7a8fadfdc04f4ae1676f2c35543ff87</anchor>
      <arglist>(viewLabel_t viewLabel) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ad5a2c820c0093e4b839867f13fbde935</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a8a3f97ed4d535629ce0c78f38a265964</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a6264daaede05bba53d8ac48ceada3ee2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a2483ec0ab0c58f2a20d70d584961b9b6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a9e949df4f37344ac605353f8392793b5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a0845e14057429b84b1381a22aca7197e</anchor>
      <arglist>(LocalOrdinal localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>abafbf134318f8f14d45e04c1bc9430c5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a83c35f6b7ef70e525c652f0abed2ad44</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>acda75c5beffdf38688ab0f543be2adcb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a72113e64120d011a0cd88a1ce33074b6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>adb3902634aec8f9a557e73d5e837d73b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a6ce7666485e69f35acb55029545aec78</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a1bb0707ce58c9e525632208d5ca995b6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a94caf21f655b813937e7b7a23040f9e3</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aa1efab293eaec7da59edae6fbd84c06d</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aa6bf5b3188787ff8e5641d744ad2caa0</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aa87f2b374d2cbb03117dfc6599631046</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>adfb152d9dd60f794bb6aae09cb0464d8</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>aa3abe2685282c7159822b774f34b9d45</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ac74bc062602bfe86a60b7e039a07c658</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>ab4ba7a0f201b455a129a5f98b45e168e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Matrix.html</anchorfile>
      <anchor>a859ed3280255fae67bdec4716e2988a2</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixFactory</name>
    <filename>classXpetra_1_1MatrixFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>aa3755759674a709b1f0549e298de83fc</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>ae14cc1b31d3373c3535b242c394623db</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const RCP&lt; const Map &gt; &amp;colMap, size_t maxNumEntriesPerRow, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>af244ba0978e7ab1f9acd3ca9730f9037</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const RCP&lt; const Map &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>ad9834ae82dbc8a6908af2161f23b8b38</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>a5ceccab7336ad9c8b41807cdcc34c035</anchor>
      <arglist>(const RCP&lt; const CrsGraph &gt; &amp;graph, const RCP&lt; ParameterList &gt; &amp;paramList=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>aa9840213a0515ac431d0eb0c7bc178c6</anchor>
      <arglist>(const RCP&lt; const Vector &gt; &amp;diagonal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>a9db6ae137b63eb00b9f9dfaceebe0a76</anchor>
      <arglist>(const RCP&lt; const Matrix &gt; &amp;sourceMatrix, const Import &amp;importer, const RCP&lt; const Map &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>a42287316447ee0e263ec07097f72f66a</anchor>
      <arglist>(const RCP&lt; const Matrix &gt; &amp;sourceMatrix, const Export &amp;exporter, const RCP&lt; const Map &gt; &amp;domainMap=Teuchos::null, const RCP&lt; const Map &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>BuildCopy</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>af94a03a6d3af8404a145408218a3e6a0</anchor>
      <arglist>(const RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MatrixFactory</name>
      <anchorfile>classXpetra_1_1MatrixFactory.html</anchorfile>
      <anchor>a9f175c6dbc655aedd1d39eeb5a99f12e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixFactory2</name>
    <filename>classXpetra_1_1MatrixFactory2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>BuildCopy</name>
      <anchorfile>classXpetra_1_1MatrixFactory2.html</anchorfile>
      <anchor>a02252c2978b43ccdca52dc902b246e61</anchor>
      <arglist>(const RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixFactory2&lt; double, int, int, Node &gt;</name>
    <filename>classXpetra_1_1MatrixFactory2_3_01double_00_01int_00_01int_00_01Node_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>BuildCopy</name>
      <anchorfile>classXpetra_1_1MatrixFactory2_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a242bb71fd2fa19c003193b51751314ba</anchor>
      <arglist>(const RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1MatrixFactory2_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>af11b3fbeed462da0cabdd66e8fe87d90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MatrixFactory2_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a7d55ffa4bfa944f76d48c3c097ee68f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MatrixFactory2_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a57d674c1a8735b2259e0da2ef5ff05f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixMatrix</name>
    <filename>classXpetra_1_1MatrixMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>affe33ac777b199c38060015905f2a4a2</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, Matrix &amp;C, bool call_FillComplete_on_result=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>a42b5139e3c84f64df28b88a57aca1dc4</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, RCP&lt; Matrix &gt; C_in, Teuchos::FancyOStream &amp;fos, bool doFillComplete=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>a0cfd1b9206cccddaa5d85224ca43346f</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, Teuchos::FancyOStream &amp;fos, bool callFillCompleteOnResult=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>MLTwoMatrixMultiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>aadacaac1b2b94167cbdc5257f7ab0027</anchor>
      <arglist>(const Epetra_CrsMatrix &amp;epA, const Epetra_CrsMatrix &amp;epB, Teuchos::FancyOStream &amp;fos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; BlockedCrsMatrix &gt;</type>
      <name>TwoMatrixMultiplyBlock</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>a1f1c51b08030cf20832ac46715446c3f</anchor>
      <arglist>(const BlockedCrsMatrix &amp;A, bool transposeA, const BlockedCrsMatrix &amp;B, bool transposeB, Teuchos::FancyOStream &amp;fos, bool doFillComplete=true, bool doOptimizeStorage=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwoMatrixAdd</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>a0be735a4571b15d02a427ef0816928cf</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, SC alpha, Matrix &amp;B, SC beta)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwoMatrixAdd</name>
      <anchorfile>classXpetra_1_1MatrixMatrix.html</anchorfile>
      <anchor>ae03b9eed7609418d091baae36ed277e3</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const SC &amp;alpha, const Matrix &amp;B, bool transposeB, const SC &amp;beta, RCP&lt; Matrix &gt; &amp;C, Teuchos::FancyOStream &amp;fos, bool AHasFixedNnzPerRow=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixMatrix&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>addf9f507280cf285f195969a1937e848</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, Matrix &amp;C, bool call_FillComplete_on_result=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aed9076052de3d309c128d1439f081c9a</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, RCP&lt; Matrix &gt; C_in, Teuchos::FancyOStream &amp;fos, bool doFillComplete=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3e35711a89c11197751d0cadbc0d17ff</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, Teuchos::FancyOStream &amp;fos, bool callFillCompleteOnResult=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>MLTwoMatrixMultiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af3dda22a09baf186ce1b60c8b1dea2de</anchor>
      <arglist>(const Epetra_CrsMatrix &amp;epA, const Epetra_CrsMatrix &amp;epB, Teuchos::FancyOStream &amp;fos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; BlockedCrsMatrix &gt;</type>
      <name>TwoMatrixMultiplyBlock</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaa7cdc0408942025049745fa5a7a8200</anchor>
      <arglist>(const BlockedCrsMatrix &amp;A, bool transposeA, const BlockedCrsMatrix &amp;B, bool transposeB, Teuchos::FancyOStream &amp;fos, bool doFillComplete=true, bool doOptimizeStorage=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwoMatrixAdd</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a32c641a17d6463505ff1017eb4a3f524</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, SC alpha, Matrix &amp;B, SC beta)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwoMatrixAdd</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a14e6924704a0ecd64aa1b91bc7bca4cf</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const SC &amp;alpha, const Matrix &amp;B, bool transposeB, const SC &amp;beta, RCP&lt; Matrix &gt; &amp;C, Teuchos::FancyOStream &amp;fos, bool AHasFixedNnzPerRow=false)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad8fce410b700fcee926815c0a46037f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a96046672a602b9ea9f1af678089e3a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>addd03f9ff20220409b08a6ed562684bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af24819f4d5fe96be73e4d8315952a0df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixMatrix&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aac330880988771fb5e1630b10ca3039f</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, Matrix &amp;C, bool call_FillComplete_on_result=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5de0891947c1bf6c84bdc3c22c2ee8e3</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, RCP&lt; Matrix &gt; C_in, Teuchos::FancyOStream &amp;fos, bool doFillComplete=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Multiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5ee597c7676c0d930aedcd8f8ae21b9b</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const Matrix &amp;B, bool transposeB, Teuchos::FancyOStream &amp;fos, bool callFillCompleteOnResult=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>MLTwoMatrixMultiply</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a01e839c4f5284e867e9b9f048916f300</anchor>
      <arglist>(const Epetra_CrsMatrix &amp;epA, const Epetra_CrsMatrix &amp;epB, Teuchos::FancyOStream &amp;fos)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; BlockedCrsMatrix &gt;</type>
      <name>TwoMatrixMultiplyBlock</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7ff80694d77c280aa6ddd8dcef1290ba</anchor>
      <arglist>(const BlockedCrsMatrix &amp;A, bool transposeA, const BlockedCrsMatrix &amp;B, bool transposeB, Teuchos::FancyOStream &amp;fos, bool doFillComplete=true, bool doOptimizeStorage=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwoMatrixAdd</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a31e5d03da78f4eb3cc87663acf98b05c</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, SC alpha, Matrix &amp;B, SC beta)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>TwoMatrixAdd</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8c349ebf1a5afb9f47edc3d1b6eea33e</anchor>
      <arglist>(const Matrix &amp;A, bool transposeA, const SC &amp;alpha, const Matrix &amp;B, bool transposeB, const SC &amp;beta, RCP&lt; Matrix &gt; &amp;C, Teuchos::FancyOStream &amp;fos, bool AHasFixedNnzPerRow=false)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa14f7f1ef0928a74611465369efd9d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a70d56ee8e7dc5885de43e52af92671fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1ac314806d78a86c848c4b99863f6043</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1MatrixMatrix_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab8fab648f89c3f5f0e6cbf89ea0da776</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixUtils</name>
    <filename>classXpetra_1_1MatrixUtils.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>xpetraGidNumbering2ThyraGidNumbering</name>
      <anchorfile>classXpetra_1_1MatrixUtils.html</anchorfile>
      <anchor>a0b5cc68a3d2dfad563c25e35956d3a6a</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>findColumnSubMap</name>
      <anchorfile>classXpetra_1_1MatrixUtils.html</anchorfile>
      <anchor>a3ca7c525844742ee983b1e44af0a0d1b</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;input, const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;domainMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>SplitMatrix</name>
      <anchorfile>classXpetra_1_1MatrixUtils.html</anchorfile>
      <anchor>ac62139908867071f2dc65082043eb77a</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;input, Teuchos::RCP&lt; const Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; rangeMapExtractor, Teuchos::RCP&lt; const Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; domainMapExtractor, Teuchos::RCP&lt; const Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; columnMapExtractor=Teuchos::null, bool bThyraMode=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MatrixView</name>
    <filename>classXpetra_1_1MatrixView.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>SetMaxEigenvalueEstimate</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a3034148dadb8e11c83a4dc7473e75cbc</anchor>
      <arglist>(Scalar const &amp;sigma)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>GetMaxEigenvalueEstimate</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>ad6bbe702a4724f33733562a08e1bc7cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a121ad2b02bc276d8a2934e9f9d112e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>rowMap_</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>ab578ce61f1c75bb636b3431fd8390db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>colMap_</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a425580c7abeb28b1c210ae44e7b6f021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scalar</type>
      <name>maxEigValueEstimate_</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a1611945c12b7c0483670a30b33d210bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MatrixView</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a6e7d240cb5de79edb762b28a7d739bf0</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap, const RCP&lt; const Map &gt; &amp;colMap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MatrixView</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a75571b36bd28437703badedf7dffb127</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt; &amp;</type>
      <name>GetRowMap</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a1bd571c3b68b62b0fd0bc762a32bb2fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt; &amp;</type>
      <name>GetColMap</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a22612d8387649a4b3d0c7ad1877d6d99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRowMap</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>ac471308f63beb77063c460912ddb0b7e</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;rowMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColMap</name>
      <anchorfile>classXpetra_1_1MatrixView.html</anchorfile>
      <anchor>a062851484659165e9d0eeb7c6830a087</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;colMap)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MpiPlatform</name>
    <filename>classXpetra_1_1MpiPlatform.html</filename>
    <templarg>Node</templarg>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>Node</type>
      <name>NodeType</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>a7055a6b4c1265152c5925936f740c74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>node_</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>a142ea04920f3c32f83c8405d4ef00027</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MpiPlatform</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>a3bbf0191ce74d3600addad1ebbbe9925</anchor>
      <arglist>(const MpiPlatform&lt; Node &gt; &amp;platform)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::MpiComm&lt; int &gt; &gt;</type>
      <name>comm_</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>ab83a1f3c3aa21965f04798d658139b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MpiPlatform</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>a96362eeb5f16fac4b720f2a91a54268d</anchor>
      <arglist>(Teuchos::RCP&lt; Node &gt; node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MpiPlatform</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>a869e4e35ea9a873786c34ebffffec259</anchor>
      <arglist>(Teuchos::RCP&lt; Node &gt; node, const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;rawMpiComm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MpiPlatform</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>a5c3ce397b3e28e5bc8030fb0d5e2ac7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>af2366e082f3ecbe4f6f3662bde702fc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1MpiPlatform.html</anchorfile>
      <anchor>aeb580216acfd26f3d6bfb6424ab3e94e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MultiVector</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; double &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; double &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const double &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const double &amp;alpha, const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const double &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const double &amp;alpha, const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const double &amp;beta, const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;B, const double &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; double &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const double &amp;alpha, const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;B, const double &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(double scalarAB, const Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;B, double scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; double, int, int, EpetraNode &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(int globalRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(int globalRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; double, int, int, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; double, int, int, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; double &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;A, const Teuchos::ArrayView&lt; double &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const double &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const double &amp;alpha, const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;A, const double &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const double &amp;alpha, const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;A, const double &amp;beta, const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;B, const double &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; double &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const double &amp;alpha, const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;A, const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;B, const double &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(double scalarAB, const Vector&lt; double, int, int, EpetraNode &gt; &amp;A, const MultiVector&lt; double, int, int, EpetraNode &gt; &amp;B, double scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(long long globalRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(long long globalRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; double, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; double, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; double &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;A, const Teuchos::ArrayView&lt; double &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const double &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const double &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const double &amp;alpha, const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;A, const double &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const double &amp;alpha, const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;A, const double &amp;beta, const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;B, const double &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; double &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; double &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const double &amp;alpha, const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;A, const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;B, const double &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(double scalarAB, const Vector&lt; double, int, long long, EpetraNode &gt; &amp;A, const MultiVector&lt; double, int, long long, EpetraNode &gt; &amp;B, double scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>int</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const int &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; int &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const int &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const int &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const int &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const int &amp;beta, const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;B, const int &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const int &amp;alpha, const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;B, const int &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(int scalarAB, const Vector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;B, int scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, EpetraGlobalOrdinal, Node &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; int, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>int</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; int, int, int, EpetraNode &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(int globalRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(int globalRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; int, int, int, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; int, int, int, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const int &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;A, const Teuchos::ArrayView&lt; int &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const int &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const int &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;A, const int &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;A, const int &amp;beta, const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;B, const int &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const int &amp;alpha, const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;A, const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;B, const int &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(int scalarAB, const Vector&lt; int, int, int, EpetraNode &gt; &amp;A, const MultiVector&lt; int, int, int, EpetraNode &gt; &amp;B, int scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; int, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>int</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(long long globalRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(long long globalRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; int, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; int, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const int &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;A, const Teuchos::ArrayView&lt; int &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const int &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const int &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;A, const int &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const int &amp;alpha, const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;A, const int &amp;beta, const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;B, const int &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; int &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; int &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const int &amp;alpha, const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;A, const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;B, const int &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(int scalarAB, const Vector&lt; int, int, long long, EpetraNode &gt; &amp;A, const MultiVector&lt; int, int, long long, EpetraNode &gt; &amp;B, int scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(int globalRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(int globalRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; Scalar, int, int, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; Scalar, int, int, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;A, const Scalar &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;B, const Scalar &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;A, const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;B, const Scalar &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, int, int, EpetraNode &gt; &amp;A, const MultiVector&lt; Scalar, int, int, EpetraNode &gt; &amp;B, Scalar scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, EpetraNode &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiVector&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVector.html</filename>
    <base>Xpetra::DistObject</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aced1e108e956ff5f694a86310820c29d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ade8fa8ac23c85d19ca53ea844ee694e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2f4c362e8baf19292eea881543b56b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adc9f2491a8c85ebdadffee46079cafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abfa1fa05ccfb589c0398bb85c00c0764</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;rhs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af85dd904316fcbc097647d417119056b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adf140df9085c6fbe6f6469b1c16ccae5</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a0255299e7b4b5e23b19f182acd32a98f</anchor>
      <arglist>(long long globalRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e3f68be51b11328f8c1b5b8fd620c9a</anchor>
      <arglist>(long long globalRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af8ca250c1c483937b68153a1c5479e67</anchor>
      <arglist>(int myRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73fe5aaaeeb5e770e5e884c3b9b4c79d</anchor>
      <arglist>(int myRow, size_t vectorIndex, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a1e1d23e9946533363dcccc75ac4164fd</anchor>
      <arglist>(const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Vector&lt; Scalar, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad66b263f56afd197f7d6c9be37e34ed7</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Vector&lt; Scalar, int, long long, EpetraNode &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a766ef23c58f4db19540b628fd9a0f4ea</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a95f42c362536a60d750d3b7128c268d9</anchor>
      <arglist>(size_t j) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ae936dc2cc1b540ad2a8890916309f5d7</anchor>
      <arglist>(size_t j)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8484453e6d43a6098f1c56ea72e9cd53</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a35a327c4fb157002ef4be0a0e58dab0b</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a42365abfb763ea434fb5f0a3ba6fcdfe</anchor>
      <arglist>(const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>abb4eec3ce0ffc3bba12eb708b1fc7122</anchor>
      <arglist>(const Scalar &amp;alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ae3ab14d38635d53c2c619adceaa96c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ace830054c178e969dd759db133dfad7c</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A, const Scalar &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a7f5d8e407efc92d8459ecb19f75484b0</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;B, const Scalar &amp;gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a4ce49b75d3b4d09c4afd8041034f6e3b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a348470320a4f3c2a0ce867c86c691f3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a5ec8956434ee67eef375ad1d07930854</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>add572ca5368bf55db653ca540decbb86</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a73ee518586d137b67da13e9868d3f55c</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A, const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;B, const Scalar &amp;beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ad51399ae815fb278c3ead057dbc02e09</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, int, long long, EpetraNode &gt; &amp;A, const MultiVector&lt; Scalar, int, long long, EpetraNode &gt; &amp;B, Scalar scalarThis)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a10a2334ce757cd201126dafdc917d401</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a326dfc14a0e895a1129dbe4f8ec7cf5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a491a96c1530a0b968d816f0a8ae48f49</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>af38f107db1b15868e6748d6a4c47b99e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>ab679ef4e210f0b1e5770c8ac0d2cd494</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a2b5af991f90a0b195825886217507f44</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, EpetraNode &gt; &gt; &amp;map)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>adef320830f58ec419bbc7fb0f3be6f92</anchor>
      <arglist>(unsigned int seed)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>a936e4f0a5e37877bba14c3df3e78653e</anchor>
      <arglist>(bool bUseXpetraImplementation=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Xpetra_randomize</name>
      <anchorfile>classXpetra_1_1MultiVector.html</anchorfile>
      <anchor>aa5e15164bb2c2878b41bccaa453e2d2f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MultiVectorFactory</name>
    <filename>classXpetra_1_1MultiVectorFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory.html</anchorfile>
      <anchor>a92e7c06a99a670a4ef7b69dd2585f4d8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory.html</anchorfile>
      <anchor>a205cc614cb797537e4d221cc90adda52</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MultiVectorFactory</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory.html</anchorfile>
      <anchor>aa132d5398854778b1c99906bd4e50282</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MultiVectorFactory&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae472e29161705a661bae9e60310e2947</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aebd338a586fee90fc63b11b68d56476e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af53fec53a61be9d59412c1828c83a1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a639926f00fe3a449f490bc3b8098a2ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a19681c5c16a90f48a97be69fd5e189ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2ee425440ccbfc1e5a770e05a82fd92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MultiVectorFactory</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a27a52d38c869ecf56b2cc47a66994dc8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::MultiVectorFactory&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af702a5cc9ed91ea4615a35d5b6a54e11</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac92c75e4d3ab1353b7e6cc59d1d9515f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0705bfb7a6ac8e01f978118417e22693</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad3a910fb4879fb0adcaad04a68c7d437</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a599f958f14b23f00ffb3360df6b64bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a71df60932473995eac1f741cd4096655</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MultiVectorFactory</name>
      <anchorfile>classXpetra_1_1MultiVectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac1033d1f7816dfd95068335d271b8bfb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Exceptions::NotImplemented</name>
    <filename>classXpetra_1_1Exceptions_1_1NotImplemented.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>NotImplemented</name>
      <anchorfile>classXpetra_1_1Exceptions_1_1NotImplemented.html</anchorfile>
      <anchor>ae8da9be675fdd7864e0059dc7f65aba7</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Operator</name>
    <filename>classXpetra_1_1Operator.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Operator</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a303393b19779ee2467feb7e78baaf5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a082cf6d5c77042a0549c78e252dd3d51</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;newMap)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a2385769418c0c05742b0ad91fa92ecb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aea4154b8ac6d780bb8cf2cee06a494bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af603459a498fb04ab2e7ab98bcdfbe97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a27fb479e85b7c3778757b8aebddfdbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a656585e6cac337ace6982c105e69e206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>ae6901360eb270e8c0c31b9604b8dd75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a4401b5b94d65d2ccf6fa4790d77c40f2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aeb909fb0f9f45b8955abf3c734d86e1b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a8a9f6002a213131d2cb6bba4aa8a3ec2</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af09e909c3a819cd3d1719fe42d80d317</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Operator&lt; double, int, EpetraGlobalOrdinal &gt;</name>
    <filename>classXpetra_1_1Operator.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Operator</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a303393b19779ee2467feb7e78baaf5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a082cf6d5c77042a0549c78e252dd3d51</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;newMap)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; int, EpetraGlobalOrdinal, typename MultiVector&lt; double, int, EpetraGlobalOrdinal &gt;::node_type &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a2385769418c0c05742b0ad91fa92ecb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; double, int, EpetraGlobalOrdinal, typename MultiVector&lt; double, int, EpetraGlobalOrdinal &gt;::node_type &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aea4154b8ac6d780bb8cf2cee06a494bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af603459a498fb04ab2e7ab98bcdfbe97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a27fb479e85b7c3778757b8aebddfdbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a656585e6cac337ace6982c105e69e206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename MultiVector&lt; double, int, EpetraGlobalOrdinal &gt;::node_type</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>ae6901360eb270e8c0c31b9604b8dd75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a4401b5b94d65d2ccf6fa4790d77c40f2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aeb909fb0f9f45b8955abf3c734d86e1b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a8a9f6002a213131d2cb6bba4aa8a3ec2</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=Teuchos::ScalarTraits&lt; double &gt;::one(), double beta=Teuchos::ScalarTraits&lt; double &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af09e909c3a819cd3d1719fe42d80d317</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Operator&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Operator.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Operator</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a303393b19779ee2467feb7e78baaf5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a082cf6d5c77042a0549c78e252dd3d51</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;newMap)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; int, int, EpetraNode &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a2385769418c0c05742b0ad91fa92ecb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; double, int, int, EpetraNode &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aea4154b8ac6d780bb8cf2cee06a494bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af603459a498fb04ab2e7ab98bcdfbe97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a27fb479e85b7c3778757b8aebddfdbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a656585e6cac337ace6982c105e69e206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>ae6901360eb270e8c0c31b9604b8dd75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a4401b5b94d65d2ccf6fa4790d77c40f2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aeb909fb0f9f45b8955abf3c734d86e1b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a8a9f6002a213131d2cb6bba4aa8a3ec2</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=Teuchos::ScalarTraits&lt; double &gt;::one(), double beta=Teuchos::ScalarTraits&lt; double &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af09e909c3a819cd3d1719fe42d80d317</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Operator&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Operator.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Operator</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a303393b19779ee2467feb7e78baaf5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a082cf6d5c77042a0549c78e252dd3d51</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;newMap)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; int, long long, EpetraNode &gt;</type>
      <name>Map</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a2385769418c0c05742b0ad91fa92ecb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; double, int, long long, EpetraNode &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aea4154b8ac6d780bb8cf2cee06a494bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af603459a498fb04ab2e7ab98bcdfbe97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a27fb479e85b7c3778757b8aebddfdbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a656585e6cac337ace6982c105e69e206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>ae6901360eb270e8c0c31b9604b8dd75c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a4401b5b94d65d2ccf6fa4790d77c40f2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>aeb909fb0f9f45b8955abf3c734d86e1b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>a8a9f6002a213131d2cb6bba4aa8a3ec2</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=Teuchos::ScalarTraits&lt; double &gt;::one(), double beta=Teuchos::ScalarTraits&lt; double &gt;::zero()) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1Operator.html</anchorfile>
      <anchor>af09e909c3a819cd3d1719fe42d80d317</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Parameters</name>
    <filename>classXpetra_1_1Parameters.html</filename>
    <base>VerboseObject&lt; Parameters &gt;</base>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type></type>
      <name>Parameters</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>a7d4173750844151ba838168521909069</anchor>
      <arglist>(Teuchos::CommandLineProcessor &amp;clp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCLP</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>a84d55ee155cd8383dc02433ab2148ba3</anchor>
      <arglist>(Teuchos::CommandLineProcessor &amp;clp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>a2772218ffcedc1803532c0cfa143148b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Xpetra::UnderlyingLib</type>
      <name>GetLib</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>ad71c49a54f819444fe8541b15d4cafe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Xpetra::UnderlyingLib</type>
      <name>lib_</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>a14a15b48034238051cf6c11b23744d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>a5566acbed58cdc067a6f6b6f9273288a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Parameters.html</anchorfile>
      <anchor>a726024b38e5ad8d61ccaebb2ab25e29c</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=verbLevel_default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::ReorderedBlockedCrsMatrix</name>
    <filename>classXpetra_1_1ReorderedBlockedCrsMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::BlockedCrsMatrix</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a269a91ef67c9d6701f75bebf92cf882c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a063d35de437f2992b62e1f99410d23e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a3f8047cf4d09f7378747aa6b07e22bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a546392f446cf7c637c41d9b8485c3c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlockMaps</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>ada94ae461782cd78081cc82d319a9836</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; brm)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt;</type>
      <name>brm_</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a862777ce7d9eee01662ea505d800f03c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>fullOp_</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>af4d8edb47fda163f3d82509266b8dcc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReorderedBlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a4903c3493c68629e92f5ec0e725542ac</anchor>
      <arglist>(Teuchos::RCP&lt; const MapExtractor &gt; &amp;rangeMaps, Teuchos::RCP&lt; const MapExtractor &gt; &amp;domainMaps, size_t npr, Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; brm, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat, Xpetra::ProfileType pftype=Xpetra::DynamicProfile)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReorderedBlockedCrsMatrix</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>aecb06ed9b233ab8e236f0a62fc4f5637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a49ee5fcdaef81818f1946bcbea9412e6</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>ad2b12b6177da3b4e1b37f1c46029cc45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1ReorderedBlockedCrsMatrix.html</anchorfile>
      <anchor>a9c4c209a353c591dffab25c6140b6731</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::RowGraph</name>
    <filename>classXpetra_1_1RowGraph.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a8e324be661d358f05b7a9ff0c9b78b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ae25e121f24d0ab7aabe5304f87f654f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a573ca1308ae3b25f07444d79efc284d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RowGraph</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a120c1404c2acfbba88ed8e64bec43c16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ae685646a1cd5d50bc5eb31415181328c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a2842e12fdde9dac83a5a48d05b776a09</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ac95e1d4ad30c60cc84d7a08db283ab07</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ac491644e9fb643c82d6cf4648aa1f8ec</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a804e82c44eab31431c68b935acbab238</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a2e74477c1fb7346b5dafc7b0e8a459d9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a6469cffe1ff49818baf9d7cb9f4279f3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>afc83417bec7490333d742bd92c4ed4df</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a26434683b596199f23b0df4f5082f11d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ad67114154ae50c42e4c66684a8557f89</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a6c4d7abe5cf43282a4523081687bca23</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>af26806929c944521445458ceee780a6e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ad642a0275c5caee4f8a8d536746a97ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a47d1d35a1990d7cc29b1c9007fd3e253</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>af9a88b347bf9232648fd2e6c11db6e4f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a5a14f889f946d7c7dfb9747b9df13dbf</anchor>
      <arglist>(GlobalOrdinal globalRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ab4d137f1b7791f973aa26f9f4e9b36cb</anchor>
      <arglist>(LocalOrdinal localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a5d220fcf0b11d74ad8132a99777baea9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>af2a81403a821f29aab0173afe04bb668</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ae4073b6de197710cc6ba66ba9c2b6a4f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a3bfe2cf3d4b1b05c24b3cbd0c5e17e04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a1ed56acfea80c8572dd4f845b7d74be5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a52a4efca187d0669e27f2a0bae1e3478</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>aa53eb991f18c96e934b63b6c6919e555</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a91b17f1631b2e09498c4f0615db37aa0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>ade588069a777dc30834c4951cfe91afc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>add54b9d9a9f9217228b5a24de6f0e63e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a36cf2749f48ea24ce4a192ef1850665f</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const Teuchos::ArrayView&lt; GlobalOrdinal &gt; &amp;Indices, size_t &amp;NumIndices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1RowGraph.html</anchorfile>
      <anchor>a4c2305eb2ff17bde7570e342b071da53</anchor>
      <arglist>(LocalOrdinal LocalRow, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;Indices, size_t &amp;NumIndices) const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Xpetra::RowInfo</name>
    <filename>structXpetra_1_1RowInfo.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>localRow</name>
      <anchorfile>structXpetra_1_1RowInfo.html</anchorfile>
      <anchor>a50e6b64e521a8f3a56ee7b4717b6b6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>allocSize</name>
      <anchorfile>structXpetra_1_1RowInfo.html</anchorfile>
      <anchor>ac135a17f429d482081afdd177d912aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>numEntries</name>
      <anchorfile>structXpetra_1_1RowInfo.html</anchorfile>
      <anchor>a9ccc05b978b4a6835c79426c548ded86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>offset1D</name>
      <anchorfile>structXpetra_1_1RowInfo.html</anchorfile>
      <anchor>a7f93c8c8d83bcd3924e3590621a408ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::RowMatrix</name>
    <filename>classXpetra_1_1RowMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a2a7f6ded99b606eb9ebdfba983d447e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>ac8dca7b248681a1f86a51a19618e3213</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a51384f0791baa825ef4d4c8761897c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>ac523636e7d5f8c7ea06b707e9208691d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RowMatrix</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a71869c72f820ae166ffd3033940c0781</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a93fefc8a84e3eaa94dd1e06b6952c949</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a9b866ab4adf7f58b0c9f5c86b9b31e53</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a9b3a96f70555ef791d24bc4efd73af8f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a26c8ea77c70961037c58bced0a4327bc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>aa825e067d0677c1a8977cdca67ab8504</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a287553ebab9cdff9dbf196cde8d91b46</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>abc7ce41eb88892520973fce1bdccd44a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a536951fbb195286de721f22cd7e0b917</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a90b64e114335cfc6aa4f74a0eedfc553</anchor>
      <arglist>(LocalOrdinal localRow) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a051a9e620386a053bda1f3b572a8ed23</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>ad1971f739074deb500fc28780978a43c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a686095c3babb406a168439c3fd3e4034</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>ab62c764cedf8625295c771d29a08a8e6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a05e65148d556b80d25edf1138febff59</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a9363a8c57030e90ce0cfa9ebb79448e5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a190cd3278e0e41f1e5a047941ae43d7d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>abdd2f237d4c8fdd9aee3f4c06f63c2c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>ae9ec6fb2e40d089d48e4116e6d744af4</anchor>
      <arglist>(LocalOrdinal LocalRow, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const Teuchos::ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a6c12a931c073023488d1aada5dd231d8</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a8f5bc48c598c2dcdf5a3f23b0cad9303</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a26732d521237bc4f733a13be9db6aced</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>aefdd2f65fa6d67cbbdcbad3094e2c223</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a3b268fe6af1a9561ac85c21f9b4ae1a2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>a2e245f62d330ebf1b0c5f92b14a10e28</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1RowMatrix.html</anchorfile>
      <anchor>ae52739d55922f03c86c6ebe1b5289637</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Exceptions::RuntimeError</name>
    <filename>classXpetra_1_1Exceptions_1_1RuntimeError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>RuntimeError</name>
      <anchorfile>classXpetra_1_1Exceptions_1_1RuntimeError.html</anchorfile>
      <anchor>ac7d5b4858474547a2aa9e581198ffb17</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::secondArg</name>
    <filename>classXpetra_1_1secondArg.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Arg1</type>
      <name>first_argument_type</name>
      <anchorfile>classXpetra_1_1secondArg.html</anchorfile>
      <anchor>a2788b869e041adb834a6a1d8e2c3609d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Arg2</type>
      <name>second_argument_type</name>
      <anchorfile>classXpetra_1_1secondArg.html</anchorfile>
      <anchor>ab1cc26a5fdb74ad4bf64e8400e7150da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Arg2</type>
      <name>result_type</name>
      <anchorfile>classXpetra_1_1secondArg.html</anchorfile>
      <anchor>a9e218051e8d2217e9f870eabbe58c789</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Arg2</type>
      <name>operator()</name>
      <anchorfile>classXpetra_1_1secondArg.html</anchorfile>
      <anchor>a6061026605ab8036582a4514c002cc38</anchor>
      <arglist>(const Arg1 &amp;arg1, const Arg2 &amp;arg2)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::SerialPlatform</name>
    <filename>classXpetra_1_1SerialPlatform.html</filename>
    <templarg>Node</templarg>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>Node</type>
      <name>NodeType</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>af80dfd1a14890dbbf71e0dd2d2f04e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::SerialComm&lt; int &gt; &gt;</type>
      <name>comm_</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>ad9442a15053c455d9013f2475c480701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>node_</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>a96bbbf6b9789ec94b9e68d122b519fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SerialPlatform</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>aac708bca8b44ca587b570fd76e4080eb</anchor>
      <arglist>(const SerialPlatform&lt; Node &gt; &amp;platform)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialPlatform</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>a9cf607c0e90bf291917d0b20cfddfbbf</anchor>
      <arglist>(const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SerialPlatform</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>a0e5a4fde68d6607bce09d088a02464b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Teuchos::SerialComm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>a7954b4d75f5d3379906d611b2efbdfa2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1SerialPlatform.html</anchorfile>
      <anchor>a57643d7755c24ef7f8044dc2513e0997</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::StridedMap</name>
    <filename>classXpetra_1_1StridedMap.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">Xpetra::Map</base>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a1ddf168578497b65f9637cbcb5670214</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a9312e54b0ccf03b78a4ed977858180af</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a3ab2d71d86bffe10bb94a28dc593c86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>aa278954d2262789d2f68ffa075d11a13</anchor>
      <arglist>(const Map &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a1eccf1e30a144b53d2162e7d8a3eed19</anchor>
      <arglist>(const Map &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a4e71a7bde7129b892dadd1dc3cedf22f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>abea131c692ea39c33647f36675fa8bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a081a74bb0688f7cf9e9f16c6f2e432c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a39521790912068231d6b1e555d2ebb26</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a7e781dce53b4661ba397eb8006ed622d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a2d9f186cf487ee2375f4380a2bf1dfe9</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ac88d2d7df49b4c6f69ec61b79b679239</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ae7feba8dc2fcc4bf9f8d3c1040a8ac25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapFactory&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapFactory_t</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a98ba3d8605a3c5048b1a31d0f330ff5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual bool</type>
      <name>CheckConsistency</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>aa6c54a060e3ac9d55fc365247d4d6f9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>map_</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ae527481be5d07dbaf8487197d74fd42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; size_t &gt;</type>
      <name>stridingInfo_</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a14a2c8d662a80b4291470e5cf148ff7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LocalOrdinal</type>
      <name>stridedBlockId_</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a4e0bc0a7adeeb5d26ba7a04b24c148fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GlobalOrdinal</type>
      <name>offset_</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ab5b2156710c065dcf717481f55b32975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GlobalOrdinal</type>
      <name>indexBase_</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a3b3c3bf7a68ae95b07c72b0863ea2882</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedMap</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a7d6a06f6a6ef10e79c6f0b4eba12216d</anchor>
      <arglist>(UnderlyingLib xlib, global_size_t numGlobalElements, GlobalOrdinal indexBase, std::vector&lt; size_t &gt; &amp;stridingInfo, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedMap</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a5473348afa8b6b648e4bde4c01579b53</anchor>
      <arglist>(UnderlyingLib xlib, global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, std::vector&lt; size_t &gt; &amp;stridingInfo, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedMap</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a95a75c451935ccd91db623673bc52bfd</anchor>
      <arglist>(UnderlyingLib xlib, global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, std::vector&lt; size_t &gt; &amp;stridingInfo, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalOrdinal stridedBlockId=-1, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StridedMap</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a0e9e0490c21e577fb0991ddb28f91fad</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;map, std::vector&lt; size_t &gt; &amp;stridingInfo, GlobalOrdinal indexBase, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StridedMap</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a98680c3e8edafbdd2ecd65c7d21dec68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; size_t &gt;</type>
      <name>getStridingData</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>af9740e398e6f57c055dfef310b49912d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStridingData</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a75325fee0494ba207e983426a6b00322</anchor>
      <arglist>(std::vector&lt; size_t &gt; stridingInfo)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getFixedBlockSize</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>acdcdffee9606c43de589be0cd02a2f2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getStridedBlockId</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a3689a93a466acca3e60234455ccf15e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStrided</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a75fe5dc5f546305375d7500c6135c677</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBlocked</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ae0f51e937b94bf4add4e15128d220032</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getOffset</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a987ea8cf2a61fd9d2fd5f77c2bb8ff50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOffset</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ab51cfa01bccb4669057fd3c97f22c5d2</anchor>
      <arglist>(GlobalOrdinal offset)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GID2StridingBlockId</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>aa5858ce0aadf122c403f424d1b02b8de</anchor>
      <arglist>(GlobalOrdinal gid) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a9ef18d1fcfdfb7f009600a43f0b533e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ab926d7fcac7e2467cc48bbfc732a45a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a932838b8b51b1e661667a83ff2040a48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a3c02acdfccd26202fdf264c8e445cb89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a0c9bdf8355bd4e0421d75ac119d4a660</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ad0f979f1336d51f171158f887d3e5977</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>aa4cb7093730a0ea6d50faa1fe7fabd14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a96bccb6a876bde39462bf38e09029c3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a4d4d9c3c51ea6b86b203889967e00b45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a7d352551c27eb65d65f06a0f07821274</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ae35e1478dd54aba153fdba6945dd48e8</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>abc0bf8bb1ba0f288e75877d8070cb66d</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a15235b9b74f729d0204d00155805bdcf</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a430235c68c68b570f8d44320ecab969c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>aecb429a1e30b29cd1123032258952b7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a1847dc7801520db0c3a5f58a50020885</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>ad2961726238904d231af875048f0e4c0</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>a59334dd7a364a2b93558fc29813e1636</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1StridedMap.html</anchorfile>
      <anchor>abccc6987720b40215841f648141da1be</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::StridedMapFactory</name>
    <filename>classXpetra_1_1StridedMapFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>a0a75416ef7b14e3a8f5f0fac25bb0cc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; StridedMap &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>a5e78dbabd059a2c89e73b66b9f51b181</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, GlobalOrdinal indexBase, std::vector&lt; size_t &gt; &amp;stridingInfo, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0, LocalGlobal lg=Xpetra::GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; StridedMap &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>af21a1ae43ec87a8a9ee9991476851ce4</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, std::vector&lt; size_t &gt; &amp;stridingInfo, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; StridedMap &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>abdf441ae4631c6327a1f22e64e7a1fc7</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;map, std::vector&lt; size_t &gt; &amp;stridingInfo, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; StridedMap &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>a95dbea6b49ea3408528701553a1123c8</anchor>
      <arglist>(const RCP&lt; const StridedMap &gt; &amp;map, LocalOrdinal stridedBlockId)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; StridedMap &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>af7cacd0048ea0f1a768b3017a7b37503</anchor>
      <arglist>(const StridedMap &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; StridedMap &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>adcdf4d38222c0a844dcf9ee0abc8f738</anchor>
      <arglist>(UnderlyingLib lib, global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, std::vector&lt; size_t &gt; &amp;stridingInfo, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalOrdinal stridedBlockId=-1, GlobalOrdinal offset=0, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>StridedMapFactory</name>
      <anchorfile>classXpetra_1_1StridedMapFactory.html</anchorfile>
      <anchor>a252f8e04c29afdb6742bcd4b4d585398</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::StridedTpetraMap</name>
    <filename>classXpetra_1_1StridedTpetraMap.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraBlockCrsMatrix</name>
    <filename>classXpetra_1_1TpetraBlockCrsMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::CrsMatrix</base>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a6fbe6ccf8e4bf59517a39a10c878e301</anchor>
      <arglist>(const TpetraBlockCrsMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a89fb39029c4e860af8675df1f301b4b6</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a92b0f8a4f1d4b15b42fe3e9f10c3656d</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ae607f4f554ea5ccbc7fa0e76986b411b</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a5e39597d671ef15d78ed61f00dd6e01a</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a7be5e3e6a5709fb3b7a6896bf230327a</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aae671378c549c168fd2f44dde0e8155f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ab55aca5aebf46710ce58627aa3046da1</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>acf9a0699ae06fe74708bb023494651b5</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a61ad407583b8f800d9d03d9b155c1a78</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>abeed96f48ddc757da831f833ed45175d</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aff586f1ad2581896958a0f1daa67c8cd</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; TpetraBlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aef39a2655e38e650cb91c357e1243734</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraBlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraBlockCrsMatrixClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a93225f175e4d9f3816499ca660bc7937</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>affbf59a101be2e7f6506897494bd54e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraImport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraImportClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aab98c32c63a4156ddff2dc8776238788</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraExport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraExportClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a2282d877d56d9a3b2bda732b644e831a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mtx_</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aa67b1ad452589691e5df8e22510ca462</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a5c701049aec29911d85a6255d9f2a078</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a1736b053f6660a5e6c344ef7c394bd70</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aa44a8b3a2c49b01d2308b8509fcd33ca</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a1f33299ad11c4e6f4d646d306bcafc7e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>afcac7401a767a2d779f703bb50b74196</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a76f89ac13f2f4b85326f5d74e26ffdd1</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const LocalOrdinal blockSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ac59b76ed02f5320b5a379a295df91a79</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aa3a7d978487ed3a423f3777c1210b9d7</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>af9242a022f7d65323c092dec6047e5cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a0f1464187c67089c99eda14743729f62</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a8699ff2328b11b83640e3b9eab524835</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ad7ba4b87639fe8f65c6fc3a912cf6509</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>acb289ecdef237e98ed83bfe4c4f90183</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a2661f9936f03ce1c74171442ba7801b5</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a7e869e5a1f7b6449c82af4b78f814843</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a38d62e97444b08b8dd4d92dbc96cd25e</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a6835355b9b134062c47b2adb924bc4d8</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a8ce47df5075e55665846278d48c1f0d6</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ab4e80427ab9234ede0c240dc98fc5f61</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aaf89a1f34d9373edb6c44aeeed946b90</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ad6eb0fb3f221c39a3466f379f62b9c01</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ae49d226cbf078f16b191ee8a76cceaf4</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>acdfe0afd667f4afde5bbe91fd958a34a</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ae0b21d730bcd3d272de8228cecb66960</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>adcaf0b5913510a923ee598f3c840afb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a3be0efc0dc838c5c68433584fd3f50f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a4a3a25fa41e1e0a02e466388bf6aa0a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a47abb8c3b4c43a9601304bda8289752f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a38038e6f5ad1bd4739ac7923cdeaa972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>abc585a328fbf3bfde18961c11e6a3a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a6786f0e24470bfb586a5b0e06808802c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a0ba5a1518c7cbfaeadb1f8454b840b53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aa84b0bd6b5b9ec2c6c273421e29491c1</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a66572097634a99ac4af1e8101468fcd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a5e6d921c0d521c509718c5aa3da65474</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ac31eed255dc0446aac82340efdec7ceb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a43167a89b8b81d10ebf707abd454cfe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a3ed108bf8e54560dae6ea5a5caa07e97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a93a98ecde6afd0fb42fd594aa4fb55ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a47647917e8489c0a8c85ad77968e9894</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aee6c05fb9349b8ad945a4779c5cf0731</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ae42bf3eb444d020d6383974a245b5b2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>abefdcc822667de18937328d0a0d989ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>af43f5bb24eefb94d10fb31fc6bbbb968</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a46758089b5b8bda1d5e986adab1e4e9e</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>af2c3f769a6c2d848fdfa0b8fc839a885</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a8ffdb371315c70332b557a617c71d7d5</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a3806a026fcf62e76d01e6a55176219c5</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>af74c7bece445f970ead547d843338517</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>adcbbadcd6c668088237f8a3600990dbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>afe438a03ee136742074e4e6bb7f82100</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>aef32fdd8e74138f245ff061e2d562203</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a5ec7be697190f6b005561ed9c788696a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>ac358268511a4c1e51eada1c8e5792e0b</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_BlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>a26d57a44ccd31d04575be94c3f04e188</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_BlockCrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix.html</anchorfile>
      <anchor>af40b8abe2ec2371a3ab51812964fc525</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraBlockCrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base>CrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab44c671156a7986c5a4031beb827c25b</anchor>
      <arglist>(const TpetraBlockCrsMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3e6ef2121b1b831b752c9aba9c1ae285</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a779d58893086680e28f1f1c5b3a1ce0c</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a665bea1aebda670ad9c330dda880fb90</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae3de0a4cf241de77e98623cde369acb0</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a61d01eca8e856ce4a7c318d6e232e586</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af334e4c7be6b31a0811c73f22970f07d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac74391c0d2d8100b656681cde66b1657</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee18031a5f57e24262f9bd51f35ea2a2</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab776fc48cf9b0fe94f93ecec21311da3</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acf81c821fc7dfef00f76b39230b591ec</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a602496473f12604f967f16982c0c15eb</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; TpetraBlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a84883cd14acd838408e1c02b88430eba</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aea3a31f8923e2c5159cf6269e104c814</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a275f6ff92efa7376208a227349932c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af2e43756a9454d8b2b3138c0280b08cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraBlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraBlockCrsMatrixClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad3828336a10e17540e0a61d590ffc4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af0fca5d0838dc1baf721ace2eed9c6f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraImport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraImportClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a615bdbd58d8106b0d1bd7e03c7468bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraExport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraExportClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a46e751e2327d03389129afc19cd078c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a02332b4c0dfcde3a6ca58903cdbe4e91</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab18e1d5b64eb1c0a64c81bf4288e9004</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5310f21dc28252867f709225c419588e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8fb6ec40ded0e3cecb2f9c640cf20103</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad7bd5bc34954bc1a713999fdecddc9ff</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1a8b49973a87ed179d1d04c81c3ffa66</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const LocalOrdinal blockSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a482391391149d2c98f15dc94f8269648</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b3cbcb204fe78418b351ca97bc34123</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac34d1c1641209aa794275bc35b424a13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af9a25917f0a15179305017ce3830a837</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aef91447080ff3b8d9e983414f27d202c</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2ecf1aa8aa241647032ba5fb5edf9749</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a715a796c06d0251e9a393beeeff2cb6b</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0aba37651da12b09de171d8a3978d8e8</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af20148a2afa072f37a174b92d4f91296</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a93048cbae48f7cc5c93056e77eaaba30</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a407ecbae69bc500648843320a3751b85</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad84a6bfdcd70bd0dc40828c1361c77d6</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac5463e5def5d423a2f0c7b727af7d75f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3a95ada4f5e1c865bfa7ba141ad29809</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52d480f748ea3426ec9c4572391da4cd</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a810aa132ee65beb3310e84af091f0396</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5720d19e5847ec112bb2e6078d9df533</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a999dd15b5b167ebd2d4d374023867aaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3bffe6a1a7186166250515251718b123</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a128316439de6479411fdbf2ab9905843</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa2cdb8c03d7434b09a200bda6123d2c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac11acc02bc1305381d48b3934758d801</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aea9092c5c218fdd0702c2e4377d32799</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a55d71fa7ad61607bd920373b1c647d84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a78cf2e967effef11eef84998aad611c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aef50012f0b0c4096c89ba753904e0bd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8035df407b0d5f12e747acd62293eb20</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac7db532f4f943b1537a77b46dadc80d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad585e57f8faf15d77737a2a77bde8898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a16fa5cf8094aa6b7ea16f4e4c70ac093</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab8476fcaa89929227ebe031fcd96e37d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a685d3e46571b2ef04c6648e3b35600fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af3163a836406142772deea33a469ab91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afc2a0fca3c1087d576b6b7edfac1c87b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad40058b111c67d8bf39e912441b5b202</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1de3ddd9b7b5548ac341ba8448aa0717</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab97c898c002117adb677677ca5edcd59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3bd25f7b779f497366eb9c626cca52d7</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee104803770fa5832986fb8d8bccd82d</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac045880fac091191bd908a3cd47e71b5</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc2f56ae012b5359234e9753c31bec80</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3fadd2a4d4e2056fffa4bb50f055396b</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4471d75a96f1dae5daffbf65d270fa66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6c5bc6115c703c80401c12d2c65d5899</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8e849036373a1ac3a109d5cd1c6cf8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a083147e3caf93a9c6aa602b964ccded0</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1821d295ede3ec6bff5f0fdc5ac0ee95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1ad1924e1127c18c396cfeb5940bda89</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_BlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc0904bfd4298bc917296fbf8c094e3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_BlockCrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a051329601e3616ef2f2ab1168562f8ee</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraBlockCrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base>CrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a54b8dc4c17a5cea5c57fd60636af1f28</anchor>
      <arglist>(const TpetraBlockCrsMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3f9880641a90ad72107a0e98c3c53d4e</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a84395416740861d842f7af7c516a952b</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af39abcdf43b95817e57e7ed56361e7b1</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afd8f44d170ca8d4b272dbe51935f43d6</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0d9b477c659b2f6366f9e8a03f447be0</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc210466cd24821509c9ff240bcc32ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a49d44b7e969b21345816aad6e2bccb4c</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae339bb46b5a92581a9f71090354ffb14</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae50dfbf1722da11d09f0a2183dd16260</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2ae1e6becead35f0e5ae3031818334a2</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a30a6c21e6b027f440f8164172d9aaf19</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; TpetraBlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae210399cd6ceed6af6178a484a0ebb3e</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa5de66158587390086a55b966e0cdcee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a72306e1d984352112ce48e04850121ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6fa163a7bc9dd3031e0ed9b6c3a7c9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraBlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraBlockCrsMatrixClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a39a2f55b43dd80f18dadc3845bb8ff6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afdab5f8038e0ab28b80a21f9091a67df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraImport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraImportClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a723d7f5eb0760f0193a0da5519162cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraExport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraExportClass</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7956929f77f88fd13f25dcd455f153d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a38e250a01de46952f75663538c880619</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa571983f20bf7f58146769cc0456778f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9b9bc6b156f88abb17ddc277ed439592</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad09c40080c0053822081254f0700f488</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0c17d11c30c1b77e3c22535573f83c77</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad0956806b90778ca3da171feff140f71</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const LocalOrdinal blockSize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8e33b91b25302d1429e7a3358141cb95</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a51a0b5173ab8226afb6de962ebb2aa1b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac6976c6a3baa15525b55c4743046cc8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a635aa78782501faf52eb95920b265c85</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7be112267531e22ad95449c7963709bd</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a11a0f13e65ea6d414ac72d17491c0f28</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0d48218a604550c833069713633ea075</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac36dd3eb95c6c53d08e57e651e74902c</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac0f57c5127e3599285c9c9a3735d5f0e</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa2aebb2f0f6e01ee21d89d54aebf6ef0</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2706b072459dff099185d8a99dca6c0</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4bb5810dff95fbfa50a0faf8af83657c</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a687d7b8de472577f90671186591b5db7</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f0a0faefdde1c1b908d8ab46129e1e5</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a759ad5773ab51bb1025fd617c9e9a716</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa09acd84fb960d3617eb76663970fcec</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa0190f4f0b4c18b5b50f74d0866771f8</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3c7c8336fee24bb656c2f0aaf2652160</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a37a8671ae5d13c41687a445de779d9ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeae230d761ea28e5dd48b5d3318e6f50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a16efe5cfb8a2f33c758e06b781498e1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a50c25f959054fd0391a2eda25f86804c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8a693b5f2df87f7e3a3e5428635bb92a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab69d58d7f4e87a274d71c21c32b4c227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aefb8e2c26fd87513e2f3dfd15aba4f6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0ad360cf0d1b228a4e27c993de1c8df5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae67545561777544fb0e8f8492129b953</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc10948d70083b5bc218b316627c64da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad71265769b59fced3920b1a9ecba5fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a68c29030de583469efcd618c339e479f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b2d4b19b0cf1d190dd24f57e330bc46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52a65b391a7b6993fa951b7e6db73268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a699d28b51c6439d6f47df6525163e468</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2eabc6444f4a299af17efefadfc8ae9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9fbdc756fd1defabb7110be6a20bb51b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a817e96663f7a09676f0de514183101f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad86db0af11d11ddb466ba38950878533</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a64df7e4acb216877d1a74990e4db9670</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a536c4e2f8e0941bb27a2bff3c9e2509f</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae46669392a8db807c251d374ee30851c</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac73c917d0f1e6864e6f8de2c4c558d62</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a68ef56a0ffb61075e12413d8a3aa7756</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adefb1747af07fd2f02b904befd0d3ee6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a758e12bd9e1dfc10db4dce5de32bbe28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abccfade981a5fb22026fb04d4182d56f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a219ae96cded92850859522d31aad81d5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a97d26130c82fae59c66cc88c1f180678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraBlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3e02f6b7be6a6048ae2f60d5ecdea132</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_BlockCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a473fb1d8a62e9799ad30a8e988715d25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Experimental::BlockCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_BlockCrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraBlockCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac3e22e58a0a57cd3a16af08c6fd215c7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraCrsGraph</name>
    <filename>classXpetra_1_1TpetraCrsGraph.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::CrsGraph</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a0816d35e363e42de2f6809487c579696</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a4f0cd34720280ed75906d75426522db1</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>af3f77f9de1f711a315ffc075e21b5087</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aea1ea5bbba652e018da4135891abe351</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>ab6714e90944fdb7e3c2b0915fe71e6a9</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraCrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsGraphClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aafffa2d7974ad6a068e2dd950f4c808b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>abfb8541598a08f35e09942d125488d35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>graph_</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>acaadc8956c9fe9e26ac4432f05970281</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>af49f68e0ecf86d96809ac0387af5b022</anchor>
      <arglist>(const RCP&lt; const map_type &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a5d7936cbd4fa8594b62d98feaba04499</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aa6a2da15c169d284d3deb9765dc8c41c</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aa893592ad6f21eb11b74da330f4e9936</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aedaf881563e37be2778e58fec6f99e69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a0cd4873c44602ba0f5d188ab09773ebd</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a09384fc8413ac20d7d9428bb9cfbb85a</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a34409a69cb3c72588ca8ae059288582d</anchor>
      <arglist>(LocalOrdinal localRow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a5fc61ba8b18098f063d4333903de38c1</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>adfa28bce5abfc824098e57bbc75c1648</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a53e10d6b6cb6e2863542d0a5486ed665</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a9a8b4e435c30049f39c08fa4462d9cf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a17e5d95327906ada4302f797e6553b91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a63899e93a52c4da4074b1483a15a2556</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a74de33c8aebfca86834b2255ff41afc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a2eeb4971c8c54f05a6a48778cb2bdd22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>acc8c3bada7d57a7e2582a760976e526a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>adc232fa982138428f3fd467ebb52d083</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a7356d267e2802a6c807447f388cdb33e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a960240e23a963709d2a7c5c1e83a8f31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a0cc7273217ddc922c8bb09f01c2b5b94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>ac926eb9abf2897aa6e90a8bed818e535</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>afb46767416c92516abc1540ebf88ecd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a7f801821526c63d7eec9a9d1b6b06432</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>ae7d788d807d9a9fa79325655f4e3f962</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a4b3e7e543eab1a0c493a0b1b1ea95cc1</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a71033a3da700e938895700dfcda44ef2</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a42ea5221d2088515b1bf4224a71b28fe</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a58fd8896e46f3b008a34fec822730e93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a4a581105b93424a599157e5fcf63aef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>ae1517b0c7b4e4f7f7f989ace61724c58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a16b247bc9dfb90b4b737eb1b6050417b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aef71f835fb9f15db4beb7df238613e4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a106cd2509c3393674e899700ede4cc9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a81ca1106cca8644929d16a46b6c64ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>aee0181dff4c9f16ed8fb0ba76ea8c8d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a19708904d3fbd266e6ffa4ff0ce20692</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a683445a7e20a26995f8bce656f68ac27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a0af002fa26e184cc7fe533440b88df7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a7bb9853a041cd3b3545730ddf1587c89</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>ac71222ec6b48220f426a48e4ee83b4df</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a3648aa87682b5d2cdc1cfd6a43740f17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>abe534283f087d528af854f3b0cc5d8d2</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const size_t &gt;</type>
      <name>getNodeRowPtrs</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>ad1828cff6f2a83ed1457c450ea37237a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a0657d93426694afe4f5bd5369a4f1c2c</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph.html</anchorfile>
      <anchor>a104a79ef652391449b71281aab27b67d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraCrsGraph&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <base>CrsGraph&lt; int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a499a9b7ca40fa8eb272260b0664fbd96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a48a7fa18f13aed0f106fdf97c4a41089</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7fcdd33f93e05739e615b16d72c0fab8</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a990ff3f6bcb900aa9f50ba3e96bb976a</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaf2f697f60b411391b4d106f7a8c3639</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4e662966fd4c108154e8cafc168b0803</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f4702312a36a6dc66a4541701c1440b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1183aa408d8b74f77d7e413242e27cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraCrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsGraphClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a510519a28964f4e96d57f707e73a6558</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aacf0c0181719394d5bcc3045689533dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a84874073a5dd539e3d46218c1489af8a</anchor>
      <arglist>(const RCP&lt; const map_type &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a92646689df9c377690ebad6a413158f6</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa0229eba20617bf16144bda467e923d1</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad8e8282a00a2326b43da23bf693282ed</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8df9fa4381e5f9d6574cafa128911f53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a87c467f280a6daccc7e648c20e42f3f0</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7029ca7c75aa7e1cbe2cbdbd2c1d2078</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2b93719c98692b1705150384f2d62267</anchor>
      <arglist>(LocalOrdinal localRow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a79582f8066c6140fa679e93e71f7f17e</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a79b590ee8ca4af1af281a3d9a6cb1139</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1503d10d2fef0f1bd24f8681fbf93de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83a8d593ae7ffda20b492182a3f2c079</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a936c83ee57828745215c5f80ed8ed83b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a24fff2a1651040ac3b9ae26d203d9873</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a402fce6ca840dca7fbda3a0c3c7f6cbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a06850fd4872ec11aaf1ef362610ceadd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2b7368e2e58710c19a00a87d3cd1755c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aef873ec26090b4b121304ac40971644c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af7d92ff140d603a5372c82d69d3cbe25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3479aea2d5e22dbdd8d35f83b39f4882</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a61f3431393f5d9ba022b0b505bd97563</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9f5f7cf73cf1a36364e452337fa306c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5ee22bcfd44473fcc40757ec6fdaed76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa82628b5a7c6ee2e0204e10f83e69446</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa1ad712402823bf92aca8413fd0c4fcb</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a37b67d6b2baf2e6500ba2451561596ca</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a82da869ca39ceb0b7c57e9f1504515e8</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8633944c2cc6c54e130c639c09dac2da</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abfd4c066c8d66f1ab45d486021e65d8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a62abae527c62c8b713e913077dc05849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac5842a4144b6f0610893bbadaeca7e22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a32fdce65420850042d8b51b6191aa899</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a24ba109ebb20d8f4242ab3181a64ea4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae26fbd2391531322fc338d97e8fd08ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5a9e5fadde12d9ed2b06327b05900722</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a09a845a9939fab2b658bf00fb7a28c71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a56c3274f956b293b90507b2d8b088211</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a94fdff1514addcb3f3b03e4f98458e43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad44a451b81556e9d38a052ac6546b6f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7c335cc67356f5f8c8135ce10f2a1c9b</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7f54dddaefc2ef3bfe2c7ea63e7149bc</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2e4d7b443287ab2c060769bba920d8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af9e574b1fc0a336b97b11ced8ace722c</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const size_t &gt;</type>
      <name>getNodeRowPtrs</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4d4250c3abc7eda3e7ee6bb2759bf12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaca58351a6700d05754a3105502fb26b</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac7298d6f93bd16dc24a6f2f949c1eada</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraCrsGraph&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base>CrsGraph&lt; int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a84ee2df27bc9bf24aa24b7a5ae2d558f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acb89e8e3631beecd6b703d9c07c7bb15</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a73c9da8ce56ee5aaad758502b639f338</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab4994d26d027695441165d46da954123</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a16e773df7ddd4ddc2f495f0239e5fe1a</anchor>
      <arglist>(const DistObject&lt; GlobalOrdinal, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acd6de32bf6580f53ed0ec0b02038e699</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab3384b56f914a8d0bd7c46c2a3e4f56c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa67a9cc44b6c5dee143fc4aa824d17ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraCrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsGraphClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a75e6213cf217162935b1d922e099894b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a26467688e18d17d9b03a504af9799bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeaa34debcc526f572020b160611ea252</anchor>
      <arglist>(const RCP&lt; const map_type &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a645209561582fcb17a50fbc84181841e</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8f3d17199a20d8e86d5c8ab03fbefd71</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa4a4670ab5c8b8ecdc768a5ea0f18497</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a00b10af0e3f261ce5ee6e405e7e8aa51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa970b3771c7a94a2c568d5ea22e415ac</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a037930a078cdc02c8fffcb0d8926e127</anchor>
      <arglist>(const LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;indices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLocalIndices</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac5b760c75b419fbf44753921f8b978be</anchor>
      <arglist>(LocalOrdinal localRow)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0dd41093d075b430bffbc72165c355aa</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2327579b6b94975aa2e66603b9881335</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6a434cfc4180e4512f3f75632ea94694</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52bae010ae8162a2debe772f1bcab1c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeee2d7576f30b187f36c9634847f0625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a20e6c0d06ffe8734d1f3ca969f689874</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a25882be90d7e0c72b27e99facfb757e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getImporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a066f7ac7df2d5385ea70773b869bd2d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getExporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a906223500a4a867fc7dcaac38b78a591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2f7ac7fd075e882b04fb8bc3efb3965f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83995ca7788f999a6d10b1108138a139</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a016c3c587d641c238c4bbcff13c97209</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a866cf8e3cabb54c50d8ec22f19235a5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3968d588f587c35191956ea7c9b11989</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2eab42e45112d03e9d93e6c5a4d94724</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0d3875776066583ddc46aa5a4c989a55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5cf43c3a00e22e3e8ae50dffad2cf92b</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aca0925908715bb98ddda64b98386a472</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInGlobalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae73d4186b2546bf3ababbd5624258e74</anchor>
      <arglist>(GlobalOrdinal globalRow) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumAllocatedEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8c8fdff59a8113d9ff644e57a37afd88</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8d25486343d74078bf4c3b5412a14a5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6dbbc3d512e91f3cc41a1d5427036a02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81c9ed88b43afcef10eec3c8fea517d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af7a48e01e4031044ec65d64f19ddae4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a152b537d43b94019ac0150803c1fa755</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLowerTriangular</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af722b7ef8b19fa451f6d3066b0b42154</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpperTriangular</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a368277e43e58073adb35232f311c5561</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4b7196ca0c13f8a6ae12a0824a837713</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7731830bd0728fa29614633f250c95b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ada45fdc7e24ed6e4b4fd8452b0d696fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStorageOptimized</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac6aa72ff53416bf83c1fcfb06be29878</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae2960e004149d49fb5f3f80cbc1b630f</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;Indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4840206abf9f27a03c8323b44bee0644</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6c9cec43d3dbec125d21e8d7e961a8de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0443285e805b10af4c09667f7451e089</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const size_t &gt;</type>
      <name>getNodeRowPtrs</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a76bfc775bf876955ab7c0c8cf5ad2d3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab6153c5a6a740c8a5c1c6fe78a860bac</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsGraph_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a740d0b843dea980cd6b719b0e06b72a9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraCrsMatrix</name>
    <filename>classXpetra_1_1TpetraCrsMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::CrsMatrix</base>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a7bd331de697031afb5fd66c11528f83d</anchor>
      <arglist>(const TpetraCrsMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a333b18a6942e43d68cb6fedaadbca5cc</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a7e03b81cb63b2a45df5ec95ee46c749d</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>afc277dbaf60c3b54e9a4fac1edfdfc67</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a706aaa7d5baaca1a45ebb5ce4ee54ec3</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a12c7276df2c3cbd16c9637f2e820e269</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a93adab81c20449004b322045874f969c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ab52771b4269f7b4b923ce6251919aca4</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a5fee5eb75bf29cfec92fadb15bb00b87</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a3e66d51710532764384843100a09562f</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a55759e9e95b8f20e96b27838945cae18</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a94db8134828547bb33c1ad87e1400aed</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>af71f1d98b22394e88e91ce8680b26c7f</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsMatrixClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a4d373e5c2c8b83c4d7bfc28cedd08b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a7c7a55cdff5e9c79606e797ed4c6d9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraImport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraImportClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>abe9233b12abd024dda4d294b2bed6faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraExport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraExportClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a8025a902dea12562bdff67de1c5aa2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mtx_</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a61824a487b2917b6a11251598e60c1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a7f1517bfce2848a52bfeaabf9441463e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a06ec71f0573c44e434ee7dbf78ea765e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a0a40a6b9b8e967782502a44467eefb47</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a15236d0392d90b88e0b3a68927760886</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a53adfe243b90cf78d592b5cf775cb708</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a132c1c74d900f074b5e1cb746c8fc66a</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a3d71437c53ab8384f684e00248a55844</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a42a8b19742376cceb5b09d2f5529cf1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a6572aedf566c0e5ffc32363fc259a7ee</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a03ae1d5c8a2b13cfb4545603ae1c9b86</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a2314e17bc7447cf3910114a1fa863573</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a0815a4f13e7b9705da8c4844629ca4a4</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a83c71d7ab0d355b8d2389850b69883ed</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a2ec68d8ca7baa0842ec2574df3dda130</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a4560b08031fb45cc2b209175b84e98df</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a933fa0d83de26897da51bcab285c90da</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a20a88ab724895e40b824fd213b0a0ac8</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a64a35ee5bf92d771da4e2f7f9f1f0faa</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a43c8736b3141cd20a399844dcdfbc69a</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a9b888be084a141ec3aaf503418f49a09</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a8d0999bb8ed735d749e1dd0f9aac3086</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>acd28d93cfd256e7dc96f2343ab430299</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>aa8aa3fdb075f02c5b64e4ec9f198d2ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>aa64052524ac48916877df1d791e7e6c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a156978fb913f4b2b3d58861f56bbeae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a2b70d62f5e6b7552d18f30ed336a30f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a82b8675930142196ee794e706967dcb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ad75ba5c654feb31aa851b3a7d2b960d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a764e5ccaa740db6d05d7f68287f205e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a49e5347656f439a640511b392140375f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a9c4a8c8783a05b3978cad280a241e18b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a9a356d6048e7effe4ccded13c52d8f09</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>aab6d79c560361e5fc778fc3b5525da55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a5d1c7904249fc5ccf25342136e147219</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ae138f944145bc4e98f75a2282ecc77fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a6e12e22b866459d16cc6bd6d9aa60a6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ad412f6889f589be462061e3087f224ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a21bec07cec5b763c0cfb45067e02e4a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>aa22ebeec1b38cf82e209ff3b34f8dc53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a7ac4b98fc36caccbc1745369457b85ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>adc0a2ce0826c4ef836a5c781938515ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ada518523717281cbec3966a420b05131</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a394d4b77366704d22245385a6d959ea1</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a1903506e8cc8a7965734750c7835ffad</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a19d42231be6fff286d11148d3c1385b8</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a6c3b88df5c19bef7e059f1cd3a9639f1</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a6c0ad2552e9c233ac3ec653cdb8daa23</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ac2965aed065cef5e4a922b42892118c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>ae6fa45796a239fda5fa2528904f219aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a50716e9f294b47c88e9bbcd2e5bcdb29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>aa06bdde447296c7eeb88dc3c88e59d90</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a85dbb1ed274e6e51e147f47a689116df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>a15306c5ce002c499856109ab41e8fb99</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>aace52b3f99972ae030424e505eca5e7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix.html</anchorfile>
      <anchor>abd0b4dec93dfa795cb0c77ab702b524c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraCrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base>CrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1a46509a7890f208fa04d97bcb84e118</anchor>
      <arglist>(const TpetraCrsMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a09b8fb4d656bc9345b0982318189a9cc</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a11d9dcb6bc0aa385cb9fbdd6bb4ac0fb</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b41f5f5dc8612214b5f59eed635f8ef</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1f8081e0bacff6d11ecb6ec0fb636d77</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad041918ca31766b9792c2cf936be0041</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6f91498a60d653488177493a9a25adc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af32015e768ec439c411b637894faead7</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7d2effbecee376407b981e5d2140c709</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5b2b5a877227a9c1fdac660cb5a74833</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa5a52872641ed86df52b4f382b9d0b5f</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adf83b920f7fb43f01a95e37bd27f905e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac12ea2386e14801a6ab8a225f59db34e</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0e7449139d3d6a1daf500f0a5ff4bf16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa72953c8b459320b3a06f1cb8b75aefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee5bd7ab9da6048117f458cb993df197</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsMatrixClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc67b4eb13b5134e3561bcbbced4296c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae58d7d6ac85640a97204294e15c56d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraImport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraImportClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abe7e29c4ab42c623b7d16635266e9e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraExport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraExportClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5fdea4ff0b4ccb554e5adcd8501fd646</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2f2918d0feb43bafff5471aecc7ea2bd</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1ab75798de5d06ef717e07399d07772d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab4b3a75dbd8d7c723a0a8bb28565ad7b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a86aa7eba7b28be09bfeb77986485ee10</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a428535955457c4bdb25afa04174a4c24</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6da7f730a68b42d479e97b3593e266d3</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1bc736255a2c690e895c43ebff067dc3</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad277130fb9e4e3ef5f77b990a44313da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a469a99a0bc8b0ada76d76097b58c03f9</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3365aa6855fc5208d3262673da67b7d0</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad419f99cc5a63b4b664aee575f916b8f</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9c00f6e111c38d87d5bee4fbac032653</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a34b1102ff9a238cc713dcea57982f799</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8a86fef24ee6d39b07875072306f7f69</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8a3489bde2a65818ef232a4fedda3c57</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aafbf0f661bfa038606042e97e3f898a4</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a468a97e1e689dbb5146e4dd08af2601d</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a823199ec25e518e741b3ff65c9716ec8</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b96dafa9b55e6edd47d51fa2da6f1a1</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af19f79cfdc39b8c2cd56f4d3ea5f90d5</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8fbaf1f864115155a001710be10d70f4</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1a85cf9f58a9ca2f6177e005a94c927a</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab8d8a028bff8e2866cc6eb7ded5222da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a050dd29c1f58304ca94dc0d96decb224</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab0d0933e437801ce50fb2e6ab7a07201</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab76763cbc388d3fe60eb4c2cd55d7f87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1613436c100f5ad830a801947f1a7fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a17f3f7592c709a1b95444595bddc3311</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a61c811ea89978be401a1f94ca00906f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a009dbfbd016413939350a6f317d56c84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a55d5267b0cc9b57c979fcc8b22aa5794</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a65d7c8112a9c50db1f7a7ef106307cf3</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acc14dc270bd04657f3103896ed526a31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3ecaf02a6a029ed1305e45dde9de408a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8511a357cd00bdf0377d63536de26c6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a15ecf4bcc281d0de638d0501d1f3454d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8bee3ccb5e955cccea197361d8d39615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6d16b4e041c49d14b6f5756a5786c19f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6a604cc9d0da918e34012e47eaf21f82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae49f35ac0188fe389829289e83aa667f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a82a402aa8a582475476a205edc63afcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa437c75edbfee113db8895a602f5fb07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad6d4a527bfdef02713eeab7efe9c4b5f</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a841b158fc25a36517ed1291f543f8cdd</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a16b30ff340929908fb3593158213b5d7</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8060eedcded92e8f7e60b2a3c8684814</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae5eabbdcd86eb484000ba57d4b35f154</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a066e0f3e5bd4c705dc7f6efa22c435bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1a1eca8e5a7d3a0ba23a94bd65f82dfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aef72b5973574fa8809a363324cb3b49b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a21a9a3d9093674acd7ea8a641b226f23</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae908f67659f345995f932bf5e8172cec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0b41ebb293cfe5d280cd673c2772fb02</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8cbe0a6c2a2e3058f8cbd272ffb319b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4ee96749edd980b3a47d0ff0be421a42</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraCrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base>CrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a815453639686a4074a63d860d98fca2e</anchor>
      <arglist>(const TpetraCrsMatrix &amp;matrix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f36d06e8cb4a096dc114a0c98c70d29</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagOffsets</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a785aab8154a36a2fe32bcbf467f49281</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aba8ab5de72d9a08218460242a0c3d6ef</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag, const Teuchos::ArrayView&lt; const size_t &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leftScale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a336f961702b162edef7c9a0414cbde93</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rightScale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a90740311ee316854a4338051689bbe00</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc7c9b6be278d14e9b3d61eff176fc76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a14d8d9374ffbbc928aec6ca9b81af4da</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac0a16622fbb828a1bc34bc14d0306a4a</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abdc71ae4e86f2741b2a7685fe38a8419</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afd15f491b51b7f60918ce1f4ae259242</anchor>
      <arglist>(const DistObject&lt; char, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEmptyProcessesInPlace</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a20a04b14d31dca76ec6943e7fb026aff</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newMap)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a32cd5329d92318ded05abdbc3e79d88e</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac8c0327ea0f548041bb7f1b2ea868c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac0b5598d3ef5bbac2240b523955a4cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9192a11fa07d8636b38cf8079027284d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraCrsMatrixClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae820d95cd01df1c2583b1c0af9dddd44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ade442de2a076161f21506fa4dd60607f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraImport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraImportClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac9e2e25b43ab8d00b577cb1b24380bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraExport&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraExportClass</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a04fe909d56396ca69b8cf77992c3942a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a44b6b8e96ae28ec287236089d260b4f9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0d2f22eb443935c1f16bf6eb6e5a7770</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9de297839185c9c5e3242b564fafe367</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, size_t maxNumEntriesPerRow, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8667c2c86dddcec063582cddd35a6b04</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rowMap, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;colMap, const ArrayRCP&lt; const size_t &gt; &amp;NumEntriesPerRowToAlloc, ProfileType pftype=DynamicProfile, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afbd32b4c10b09a59a045beb06668f5ea</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a326eaed1dbca2ceb4635471a798e2183</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a47dd983bf973f5f0e325df986366e1c8</anchor>
      <arglist>(const Teuchos::RCP&lt; const CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;sourceMatrix, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap=Teuchos::null, const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap=Teuchos::null, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a32e62e05d4af8da25638f93510850b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad9b9dccda0f9d193fe78bb5ad2e16fc6</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9961a78bb094f90041ee06b5462313f9</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa4f5ec546c976dd8a2b330da7c6bffd5</anchor>
      <arglist>(GlobalOrdinal globalRow, const ArrayView&lt; const GlobalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac93ef061ec78fd01d381c693653b561f</anchor>
      <arglist>(LocalOrdinal localRow, const ArrayView&lt; const LocalOrdinal &gt; &amp;cols, const ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllToScalar</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a34b6760e94b5e294d55da23d30f59c94</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5b9461c887ffc283c474d502d72bbf44</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae4b1ba922eb8033ad8ef1aed9000a37e</anchor>
      <arglist>(size_t numNonZeros, ArrayRCP&lt; size_t &gt; &amp;rowptr, ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a42f43e788b75b99528527d018a505b68</anchor>
      <arglist>(const ArrayRCP&lt; size_t &gt; &amp;rowptr, const ArrayRCP&lt; LocalOrdinal &gt; &amp;colind, const ArrayRCP&lt; Scalar &gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllValues</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a644d6477376eab245a3c6cde7cc488cb</anchor>
      <arglist>(ArrayRCP&lt; const size_t &gt; &amp;rowptr, ArrayRCP&lt; const LocalOrdinal &gt; &amp;colind, ArrayRCP&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resumeFill</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0bd6fa059ce110071d4b57db760ba9ea</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad5ca1d5247e087e6d5043639a442bb21</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9660478ac7c5804d9312847aad7da787</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceDomainMapAndImporter</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a51665aa5d3c1cec9064360baa4b0dbb5</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newDomainMap, Teuchos::RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;newImporter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>expertStaticFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adfd04b79fee0a134b2ec50da26e34005</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;domainMap, const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;rangeMap, const RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;importer=Teuchos::null, const RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exporter=Teuchos::null, const RCP&lt; ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a11f0c1f84182b2806fa6db397fa5970e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aec58d22536bdb6f110371c056b49e70d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getCrsGraph</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a35fc871629c7c5ab62fcd47a7b916b7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3aba1be0ac035586e81ecf207d04653c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a68f14ac6590d04684111553449f895c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a44efc3bd80b7875bbda80102d26ae1c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8373f7ebee969a40950a9e68af6225f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5f48ff77fba5006d2298dd796f979c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2e314286765dab1b56fd3d45f82079ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a80f04490a629af5090cff6e744af45cb</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac1afbcda8196093d74740d4cea495540</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7f3f8888fb87242da72c7e7fe868f16f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a86ec82ee5f5c2444208cbebe30732b21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad6aa5386373bf2382c967d96abdc7371</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a977b0b1210c6b0d0a579310512ae3886</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0aa8b68ae17b8ef880563aede20b7a9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3f7474b793bed79ab00e386da8acf0ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillActive</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a33b8010d2e2d389ca3566b6775bd37c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab2e4d932611f1025a40065f33036e2dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aacf93335bfdaaad88cf1796f7fd01ba3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaaed72d8b3653840c88852b1a55d7cab</anchor>
      <arglist>(LocalOrdinal LocalRow, const ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a75a46ce56efd5f3b87d64a5aa62bcbe9</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac41cc5bebbb0c515ea053aa543653fa0</anchor>
      <arglist>(GlobalOrdinal GlobalRow, const ArrayView&lt; GlobalOrdinal &gt; &amp;indices, const ArrayView&lt; Scalar &gt; &amp;values, size_t &amp;numEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a80eabdd3dcd2334b9504eddcce28d7d5</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a66dca26f351653326ebd3961e86034cf</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad4c420837b6805cb61ca873f8e99dd13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae2f8c83268e98ba6a0c2767ec33fcce6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9fbab1f7ee453e6b36bfe9ab0604d4ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acfdf10055cbef5bb385b8d66493aaa35</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac60e18328e85f9567cc64c27f72583ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraCrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab0e654a858605d5465f9332c5872ec93</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsMatrix</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab53fc88f2cfe3d4a172de2bcf36c1c9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_CrsMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraCrsMatrix_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a185e6582d8678f6b52da53e666b8fde1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraExport</name>
    <filename>classXpetra_1_1TpetraExport.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Xpetra::Export</base>
    <member kind="typedef">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>ac80c26e845a4062f6287ec80ca364036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>export_</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a38b19641234b1bef74c56f72c9e632aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>ae1b3d5a51c15536c21d0a57ea73b8048</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a52766eb26dd829eff33a14fabca78e0b</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a553c2268350083acf47cc977d278b7e5</anchor>
      <arglist>(const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>afed37c1df9c0086194c69868b2245dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a693e88630cdeb3ac83dfe44e3181f6f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>aafa3bf0e572dc9876cf08e3490b2f30b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>ae7518c8b539eb6a0a6a4860feeb94065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a5b70f07381727e6bd2327fb521a4dde9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>aa87f8feab482cfa2cbf1d8d0615f58d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>aef360c4dd9d209c1887a235a5243d65e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a399c8d2e50063a1c96d96c271383e324</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a0a50b49534a44ba3e21b18740b94df85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a51d9a87676a81a4ec143865cc1d971f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>ac523d889be078bcdecf9a47d919c8b0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>ac4d03e5d69a6daf1ae252b7f906daf48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a32dc222dea972d03c4c30e09a8ccf670</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>a8e1506465d9c291f82f4aac41e70ccd1</anchor>
      <arglist>(const RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exp)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Export</name>
      <anchorfile>classXpetra_1_1TpetraExport.html</anchorfile>
      <anchor>aaa705e370ec4b1c6f8bb262f5377c0b7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraExport&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <base>Export&lt; int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a02d0189f309bc3959e49bdb2d5400b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aed5c6c4a465029adc53b2656802d236b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adfa8432e175c4b99394a099586321aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a911dc0f5d1dacd93e79169d283105b31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1ee0246269ffcb0c88dbaa77ebff542e</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abbdc576ddb3b149ad3be5a0464c3fcbf</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4339b6715d0bda1fa2644d2f16ed3eab</anchor>
      <arglist>(const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a158b8f467f2e417373df7420ed9a1294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac0e3b6d65769b37d621f9454be66b9f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9090414fec155447bdace2ee51f6dcd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa7cc30169912eb37c99731a298abc7a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7f29856cd32a3749d4fcec199dc6065c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a33b56d013a6cfb5f14f5d30ac09f6685</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad63ab656e4296f4ec050872f43dcd387</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a138a55a12cc689fe2c67805c1404588b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3d57416495a9a7654a6511adec54f12f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afbee2efa9a686977e2a2e97e1f2648a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2fd51f139a5ccf876fc6b54b2edb8434</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac77c68fe07d7ab74c608b05e6de3dae1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a68bc448ae638fe21c0c1dbf2a8e04767</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0c6968e954589c80a3412ab4a5bc56aa</anchor>
      <arglist>(const RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exp)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Export</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2fca371a0f63a6f046afe902574ff75e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraExport&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base>Export&lt; int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af7a50c149d6deb6316219767bc5a784e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aba4fffe5d5ea66a9e543050bb68fded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abcdf52c854b278b19241e1cc622defae</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af120bc3da18d2ddb735438717b4dee3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa9b7a353754513a65105d68de093cf86</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3a45f4deb4eadad24fbef033b85774a9</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af6216bdf3d6d4e0047c5699095415226</anchor>
      <arglist>(const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5fd5f763c0300656c6994b9a0bbd53e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abdefa5421472617e22393a16434b1ad5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a71c40c10a0c5f1dbc960e453bed21503</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81741de20371298e00cb8b5ca54912ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4751658a6ae3002b4fedb53574ea34e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af47ee37b5e08b34d7a67576f80e18c81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a90850b4b0efd55ddd801799e343720f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a873a9e858f9f0fef63ef9167526def4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad21391659d89134b723428fc539c6a5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a41289c5c2699b21102aab05e4a6efcf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a548f3ffcc3a31355bbb6113387e431bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acaf89750c97e22300df2d244dead43ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a770b1bbceff588228a543e0e2580bc32</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraExport</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abfdd5d492e6fefe655d600401c2baed7</anchor>
      <arglist>(const RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exp)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Export</name>
      <anchorfile>classXpetra_1_1TpetraExport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a94f585d9a4af5cbc0b3eb3b69daa31b2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraImport</name>
    <filename>classXpetra_1_1TpetraImport.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>Xpetra::Import</base>
    <member kind="typedef">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>ad398d4747a6e720b24c9d415792870a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>import_</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a8e82c6d04ccc2b0c81ce34cb07062e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a7560100e076420a2a40130714ca229be</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a7859e3b981f71add95bcb84dad700fee</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a4c377f58b3d4ef8a05e0337dd3e97a90</anchor>
      <arglist>(const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a7238d228cb476f296af4177e9c5b4449</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a5df04c5962f12bb4e5556b66cbc8e614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a3516d422be8de1022b1a49ee456fab1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a8c6813c7918e277d9e99a775e71d6405</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a897ae69211bd3779c303d60bc57b997c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a2839d072004727f4b990950678f6f50c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>ace556ba594d32c79585219c4d4f48491</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>af576312725d67445083e9470d15425b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>ad8eb054b06f5314ad0debede64264d8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a6c0bd7f296046f9134b67a643e7ab4ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>af806a37e3dc476be692317e40477a0f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>ad1d4a763d3d68b4f800f500f319e2fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a1d376e23264e953520f85da4e46c980a</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a99d14bd20691c730067e9280e4ba5859</anchor>
      <arglist>(const RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Import</name>
      <anchorfile>classXpetra_1_1TpetraImport.html</anchorfile>
      <anchor>a3a079a6814e46e3476f4f4598b5555a8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraImport&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <base>Import&lt; int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a14d70c2ef689bd1308a42640d759d4c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6a0f7f7dd493256a5e5dfad428ec9603</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a380ca1522eadfa22ee70ecd7ce002060</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2cee02584f81cf99a3f08ea656077c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a74b9969727f5cdbda21335399e22c93b</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab4ecd210db6a044c9be23475f047d24d</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a53e898f3b58f07062553973567894e8c</anchor>
      <arglist>(const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9094007b8f139edda8facf420e67af52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae974025de503bf2d824993499fba264b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad883d82b7a5ff6ebb2880ae36fcf4d5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5ddaf4e8785f106ca5f985797fb8d87b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa3bab9803d1d2b885e441110bcde9375</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9f9fc7e735631bdb1d1206300bc7178c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a958aa95c5ef1fae75dd885dad12e900c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa0551339c29e05fffebca0bd0fbd6df8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a51072b22ea3934bde4e079562f7d1689</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa9fe588fe72320fd862e48412a024e12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adfb7b1937ab82e28305dcd4e99563209</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afbcbd842a5a4f0d1143c02152fffe60c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a618da726567cf50d04a42866bc919788</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad8f3b68060674257475790d963cfabea</anchor>
      <arglist>(const RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Import</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5b22f3d5e6f9875d47dec35137473f5c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraImport&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base>Import&lt; int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a79dc1afd4830d2e6ca6d0cd5b3959da4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a82f2f422b3cc19324741a074a3ec91ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2541ab819e1190db7138520be164ba49</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>map_type</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a498dfc6c9d0e845bd06bbab695092867</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9fbb94c57da8c142eefe761cdc6582be</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a45fc668ab62f8b64fab3641abdd0ab2e</anchor>
      <arglist>(const Teuchos::RCP&lt; const map_type &gt; &amp;source, const Teuchos::RCP&lt; const map_type &gt; &amp;target, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3b0bd1493f21ee3c1986f8f85437c264</anchor>
      <arglist>(const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a92f7580128a382fa17b3193f9dc289f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumSameIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1ea136c724d91a5145477989f3f721f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumPermuteIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a028fa30c81d5ffd7ebcffced8ebe354d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteFromLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad1ce49fd58b4e9ebc27e89eb2821d1fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getPermuteToLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4a64855f3951ec42509798e6bbed5a7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumRemoteIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a53baf2f4c705605e4b8244b70ebdab4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getRemoteLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7d4bad105234061591a9f39846a14107</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumExportIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeb1e658e7e1f2182a2899322cc7c7603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getExportLIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee36da7eaff5ef344cb391ab67d9a6d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getExportPIDs</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1f0143e5fedd26ec4d15a940d5d1c480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getSourceMap</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a84f397f622ff9f5dd36e09bfbfa4eb62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTargetMap</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a422c88fd425b613ea8f54a19dbfbe52b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1c215d76c3b6779915dc283edffde0c3</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraImport</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afe55d0286549a011ca53fa57fb21e6a8</anchor>
      <arglist>(const RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Import</name>
      <anchorfile>classXpetra_1_1TpetraImport_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af19aa52805e0a275a716094fd4a11e7c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraMap</name>
    <filename>classXpetra_1_1TpetraMap.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base virtualness="virtual">Xpetra::Map</base>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>aff8493f44a92c724849b6e01d2930f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>map_</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a9213782ca80d1bb1ac8e3880e91c9d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a5a71027dd8f7c1dbddda12a78479aadc</anchor>
      <arglist>(global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a5ea6cb68fddf01bfb85dd9d87b35311c</anchor>
      <arglist>(global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>af229aedee5380a4161c515ed8f3448aa</anchor>
      <arglist>(global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a2368c85b83b136c6205a528dc6dbbf7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a1a18bbd301ca35efb9e22c002a984826</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>aa9248d354d66c05c41b9186ecb8e6467</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a6d3b2239d30bb28d79182ed5242ea68d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>aa8aac671dd434acd26975801aa33f9b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a00c70ea98ca80dcbe77d593e29119cbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a5bb5ed6c4b31578c2ad1417f089fefbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a1d61a06b7881421f49573b7279673a1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a8a9e295b77b2ab0672e23098e652f5c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>ac266473c61c6d04138b77cd8740bb5fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a7536982473777e83e92ad9c289c3fa93</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a01e8ec963bab200cf13d05b3ddbce81c</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>ae6925f29de6c19e87b1987ec617697f6</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>af52967c94ec34ecb99783c47a90e60aa</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a681b1ce8311384d247cb177d3bf1a2a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a29d251bf86d822bf28967c8c8560e127</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>aef8d34f17cd683307f57d5a3004c4ef7</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>af0ca73e93960d7042d53316266c14d61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a4b4360ab2f1d974e64a402ba7aa81eec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>ac3f5468571e6ecae8e36b4b71d4e0b43</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>ab95654bd8b8f9dc8f77687aa99be8ec1</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a70b9d244e7735713b7df77444bc1aca4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a835035cffd5929f17118db620418a10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a144a900cf32e5085414c471d5e932881</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a42c1d0fb48bc421b98b20187ad047866</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>aa8ade459f590b095e137c9edd096c4a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>aaf2aebde6d937a7102ebc911e63d4fc2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a3ee70294a9de5d682baa330f3762eaae</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>ab7909ba09a6028a05c4104edb2c6a322</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>a03ff76647945d46e7885cb0d5122d067</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Map</name>
      <anchorfile>classXpetra_1_1TpetraMap.html</anchorfile>
      <anchor>ad4a088e051cb8f5674b6854e3a8358d4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraMap&lt; int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Map&lt; int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afcec3ad1388a76d4684019e7fda6aff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af1398f57500757225051caed6870c704</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8a490224a49724fb77fcd582c9acc242</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae0784f0c0aa183257f73e183d859d126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa7552b67924feb907dfb648e4d8a97b2</anchor>
      <arglist>(global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a701fcc26554a096ff816bf4f0e7a537c</anchor>
      <arglist>(global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab1b3aa4bf9030623362715ba7c6749d4</anchor>
      <arglist>(global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a445cd41a17e2e760deae306534f53ebd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac227cee94e630ca06a453400f0ea5dd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0a0802b3a27be82a26d0c52106529eeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a428968b40d3f473b3f30e5937e4df649</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad5c22f3640fa2e7b3dd5dc57c22d83bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a36023c7b5776ce0a8d289e7aae734d47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af19eb3b038dfa1e7d8e89fdbefe83ec5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac0e4264421eaf7eaf294f1a3687adf01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0bc8ed498a5fda97b5c529c6a3d432de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a338849e5dd410a0538a6cbf059312b30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad133c2c7f95a12cd946bfd288d4cfcc7</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a27f91ab9d709db2c8de446d42bbc92d7</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af9dfcc0c1881a2c669dbf9c904f361f1</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ace3858509436c2b13044d4dfe6800aa3</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1c2dc8ad5c46d90e95c2369a65c4f443</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4cda761cf9b7a3ee1784d281a7da5425</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af2b8eea84ed206ad429dd118ddf72309</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2d3a186efe575f58ae5fc12c8195301d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3ff5a5f3c248adf77dfbeb24c9b468a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab6b2e42834d4c5ff651957523fb3d862</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a13bb47f2f9c1449ffebbe29b28e5cbed</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab5527b53530c489cdf4dce3afb3df885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a32f203c6fd5dc8edc23b479255ba4794</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>accdfcb5b947348aa41117c1524efd5ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a253d05087ff9f6303c233dda927366b6</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae28592bc66beb255afea080bf969a876</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4bda61d42062afe0d7de17b5720a3508</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6fb9ab675c4654294ae6304ce352e9c0</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6625c4cd9f13d78daff607855a99ce50</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa08c84e4676a6ce236c4188ceee02188</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Map</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83dc6ed3dae2f84164a2c1c02d8f658d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraMap&lt; int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base virtualness="virtual">Map&lt; int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a270fc4dbd3101a42958fac81dd45595a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9b183fc4c0225592ba0607288c501d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab0f3796bd4ea835219f9c6a3aae80777</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Node &gt;</type>
      <name>defaultArgNode</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a95cd6e114fb3d90484d58342ff8c0f33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a622d16a413adf3a645124b55309d5857</anchor>
      <arglist>(global_size_t numGlobalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, LocalGlobal lg=GloballyDistributed, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab94234442e91223a0117e31549c2a049</anchor>
      <arglist>(global_size_t numGlobalElements, size_t numLocalElements, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a75639e4d456ca3541eb7cb2436e1e856</anchor>
      <arglist>(global_size_t numGlobalElements, const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;elementList, GlobalOrdinal indexBase, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node=defaultArgNode())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1eca48d4a5d68e02bf46f65ab2e94e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalNumElements</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3d3ab4959325fc2f9d1088b61555466e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumElements</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a10842ead0eab4157372fd45ea796caf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getIndexBase</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab84f7d5212cbd7c1a4497082aeb85dbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMinLocalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0663af1f061d0a9689d865bea957971b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getMaxLocalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af0d950ca3f4534ab3d164bc56110f37d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac58652c25dcdf457fa0d5211831f432e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a789470d21582f73ecb2d578d8e5ed31e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMinAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acec0567aa1b4b5a96f3d50a92a8b21df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getMaxAllGlobalIndex</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a893376ba40302e764047187e454edbe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalOrdinal</type>
      <name>getLocalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a29b295db6cae9378f6bd41a91f063478</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>GlobalOrdinal</type>
      <name>getGlobalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a748a1bd39f836a9079367ff515c121b3</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0bbf1cf271c079a60eecebf0b49903c3</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;LIDList) const </arglist>
    </member>
    <member kind="function">
      <type>LookupStatus</type>
      <name>getRemoteIndexList</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a131dde2253032263e391de1038a16dac</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const GlobalOrdinal &gt; &amp;GIDList, const Teuchos::ArrayView&lt; int &gt; &amp;nodeIDList) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const GlobalOrdinal &gt;</type>
      <name>getNodeElementList</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3abcf9fd8e287239a8cfebebb0c251e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeLocalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af2bdb7bd04d220417baac611885c79ca</anchor>
      <arglist>(LocalOrdinal localIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNodeGlobalElement</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81b0bb160738d12ba30c38f9f009522d</anchor>
      <arglist>(GlobalOrdinal globalIndex) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a50d265fb9926340041d5c09084c05650</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDistributed</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af5d388288d86d570c19ce60fb9bca804</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8085056de408854ccccf436439dc40da</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSameAs</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae1436485c118fc8ac01b9d964a41c389</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a38f9b5b672fff622ae008079a514f098</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Node &gt;</type>
      <name>getNode</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac66b12acfad1caed61686dc8d5b6ceae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abc223401372d08cb9b6bbb4d716516fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5abb77fa14f64d3fd069ae0a24c04d2e</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>removeEmptyProcesses</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8d0b94c2ad7443f1a9f33d2d0beadafb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>replaceCommWithSubset</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a131fecc930fd57bb3bd9f32108f98c43</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;newComm) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0c133c596eb0dfb60b5e932762e52391</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMap</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abbcefc8b207c32c293134e1cd99c2902</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a587f832bc37b959bef0ec0bfdf8bad4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Map</name>
      <anchorfile>classXpetra_1_1TpetraMap_3_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a55a0e77b0d0fa798bfa7128b126e9387</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraMultiVector</name>
    <filename>classXpetra_1_1TpetraMultiVector.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base virtualness="virtual">Xpetra::MultiVector</base>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>aa801284e689f75709e8897458aa25927</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ae343c0419971ca46214fa37dd80d1fb0</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a77d9a4056e2633d933e28224f3a46460</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a247f68aeb491274e257d8ad5d57ac2ae</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a04a7d9e38b75ebb2c98a51ce58d89987</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>aa1f2678b349715b763785c42024ecca2</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>aa60e3f9efc7d6aec5f4759a7ed664a3b</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a03e010e6fa9d08289b76a1daecdf2a49</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ade0783f0bba5a9c247264ab586d3e83d</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ad88ba1d53df26761e87ac928a7b86848</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraMultiVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a3c62b50fe04d26c7349ca10225a6c4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ab3744a660ad0663059f96026fb19ea9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a713282b1f0f0ba22473b48c734171eb0</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ace8ea244cd3636d79a961c413ed24ec9</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a3c77d1c3ba2434350b36c5f46e409a79</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;A, size_t LDA, size_t NumVectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a8c055b8aaa2217bb2e2a5b739a32c7eb</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a3e00eb6c8cc1f2ec3ee4766c4895760f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a03e78d7afb08908ec3d1aafe4f982268</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a3f99ff2ce1b2121dabb47a9d8f86883b</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a4a55d75fb45713033bbebe30d888cc88</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>aaf076c393cbf51d2c63bd813b1129795</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a31a08fd400cd17ccbe61493acb3a2736</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a47ea63a5e93f27244129fe89c19cd718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a8bfef77a40c5fdc288a9f22d35314a6d</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a1a803329aa473b610eda4005620628ef</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ab89dfb11ba29dd4c0ff14592e24a89fb</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>abf967edc279557ec1b05217998e16b1a</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get1dCopy</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a52bb38de61f9c8f813931abb20675eb3</anchor>
      <arglist>(Teuchos::ArrayView&lt; Scalar &gt; A, size_t LDA) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get2dCopy</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a0dacc1d707efa61f7fb06a123089e9d5</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; Scalar &gt; &gt; ArrayOfPtrs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>get1dView</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ae4b8e3aab449cfe39efc6d654bfbe34b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Teuchos::ArrayRCP&lt; const Scalar &gt; &gt;</type>
      <name>get2dView</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a1884753dbc2a410470d1a0ab2fd1f9d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>get1dViewNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a35b452cad7da008148e2c2f83dbbffa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Teuchos::ArrayRCP&lt; Scalar &gt; &gt;</type>
      <name>get2dViewNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>acae46d743196914f1c3f531b6b944a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a6d100c1c7a8955c2af360d1ada1a74b1</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a9a78c676a9c531795b194a49e1379b2c</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a8bbb7c03cd94943688240c0dc616a43a</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a6fdaa52b8cf21179f43d308b9138791b</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>af188827eaee3eb10594cd997083e130f</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a396f3baaf74ca127e34c36cc853bbdde</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a718826c050e9663cc0efc0637f423ff6</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a825bb7544081fb1382a9ecd33061a80b</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a87dd558bd4aa9d419dd99d833d0762dc</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>adbce2d67ce8f1141e2d8d6c284f7751e</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a868f47551b4724afad376ddf367c2e8b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>aaae56ff0ee8a0e92d385778f5143387a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a17b3368ad930ffdddd8bd31837318f8b</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ab36cecad17fcdf6e2dbc753d2cd7c308</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a11d3eeee22db33e06f8a9a688912289d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a4e535beae1c14d5552637ede2cdb7e8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a874cf0e08137ed65f39841aad4ebc907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a0ee2e91a2cc38e2d13248122ccc7e2d5</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>ac2d578cbfeaf3e9b6512c0e01e240212</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_MultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a323f7a017e1b2f4e82a413ecaf3f8751</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector.html</anchorfile>
      <anchor>a472b795e154d247d441c01be0b937138</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraMultiVector&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">MultiVector&lt; Scalar, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1149fad0960393832e1c350fa56beb52</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa53578eee7c02efe3133c2b52d8c5faf</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4a7192d355cc42b21b2849a25359a247</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a25934bb92670f396ee4621eff49f4ad5</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a69e5657b3e8660f9c397dee9d354e0a5</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a836ed3bd39f632cb778ad7c8e471fb9f</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a67b1b6cfc34296cfcc0e661a5f5e8107</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a04069233a2687e2b4b0507f3b5a73f2b</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aedde9e06bcf3a7f82ea25d73f186035c</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a414dd57053b64a6048644b24a0ceab47</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ace5f0b358ddb9fe9453154f8f78b4fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac352356d5b65a2ccf3c749f30f56efda</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae01027db6595dcd833b9331371708148</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraMultiVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4db5c2ef367e420bdd9b803463ae4d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac1d667f4d21bb0cc30a6175d992352de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6a3a2897d46ccdb620c3430b5e4609b1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad9c9369a60efb5137d60349fd499def4</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aed14930067344159bdffc82f4c1e4d49</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;A, size_t LDA, size_t NumVectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a26126824addba81525c95aa46b867721</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7b53ec4d8224ccb996ae4bf1afa9b8b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae31f0bc4c0e415af7f09f732463083a8</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a25c656ec94bacd1f85ee5969f26d42e5</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a621222e300307c591dc14a4c65c9fb53</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8c60c4cc34ab010745997311f34b37fb</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9dc0669a376ca24a9e273dc13a7dd9bb</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a40bf6636f262d697567a0f00850bae89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1a00b34688f4e46c708334626e8e547e</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a71e1477519834974e7aeb63d8a143c46</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a806ffcbc451e863061d49bd8b82aaf33</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a96d09645383cde5524d00a210ea0f9d6</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get1dCopy</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aecf597765aaa9425246f8c7bcd4b94b9</anchor>
      <arglist>(Teuchos::ArrayView&lt; Scalar &gt; A, size_t LDA) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get2dCopy</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9d74e5f1d9d29bf12846df67304e6213</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; Scalar &gt; &gt; ArrayOfPtrs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>get1dView</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a253de891166df05b6aad47da7c730c87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Teuchos::ArrayRCP&lt; const Scalar &gt; &gt;</type>
      <name>get2dView</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7e0aadfb6416cad7c380c2259154ed29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>get1dViewNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2022b993d65cd11bd344f8978033c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Teuchos::ArrayRCP&lt; Scalar &gt; &gt;</type>
      <name>get2dViewNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad80205521bc796421c094f049e0f4620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2a6c4c953954b67b4c93e994726dec6a</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adfada32e0ced3980bc751e4961bd793b</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aee9beac0c950ce931cff0ce08ed87f8e</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6113c164d7ed5ac3a70a3ffec5c565bb</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2d88d0c48aa1339544db4d858825ef91</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab976287f89980f6e141f721f7ec2047f</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3a6ed222add1786ed2a834c118485a0b</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac031ebf0729371945f1e5593100881b3</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae859fe254bced25e01deca9055615076</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac477eea6a7de9e9c72508b95e9551cf9</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac61fb65aecfc68e89ec646a366ed2276</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3c3c87940fac856f7ae1381d964d96e5</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8cba35313c916fa42cc587cd7727e0be</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a46d21625be691328f73c6b9af85238c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa70a7a1a677c2b510a67e974e021afab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a37f2f764fc34d71c38594baa3307e584</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acd5daa3ac23cd56892ed2c0e2fe9115a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9bfca88dff00e9f15f8d093869656e20</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a270659c537c3b40236e7793ce3aaece0</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_MultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a15e06a05a43a7acc6366f4334f9bcc22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aab91758764b39e882fe277be37f141a7</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraMultiVector&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">MultiVector&lt; Scalar, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>elementWiseMultiply</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2b4d50a28c3f4de51ee815184f190d2</anchor>
      <arglist>(Scalar scalarAB, const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Scalar scalarThis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>randomize</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9f33d741be6dbcb858b91a2bec44eb7b</anchor>
      <arglist>(bool bUseXpetraImplementation=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aafc61682c927f637e5501ce726254f69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0f048a01218f6331567a946c7903eacd</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0db2e23c6eeee7cf27231c8359d7bfb0</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;importer, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doImport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab28a743ff3d533403396699f9ac24162</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doExport</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af30af2eeb7d54bf5fc02b8a602f89414</anchor>
      <arglist>(const DistObject&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;dest, const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;exporter, CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceMap</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae6681326b9b27597439d3b72d8674b2f</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4ef6b71a665784df64288aee9468799c</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>assign</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a871da847053f459c5726b4922514ca83</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;rhs)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeb7f4a74415b55fbb7e31f9eb321ce33</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ade7fda09ae1226f135740948ddf7f7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7535ef191958132e553d92ea1e59d603</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TpetraMultiVectorClass</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9907a0ee952d8efce6ad75b7faf11f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac5d1e332be6e364ddcdd29b220867f32</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, size_t NumVectors, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1baef4d4bb77b9b59021b1e09f176ae6</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9ec014a3747721b7b1197f4858ddae21</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;A, size_t LDA, size_t NumVectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a83c09c55fbbed435af7de6c7f5dbd3a6</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map, const Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; const Scalar &gt; &gt; &amp;ArrayOfPtrs, size_t NumVectors)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>acacf8d76adf4467fbf3bddbc9eb304fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab3189bd41f277de0d8d3e5e75cb76edd</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a4bc962e06c3849c13212df6929c99ddc</anchor>
      <arglist>(GlobalOrdinal globalRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b5bf63567a28608a899e2af7dfd342d</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a77499b9f14adc51c3aecf909f14bad91</anchor>
      <arglist>(LocalOrdinal myRow, size_t vectorIndex, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaafb3611b88b85a9d372c1f7eb2b0f0f</anchor>
      <arglist>(const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a792e347d8a03a318812402fb71b7becd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a658c759d87521f97b714a85a753fef88</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getVectorNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a350c3b92bcdbf3100fb184984dfb4ce7</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>getData</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a620a75c688695c5ec981f6299bb685b5</anchor>
      <arglist>(size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>getDataNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8743f81eb6aac2568ac92495ec08464d</anchor>
      <arglist>(size_t j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get1dCopy</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a86f391bc7b3924d1754c575fb55e4b23</anchor>
      <arglist>(Teuchos::ArrayView&lt; Scalar &gt; A, size_t LDA) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>get2dCopy</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9b257c2eda6c6ece9c884719a8148f6a</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Teuchos::ArrayView&lt; Scalar &gt; &gt; ArrayOfPtrs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; const Scalar &gt;</type>
      <name>get1dView</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa321949279a13c85eb09a036d9f8cc70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Teuchos::ArrayRCP&lt; const Scalar &gt; &gt;</type>
      <name>get2dView</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a87a75fe8ea4bd82d47a95442eda9b38c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>get1dViewNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afa01de49994237b2a9b8842a97e8100f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; Teuchos::ArrayRCP&lt; Scalar &gt; &gt;</type>
      <name>get2dViewNonConst</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a09d5c16bda2ee10921cb96203823ddb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad5e91b024bc493a36368f688c27caa34</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Teuchos::ArrayView&lt; Scalar &gt; &amp;dots) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6ea0443b3a88c4433199ad8e5f6b6fca</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aae5983fd4ad1da3f5b2817d15f334323</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac4e8a6c19834aa9badee0fe331219841</anchor>
      <arglist>(const Scalar &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0e22fb1243cb12bbe17dfa7a821b816c</anchor>
      <arglist>(Teuchos::ArrayView&lt; const Scalar &gt; alpha)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ade219a2bf6b854eecf48a9afea292b1d</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a76e1d93846f871a089ac73da8f37d523</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3c83fd279079ea649214f53388c6a91a</anchor>
      <arglist>(const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Scalar &amp;beta, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1e4172b500cb78ffca175260b1d5dd8f</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a81d9cc17240a6334b992eee2fdb4f89b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0cf86348fe09dc760229269aff183962</anchor>
      <arglist>(const Teuchos::ArrayView&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;norms) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adaed650187cfdc0d5b53468dcec96211</anchor>
      <arglist>(const Teuchos::ArrayView&lt; Scalar &gt; &amp;means) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a34db8919884611ea20c44b706d1d9722</anchor>
      <arglist>(Teuchos::ETransp transA, Teuchos::ETransp transB, const Scalar &amp;alpha, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, const Scalar &amp;beta)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumVectors</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aba6c4408b1f5f546484cfec44196614b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalLength</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a242a67d67e230c72bf7eabe621bfe91e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>global_size_t</type>
      <name>getGlobalLength</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a243b8624e4e9cb62bad7cd1f8c9c1f29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abd4a3db4a44715daf707ae3878bfbe81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a94cf8fcd351d7a0867b04e73cab59cb9</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraMultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a92f156229a94d2cbd6df5f59c26af8a3</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_MultiVector</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a48389b922cfa10a00fe2828e52c82cd0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSeed</name>
      <anchorfile>classXpetra_1_1TpetraMultiVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a7b3e014918362d8a61afb0f255d692e5</anchor>
      <arglist>(unsigned int seed)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraOperator</name>
    <filename>classXpetra_1_1TpetraOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::Operator</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>op_</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>a0397158f2fbb098f2e4329cd15db60b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>ae1226595656c212031205139a8ebb0c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>a692b709fb5c679bd94639415ec7bf2f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>a8e1e3e248a3c55d5f31a366784531642</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>a63ecde76ed6f2cc7b95af9ee6986b410</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>abbbc622f515362e2f1b83c8a5b3571b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>ab2851c2fed37d8dc0532e0c90b45eea1</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classXpetra_1_1TpetraOperator.html</anchorfile>
      <anchor>a2da279c7b5f79ffccc515170893883e6</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraOperator&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <base>Operator&lt; double, int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac8f4d623cade0f3de42e0532c7df849d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a22620c7885b6928c276609a0e40ca104</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3d09a0bcdd3a5abe3ca7cae380ea197c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a08942e2ba936137a0c07e8244aeabc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a558c317ce68362f183a21632990d6712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0b20734c5d51a2e8f1da4043e2bee8a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa814ea2eecda75e3d934d4094cb4503f</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a430e99d0015dfc3fb9b5a048abe66509</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aec3327849860fc2ebf0213f52dcd5935</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6710eb2a0b65d4d58a06c0bbb5fa63ba</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab2e0f87b2f4741bd861b629e7e8de457</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraOperator&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <base>Operator&lt; double, int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a6bebceea17ea44285b8037394a235378</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a09f0fb0a79894269784178c2b96c7113</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a72f7eb235ee1ffabf26a13c721a776da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a028599757fe459c3ae774d522b4c4cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae2e1cf062e583700c32e19cbe31406db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a19f081da37ca0dd6392e60f58dc8486b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0c894947ceab0650808582039f7db9a1</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a923d0085d0bb177d3e616e4eed5ff39a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a70f9ec209b2b1ea3f2d59c6619e76295</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a00e8ed809ccb8f8885e26667b3ecc943</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classXpetra_1_1TpetraOperator_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af49e707961edbbb75420714a4e7da432</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraRowMatrix</name>
    <filename>classXpetra_1_1TpetraRowMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Xpetra::RowMatrix</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mtx_</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a8bdbc1e47eca3386b61980a28007c838</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraRowMatrix</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>aa659c544c689e369f2d859a80618ab01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRowMap</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ade27ceee2aa16cb7edb950d4e47aa5b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a1f4c86cd61c02ae9c29a4863d0d9d458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Tpetra::global_size_t</type>
      <name>getGlobalNumRows</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a37985c986e87961d9802cfe37c89b287</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Tpetra::global_size_t</type>
      <name>getGlobalNumCols</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ae748278c68ac3decbc5de49cf0447045</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumRows</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>af9814024a2a4c416df1a128e2f268b6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumCols</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>aad500b15537cad92244942ec01a50201</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Tpetra::global_size_t</type>
      <name>getGlobalNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a0f6fa66e0365b30d95a67e0e00357264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumEntries</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>afbbc8733ce66d98411247b62cb6ec883</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumEntriesInLocalRow</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>aa457c4b647510d29166959dd66736e02</anchor>
      <arglist>(LocalOrdinal localRow) const </arglist>
    </member>
    <member kind="function">
      <type>Tpetra::global_size_t</type>
      <name>getGlobalNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>affb53d946833f106af2e6cd4551dbd9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeNumDiags</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ad326188df6e15e83e89cc023f9dfeae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getGlobalMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a2e0cd4dd1ac03d9a95401fe45b3461c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a0cf75628456f96fd23b8d1ed085464a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocallyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a26eafbc49eb52aa555699de437ed6f31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGloballyIndexed</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a8fd2576be9cc5f33a1cf5c29b2b030d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFillComplete</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a0c7eebb57f6b6075b17928c7ae16adea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsRowViews</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ac5020c8b5d99237715a249d38c6519b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowCopy</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a982db7d66315c1a8cb71a67ae70ac572</anchor>
      <arglist>(LocalOrdinal LocalRow, const Teuchos::ArrayView&lt; LocalOrdinal &gt; &amp;Indices, const Teuchos::ArrayView&lt; Scalar &gt; &amp;Values, size_t &amp;NumEntries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalRowView</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a35a9700ea52dec386b0883acba270e90</anchor>
      <arglist>(GlobalOrdinal GlobalRow, ArrayView&lt; const GlobalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalRowView</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a10d1e5bd8a43946228ec797c72c41c94</anchor>
      <arglist>(LocalOrdinal LocalRow, ArrayView&lt; const LocalOrdinal &gt; &amp;indices, ArrayView&lt; const Scalar &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalDiagCopy</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a020197000a5ea2284711654b2ecc485f</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;diag) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>getFrobeniusNorm</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a2e782a778cf7caf1f939db41bace9484</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ad5afb451cb7f087498d4eb9de9100834</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ad66b8a185bb66bcc88247c95c81755af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>a7c44aefff8d3b704d782a1cc0db5c8b0</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraRowMatrix</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>af113c40e5c07af9ea60ab537ae248b09</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;mtx)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_RowMatrix</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>ad3bff97e9a91aa35fc7ea09f0a16c50e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_RowMatrixNonConst</name>
      <anchorfile>classXpetra_1_1TpetraRowMatrix.html</anchorfile>
      <anchor>aa5a77c920fcce23c30a43b7b5ab5cf18</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraVector</name>
    <filename>classXpetra_1_1TpetraVector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">Xpetra::Vector</base>
    <base>Xpetra::TpetraMultiVector</base>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a60548e7587d4488bb80074a417cf10ec</anchor>
      <arglist>(const Vector &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normWeighted</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>abf7e2bf0ed11926cc07ba36d64d2e716</anchor>
      <arglist>(const Vector &amp;weights) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a8aaf8a8f1070350cf888fb03d4b83583</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a56ea7adcb5cc27be5a42c1ab875fce65</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>aabddee839024da8428c79cb2360bd561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a44df260289cce507028e291b69000c59</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>ac775009437e76a5b3581ae6d8485f0f4</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a44192b198a2b582b6317a407c47da6c4</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a0c6c17340c258b6ce482fc1f6f2e3891</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a401bb6916c17155f2d486e3f30d936aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a362f05a3a768d3be39687adc85831559</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>adb9952f99a4ff53b53fcf9ea3a0071be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>af41fa514d64ab2d19aa2a993f9f7551d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a7b115c062951faec1f9dc38de742b946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a4405a8b1748717ead31a7ace3216c26e</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a2b83f510a5ca4b4237469202f739be68</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Vector</name>
      <anchorfile>classXpetra_1_1TpetraVector.html</anchorfile>
      <anchor>a7b62dfa1ec870300e66e2c3925c0e731</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraVector&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Vector&lt; Scalar, int, int, EpetraNode &gt;</base>
    <base>Xpetra::TpetraMultiVector&lt; Scalar, int, int, EpetraNode &gt;</base>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab57a83946767d377da61bd35babd97de</anchor>
      <arglist>(const Vector &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normWeighted</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a90b434e65de406050d364eae16308a7e</anchor>
      <arglist>(const Vector &amp;weights) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abd0c9820f17d7a1d17a74210b2721b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5ad7abe92122a0c505d6731623502330</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a670a358916f1148e3e0292a0ccd8254a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac2f31666d45c246980df4ec9ac6d592b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afb322fcacd220ba536403f9158260b98</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a5a401df7f85f4e27a211ea938dc1bbd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a52b61bec46f7cdb2e2c646da4dfccb8e</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a2c8d51765c188c5913d1ddcac758e64d</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a987a720f84524a7e229a7f81fbbba6b8</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9d2c3d3185c6fd20ebb82745a728ce1a</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a95269dff32e2f96083be16fbebf3a480</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a35b150198dd5cd0d43ca7c21ca703512</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a91c58959ab1dd97c0594d9160c8f05d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a82cd961c95d9d1f1f5d1a96081fdb6c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a241e79f2d354698cb05f97efe588c87e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae539c6d5861f78337374ce9fe0b46ba2</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af1b2180c975b0b24fa7eb63608478833</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Vector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a87ed1ec0f9f95efc9feb3445ce606cd7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::TpetraVector&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Vector&lt; Scalar, int, long long, EpetraNode &gt;</base>
    <base>Xpetra::TpetraMultiVector&lt; Scalar, int, long long, EpetraNode &gt;</base>
    <member kind="function">
      <type>Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa5dd347873ec53bbc79aaee5b91c9164</anchor>
      <arglist>(const Vector &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normWeighted</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a093ea59eb24e964f54831db9c3ad8730</anchor>
      <arglist>(const Vector &amp;weights) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaa3d4cf6bcfcbb00d8c1569082169a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a791c4fd04604040a4ad7230a2435c060</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a12ed7c84ee0daee074883e3f0757b785</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a888db4681559015e0125b3720e6849d9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9af2d10a362e12d857e334c5aea44a29</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>add48aa03c8fd1ae3e59a9ffb75c60737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a553ee4b74a5439498b1b8d60add28061</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af3e0456990dd4f6f45421a6bde8cd975</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a53ec0844eb084f785857b35f6d643c06</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ac3c90a5b3b8fd85ab200cc1e668e65e6</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afd4c48b14b388aa8d531cf952c92e388</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3564f6f92a6349dc2448fa276c1eb71b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>abfaddf6b8cf3a3deafbcee22229c7371</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a28b0e16a4abe2f7f98f286161c356abc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad65dbcfd4723abd45eaac73a7b4d955d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0d4977a463d2ec4561f10a4958e035b7</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0acf84af515258e4c0aaacdb45313af6</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getTpetra_Vector</name>
      <anchorfile>classXpetra_1_1TpetraVector_3_01Scalar_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a3d25a1cef77906db17db086d9b3c5fff</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::Vector</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base virtualness="virtual">Xpetra::MultiVector</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(GlobalOrdinal globalRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(LocalOrdinal myRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; double, int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; double, int, EpetraGlobalOrdinal, Node &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; double, int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(int globalRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(int globalRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; double, int, int, EpetraNode &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; double, int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(long long globalRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(long long globalRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; double, int, long long, EpetraNode &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; int, int, EpetraGlobalOrdinal, Node &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; int, int, EpetraGlobalOrdinal, Node &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraGlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(EpetraGlobalOrdinal globalRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; int, int, EpetraGlobalOrdinal, Node &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; int, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; int, int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(int globalRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(int globalRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; int, int, int, EpetraNode &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; int, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; int, int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>int</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(long long globalRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(long long globalRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const int &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; int, int, long long, EpetraNode &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; int &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; Scalar, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; Scalar, int, int, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(int globalRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(int globalRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; Scalar, int, int, EpetraNode &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Vector&lt; Scalar, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1Vector.html</filename>
    <base virtualness="virtual">MultiVector&lt; Scalar, int, long long, EpetraNode &gt;</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afb6c406535a5fa6fd2ad81a24fb47625</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6f47760cf0108d2f8eadc087fe59adc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>long long</type>
      <name>global_ordinal_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2da59cdda073878d2dfade67d297e3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abdc8ffe0b4ac32ca5ada4296a0601bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a183cec2b398809eee97f4cc7f2f176ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>aa99730155a2a0b7bbcca6a88b50ec8a5</anchor>
      <arglist>(long long globalRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoGlobalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a1d1d4fd1bec169a0a8a55d1f55500297</anchor>
      <arglist>(long long globalRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>replaceLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a37fb5b30ab184eb23a55e87a3c99243d</anchor>
      <arglist>(int myRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>sumIntoLocalValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>abf866629440e8b8b58ab7926120e13d4</anchor>
      <arglist>(int myRow, const Scalar &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scalar</type>
      <name>dot</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a2c767bbe2e57a2dbe799aefeeecab0fd</anchor>
      <arglist>(const Vector&lt; Scalar, int, long long, EpetraNode &gt; &amp;a) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm1</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>afac0ae1b37e7804bbf4fb41c7a276150</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>norm2</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>af549fe40cb1eadc72023dba951fdf686</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>ae79cebf7c629926c1774b62d9b0ad08b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Scalar</type>
      <name>meanValue</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a61d67e22f21c71e2128bb333d758dabc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a6d01daeda9cf6039ef9502c001731086</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classXpetra_1_1Vector.html</anchorfile>
      <anchor>a55c00bb846042f6031b1b6d7541f0992</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::VectorFactory</name>
    <filename>classXpetra_1_1VectorFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1VectorFactory.html</anchorfile>
      <anchor>a858f59564aa00ebf4752fa89bcee050b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VectorFactory</name>
      <anchorfile>classXpetra_1_1VectorFactory.html</anchorfile>
      <anchor>a84fe2dbe725500e521ad0b9a4cb7b2cd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::VectorFactory&lt; double, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a03fe34e268e2c40b5c6bd063517e2364</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a933bf8962931c31bdf451333ed1a389b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aeb6261429da91ee25309a3c331aff2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa3b80777b93e0f948afcb3ea82002439</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ad0169d067169ec715b88bb9782cb51ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VectorFactory</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0369881decaabeb9e448a36773a388d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::VectorFactory&lt; double, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>afa391a9080cd47466ecfbbd0358c01e3</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a9c61349ee28677f4c9bee13bb9cd7f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1c82d2c392694885643b5662dbd3197b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8e3494392654c54832cee57bd6f346ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a1095e859ea3922683d266e0c29bf0fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VectorFactory</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01double_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ab38704663a2f38550e8a7b65d7fe28e2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::VectorFactory&lt; int, int, int, EpetraNode &gt;</name>
    <filename>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a8b7f25dfa28c5bc878179b051ede9386</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a68efe036be0b9fbab217c2c20c4093df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a77e198d0edbe2334a76552dbd0b89fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a93c11c671346c04ce6e7c41dd63c08b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aaddf076d89de4158523657a8e7fdea32</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VectorFactory</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01int_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a40b6daf93776244574bcc584994705a9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Xpetra::VectorFactory&lt; int, int, long long, EpetraNode &gt;</name>
    <filename>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>Build</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>adc211f1cfd57b0f143ccef4b6e541ce6</anchor>
      <arglist>(const Teuchos::RCP&lt; const Map &gt; &amp;map, bool zeroOut=true)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>Scalar</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af26e3f968afa0a8d56c08731179f2ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>af319d2384b8f191227b35fce3fa5684a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>ae18d5baee6c92fe8d353b66b59054769</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EpetraNode</type>
      <name>Node</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>aa6fcb393877a9fbda560b8e485a48989</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VectorFactory</name>
      <anchorfile>classXpetra_1_1VectorFactory_3_01int_00_01int_00_01long_01long_00_01EpetraNode_01_4.html</anchorfile>
      <anchor>a0b240c09726c190c3f1fd84e3b722264</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Kokkos</name>
    <filename>namespaceKokkos.html</filename>
    <namespace>Kokkos::Compat</namespace>
  </compound>
  <compound kind="namespace">
    <name>Kokkos::Compat</name>
    <filename>namespaceKokkos_1_1Compat.html</filename>
    <class kind="class">Kokkos::Compat::KokkosSerialWrapperNode</class>
  </compound>
  <compound kind="namespace">
    <name>KokkosClassic</name>
    <filename>namespaceKokkosClassic.html</filename>
    <namespace>KokkosClassic::Details</namespace>
    <class kind="class">KokkosClassic::DefaultNode</class>
  </compound>
  <compound kind="namespace">
    <name>KokkosClassic::Details</name>
    <filename>namespaceKokkosClassic_1_1Details.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; NodeType &gt;</type>
      <name>getNode</name>
      <anchorfile>namespaceKokkosClassic_1_1Details.html</anchorfile>
      <anchor>a3aa2ced8cf76cc93342a67df7ce3ba8a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Xpetra</name>
    <filename>namespaceXpetra.html</filename>
    <namespace>Xpetra::Exceptions</namespace>
    <namespace>Xpetra::useTpetra</namespace>
    <class kind="class">Xpetra::BlockedCrsMatrix</class>
    <class kind="class">Xpetra::BlockedMultiVector</class>
    <class kind="class">Xpetra::BlockReorderLeaf</class>
    <class kind="class">Xpetra::BlockReorderManager</class>
    <class kind="class">Xpetra::CrsGraph</class>
    <class kind="class">Xpetra::CrsGraphFactory</class>
    <class kind="class">Xpetra::CrsGraphFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::CrsGraphFactory&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::CrsMatrix</class>
    <class kind="class">Xpetra::CrsMatrixFactory</class>
    <class kind="class">Xpetra::CrsMatrixFactory&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::CrsMatrixFactory&lt; double, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::CrsMatrixWrap</class>
    <class kind="class">Xpetra::DefaultPlatform</class>
    <class kind="class">Xpetra::DistObject</class>
    <class kind="class">Xpetra::EpetraCrsGraphT</class>
    <class kind="class">Xpetra::EpetraCrsGraphT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraCrsGraphT&lt; long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraCrsMatrixT</class>
    <class kind="class">Xpetra::EpetraCrsMatrixT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraCrsMatrixT&lt; long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraExportT</class>
    <class kind="class">Xpetra::EpetraImportT</class>
    <class kind="class">Xpetra::EpetraIntVectorT</class>
    <class kind="class">Xpetra::EpetraIntVectorT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraIntVectorT&lt; long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraMapT</class>
    <class kind="class">Xpetra::EpetraMapT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraMapT&lt; long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraMultiVectorT</class>
    <class kind="class">Xpetra::EpetraMultiVectorT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraMultiVectorT&lt; long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraOperator</class>
    <class kind="class">Xpetra::EpetraOperatorT</class>
    <class kind="class">Xpetra::EpetraVectorT</class>
    <class kind="class">Xpetra::EpetraVectorT&lt; int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::EpetraVectorT&lt; long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::Export</class>
    <class kind="class">Xpetra::ExportFactory</class>
    <class kind="class">Xpetra::ExportFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::ExportFactory&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::firstArg</class>
    <class kind="class">Xpetra::Helpers</class>
    <class kind="class">Xpetra::Import</class>
    <class kind="class">Xpetra::ImportFactory</class>
    <class kind="class">Xpetra::ImportFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::ImportFactory&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::IO</class>
    <class kind="class">Xpetra::IO&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::IteratorOps</class>
    <class kind="class">Xpetra::Map</class>
    <class kind="class">Xpetra::MapExtractor</class>
    <class kind="class">Xpetra::MapExtractorFactory</class>
    <class kind="class">Xpetra::MapFactory</class>
    <class kind="class">Xpetra::MapFactory&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MapFactory&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MapUtils</class>
    <class kind="class">Xpetra::Matrix</class>
    <class kind="class">Xpetra::MatrixFactory</class>
    <class kind="class">Xpetra::MatrixFactory2</class>
    <class kind="class">Xpetra::MatrixFactory2&lt; double, int, int, Node &gt;</class>
    <class kind="class">Xpetra::MatrixMatrix</class>
    <class kind="class">Xpetra::MatrixMatrix&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MatrixMatrix&lt; double, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MatrixUtils</class>
    <class kind="class">Xpetra::MatrixView</class>
    <class kind="class">Xpetra::MpiPlatform</class>
    <class kind="class">Xpetra::MultiVector</class>
    <class kind="class">Xpetra::MultiVectorFactory</class>
    <class kind="class">Xpetra::MultiVectorFactory&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::MultiVectorFactory&lt; double, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::Operator</class>
    <class kind="class">Xpetra::Parameters</class>
    <class kind="class">Xpetra::ReorderedBlockedCrsMatrix</class>
    <class kind="class">Xpetra::RowGraph</class>
    <class kind="struct">Xpetra::RowInfo</class>
    <class kind="class">Xpetra::RowMatrix</class>
    <class kind="class">Xpetra::secondArg</class>
    <class kind="class">Xpetra::SerialPlatform</class>
    <class kind="class">Xpetra::StridedMap</class>
    <class kind="class">Xpetra::StridedMapFactory</class>
    <class kind="class">Xpetra::StridedTpetraMap</class>
    <class kind="class">Xpetra::TpetraBlockCrsMatrix</class>
    <class kind="class">Xpetra::TpetraBlockCrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraBlockCrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraCrsGraph</class>
    <class kind="class">Xpetra::TpetraCrsGraph&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraCrsGraph&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraCrsMatrix</class>
    <class kind="class">Xpetra::TpetraCrsMatrix&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraCrsMatrix&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraExport</class>
    <class kind="class">Xpetra::TpetraExport&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraExport&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraImport</class>
    <class kind="class">Xpetra::TpetraImport&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraImport&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraMap</class>
    <class kind="class">Xpetra::TpetraMap&lt; int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraMap&lt; int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraMultiVector</class>
    <class kind="class">Xpetra::TpetraMultiVector&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraMultiVector&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraOperator</class>
    <class kind="class">Xpetra::TpetraOperator&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraOperator&lt; double, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraRowMatrix</class>
    <class kind="class">Xpetra::TpetraVector</class>
    <class kind="class">Xpetra::TpetraVector&lt; Scalar, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::TpetraVector&lt; Scalar, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::Vector</class>
    <class kind="class">Xpetra::VectorFactory</class>
    <class kind="class">Xpetra::VectorFactory&lt; double, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::VectorFactory&lt; double, int, long long, EpetraNode &gt;</class>
    <class kind="class">Xpetra::VectorFactory&lt; int, int, int, EpetraNode &gt;</class>
    <class kind="class">Xpetra::VectorFactory&lt; int, int, long long, EpetraNode &gt;</class>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Array_size_type</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a737a987da6fbd808a0790c47256db3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>global_size_t</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a271d58cd036f8c847275f21bc88427d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosSerialWrapperNode</type>
      <name>EpetraNode</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad5ddcd6aa4bc47973d3cdf2b85e91880</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraCrsGraphT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraCrsGraph</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af1b82be780dccc1c3a8d5090aa143e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraCrsMatrixT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraCrsMatrix</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a29eddd56bbeb56fde978a1f4af08c7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraExportT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraExport</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aed26855c54e32e5e923e4f35f1010901</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraImportT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraImport</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a0c48066f4ec7b33406b5c498eb5cc9a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraIntVectorT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraIntVector</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a31bb6a1da25158ae6a349a4fad5720c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraMapT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraMap</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a43f97f386f208b8652996ecea549ef0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraMultiVectorT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraMultiVector</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1127fc7b5f38af9b874f046161251e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraOperatorT&lt; int &gt;</type>
      <name>EpetraOperator</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae8b9faeffe6a5d2769ede1bb3438885e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraVectorT&lt; int, typename Xpetra::Map&lt; int, int &gt;::node_type &gt;</type>
      <name>EpetraVector</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae297d897ac14765bcb69ca46389cdd8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>viewLabel_t</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a25431b04cbddd92f36ce3d3858361f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ELocalGlobal</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a26e9513753e3104bfbaee9999acfca90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocalIndices</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a26e9513753e3104bfbaee9999acfca90ae1c118d6a640d73505f2a530d16412b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GlobalIndices</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a26e9513753e3104bfbaee9999acfca90aee52c89b5a066d19e2ff6f7522e254fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LocalGlobal</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a733dea33b13c79ffdb050d2d77b2d9ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LocallyReplicated</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a733dea33b13c79ffdb050d2d77b2d9eea7c64f79f602e0540f2cce83be92b819a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GloballyDistributed</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a733dea33b13c79ffdb050d2d77b2d9eea83c716a253a277393f1f95561765c9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LookupStatus</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acc0107be8b975856d67ae8474f405831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AllIDsPresent</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acc0107be8b975856d67ae8474f405831a57c8a1871e76d9d2b595ed91ced97c95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDNotPresent</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acc0107be8b975856d67ae8474f405831ae4192ed380addaa94d3603e5f71f7c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ProfileType</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b201fad6cdd588bcec6b63f12574a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StaticProfile</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b201fad6cdd588bcec6b63f12574a16ac62230bb1457844b730a9d10c76b80fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DynamicProfile</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b201fad6cdd588bcec6b63f12574a16ae6a9596b9cfb42880be9435c07a847f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>OptimizeOption</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf2f4e410836d369c8795783875fd7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoOptimizeStorage</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf2f4e410836d369c8795783875fd7c5a238ae931d6e36566c7675a5d41f3a051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoNotOptimizeStorage</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf2f4e410836d369c8795783875fd7c5ad6094ce4cdf70639d701f890aeeac404</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CombineMode</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADD</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15a23e72c1381f91906e00f1afc0f909ac7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INSERT</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15a856eb04ad1bcaa5c9fc550eebdca753a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ABSMAX</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6a1304bc8e0917f0dee5c5ff73b4b15a6d271944d562f741bb38a908f154f7a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UnderlyingLib</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13afa179b1b9c5e04a6cb49c2da1b06354c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UseTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13afaa7f6cc303d9a12e5c36e75ee7eea495e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotSpecified</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acb606faa061766ef2c69d87b78ae13afa397240a547a44c58fe292fcb6baad0a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const Epetra_CrsGraph &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a49bbbf68284dd886947e71ffa7800b1c</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a7075a879cb1bd5b3ed32afc2169e84ff</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const CrsGraph&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c498f34c4c46c1407d362b42e1927aa</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_CrsGraph &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa94e775c808a256440c10b2811fe37e1</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, int, Xpetra::EpetraNode &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const CrsGraph&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aba29d0f978e83a62a3490d163981ff2d</anchor>
      <arglist>(const Epetra_CrsGraph &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_CrsGraph &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4e3c90f0a46f9c02bec4de6ba20c1419</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; int, long long, Xpetra::EpetraNode &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a2129c1c160f7c90bb801171f8d3507ac</anchor>
      <arglist>(RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Tpetra::CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a99d05d641da042ec0b62a9070b230304</anchor>
      <arglist>(const RCP&lt; const CrsGraph&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a34c6fabb75c71319f6a1ec765b4e7518</anchor>
      <arglist>(const Epetra_Export *exp)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Export&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1c2818a43f0abfbc578c5e621130459e</anchor>
      <arglist>(const Epetra_Export *)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Export&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4754c13a5c32f53a7a578093b105d314</anchor>
      <arglist>(const Epetra_Export *)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Export &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad527aae3b5d453be3e530572defd5d50</anchor>
      <arglist>(const Export&lt; int, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3ae12e54d3752ae74dcd64591a852e2f</anchor>
      <arglist>(const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae398e5da3ae17c66fac21ef47df51c44</anchor>
      <arglist>(const RCP&lt; const Tpetra::Export&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;exp)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ab1a8b235eb2ace8e27235461f47bcdaf</anchor>
      <arglist>(const Epetra_Import *import)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Import&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1d1a895ad2ed898d9fdcd53820cd55b1</anchor>
      <arglist>(const Epetra_Import *)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; const Import&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a20a99aa72e3283c6694b66aaede36cac</anchor>
      <arglist>(const Epetra_Import *)</arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a290398f49a8a44477ffc37cc52874a99</anchor>
      <arglist>(const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae839be8deb301f5ecf1091fab7fe0fe0</anchor>
      <arglist>(const RCP&lt; const Tpetra::Import&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;import)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa3831335e40432d4b84c6bb8bd8b8963</anchor>
      <arglist>(const Map&lt; int, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af0c954fb36dd6b70dc8c3f9568de6f2b</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af42104134f1099138d9385771c3d366f</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const RCP&lt; const Map&lt; int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4b82fd40d42fc0f8a8d955fc9a9c8ac7</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa17ecc8864d7d9cd45167ae98af232da</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, int, Xpetra::EpetraNode &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a56cabdf52ddcc9297d727a54c5c8abb7</anchor>
      <arglist>(const Map&lt; int, int, Xpetra::EpetraNode &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const RCP&lt; const Map&lt; int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac86ccaba291f673c068674c72d18e279</anchor>
      <arglist>(const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad1a8f7531e2c1719b517253142a4604d</anchor>
      <arglist>(const RCP&lt; const Map&lt; int, long long, Xpetra::EpetraNode &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Map &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5aeed265a35e51eb7547457b55f6bfcf</anchor>
      <arglist>(const Map&lt; int, long long, Xpetra::EpetraNode &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6b730b6dde874e3b33b45993bea0f483</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa618ba842966919b52263b3db0abafef</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a671496ea5f704454cdff32b60395597c</anchor>
      <arglist>(const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetraNonConst</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3b5f1e77120a6b8bbcc9bfa4e7d63730</anchor>
      <arglist>(const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetraNonZero</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a93f3f2bedd3a256fe5ce69ae7e615545</anchor>
      <arglist>(const RCP&lt; const Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_MultiVector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a9bf4f2e2a303ad2951a031cc2e9c524b</anchor>
      <arglist>(const MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a075c625e509917a701638d156f4270b6</anchor>
      <arglist>(MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; double, int, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af496bccfd9a343313af71b7dc213e754</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a237750706317f237250c84b79c902919</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt;)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a07b3674b54a6f90aa3e5850b323e9e4e</anchor>
      <arglist>(MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>afcdd3f8724eeb4a30caeae20bd60ecb5</anchor>
      <arglist>(const MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &gt;</type>
      <name>toXpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6c99d40cd5254445facec2cb20873558</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt;)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac6d5daae03345307d745709216c7602a</anchor>
      <arglist>(MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_MultiVector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af6cb8b0f28aa99d6d3cbf4102c700c7a</anchor>
      <arglist>(const MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4a9b1f70231951fa1569024564e194e6</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a16176b84415ef2077af763b1ef5353b9</anchor>
      <arglist>(MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a526721e559251f2d60870fa9080c80da</anchor>
      <arglist>(RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa4fdb6af6dec192a58894153f7655d7e</anchor>
      <arglist>(RCP&lt; const Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a0392ef005c2f1396d04777bdeab64b70</anchor>
      <arglist>(RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af56190690ed8247547c61ffebfa6495a</anchor>
      <arglist>(RCP&lt; const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Epetra_Comm &gt;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ab168d46c0c042be2f8b0f66506b77b9f</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac6bec3d26507b5e8a6a9026d530bf5da</anchor>
      <arglist>(const Epetra_Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a2ee6585fccc69a0eb02dea89c6e1f9e5</anchor>
      <arglist>(Teuchos::ETransp)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ae4158557b035b0d1b6e2fd00cb7eb428</anchor>
      <arglist>(UnderlyingLib lib)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::LookupStatus</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ad3a01b48f505e2a758b4df381e5046b0</anchor>
      <arglist>(Tpetra::LookupStatus)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::ProfileType</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a965e058950d1ba4ad97005bd0ec34b56</anchor>
      <arglist>(Xpetra::ProfileType)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::OptimizeOption</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1029d05ec8de93285152f58adf0d3a69</anchor>
      <arglist>(Xpetra::OptimizeOption)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::CombineMode</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c26611d59f02700d3fec2627db99874</anchor>
      <arglist>(Xpetra::CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>Tpetra::LocalGlobal</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a4c4d5bd477633014f495934f660cccfb</anchor>
      <arglist>(LocalGlobal lg)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::LookupStatus</type>
      <name>toXpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a6abdbcd13f73c266858306e5efa13b1c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a3bc6b6130c9c6d9aef352a24c3d6d26f</anchor>
      <arglist>(Xpetra::ProfileType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8c84d563f07c92034eb091a9cc41cb30</anchor>
      <arglist>(Xpetra::OptimizeOption)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_CombineMode</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1b85512714f7e168fadda4428fb4cc67</anchor>
      <arglist>(Xpetra::CombineMode CM)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Vector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aeb0d393494cee0093faae841e78dff09</anchor>
      <arglist>(Vector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Vector &amp;</type>
      <name>toEpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>ac856becf599570abf5c21c48cf66c6b9</anchor>
      <arglist>(const Vector&lt; double, int, GlobalOrdinal, Node &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_Vector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8e10003334dc788850a241cd296fc472</anchor>
      <arglist>(Vector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Vector &amp;</type>
      <name>toEpetra&lt; int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a7b6305d78533589e8576719915c25098</anchor>
      <arglist>(const Vector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template Epetra_Vector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a70cf6d637058d6115fe79bce8ba8d617</anchor>
      <arglist>(Vector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>template const Epetra_Vector &amp;</type>
      <name>toEpetra&lt; long long, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5550917c013affe26655f4fb5f332cbc</anchor>
      <arglist>(const Vector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8433fd5277c0c83032781d0270ed9a4d</anchor>
      <arglist>(Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Tpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>toTpetra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a8b2dd89f2095c9c9a629be79eba99b47</anchor>
      <arglist>(const Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tokenize</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>acf68475a762f02929ba48a16624aa308</anchor>
      <arglist>(std::string srcInput, std::string whitespace, std::string prefer, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::const_iterator</type>
      <name>buildSubBlock</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a1e98998280db72d98762ea7ef36af6ad</anchor>
      <arglist>(std::vector&lt; std::string &gt;::const_iterator begin, std::vector&lt; std::string &gt;::const_iterator end, std::vector&lt; std::string &gt; &amp;subBlock)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Xpetra::BlockReorderManager &gt;</type>
      <name>blockedReorderFromTokens</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5b96b785c5e0e100e40db17c38f5e9c7</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt;</type>
      <name>blockedReorderFromString</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>af27a8e25c793eddcb17ec2496ce7a64d</anchor>
      <arglist>(std::string reorder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlockMaps</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aa3580a22e899f850d22ec436272ec22b</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; brm, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat, bool bThyraMode)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlocks</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>adb79c13f174379e2e10b0d717ea674ab</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; rowMgr, Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; colMgr, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>mergeSubBlocksThyra</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a5ee2245a22d3e690d259500f664757be</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; rowMgr, Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; colMgr, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>buildReorderedBlockedCrsMatrix</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a11a8077cf952a98996be0c4b28b187b6</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::BlockReorderManager &gt; brm, Teuchos::RCP&lt; const Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; bmat)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Map&lt; LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>aba9027f08349389316953e97722cc069</anchor>
      <arglist>(const Map&lt; LocalOrdinal, GlobalOrdinal, Node1 &gt; &amp;map, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a0bd5df9f8415f9768162135d683e7ae1</anchor>
      <arglist>(const Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node1 &gt; &amp;matrix, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a32c4324df7f0052140818f3ecc244bb6</anchor>
      <arglist>(const MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node1 &gt; &amp;MV, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a955c07569a0ff9030f54e05d3e64fcd7</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a9e61b4cd91a895283272c6b152aa47ee</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi&lt; double, int, int, EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a35a56383e41679317cc51026bdfbabaa</anchor>
      <arglist>(double omega, const Xpetra::Vector&lt; double, int, int, EpetraNode &gt; &amp;Dinv, const Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;B, Xpetra::Matrix&lt; double, int, int, EpetraNode &gt; &amp;C, bool call_FillComplete_on_result, bool doOptimizeStorage, const std::string &amp;label, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi&lt; double, int, long long, EpetraNode &gt;</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a29a726fd49fc5241770da13f1c6b6b4e</anchor>
      <arglist>(double omega, const Xpetra::Vector&lt; double, int, long long, EpetraNode &gt; &amp;Dinv, const Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;B, Xpetra::Matrix&lt; double, int, long long, EpetraNode &gt; &amp;C, bool call_FillComplete_on_result, bool doOptimizeStorage, const std::string &amp;label, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Jacobi</name>
      <anchorfile>namespaceXpetra.html</anchorfile>
      <anchor>a822616e4943ea3b99ddce6a46c98aed6</anchor>
      <arglist>(Scalar omega, const Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Dinv, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B, Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;C, bool call_FillComplete_on_result=true, bool doOptimizeStorage=true, const std::string &amp;label=std::string(), const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Xpetra::Exceptions</name>
    <filename>namespaceXpetra_1_1Exceptions.html</filename>
    <class kind="class">Xpetra::Exceptions::BadCast</class>
    <class kind="class">Xpetra::Exceptions::Incompatible</class>
    <class kind="class">Xpetra::Exceptions::NotImplemented</class>
    <class kind="class">Xpetra::Exceptions::RuntimeError</class>
  </compound>
  <compound kind="namespace">
    <name>Xpetra::useTpetra</name>
    <filename>namespaceXpetra_1_1useTpetra.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createLocalMapWithNode</name>
      <anchorfile>namespaceXpetra_1_1useTpetra.html</anchorfile>
      <anchor>a2ab4169b03b7b20ea838676e3f8f02a6</anchor>
      <arglist>(size_t numElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const TpetraMap&lt; LocalOrdinal, GlobalOrdinal &gt; &gt;</type>
      <name>createContigMap</name>
      <anchorfile>namespaceXpetra_1_1useTpetra.html</anchorfile>
      <anchor>afb69ed87ce560dad91d05fc90a4e7b01</anchor>
      <arglist>(global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const TpetraMap&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>createContigMapWithNode</name>
      <anchorfile>namespaceXpetra_1_1useTpetra.html</anchorfile>
      <anchor>a045598733725fde3aa2bc784ac08d115</anchor>
      <arglist>(global_size_t numElements, size_t localNumElements, const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; Node &gt; &amp;node)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>XpetraExamples</name>
    <filename>namespaceXpetraExamples.html</filename>
  </compound>
  <compound kind="page">
    <name>user_guide</name>
    <title>Users Guide</title>
    <filename>user_guide</filename>
    <docanchor file="user_guide" title="Index">user_guide_index</docanchor>
    <docanchor file="user_guide" title="Getting Started">user_guide_getting_started</docanchor>
  </compound>
  <compound kind="page">
    <name>todo</name>
    <title>ToDo List</title>
    <filename>todo</filename>
  </compound>
  <compound kind="page">
    <name>faq</name>
    <title>Frequently Asked Questions</title>
    <filename>faq</filename>
    <docanchor file="faq">Questions</docanchor>
    <docanchor file="faq" title="1. Why name the code Xpetra?">faq1</docanchor>
    <docanchor file="faq" title="2. Put your question here?">faq2</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Table of Contents">main_index</docanchor>
    <docanchor file="index" title="Overview">xpetra_overview</docanchor>
    <docanchor file="index" title="Packages Currently Using Xpetra">xpetra_packagesUsingXpetra</docanchor>
    <docanchor file="index" title="Authors and Contributors">xpetra_authors</docanchor>
    <docanchor file="index" title="Copyright and License">xpetra_copyright</docanchor>
    <docanchor file="index" title="For All Questions and Comments...">xpetra_questions</docanchor>
    <docanchor file="index" title="Outline">Teuchos_outline</docanchor>
    <docanchor file="index" title="Introduction">Teuchos_intro</docanchor>
    <docanchor file="index" title="Teuchos Contributors">Teuchos_contributors</docanchor>
    <docanchor file="index" title="Summary of Teuchos&apos; Configuration Options">Teuchos_config_options</docanchor>
    <docanchor file="index" title="Overview of Teuchos Subpackages">Teuchos_startup</docanchor>
    <docanchor file="index" title="Teuchos Core Subpackage">TeuchosCore_src</docanchor>
    <docanchor file="index" title="Teuchos ParameterList Subpackage">TeuchosParameterList_src</docanchor>
    <docanchor file="index" title="Teuchos Communication Subpackage">TeuchosComm_src</docanchor>
    <docanchor file="index" title="Teuchos Numerics Subpackage">TeuchosNumerics_src</docanchor>
    <docanchor file="index" title="Teuchos Remainder Subpackage">TeuchosRemainder_src</docanchor>
    <docanchor file="index" title="Browse all of Teuchos">Teuchos_browser</docanchor>
    <docanchor file="index" title="Outline">Epetra_outline</docanchor>
    <docanchor file="index" title="Introduction">Epetra_intro</docanchor>
    <docanchor file="index" title="Overview of Epetra.">Epetra_startup</docanchor>
    <docanchor file="index" title="Epetra Classes">Epetra_formulations</docanchor>
    <docanchor file="index" title="Fortran and C Support">Epetra_wrappers</docanchor>
    <docanchor file="index" title="Trilinos and Epetra">Epetra_trilinos</docanchor>
    <docanchor file="index" title="Transition support for current Aztec users">Epetra_aztec2trilinos</docanchor>
    <docanchor file="index" title="Extending Epetra functionality">Epetra_extending</docanchor>
    <docanchor file="index" title="Why not abstract multivector and vector classes?">why_not_abstract_vector</docanchor>
    <docanchor file="index" title="Tutorial lessons">Epetra_example</docanchor>
    <docanchor file="index" title="Epetra adapters for Thyra and PyTrilinos">Epetra_adapters</docanchor>
    <docanchor file="index" title="Browse all of Epetra as a single doxygen collection">Epetra_browser</docanchor>
  </compound>
</tagfile>
