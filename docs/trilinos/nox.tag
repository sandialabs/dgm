<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>NOX_LAPACK_Vector.H</name>
    <path>/Users/sscoll/dist/trilinos/packages/nox/src-lapack/</path>
    <filename>NOX__LAPACK__Vector_8H</filename>
    <class kind="class">NOX::LAPACK::Vector</class>
    <namespace>NOX</namespace>
    <namespace>NOX::LAPACK</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>ac33430b8de098dbbce9350ab0dc77a41</anchor>
      <arglist>(std::ostream &amp;stream, const NOX::LAPACK::Vector &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>d_one</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>aa17b71d4be397db0fb9d801b281f2e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>d_mone</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>a4336464be8a5ac63349defa1f985337f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>d_zero</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>a9c8382d0e26e5d6465446984716ade33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>i_one</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>ac5201e598de33614b441b8aaed346361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>i_zero</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>a7c00ffa91e1268638a467f3558540e87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NOX_Thyra_Vector.H</name>
    <path>/Users/sscoll/dist/trilinos/packages/nox/src-thyra/</path>
    <filename>NOX__Thyra__Vector_8H</filename>
    <class kind="class">NOX::Thyra::Vector</class>
    <namespace>NOX</namespace>
    <namespace>NOX::Thyra</namespace>
  </compound>
  <compound kind="class">
    <name>LOCA::StatusTest::Abstract</name>
    <filename>classLOCA_1_1StatusTest_1_1Abstract.html</filename>
    <member kind="function">
      <type></type>
      <name>Abstract</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Abstract.html</anchorfile>
      <anchor>a487fa2b12403ac924aeb724877b5f6fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Abstract</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Abstract.html</anchorfile>
      <anchor>a19bd1c2969d00f7d941eb9f999d247cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LOCA::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Abstract.html</anchorfile>
      <anchor>a3cbdde0c57b455fcf7ac569d0fa96ba7</anchor>
      <arglist>(const LOCA::Abstract::Iterator &amp;stepper, LOCA::StatusTest::CheckType checkType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LOCA::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Abstract.html</anchorfile>
      <anchor>aac97c78b71ed806462b76dbdffa7223e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Abstract.html</anchorfile>
      <anchor>aa4ef5d027c53a87a10203d90dac47bdc</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Parameter::AbstractEntry</name>
    <filename>classLOCA_1_1Parameter_1_1AbstractEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1AbstractEntry.html</anchorfile>
      <anchor>a5417ad7c5ec0632f7eafd4b29acffb25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1AbstractEntry.html</anchorfile>
      <anchor>a084e3f21010a2dfafc50f006e4d639f6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MinimallyAugmented::AbstractGroup</name>
    <filename>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::TurningPoint::MinimallyAugmented::AbstractGroup</base>
    <base virtualness="virtual">LOCA::Pitchfork::MooreSpence::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a89783daef96bbd3d5584c6ede5297aec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a283d5367b4756355854c7ca4be9d64db</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::AbstractGroup</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::TurningPoint::MooreSpence::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ab1cc28a3ad83a274e6e99959731517d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a64261357482bff7de840207a0c106654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ab803db4a225b5493dd4df6803b41c601</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>innerProduct</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>af6bfbdbdec3cd06cb60f6cb7316a2450</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector &amp;b, NOX::Abstract::MultiVector::DenseMatrix &amp;c) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TimeDependent::AbstractGroup</name>
    <filename>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>ab5c9ae821dfd19dab9e64b07c5dae2c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a25e2a794ba937a654cdd21392f0f5bde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeSecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a61087030c33f68902bf4d813ac03ef64</anchor>
      <arglist>(double alpha, double beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a7888c8fca3f031785b09801cf15d1fe1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>ae5d7a2ec2ca1388946485361cbeef2fc</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a5f613396c582d3940cc2f7b43efeb949</anchor>
      <arglist>(double alpha, double beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>ac0172b72cf208e805120cb51506ce1ec</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a796b1062400d87bfccd8a927f34151cd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>aaa995a797b022f38a9bd358ea8635bdc</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a5f613396c582d3940cc2f7b43efeb949</anchor>
      <arglist>(double alpha, double beta)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>ac0172b72cf208e805120cb51506ce1ec</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>a796b1062400d87bfccd8a927f34151cd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TimeDependent_1_1AbstractGroup.html</anchorfile>
      <anchor>aaa995a797b022f38a9bd358ea8635bdc</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MinimallyAugmented::AbstractGroup</name>
    <filename>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::TurningPoint::MooreSpence::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>aa22f946ca993f6b07985aa8f2dd9744f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a2219040f1c0ce3b99380d8b750bc3480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a46e32cdb642344a6c444139031320d30</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector::DenseMatrix &amp;result, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJDp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a76993fc95b16003a69142187452edcc7</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, NOX::Abstract::MultiVector &amp;result, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDx</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>ab51d04c43ccd3124e3f22abea47bfbb4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::Vector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a46e32cdb642344a6c444139031320d30</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector::DenseMatrix &amp;result, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJDp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a76993fc95b16003a69142187452edcc7</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, NOX::Abstract::MultiVector &amp;result, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDx</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>ab51d04c43ccd3124e3f22abea47bfbb4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::Vector &amp;result)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::AbstractGroup</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a67722af287f8eb14a6d6e1e59439c98c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a45e202a9a224622e27ad4d98793308fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ac3013cdb1f206643e0e0713e03f60e08</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxaMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a75a0d2f4f6cffa76ee3fa6a1b450ece8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxaMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ad4f04dd0c115e79c0aefd8901f2f8b52</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::Vector &amp;JnVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDxMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a72b90c838a65371ad8684fcb8e9045b4</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ac3013cdb1f206643e0e0713e03f60e08</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxaMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a75a0d2f4f6cffa76ee3fa6a1b450ece8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxaMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ad4f04dd0c115e79c0aefd8901f2f8b52</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::Vector &amp;JnVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDxMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a72b90c838a65371ad8684fcb8e9045b4</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSystem::AbstractGroup</name>
    <filename>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a651c94df2fdbd5f6a68e83bd95ffce1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a7c3dc982a88b687313a80d4b65154240</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a150e4593ab1d477bd834ddabe22911fb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a262eef45ebeec53bb3a2ccad3251eb5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a2388bc9d3bab398e5e7b0d0981eba4ed</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>afd295dfc46e6c5f49d62b6081acb549b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>aa2f17377046210b7e6c04b678d656c75</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>ab4aace3fc63d4b850739d975ea1588a8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a229cce669404211e4469d45aad06ad13</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a50f3edea1a27081d2ff200579f7e4afd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a99555f84384552143c2a14f5d89985a6</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a51397c66e604276a58af6f0c6023ffbb</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a06a3bbf29ccc96ab917404c5437a714d</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a150e4593ab1d477bd834ddabe22911fb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a262eef45ebeec53bb3a2ccad3251eb5d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a2388bc9d3bab398e5e7b0d0981eba4ed</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>afd295dfc46e6c5f49d62b6081acb549b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>aa2f17377046210b7e6c04b678d656c75</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>ab4aace3fc63d4b850739d975ea1588a8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a229cce669404211e4469d45aad06ad13</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a50f3edea1a27081d2ff200579f7e4afd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a99555f84384552143c2a14f5d89985a6</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a51397c66e604276a58af6f0c6023ffbb</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1BorderedSystem_1_1AbstractGroup.html</anchorfile>
      <anchor>a06a3bbf29ccc96ab917404c5437a714d</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MinimallyAugmented::AbstractGroup</name>
    <filename>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::Hopf::MooreSpence::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a860e48a7d020bce0124b2679d1e7b8f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>aad7a577ddc1017da130281c4d3e41ff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>aa7a08b3387eec571c52ca6e734c9788e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>ab219c0f9c2519e422a0dc3e81713f1dd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a0000e29851323d2830a59d2f18c59569</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a468bfcc4f543881a05e5be948cfd011d</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;y, const NOX::Abstract::Vector &amp;z, double omega, NOX::Abstract::MultiVector::DenseMatrix &amp;result_real, NOX::Abstract::MultiVector::DenseMatrix &amp;result_imag, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDx</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a563d8974cc2a733aeb3f313164fcf28d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;y, const NOX::Abstract::Vector &amp;z, double omega, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>aa7a08b3387eec571c52ca6e734c9788e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>ab219c0f9c2519e422a0dc3e81713f1dd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a0000e29851323d2830a59d2f18c59569</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a468bfcc4f543881a05e5be948cfd011d</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;y, const NOX::Abstract::Vector &amp;z, double omega, NOX::Abstract::MultiVector::DenseMatrix &amp;result_real, NOX::Abstract::MultiVector::DenseMatrix &amp;result_imag, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDx</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1AbstractGroup.html</anchorfile>
      <anchor>a563d8974cc2a733aeb3f313164fcf28d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;y, const NOX::Abstract::Vector &amp;z, double omega, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::AbstractGroup</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::TurningPoint::MooreSpence::AbstractGroup</base>
    <base virtualness="virtual">LOCA::TimeDependent::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ab63ce4a88ebdd59e85a14ad2a991ca15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>af3e20e1fd20f17b52713dca26f1a6e32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>af87a087d2b7cb8bd401bbe81bd90a42a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a7e51e0b09aa74c97bed70468d21e0e8c</anchor>
      <arglist>(double frequency)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a5916579cc940aa66a1d234d8582cd416</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>abe22ee55efdc359470fc51949edb40b4</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a1bf5610e5ba4caa74fe7a0af71efd28a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a387db2a82a4b6e0c27cae29e08152b0b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a881344846d63a12ee9fa2f94f9f68bdb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ab2712e57fc7460d9b8e57ae1a6a71c96</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, const NOX::Abstract::Vector &amp;Ce_real, const NOX::Abstract::Vector &amp;Ce_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>af87a087d2b7cb8bd401bbe81bd90a42a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a7e51e0b09aa74c97bed70468d21e0e8c</anchor>
      <arglist>(double frequency)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a5916579cc940aa66a1d234d8582cd416</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>abe22ee55efdc359470fc51949edb40b4</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a1bf5610e5ba4caa74fe7a0af71efd28a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a387db2a82a4b6e0c27cae29e08152b0b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag, bool isValid)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>a881344846d63a12ee9fa2f94f9f68bdb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1AbstractGroup.html</anchorfile>
      <anchor>ab2712e57fc7460d9b8e57ae1a6a71c96</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, const NOX::Abstract::Vector &amp;Ce_real, const NOX::Abstract::Vector &amp;Ce_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::AbstractGroup</name>
    <filename>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a671cd255aa4f41b3e4055daccdd263af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a8338dab46245cbc650b985462455e1a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a23901e249f42746435aee11ea1b07932</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af3c18199018203d2e2452c242646d941</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a58a9ee193a18a0a4863f9d4471ad1966</anchor>
      <arglist>(const LOCA::ParameterVector &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>aeeb81c967941bc571431f34d014f3e15</anchor>
      <arglist>(int paramID, double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a619f18ee02dae6768d6d0be2c09284bd</anchor>
      <arglist>(std::string paramID, double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a63155c7020afe19907ebfcd4b84a4428</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>ae9115e20fd16aa3e374de259f6d93705</anchor>
      <arglist>(int paramID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a20dcaa73c717a5baec41c3166a361a4c</anchor>
      <arglist>(std::string paramID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a19e859f1a51836c55a2c3e0bf7639a48</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a42c8ee1e75cdba29a3bb95ed11edc580</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a1352c7d6672e741243cb5544598a4a80</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af309f4e4286ab1ed1c9189ccb6c3252d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af6f2774135c73c954c08094c8ee8da6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a41472ac73935e49601aa57329b78a876</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a9c3629ebf9ff379682c312a086bd3f54</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af992a85771fd1fe7964008c2ba321b00</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a5acaa9bb847e458ce8c184df8213d94b</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a23901e249f42746435aee11ea1b07932</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af3c18199018203d2e2452c242646d941</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a58a9ee193a18a0a4863f9d4471ad1966</anchor>
      <arglist>(const LOCA::ParameterVector &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>aeeb81c967941bc571431f34d014f3e15</anchor>
      <arglist>(int paramID, double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a619f18ee02dae6768d6d0be2c09284bd</anchor>
      <arglist>(std::string paramID, double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a63155c7020afe19907ebfcd4b84a4428</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>ae9115e20fd16aa3e374de259f6d93705</anchor>
      <arglist>(int paramID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a20dcaa73c717a5baec41c3166a361a4c</anchor>
      <arglist>(std::string paramID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a19e859f1a51836c55a2c3e0bf7639a48</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a42c8ee1e75cdba29a3bb95ed11edc580</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a1352c7d6672e741243cb5544598a4a80</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af309f4e4286ab1ed1c9189ccb6c3252d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af6f2774135c73c954c08094c8ee8da6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a41472ac73935e49601aa57329b78a876</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a9c3629ebf9ff379682c312a086bd3f54</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>af992a85771fd1fe7964008c2ba321b00</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractGroup.html</anchorfile>
      <anchor>a5acaa9bb847e458ce8c184df8213d94b</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Homotopy::AbstractGroup</name>
    <filename>classLOCA_1_1Homotopy_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1AbstractGroup.html</anchorfile>
      <anchor>ad29a1b3c3ef824397e0178394ca34d2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1AbstractGroup.html</anchorfile>
      <anchor>ae2157ef6c71a0dd687c766bbbc1a958d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1AbstractGroup.html</anchorfile>
      <anchor>a237d8d9b3e9c44cc027f840759f8a048</anchor>
      <arglist>(double a, double b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1AbstractGroup.html</anchorfile>
      <anchor>a237d8d9b3e9c44cc027f840759f8a048</anchor>
      <arglist>(double a, double b)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::PhaseTransition::AbstractGroup</name>
    <filename>classLOCA_1_1PhaseTransition_1_1AbstractGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1AbstractGroup.html</anchorfile>
      <anchor>aa96379edf1219ef0d940cd38afbdf30e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1AbstractGroup.html</anchorfile>
      <anchor>ae9967fd9f6e66308f0176f08a91b73ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1AbstractGroup.html</anchorfile>
      <anchor>aa7b705fc0dbdb200354ac24f63ef7e48</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1AbstractGroup.html</anchorfile>
      <anchor>aa7b705fc0dbdb200354ac24f63ef7e48</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::AbstractOperator</name>
    <filename>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</anchorfile>
      <anchor>a2097474f4a334a7604c35ed0b21bf541</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</anchorfile>
      <anchor>a0f522e65eaa808302ca560437f325637</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</anchorfile>
      <anchor>a2351f26d1442ef905edae18fcbef9770</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</anchorfile>
      <anchor>ae9ca55c517b1a69d94e24707cc691f9d</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</anchorfile>
      <anchor>a881056458fa1ea541635fa03e60eb591</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractOperator.html</anchorfile>
      <anchor>ae73dada5e8e8377b5421fb7171fcc090</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SaveEigenData::AbstractStrategy</name>
    <filename>classLOCA_1_1SaveEigenData_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1AbstractStrategy.html</anchorfile>
      <anchor>a46b51c42207246512d0b1eb471484ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1AbstractStrategy.html</anchorfile>
      <anchor>a54c94e2485e5a0d70a31df303eff1211</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>save</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1AbstractStrategy.html</anchorfile>
      <anchor>a9697b1883890f0e04b3d7cdc161701eb</anchor>
      <arglist>(Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_r, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_r, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_i)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StepSize::AbstractStrategy</name>
    <filename>classLOCA_1_1StepSize_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1StepSize_1_1AbstractStrategy.html</anchorfile>
      <anchor>ac67dfed03d429fbf8641b21ffc6e68a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1StepSize_1_1AbstractStrategy.html</anchorfile>
      <anchor>ab881a3a6f0062ac7c5e05c1aa6eaaa8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1AbstractStrategy.html</anchorfile>
      <anchor>a35f6e11fb799bb2c57e08829d0f41e4a</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractStrategy &amp;curGroup, const LOCA::MultiContinuation::ExtendedVector &amp;predictor, const NOX::Solver::Generic &amp;solver, const LOCA::Abstract::Iterator::StepStatus &amp;stepStatus, const LOCA::Abstract::Iterator &amp;stepper, double &amp;stepSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getPrevStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1AbstractStrategy.html</anchorfile>
      <anchor>a69cf2135ef7234f569fe5c7c1516a945</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getStartStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1AbstractStrategy.html</anchorfile>
      <anchor>ad67c7d12c6605a6b3c3bfa51a970fc93</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::AbstractStrategy</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>acdd126a2b3f4e14e4da1b35ad8b4649d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a2c7da4897d4fc76147f44f9802eedaf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a83ff93fb56b62b89398dd2b9ccc65398</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a124c71fdbb0aa726cb1607a48f28b3d0</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessSeedVector</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a2bf940e33ee1bfdf96ab192abd57a1de</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;ivec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginPostProcessing</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a7e97f4723b950150e48a6d1518be4e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a4768e5721e922a69897b1ae85af0447e</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1AbstractStrategy.html</anchorfile>
      <anchor>a57e22214e7436a046605d24f29efcaef</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::TransposeLinearSystem::AbstractStrategy</name>
    <filename>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>ab845dd1f043ff465b28b9f4c697efd9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>aa188872d31ff13ea2395334b3a23f681</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>a513311f3f9a125135a0f58712f5e8c15</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>createJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>a77453b630545dcd6fdc958b34348e921</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>createTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>a82a8ebc44e2c6ad9c7a9da3f72139f0b</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>ab5595e697342944dcfaa3fb56e757d8f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>a1285e3e85e8a1e6aadd89d81f6447fa4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>a5717c9f1e77375019c122329835c0c9f</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_jac_trans)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1AbstractStrategy.html</anchorfile>
      <anchor>a5c936b93bc5e3cca9827169b81c243f5</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_prec_trans)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::AbstractStrategy</name>
    <filename>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>aedf4e37254cd76f4860e8ccf6d30db9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a1ba6af870847ffe735d1b01b1b22a17f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMatrixBlocks</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>ae128c937cbe1f24d7e7acbbee667c725</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMatrixBlocksMultiVecConstraint</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a2475c251c6c707d95eb1d276f5b1d493</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>ae6f6b79c7fb277f3efa1fe8f2ddde22a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a547c5085a0a406822a91fa38f1a7de1f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a76ee856134b2a91daa74de72813647ac</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>afcc6fc1bf5402b80e287783b95248600</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>ae51493a1c94346dfd513d425388f43fb</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a26f2afcba3ee5cdc89da216de63893da</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Eigensolver::AbstractStrategy</name>
    <filename>classLOCA_1_1Eigensolver_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a364d5e4cf59e589aaf71f03b05d5b7f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a8641f0ecac0e6b85bb9b810b25a4d10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeEigenvalues</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AbstractStrategy.html</anchorfile>
      <anchor>a58450be1918fb0c828138142a98b4f09</anchor>
      <arglist>(NOX::Abstract::Group &amp;group, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_r, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_r, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_i)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::AbstractStrategy</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1AbstractStrategy.html</anchorfile>
      <anchor>a26e7773b136d6469d619e8643fbd903e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1AbstractStrategy.html</anchorfile>
      <anchor>a07fbc0a24780efc2a894401efa923ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1AbstractStrategy.html</anchorfile>
      <anchor>ae40fb0b73764d8cd0facaac5371d0b8a</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1AbstractStrategy.html</anchorfile>
      <anchor>aac11b73a13fea270f4dadfd1c0bcae48</anchor>
      <arglist>(int n, double *r_evals, double *i_evals=NULL, std::vector&lt; int &gt; *perm=NULL) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::AbstractStrategy</name>
    <filename>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a3307943430835ad4eda2a9100e21ef66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a3f8af7aa1ab829b109b2ab2fce80075a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a041526def889fe745879c891f94c721e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a32727b0b543cc380729fb1eb6646dddd</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>ae0569b0ebb96ddf8f839e1ffb24e9a8e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a2a5f8456e6c38481d09df9d2914f725a</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computePredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a073bc41ff2ce2fc4ec51bb3886bcdf34</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>ad9e57e3f5237ad0dbdbb37f260b90283</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scaleTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a85e7a14d03b89475b3a583577cd039b8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPredictorTangentDirection</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>af23433ddaff090f2f1c8d6243f206ab9</anchor>
      <arglist>(const LOCA::MultiContinuation::ExtendedVector &amp;v, int i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const LOCA::MultiContinuation::ExtendedMultiVector &amp;</type>
      <name>getPredictorTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>ad36e6f492bffcba2fa78686c949becc4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const LOCA::MultiContinuation::ExtendedMultiVector &amp;</type>
      <name>getScaledPredictorTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a3409d9eacd8c21f1c804408764bf4cb2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPrevX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a3021d4d0da754301877812e007117155</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const LOCA::MultiContinuation::ExtendedVector &amp;</type>
      <name>getPrevX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a7196c2192f3e7107045602692daff30c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setStepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>ab2b6a23fde7187509c3ff285489b47f6</anchor>
      <arglist>(double deltaS, int i=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getStepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a95d32c282e74759bea44d5a9c21a472c</anchor>
      <arglist>(int i=0) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setContinuationParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>ad6c7f02aa4e99bb93baa265fe15969cb</anchor>
      <arglist>(double val, int i=0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getContinuationParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a335107e877e7001a7e86b9e9e10a255f</anchor>
      <arglist>(int i=0) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getContinuationParameterID</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a2db8b6127fcba29435b63cdfdc1f0910</anchor>
      <arglist>(int i=0) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getContinuationParameterIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a7f42afe032e6441bddca2f5ffc1baf6a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getContinuationParameterName</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a3ec635352bad7618f652b0456552a6b0</anchor>
      <arglist>(int i=0) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getStepSizeScaleFactor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>aa5e920fdc79570d3fe67413b53742683</anchor>
      <arglist>(int i=0) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>ac9be3ab9e24f1208c5c58474c2ea8642</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>a14ddb2c32297167b74a1d28df30764ac</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const NOX::Abstract::Vector &amp;y) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>abde8f5dd5209764bdd0454ce4c53d8c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1AbstractStrategy.html</anchorfile>
      <anchor>afd3ecb3643eb90e4f8ee258d3a0131fa</anchor>
      <arglist>(const LOCA::MultiContinuation::ExtendedVector &amp;x, double *px) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::AbstractStrategy</name>
    <filename>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractStrategy</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>a9813685397703088c8e8f039b03a81b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractStrategy</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>acda990737387d2c0d186cc807b5ee83f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LOCA::MultiPredictor::AbstractStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>ab822e05eafe5781294d13e18d23f2df1</anchor>
      <arglist>(const LOCA::MultiPredictor::AbstractStrategy &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>af7693416257c7272ec4715b81ad7c224</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>acd27c4fe26c22eff0a696162be205622</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>evaluate</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>a1ca71cd4af4e4478d6823af91160a5ec</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedMultiVector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeTangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>a437b8f760db5afd1b94715e473c2c90b</anchor>
      <arglist>(LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isTangentScalable</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>afe9f8f7291edd9fe44cd6818116ab02d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setPredictorOrientation</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1AbstractStrategy.html</anchorfile>
      <anchor>a245e1c8eabcafef17a99bad6c1126781</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedVector &amp;secant, LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StepSize::Adaptive</name>
    <filename>classLOCA_1_1StepSize_1_1Adaptive.html</filename>
    <base>LOCA::StepSize::Constant</base>
    <member kind="function">
      <type></type>
      <name>Adaptive</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Adaptive.html</anchorfile>
      <anchor>ae0abe39d9b11944dbc20525392ffd588</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Adaptive</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Adaptive.html</anchorfile>
      <anchor>a92e2148165b5f932967da458f701b3cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Adaptive.html</anchorfile>
      <anchor>ae257413df73a34ff8f2fa08670633561</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractStrategy &amp;curGroup, const LOCA::MultiContinuation::ExtendedVector &amp;predictor, const NOX::Solver::Generic &amp;solver, const LOCA::Abstract::Iterator::StepStatus &amp;stepStatus, const LOCA::Abstract::Iterator &amp;stepper, double &amp;stepSize)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>agrValue</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Adaptive.html</anchorfile>
      <anchor>a0917bce8027741cf60f7d37ecf8f440a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxNonlinearSteps</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Adaptive.html</anchorfile>
      <anchor>a562f64cd679ce6e4083fe0b5c1e4bde5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::AdaptiveSolutionManager</name>
    <filename>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</filename>
    <base>NOX::Epetra::AdaptiveSolutionManager</base>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LOCA::Epetra::Group &gt;</type>
      <name>buildSolutionGroup</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ad8c4004086f6a075d052f314c86546d3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectCurrentSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>af4a033b7109bc27eea67cfd32da65665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getConvergenceData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a7f7ba42a69e75aade32d6e88809c8748</anchor>
      <arglist>(int &amp;KrylovIters, int &amp;lastSolveKrylocIters, int &amp;linSolves, double &amp;tolAchieved) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Group &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a7b00b26c128a7b96a0b7a7026c67e3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>linsys</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ae5832f873ae95e99a3f41895ce69ae1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>adaptParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a7aeac9208bdec3d5ecd5ed7cd8f8c705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>piroParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>aa76e7551872c5ce079acad554b0d9570</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::AdaptiveSolutionManager</name>
    <filename>classThyra_1_1AdaptiveSolutionManager.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>projectCurrentSolution</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ab7e5b258f361756cbc6bfc45a93b67ca</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>getCurrentSolution</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ac595a5e782785ac04639800c0668f1c4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getAdaptParamsNonConst</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a9dac487885e99de22276b47578ac4364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a160b9fad03665d7282edf3cab3fe5d43</anchor>
      <arglist>(const double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIteration</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a9c0720f7e6f7d857dc2e6b0ee12def6c</anchor>
      <arglist>(const int iter)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>queryAdaptationCriteria</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ad8f157d9b1cba8cb4d9dc2ec8fb11390</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>adaptProblem</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>aac88eba87c04c9d45261f051afcc5219</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>adaptParams_</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>af98aa17ec301123e51045562144257b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>piroParams_</name>
      <anchorfile>classThyra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a07ee97d220d2a31f38fab47500aa7c7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::AdaptiveSolutionManager</name>
    <filename>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>adaptProblem</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a2f9826bae5fdd398704ebdfa2ad64874</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Epetra_Vector *</type>
      <name>getOverlapSolution</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a9385028a8c88a43dfa886f6c3a2d08be</anchor>
      <arglist>(const Epetra_Vector &amp;solution)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::AdaptManager &gt;</type>
      <name>getAdaptManager</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>aa9a23fe08403be17b8b1714891594d62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resizeMeshDataArrays</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a8a6d85097d161342d36b09ddbafa6d16</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;overlapMap, const Teuchos::RCP&lt; const Epetra_CrsGraph &gt; &amp;overlapJacGraph)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>getInitialSolution</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a66724e97f749a678d7190daf4ab29880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>initial_x</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>adbbd03b7799a87c6e6dad7a0958c6df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>initial_xdot</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a03020e40ef47f14ea439e9526df8d628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>initial_xdotdot</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ad20bedb0584bcd89f83ba300c3159772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>importer</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a5b5ba07b19d0650e9be04d35f321bccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>exporter</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a844e745217b7d749bbd4dd0d307fb9c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>overlapped_x</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a5f231ca87c7146645d153da2976758e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>overlapped_xdot</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ad3c041e97106dfd5531e266e86b3f7b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>overlapped_xdotdot</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a0148bdc29681ff7af79b97ecf04e9c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>overlapped_f</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a876dced66f87408d72af49c89f9bd7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>overlapped_jac</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ac3ff09a1c5567c04a3cf7750abd0f07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>tmp_ovlp_sol</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>aa04d703ebb9851730a524e7484ab7fea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::AdaptManager &gt;</type>
      <name>adaptManager</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>ad2ad34c02ef2120074504ef7f32a9c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>currentSolution</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a9028827d1dbe18ac56fcdf92d027408f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const int</type>
      <name>num_time_deriv</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptiveSolutionManager.html</anchorfile>
      <anchor>a10cc105ae602d76d65bb8f531061f220</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::AdaptiveStateBase</name>
    <filename>classThyra_1_1AdaptiveStateBase.html</filename>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::AdaptiveStepper</name>
    <filename>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</filename>
    <base>LOCA::Abstract::Iterator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AdaptiveStepper</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a0875b18b7513a5b5238a2e7275eeea91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eigensolverReset</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1a2aa6443c2468cad13d065be5ab271b</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;newEigensolverList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1ec0d0b5c56670d5aca55bab2104c71e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBifurcationGroup</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a33d0b7844f1e28da9bba2c37d54a7ed3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getList</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a0f4a3f78ad3c2083db85cd14dd95b20f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Solver::Generic &gt;</type>
      <name>getSolver</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a0ce592ed674f55d64024a2211ffb993b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getContinuationParameter</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a9ea9e29bf27944547fb469fa161137c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>run</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ac225e5bfc6ece24bee132a659ee19a76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLOCAFactory</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aa2c76833810a696b5607da53ecaa1c8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>start</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a65f774a7bdb11895592e4108ebad79b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>finish</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a98defa7b0e519fb4e366e91d99657550</anchor>
      <arglist>(LOCA::Abstract::Iterator::IteratorStatus iteratorStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>preprocess</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aab8ff4594b3e0f58d9e046628377fb12</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>adapt</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ad96b68aa6c92ce3ed70112e395289a21</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>afde17e0f61fe98ed7ce6c70977145f53</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>postprocess</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ac82e15f688a306cd0229d15fcc4f22b8</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>stop</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a90139bf5675ce57c37b9f59fb50b9ffb</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>iterate</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a47986a8d44f0e73104d4258a5975f468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>buildConstrainedGroup</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a7defc50ce44cf713c3d963da4a744117</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::StepStatus</type>
      <name>computeStepSize</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a5d2604e8aa060f77d6778417068d3122</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus, double &amp;stepSize)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printInitializationInfo</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ae2497dd0348239ef465294794ef6b09d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printStartStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ab9dd9679b17767fd5de2f63591aafb46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printRelaxationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aedd79c8595cbe7b0c2ca079e134803e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printEndStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1140caa13d3f6536655adce8c42fbfb5</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printRelaxationEndStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a22c12f4c04eed894b729fdac122cd8b8</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printEndInfo</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aff3e0492db9e281463cfe939df8d78f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>withinThreshold</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a51c8513b6d4ffc80af587659c26d76b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::AdaptiveSolutionManager &gt;</type>
      <name>mgr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>afd093a45af31a61cec4b25b5ebcf0481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ae412e9309deffc262c570db98ddca010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a8991d1adfe0f0e46b46205283383a1a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a349e8e17867f67583316c324f3934d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>curGroupPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a5e9b0f1980126e4a8fce9b84d8e3a8d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>prevGroupPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a054888cef89dc08749c584deff28964d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt;</type>
      <name>eigensolver</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a303e05be82a10d29210dac23cb6f1876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt;</type>
      <name>saveEigenData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aae50791dd3f4b374b82704d90c8dfecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>bifGroupPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a30f7e5d46d2efa73d3f0816f0badc032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>noxStatusTestPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>abbe835e9ebdae55055cd54896b20c5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramListPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a45e7cd823e54802c55e75b9c0be85bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>stepperList</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ab4a7820930ebe60351a695f220dfac0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>solverPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aee9ca742962a807367bffc073775b6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>curPredictorPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>af262b0725598ea46bdd4ab54924fe079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>prevPredictorPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a131847757b4d6f5211ac69fc310bbad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt;</type>
      <name>stepSizeStrategyPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aeee84399bc43e7fcbfa9a78d5057b459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>bifurcationParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a20d8adc9cb1dbcff5e54bdaaddf4a7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>conParamName</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a41720768552b7a015c2e182bcb33bac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDs</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aa4c8a665b8cc38f5fcf9f179419f7637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>startValue</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a07aea36ddf4197b7941ac072b3bd2b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxValue</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ad4ff821ec89063599e6a360573d70a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minValue</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a0b7ffb6950ffa2632966db252fefd427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ac9e0bdb7e5f50c66d0a96090d48d6629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxNonlinearSteps</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a26f5566b2e9b68d5d7455dd942d2ee65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>targetValue</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a3e0fb42b9ea5e3c14a733da7b7d175a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isTargetStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>af14d9c6b639bea2604da7feb9f2675f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doTangentFactorScaling</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>af26216597b89e851aa3979c2abe4ab5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tangentFactor</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a43490a5f791680ce02420046db44e7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minTangentFactor</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a4c61d2198f14b8eeb74ce2d782262f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tangentFactorExponent</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ae68a272d41ba406150b6f73c1d3ce6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>calcEigenvalues</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aec0d0859964373964496869238b4e242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>return_failed_on_max_steps</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aa960f4143b2e7f99ee85d8b0023ba858</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>max_steps_exceeded</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AdaptiveStepper.html</anchorfile>
      <anchor>adbca235a44b79d0ee9e0deb034bd03cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AdaptiveStepper</name>
    <filename>classLOCA_1_1AdaptiveStepper.html</filename>
    <base>LOCA::Abstract::Iterator</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AdaptiveStepper</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1aa8f9c8ef3f0a03791cbdef512a3599</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eigensolverReset</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a015ff240190f0b6fd7d63a92360fb114</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;newEigensolverList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>acb578433352dda36e738fc3d96e4af5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBifurcationGroup</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a6ad03a3c5885d3f817fd780f61161000</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getList</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ad17276c6a41636d83d9196666cd91a35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Solver::Generic &gt;</type>
      <name>getSolver</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a6291813da6292f20bfe6b7213316f47c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getContinuationParameter</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a8c8c53cd0841226bded57791d10dace8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>run</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a9d9f0cd760e31c071d8dff3030309f3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLOCAFactory</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ac785b3c278024c3702e467dcedb9a2d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>start</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a24cb35cf16ab7cadae813a087112743a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>finish</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a47fe3c3262020e9333916987d4be548d</anchor>
      <arglist>(LOCA::Abstract::Iterator::IteratorStatus iteratorStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>preprocess</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1e7503388aa6bc9dbbf4b32a516af76f</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>adapt</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a5bf25e6988be0f09e3cf7786c8a239e2</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a2e7a3d34fa7da2c4e2af5f83a1d1ed0b</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>postprocess</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a5a669140fcfac5c7dda04ec9b73b70cf</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>stop</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ac96f648150e98b05da71e595a05c11ae</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>iterate</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a4c5f2ecf6cc045278d276035541cd37d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>buildConstrainedGroup</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a377189061fc7d66c9d24608f9ce30d44</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::StepStatus</type>
      <name>computeStepSize</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a011b167df1f1a2b7dd6c6a2da6bf6fe8</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus, double &amp;stepSize)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printInitializationInfo</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>acccb549ce2599f9a34f5fb09b4dec1ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printStartStep</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a5e3225796e78f7ae7e6b04d4d5401b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printRelaxationStep</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>afddafa63b3e81d0ce3ffd78e8c311fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printEndStep</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>acf8ea4106455bd3f0733c0153e313a21</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printRelaxationEndStep</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a8a300dc4afae56173ccc0aa5c461e445</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printEndInfo</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a751d915a449b85c9139e966889e9b716</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>withinThreshold</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>abf5f8115f5ad4099a0ccf0b305376e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::AdaptiveSolutionManager &gt;</type>
      <name>mgr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a29a1074f14b6543d60d7ac73de1fc2bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a7c18ca022d62942d32750382b1cf16e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ad72daa658b674adf295b9dea46f8c282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a326ce342ae7d984064f211ab8209604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>curGroupPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ac83cc51038a25e9d31c7a1a12d133032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>prevGroupPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a45b50c8b8c475bf10f639976a9aa7c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt;</type>
      <name>eigensolver</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aa81bccf73b6b287ec51667f9beb4bb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt;</type>
      <name>saveEigenData</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a966a592f2f6917e10bf1c97a96651061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>bifGroupPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ad6c9b29bbc7bebc0f14ea50684a6b179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>noxStatusTestPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a722cdc206a6dd2c8d03abbfcc2737f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramListPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>aa850907c8c7b3bc76c733aec795e0686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>stepperList</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1aaefbbf22285b4f5e15860773a2aa17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>solverPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ad5761d198971fd0c85979ab1945b4288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>curPredictorPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a17d5962d83a836f600b5ac6b2500a6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>prevPredictorPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>afc3484dd297b94902b23b9738fca9232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt;</type>
      <name>stepSizeStrategyPtr</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a6741670f820cedfa99cd68abd5a22842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>bifurcationParams</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a4cef38e80afabccd6893ece9c565b342</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>conParamName</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a26e53f23a966b9ded4b6f1e0ec9bbaa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDs</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a1edf277f0f8e70baf4e144b9ce7675b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>startValue</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a02f67daf496501199657691c471bf83f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxValue</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a96930db65b5a33ce3871cd72ebf109fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minValue</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a25249ef1cac5ad7513827b097167bcaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a0404d044b8721a5fa9abeddda6835dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxNonlinearSteps</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a588eda5f62ed2fc23ca3938e50b6842a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>targetValue</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a48cff952eae0e9fe7fce67cba7398490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isTargetStep</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>af46ce1f9af5cc09eac3ff7d569e8b318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doTangentFactorScaling</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a20356f0678fff9b2ded52dfda0ad2768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tangentFactor</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>ae78966208f1ee5d282014d4beb92c5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minTangentFactor</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a2d694184f338b4ba3df26617efd4abb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tangentFactorExponent</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a04a335207a8f9bb423aac174f14a257a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>calcEigenvalues</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a101b3bbf72678ae8c2a3b9f45b79e2d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>return_failed_on_max_steps</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a396431afa012851f7b760f685df86fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>max_steps_exceeded</name>
      <anchorfile>classLOCA_1_1AdaptiveStepper.html</anchorfile>
      <anchor>a6176175466b0d20ae0c1888adb27db93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::AdaptManager</name>
    <filename>classNOX_1_1Epetra_1_1AdaptManager.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>queryAdaptationCriteria</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptManager.html</anchorfile>
      <anchor>a15d679a75f1e5898b9548b09f80f5723</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>adaptMesh</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptManager.html</anchorfile>
      <anchor>af67c454f2fcb58eab279546cc42cf693</anchor>
      <arglist>(const Epetra_Vector &amp;solution, const Epetra_Vector &amp;ovlp_solution)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solutionTransfer</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptManager.html</anchorfile>
      <anchor>a7c692a44a6e879266d7f669731d90bbe</anchor>
      <arglist>(const Epetra_Vector &amp;oldSolution, Epetra_Vector &amp;newSolution)=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptManager.html</anchorfile>
      <anchor>add7740a74b20bc16a91528a88079d514</anchor>
      <arglist>(const double time_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIteration</name>
      <anchorfile>classNOX_1_1Epetra_1_1AdaptManager.html</anchorfile>
      <anchor>a8c05d37076a3e6f0e2d08eddcf395367</anchor>
      <arglist>(const int iter_)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Eigensolver::AnasaziStrategy</name>
    <filename>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</filename>
    <base>LOCA::Eigensolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>AnasaziStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>ac7527c5e72788bae204dd3c952082baf</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AnasaziStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>afc7f4d9aafc6c622a4424b2e583ea775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeEigenvalues</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>ac9f6e1572faae9a67a843dc677644372</anchor>
      <arglist>(NOX::Abstract::Group &amp;group, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_r, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_r, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_i)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>NOX::Abstract::MultiVector</type>
      <name>MV</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>a8f1da7017a3a5c5f90fce9bfadfc25b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>LOCA::AnasaziOperator::AbstractStrategy</type>
      <name>OP</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>a18c1ca24f888eaff0d6444fbd9efd625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>ad9ccfa38039c01b024359b439709ea77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>topParams</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>aaead41f754f0aaab67d675807bbd5329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>a5e9cb38b477e3827d5385b13fdaaa7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>ac5a584b040539d7289f784dea9358eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>blksz</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>af4f9350ace6460575f3c233ef1d827a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nev</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>a3ab6355d9623b1f81c74a9e042082ed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1AnasaziStrategy.html</anchorfile>
      <anchor>a7b5c9e34116f335c28addf1208750360</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::AndersonAcceleration</name>
    <filename>classNOX_1_1Solver_1_1AndersonAcceleration.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>AndersonAcceleration</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a4b614970e308a5f0a8391d956770a029</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AndersonAcceleration</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a60e17ac3c8e2025f91c0930f20f35db6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a1300f11d4b30ab34c87d0eb273d0cb2f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a25aa3e216c0852e83939203e6b129a2c</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aa2847da438de69fcd37ddf349327d08a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ac5e7378ba4dfdc34f7b2a71be9871867</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aed3c96159fc9ac9a4990be21ae53fa3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a7243a373665a1d13a753639d5d6a5627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a95bcf7e3921678d6fc9d90030a1c9a76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a06294129eb35946ba7516bb543d3ba55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a1ee2e8aeb965ec774bf3094b88019112</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a211c2ddb33f18341e9fe89eaa7112d2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a9aa8c79721ea58489cf93ca89124b7bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a34ecd189583300b7e2ad1a89cd86c9a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a014f76f3f79b597d47582f895b1e7052</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printUpdate</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a3e7364dde024ffd70b77471030659b03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>qrAdd</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a57921aabd3033a1d7299732a75a253ac</anchor>
      <arglist>(NOX::Abstract::Vector &amp;newCol)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>qrDelete</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aade16e9024efe995e4c5806db17fd2dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>reorthogonalize</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a6bd7b309cb3281a29c32ecfe69f365a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ac2dc3491a623fe0fd480b63482e27f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utilsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>abf169b858a2669d51a750868b250a9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a1c4ea411d169fd37c3ce0f0bb3aaf1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>oldSolnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>af7a377e94c14221d99ac838cffa7cbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a588f011dc51c88dc2e9f86e23d5220ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aca9536b69ee4bbb8be93c38d7ea286d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>lineSearchPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a40ab69b78c60b67707977123e5b579f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>precond</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aeeb024616d3c3d4cbc3a982d233b9012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>recomputeJacobian</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aa5b7e5516674c55eee61f44bc3acf4d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>workVec</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ac503e881e04b3c84e88e08c60c1bd6a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>precF</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a3b6908dd12644cd96b7b2042cb0f300a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>oldPrecF</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a9c5de70a9c2b855eaaa7ac0e2fb4761f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>storeParam</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>acad4fd0820253244d468bfc3027c8a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nStore</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>af4c3f58d7639f5a491be3140ad78a82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mixParam</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>aed3fd441d1f8eff21eaf904394145159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ac6e22dae71f23fb81aef7e2316dbcf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &gt;</type>
      <name>xMat</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ac0cabf6c03c30fb87881c3f33bb7156d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &gt;</type>
      <name>qMat</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a601ac112ec7c4aef606b25be30c4db48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; int, double &gt;</type>
      <name>rMat</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a68d9a98c5f416238d35622c469eedef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ae1d8bf382b2eb875ad09b39ca7522a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>orthoFrequency</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a89b08bbb4d91fe56841986a2382f0b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a4c865971e30fcc53a72d215be320cc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a7d02f6ac8ea6c47cf18a772ea83fc287</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>ab1971ed461303708b08977c9abe7d15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>WORK</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a4f0b08d90c4d1012d35a437e67471913</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>IWORK</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>add7fb7447d8d9d37de7d5f7af5b0913b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>adjustForConditionNumber</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a9f2d5572eed6eeba404adde350a3b8e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dropTolerance</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a931628012b1e57cb2fb360ba3168d79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>accelerationStartIteration</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a039d03bdf0801a0e09342b20201a9308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>disableChecksForUnitTesting</name>
      <anchorfile>classNOX_1_1Solver_1_1AndersonAcceleration.html</anchorfile>
      <anchor>a34eea441f37df809593ba77ed137f59e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ArcLengthConstraint</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</filename>
    <base>LOCA::MultiContinuation::ConstraintInterfaceMVDX</base>
    <member kind="function">
      <type></type>
      <name>ArcLengthConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>abbf6579b155ea1e6a6db290a8104a6b2</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::ArcLengthGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArcLengthConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>af405c1487e188503de3132847ca40480</anchor>
      <arglist>(const ArcLengthConstraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArcLengthConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ac990225b7990479d882a4b1ee58dbde8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setArcLengthGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ab46f8e6b57c819c389800ea713bfe275</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::ArcLengthGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a3679d8144316304a7b7b209a9e5cf0b1</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a4397c0bb3017ec112053f9d961c0111f</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a8f47a567174985b3d30300dc881e77e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a6fd25230ecb7cccd58c067b80ebd23e3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a6791439916293a68388cad04ca7ba44f</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>abec6d92b141885f86b1a355991f54be4</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a0d9189ed8deb4f6adbe37fd30a398e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a8cee99ad478f0f17755386a36e30adca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ac7de8fbf2abf86794d9927a50527b189</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a4c63fe83b6e9693fac6ede4fd58eb585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a9b82c77c044d2a1e5013ab34162bdbdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a31fbec00fdd815956daf2c28c1132d16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ac747b1cd458b452df8e328c2530f2964</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a5ec5bfe1390196f762f1200b6c8c1014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a561e5385b1dcfd40c71e663db549f1cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ArcLengthGroup &gt;</type>
      <name>arcLengthGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a85d45a85c5e8529cee67023408bdf872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ad1f2aaeb4ba6b04aedce83b78bf87972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ad5840cfeb0d125d4b303209fe0953806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a0f6395c51045c8d8cf8f60c6aa3f2b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a3679d8144316304a7b7b209a9e5cf0b1</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a4397c0bb3017ec112053f9d961c0111f</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a8f47a567174985b3d30300dc881e77e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a6fd25230ecb7cccd58c067b80ebd23e3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a6791439916293a68388cad04ca7ba44f</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>abec6d92b141885f86b1a355991f54be4</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a0d9189ed8deb4f6adbe37fd30a398e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a8cee99ad478f0f17755386a36e30adca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ac7de8fbf2abf86794d9927a50527b189</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a4c63fe83b6e9693fac6ede4fd58eb585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a9b82c77c044d2a1e5013ab34162bdbdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a31fbec00fdd815956daf2c28c1132d16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>ac747b1cd458b452df8e328c2530f2964</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthConstraint.html</anchorfile>
      <anchor>a5ec5bfe1390196f762f1200b6c8c1014</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ArcLengthGroup</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::ExtendedGroup</base>
    <member kind="function">
      <type></type>
      <name>ArcLengthGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a7ea6b6062614411b134c693f39f65d3e</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;continuationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArcLengthGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a7551a712bb16402bd8564a7a86ccd01f</anchor>
      <arglist>(const ArcLengthGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArcLengthGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ab68cbbab38d1a1cac558a9f132acc554</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ad33aa8f056a4181f9cdfb3823125f119</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a41895f2f79a8da76af68c06d4ca002db</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a85d2783338a5c157e9e2c4e0300228d2</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a52c0e639e2df45c18d2e55b11a59c183</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ae4a7039848050bea93a45f0f281741fa</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recalculateScaleFactor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a77ed61e4ce35399bca923c7f5225a222</anchor>
      <arglist>(double dpds, double thetaOld, double &amp;thetaNew)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>theta</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ad9c70409f091c3aca8e2610619a532f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doArcLengthScaling</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>add7733d4622721c0af30b82456288204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>gGoal</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a4937663baf5b2442e3c6a21ecaff2788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>gMax</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a8fbd69e690a8c9a5184b2ba5709b4b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>thetaMin</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ab5eb9475f2ed4fb498b45033c44a8516</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isFirstRescale</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a6a2a0e0b685448e3a4f1f9baa18b17a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ad33aa8f056a4181f9cdfb3823125f119</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a41895f2f79a8da76af68c06d4ca002db</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a85d2783338a5c157e9e2c4e0300228d2</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a52c0e639e2df45c18d2e55b11a59c183</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>ae4a7039848050bea93a45f0f281741fa</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recalculateScaleFactor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ArcLengthGroup.html</anchorfile>
      <anchor>a77ed61e4ce35399bca923c7f5225a222</anchor>
      <arglist>(double dpds, double thetaOld, double &amp;thetaNew)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::AugmentedOp</name>
    <filename>classLOCA_1_1Epetra_1_1AugmentedOp.html</filename>
    <base>Epetra_Operator</base>
    <member kind="function">
      <type></type>
      <name>AugmentedOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>aa8902a0d4bc8adbf35a40ea0bd45b938</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;jac, const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;a, const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;b, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; c)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AugmentedOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>ab8037b8e9880b34a573cea60f897b1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a800afbcd7cff66bc05b3a49a155d547a</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a7fa8315c2135dcb343cc99cd0f6198ba</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a843f5a146bc4d514faaa432c356bf06f</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a205172a069d58c0a95ee792ebd7dc0fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>ab757927be1e6b3a5b93464735b6b814f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a57a8f5c9ae4ca9e39dc5b611927fc7c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>acd3546cc09dacf14f56c4b51aa66d294</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a3d5bbbef0d143cc2f398a242ca2c2576</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a019999e5e8c885403b8d1e3f887e1d07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a112a24edf09d74dc96730eaa238d0581</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a9aff79658609162ede74acf4214b78d8</anchor>
      <arglist>(const Epetra_MultiVector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>buildEpetraAugmentedMultiVec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a112aa75ed0d800485033927f887f0540</anchor>
      <arglist>(const Epetra_MultiVector &amp;x, const NOX::Abstract::MultiVector::DenseMatrix *y, bool doCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setEpetraAugmentedMultiVec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>aeb15586934c39ce9347cbddbd5a42590</anchor>
      <arglist>(Epetra_MultiVector &amp;x, NOX::Abstract::MultiVector::DenseMatrix &amp;y, const Epetra_MultiVector &amp;augMultiVec) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildExtendedMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>aff895675dcf9051f4fa6a1421da9852a</anchor>
      <arglist>(const Epetra_BlockMap &amp;map, Epetra_Map *&amp;extMapPtr, bool buildImporter, bool haveParam)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>blockMap2PointMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>abaca75cb3b8d24455e6456ebb92f6171</anchor>
      <arglist>(const Epetra_BlockMap &amp;BlockMap, Epetra_Map *&amp;PointMap) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a95350f389ae4cd5f2cedf8113b08fb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a434c5a36b060227d215361802c218efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>jacOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a9fe37adb37339d8df01805d70954e5f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_BlockMap &amp;</type>
      <name>underlyingMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a174f766b9f6c72f29a98ca47ecff3039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_Comm &amp;</type>
      <name>underlyingComm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a179241912592f13e53bc718802175c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LocalMap</type>
      <name>localMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a485f7b694441d686b95c7562215c2e89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>a</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a39cfe96ebfb72d60c29b40c8d0785a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>b</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a838d5f648d539718f855a276a232553b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector</type>
      <name>c</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a177ea432854d9dddb57cda847ee32227</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>underlyingLength</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a5ca235fc574e4c102351000956dfa400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>ab08fec7ff9afbf7a1ecfe536134b1e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>extendedMapPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a7c3ec57caf1fb39c0d93836101b4ff5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>extendedImportMapPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a01abe03136e25f97ed3c9de11a50dc4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Import *</type>
      <name>extendedImporter</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>a99dbac7c6f8c70588b996a006d08cbba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>importedInput</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>ac16e09d564a3704f9ad0f92d67105e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>result_y</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>addec8a0bf22847b7f7512d817caa5090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>tmp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>af2a80694f718652639f679596e3bbdc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>haveParamComponent</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>aac5917eb4538b647d39c70ae65480a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>ac43be0248dfa51f81fea4d8189dfd2a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::LAPACK&lt; int, double &gt;</type>
      <name>dlapack</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AugmentedOp.html</anchorfile>
      <anchor>ab278ee498b1a971e53e763dc2bc373a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Backtrack</name>
    <filename>classNOX_1_1LineSearch_1_1Backtrack.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>Backtrack</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Backtrack.html</anchorfile>
      <anchor>a12533b4d6377d8482cf1c8f48f98c60a</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Backtrack</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Backtrack.html</anchorfile>
      <anchor>abd1f68b967661b508acb58e3ef4e12d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Backtrack.html</anchorfile>
      <anchor>a1cf760440e38bd28ca57c3ffbac27239</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::BorderedOperator</name>
    <filename>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</filename>
    <base>LOCA::BorderedSolver::AbstractOperator</base>
    <member kind="function">
      <type></type>
      <name>BorderedOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>a24021581bbe710d27802d546a86d3662</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSystem::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BorderedOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>a64f7fd9fd8a2f2df890580b3a526ac73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>a183adfeafdf79e226a38a7fb776105f0</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>a45720a9655bea4be9de56e0d15db1f2d</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>a0275b7814a543dd8b56b1774e0ced3f5</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>a00e77a8ef3cf9e58fe894c99f96e905b</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::BorderedSystem::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1BorderedOperator.html</anchorfile>
      <anchor>ac449bef883407835b21f8ccd5d848d1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::Bordering</name>
    <filename>classLOCA_1_1BorderedSolver_1_1Bordering.html</filename>
    <base>LOCA::BorderedSolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Bordering</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a7d94987f70de2b7ee10e8cff63ffaf8a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Bordering</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>aa16a6a8fe3a6d9460d203b1f1ef4540b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMatrixBlocks</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a6d6dcabdafaa9acbb8d51fe8f86d197c</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>ad892eff0a194cc71d16209e20b44af9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>abd50dc26c9b5e7bfdd1bb5b5ba282096</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>ad58388bf661a08bab93e2c0d5f84c9de</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>ab3e541e7b81027228654c35bf45aab55</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a3652163896c09af6dcb50e683bea952f</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a41285e8be23bb70c1787ae46cbc1b524</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveFZero</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>ae1e752ee3a8e8dd07c840498f03c9f17</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *AA, const LOCA::MultiContinuation::ConstraintInterface *BB, const NOX::Abstract::MultiVector::DenseMatrix *CC, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguous</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a2de341376369b00d4f6b5799d5bf641d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *AA, const LOCA::MultiContinuation::ConstraintInterface *BB, const NOX::Abstract::MultiVector::DenseMatrix *CC, std::vector&lt; int &gt; &amp;indexF, std::vector&lt; int &gt; &amp;indexA, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveFZeroTrans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a944d7c928231b9fb49f9f7472d66f019</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *AA, const NOX::Abstract::MultiVector *BB, const NOX::Abstract::MultiVector::DenseMatrix *CC, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguousTrans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>ac50295f51c224f6be6787d7971f3859e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *AA, const NOX::Abstract::MultiVector *BB, const NOX::Abstract::MultiVector::DenseMatrix *CC, std::vector&lt; int &gt; &amp;indexF, std::vector&lt; int &gt; &amp;indexA, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>af0bdd8a26d88fb562db20a7175adcc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a1032c2f40e34f21987d87571be59bd79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt;</type>
      <name>op</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a69eae7ae0f1f002710761fc4c80283b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>A</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a0bfe8d7ba26945370c397536d00985c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>B</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a2b28d7bcf62cd043da3a1129ab83a7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>C</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>ab33bde186e73644fb0ba26666b8b11e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroA</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a22934744b891de17a9104885d7643b04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroB</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a33879196a3c234209687d9242b4c348e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroC</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a5489b1118aa203cbe0078f4393859618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroF</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>a18477a578c8bf75842467f80fe2f87a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroG</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Bordering.html</anchorfile>
      <anchor>aebf8614c6f58d320f5504b74c7555205</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Broyden</name>
    <filename>classNOX_1_1Direction_1_1Broyden.html</filename>
    <base>NOX::Direction::Generic</base>
    <class kind="class">NOX::Direction::Broyden::BroydenMemory</class>
    <class kind="class">NOX::Direction::Broyden::BroydenMemoryUnit</class>
    <member kind="function">
      <type></type>
      <name>Broyden</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden.html</anchorfile>
      <anchor>a0691fa209cff3196420211aa0661077d</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Broyden</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden.html</anchorfile>
      <anchor>a812470621da3d181568f608e04043968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden.html</anchorfile>
      <anchor>a35b8eb95f3c840b8cf97327a1f802396</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden.html</anchorfile>
      <anchor>afdcda064268d3956488ca723ad804296</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden.html</anchorfile>
      <anchor>a272e45ccb14242bd26d1c3651110c146</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::LineSearchBased &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Broyden::BroydenMemory</name>
    <filename>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</filename>
    <member kind="function">
      <type></type>
      <name>BroydenMemory</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>af6c5dc18391151652522d16a00bebc70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BroydenMemory</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>ab9591b0cb8fe274cd1fb6a1aac277871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>adcf9402094edeaca323755142101dd82</anchor>
      <arglist>(int m)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>ad4aa8e86ea60f318269c096283a6e96e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>ac6796da7da2df155ea82b7d26b191618</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>a8aafc3280e6a0bfb642f2023037d02c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>a1682a4b31b687d8cbc513a5a8c6782d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BroydenMemoryUnit &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemory.html</anchorfile>
      <anchor>a951cd4e91ce2ec63ca6ac95c8d9be364</anchor>
      <arglist>(int i)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Broyden::BroydenMemoryUnit</name>
    <filename>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</filename>
    <member kind="function">
      <type></type>
      <name>BroydenMemoryUnit</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>ab5516395d9dfb87edaf4fd562a1e4316</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BroydenMemoryUnit</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>a1a9467baf09808e24ae2efc34f2fa36c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>a3dc8aeb51c12cf268bb25ef70e6c4cd9</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStep</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>abb2d7e16ff48fa4e9391a930d9459830</anchor>
      <arglist>(double step)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>sPtr</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>a52bbc49223fe689d99dff561370314ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>acd90f6e9d53a37c5c4cdf610880ef3df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sNormSqr</name>
      <anchorfile>classNOX_1_1Direction_1_1Broyden_1_1BroydenMemoryUnit.html</anchorfile>
      <anchor>a3ea173e6b18605a3afeeca2ffb6ae975</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::BroydenOperator</name>
    <filename>classNOX_1_1Epetra_1_1BroydenOperator.html</filename>
    <base>Epetra_RowMatrix</base>
    <base>NOX::Abstract::PrePostOperator</base>
    <base>NOX::Epetra::Interface::Jacobian</base>
    <base>NOX::Epetra::Interface::Preconditioner</base>
    <class kind="class">NOX::Epetra::BroydenOperator::ReplacementInterface</class>
    <member kind="function">
      <type></type>
      <name>BroydenOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a7139bb5c9ee5920c7ac31f2af057813a</anchor>
      <arglist>(Teuchos::ParameterList &amp;nlParams, const Teuchos::RCP&lt; NOX::Utils &gt; &amp;utils, Epetra_Vector &amp;solnVec, const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;broydMat0, bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BroydenOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a44ff926dcd7989149c371f839ffbed2f</anchor>
      <arglist>(const BroydenOperator &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BroydenOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a7cc577a2fb64456e6e9e9aa67e2b02aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a3106cd3f12aa200a70c3102674f78f8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ab5b5c2d0196793fe057479bb18747995</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>af53ea2506ea75522fa1b48ac7616f56e</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>aa7df68839b3d8c6d9d9ef81c602d883c</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a5d850a122550e0112ad07ba7f54fe747</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a52f2831d787167504333d4062d8d2489</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a5dcaa866b4e203e90aa79827e65b032d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a07f592aebf9d9226194961285e1277f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Filled</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a81baff663723790e67c102e15d14b4cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRowEntries</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a020f1102b8b59d28ed22fbe0db969d1c</anchor>
      <arglist>(int MyRow, int &amp;NumEntries) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>MaxNumEntries</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>af0c266ba3a3f9fdcaaf2021b368c27e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractMyRowCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>aae2d6cb5571d68dadc867a7048177b92</anchor>
      <arglist>(int MyRow, int Length, int &amp;NumEntries, double *Values, int *Indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractDiagonalCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>af35f4e385f213401852998cbda081eef</anchor>
      <arglist>(Epetra_Vector &amp;Diagonal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Multiply</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a72970459c0413db9f9762efc030fac89</anchor>
      <arglist>(bool TransA, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Solve</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a6dbf3abb8d735bd55db4cdb343ccabcf</anchor>
      <arglist>(bool Upper, bool Trans, bool UnitDiagonal, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvRowSums</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ac1e60e6e341440af3fd980c990d7c147</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LeftScale</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a585b058849a69e1f8ce5c25c4a128b53</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvColSums</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a037826eb8eec6415ccab88fb5d86963b</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>RightScale</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a009034b861ac39056183e7e4efe09e5d</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a80ccafb9e068eb18e5a8f3cc0b7ba7d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormOne</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a5f8d5aa579f0fd69b303ef5fda918b29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalNonzeros</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a0859912cbf3194e3dad7d9387c8bc631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalRows</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>aeb233b178053585a17478213e10619e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalCols</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a420946a740ca19fc162b5f0093688ff3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalDiagonals</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a35fd9fc625bfdf7f8a08e16770e71e35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyNonzeros</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>aae94e443bcfcc408b2a9bf4c0a2be681</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRows</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ae74b646e7ccaf9061bc2c547b42347e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyCols</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a0add88fd452d865d4f1f66ea408dfc77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyDiagonals</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ad362da5fdd618181934ba876e7334d99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LowerTriangular</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a30d08e497bcb47eb04f65cc81d5c8518</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpperTriangular</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a3d36463859d727529227b39cc3c62941</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>affc0e7335484f596a29e7738f48b2833</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixRowMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ae266e7591f1596471eb1244a4b329fe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixColMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>afaf0905f5d472a5910408351ec17fbcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Import *</type>
      <name>RowMatrixImporter</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a3e34ebef697abc24a9e888b21e8b7fab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_BlockMap &amp;</type>
      <name>Map</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a9583d14ecb5eecf63b7870d31e3b305e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStepVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>adae40cc3a4ad1541d2a7f520b1908acf</anchor>
      <arglist>(Epetra_Vector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStepVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a3bfde12418fe36586d6526c28d7d7c7f</anchor>
      <arglist>(NOX::Epetra::Vector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYieldVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ab664db22fa09e4623eeea7d4ec569958</anchor>
      <arglist>(Epetra_Vector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setYieldVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a82373df2fdab633d0afcfd3b4d5e994c</anchor>
      <arglist>(NOX::Epetra::Vector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeSparseBroydenUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>af2a2029e96839189ce82713dd482a561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeEntriesFromBroydenUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a27e31e908787e2827d0f134bdb216182</anchor>
      <arglist>(const Epetra_CrsGraph &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_CrsMatrix &amp;</type>
      <name>getBroydenMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a03045077a341348b756a1837103fe550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetBroydenMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ac137ab94a58005b439d5144037c375b3</anchor>
      <arglist>(const Epetra_CrsMatrix &amp;mat)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReplacementInterface</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a1844e7b962642a0c18061069160433b1</anchor>
      <arglist>(ReplacementInterface *i)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>initialize</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a38d15ebff2a774c45245383d1a4ef504</anchor>
      <arglist>(Teuchos::ParameterList &amp;nlParams, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a5633b34ec3657414c80d73221da53337</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ab1a79b1ea85cb3590dbe2cd234e3c933</anchor>
      <arglist>(const Epetra_Vector &amp;, Epetra_Operator &amp;Prec, Teuchos::ParameterList *params=0)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>runPreSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a968868cb1fa3479af7001fb9f401e749</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>runPreIterate</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a4015513d6a8fe6816b9c3fb173db133e</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>runPostIterate</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a6229aabc0416fd02c903ac7d79937d23</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>runPostSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a44fd72c2f56021074095d5766ad0975c</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>replaceBroydenMatrixValues</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>abc5f34600f7b415a6071b38c5453a94f</anchor>
      <arglist>(const Epetra_CrsMatrix &amp;mat)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList &amp;</type>
      <name>nlParams</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a88494832abd1ad8425b757e310f55616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::RCP&lt; NOX::Utils &gt; &amp;</type>
      <name>utils</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>ae8add171c11944adc9fd1b6d6dd577ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a2ff93e20476ba7a9c0293965ff56a00a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a3bad30cfc576d650f360ea7f1c3bd3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>entriesRemoved</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a7a630adf2176dfdda0b52b4bacb180f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, std::list&lt; int &gt; &gt;</type>
      <name>retainedEntries</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>aa35c6f19fab1cd81a798d9b88aaf8001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ReplacementInterface * &gt;</type>
      <name>replacementInterfaces</name>
      <anchorfile>classNOX_1_1Epetra_1_1BroydenOperator.html</anchorfile>
      <anchor>a80fda3a8b240790d1866161647f993d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::Cayley</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1Cayley.html</filename>
    <base>LOCA::AnasaziOperator::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Cayley</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a02eda9992c6de8ea4b04dd03195511d2</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Cayley</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a85cb75e0602c43616754158551811701</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a33ec93da70b901fe3ffefa0ebc788c65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a286a6b480570745d988f388a0700badd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessSeedVector</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a5cda365586f25f766b2b24bf164759f8</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;ivec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a85471d8e47d44c9196311ae10eb7c1ed</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>abcbdbaaec74d2f6d5e36e3330f2b5f49</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>aa6a00dd0d8a63e98f5031ce93eb5c5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLabel</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a9772198557c98d4bfd25fa294293b36b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a4652fd5da0b76e2a3b6bfda0f81e55ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>ac17b889ff44f45a389e593e5f8b83c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a276fdca9f09ddafa1ef000ddba98d493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_r</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a292e650ef3f2a8cc4213702aba07b43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_i</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a72828503076c0f94968d3594cb256c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>a3edcd1b9c4b65ef3d652c8d032a4bf9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mu</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley.html</anchorfile>
      <anchor>ada09227073c212cf8e8095967aa53ad6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::Cayley2Matrix</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</filename>
    <base>LOCA::AnasaziOperator::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Cayley2Matrix</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ace4878674644e1deaa90e209561019f2</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Cayley2Matrix</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ac0e4e40312411b2ef35d1dfc95e61468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>aadfb0d714e294ff6eee1039e721dc13a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>a35c76f0a79d42e5d4abcb65827e69f87</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessSeedVector</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ade0248b35b5e804882608993110c6dc6</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;ivec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginPostProcessing</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>a442f5277c19d9c941a1539b256933733</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>a91e8828dc9abbef7ebcb538910f32e0b</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>acd7b4cedc7f18fdab9f6d32b441d6ac7</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>a24c857ea4c59d8e457c1d14b19d02171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLabel</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>adf2c56a90ae475c855e753247467364d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>a64ff322acd635fb5a7d7d0f00d765a7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ac2934c83775c64ee457034aa43b08d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ad6699e42f17940945e2d076d0eb9a8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_r</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>aa8a46e778ce1919396dc47df8700ea47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_i</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ac7a19605295601a67c44b3af3f8c9598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>ae0048e7d35bd4066a06fb4641179b618</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mu</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Cayley2Matrix.html</anchorfile>
      <anchor>aa919eabe880f7fcf6c5151a912151d89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StatusTest::Combo</name>
    <filename>classLOCA_1_1StatusTest_1_1Combo.html</filename>
    <base>LOCA::StatusTest::Abstract</base>
    <member kind="enumeration">
      <type></type>
      <name>ComboType</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a7a81c06e054cf288d73c3358834d2c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a7a81c06e054cf288d73c3358834d2c32aac872f4d19ba414498e85796b2f25ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a7a81c06e054cf288d73c3358834d2c32a5c75e03529c5b37177993021b7e59e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a7a81c06e054cf288d73c3358834d2c32aac872f4d19ba414498e85796b2f25ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a7a81c06e054cf288d73c3358834d2c32a5c75e03529c5b37177993021b7e59e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Combo</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>ab6d5ea27eabce1952ce6d56d5ccd49ed</anchor>
      <arglist>(ComboType t, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; globalDataPtr=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Combo</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>abb80aa09b32e231200d61f24c1c379e9</anchor>
      <arglist>(ComboType t, const Teuchos::RCP&lt; Abstract &gt; &amp;a, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; globalDataPtr=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Combo</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a1fe71e001eda06977738b3a7dd06ddbf</anchor>
      <arglist>(ComboType t, const Teuchos::RCP&lt; Abstract &gt; &amp;a, const Teuchos::RCP&lt; Abstract &gt; &amp;b, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; globalDataPtr=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Combo &amp;</type>
      <name>addStatusTest</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a510e48bc6e5a3ea9cc2ef4bd981e5e89</anchor>
      <arglist>(const Teuchos::RCP&lt; Abstract &gt; &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Combo</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a5a695fbe3b3a81e9b6e40806cfa04bd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>aee0961e9c8827fd8077fd4756f566312</anchor>
      <arglist>(const LOCA::Abstract::Iterator &amp;stepper, LOCA::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>af5c7cdba44393b190805640dd535b95a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a4c6c13f2ecdeea8200f4bf0f441e48c1</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>orOp</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a9f152082f071f58dedaa2caa0a3c93c2</anchor>
      <arglist>(const LOCA::Abstract::Iterator &amp;stepper, LOCA::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>andOp</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a293904b75fe2e04a3c895f6c3953bb3f</anchor>
      <arglist>(const LOCA::Abstract::Iterator &amp;stepper, LOCA::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isSafe</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>ab611e4e9601aae4442cba5c4ca6a0de2</anchor>
      <arglist>(Abstract &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::Combo</name>
    <filename>classNOX_1_1StatusTest_1_1Combo.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="enumeration">
      <type></type>
      <name>ComboType</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a788f39025311c7e7fdb1d53660dafe19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a788f39025311c7e7fdb1d53660dafe19aa380ddc0d8632558ac0485dbba21ea92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a788f39025311c7e7fdb1d53660dafe19a6529707f844e7fe814d3fa94a761677f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AND</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a788f39025311c7e7fdb1d53660dafe19aa380ddc0d8632558ac0485dbba21ea92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OR</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a788f39025311c7e7fdb1d53660dafe19a6529707f844e7fe814d3fa94a761677f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Combo</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a4eee1472a29d1694bb58bb9204eb74fd</anchor>
      <arglist>(ComboType t, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Combo</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>aebe4ac23a8806e2b87391657eaa84404</anchor>
      <arglist>(ComboType t, const Teuchos::RCP&lt; Generic &gt; &amp;a, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Combo</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a17c5c8b52dd74e0df1398f3aa49ec2ae</anchor>
      <arglist>(ComboType t, const Teuchos::RCP&lt; Generic &gt; &amp;a, const Teuchos::RCP&lt; Generic &gt; &amp;b, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Combo &amp;</type>
      <name>addStatusTest</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a3fb25dd20f28808ea0c1b6293a4bd5dd</anchor>
      <arglist>(const Teuchos::RCP&lt; Generic &gt; &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Combo</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a4e8292be8bb0c7fb8c93624a33078be4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a850dc32a79603bed2d497d8b79be3a78</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>aac4fe5873482bf3b9276cc952c567ffa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>af4e1a12baa5abdfeba85fe98617436be</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>orOp</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a10f1bae546098a6d37389fbe3c6c2acf</anchor>
      <arglist>(const Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>andOp</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a04e551a0b95a0ad82b9d1c615440321c</anchor>
      <arglist>(const Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isSafe</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Combo.html</anchorfile>
      <anchor>a76ecf29e02ac817a96350dc8a935922d</anchor>
      <arglist>(Generic &amp;a)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::CompactWYOp</name>
    <filename>classLOCA_1_1Epetra_1_1CompactWYOp.html</filename>
    <base>Epetra_Operator</base>
    <member kind="function">
      <type></type>
      <name>CompactWYOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>ab7b1cc1803ce6d6bda1acac1d8a361bb</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;jacOperator, const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;A_multiVec, const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;Y_x_multiVec, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;Y_p_matrix, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;T_matrix)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompactWYOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>adb6dca1bf6afc33d87659faaae133e69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>ad6feeaae09b27eab35ee606bfcfc9ce5</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a8549f34e456732f5c52ffd9551a112ca</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a33422bf169f66717276b43ce1ded75af</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>af8099382b6d4ec9640b6f7aa462198a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a5d3b667a1b2a2847e3b7ed5fc9edc45f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>acaa1fc7dce7bbcbe4bb9f5148c4a172a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a20d5d3868b6ad5ace04665e2abffbe2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a05c762857f51ad265090940067eff952</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>ad33925b32a321243cfc8348a2edee7fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a74b56e839fa69f2928a80fe78ade2b01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a70b86d3cd2a213910ee0413f31c15730</anchor>
      <arglist>(const Epetra_MultiVector &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finish</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a7aa9c79af335a1afca7ec513328c16bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyCompactWY</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a9ec622797cc4fb2de58e9a1f9fde9dfb</anchor>
      <arglist>(const Epetra_MultiVector &amp;x, Epetra_MultiVector &amp;result_x, Epetra_MultiVector &amp;result_p) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>ae6024f7e1e588ec56adb5efba066ddbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a3b5c0a8722b141c24ffdd5638b6a128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LocalMap</type>
      <name>localMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>ab10b192974c38a5e17d1c6e95f4c482e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>J</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>aac820bab9f0b9a58d3767ee68fb56053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>A</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>abf1523f4c3641d34c35914e278d1a82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>Y_x</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>aa6bff64089b240687a3baa7161b35e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector</type>
      <name>Y_p</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a14c19423bf41589651c57c93c6a7916c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector</type>
      <name>T</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a81774806a475045816774dd1a790e996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>tmpMat1</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>a1e269ba757fec5fdb9739fcc961343b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>tmpMV</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>adbd8efa5208579d4541a7bc3c4c15a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; int, double &gt;</type>
      <name>dblas</name>
      <anchorfile>classLOCA_1_1Epetra_1_1CompactWYOp.html</anchorfile>
      <anchor>abc9bb3f97e3b8c097e801f313bd68cbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::ComplexMultiVector</name>
    <filename>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</filename>
    <base>LOCA::Extended::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>ad739923c55c70035ecb96ac303731013</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;cloneVec, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a10f98c17c91261cc9f53891ebd43aff9</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;realVec, const NOX::Abstract::MultiVector &amp;imagVec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a9b8c8c8361e4731571c3ac43095e6eed</anchor>
      <arglist>(const ComplexMultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>ae6759aff94a820d4667d35843f7c64d1</anchor>
      <arglist>(const ComplexMultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a01433882835bb9941da309bb3f51cb38</anchor>
      <arglist>(const ComplexMultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>af9afad5b4efa6440bff3020c2bfcf136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ComplexMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a759c2c6e4ce620468f95dcef685e7a45</anchor>
      <arglist>(const ComplexMultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a7126f03e53bde772f5e3eddfe73034f8</anchor>
      <arglist>(const LOCA::Extended::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>ac63b2c590aae46a6f2067a775ee7c376</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>ab3aef9a5d4e6c815343fabf0f954fb71</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>adc82d51b879755fdae716a89ad838683</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a1fa71341b29fe0890071b7b2ac03b525</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a4cece525a18aa34f6d4fc532f89c7403</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getRealMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>ab69ace96a0ad2e625fcf5d535bca326a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getRealMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a73797f916673984c878e98d7bcf5e8d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getImagMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>afcc779e7ea8f4bfdcdc515166ab53e91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getImagMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a782b89c34f169b6eb3224fe9203d8b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Hopf::ComplexVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a99dc0e4472956a8e7a1fc7f4906a0c53</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::Hopf::ComplexVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a77f00477336162986bd9dff28ce1e48c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>a576cd238cd8cbad4a9b455cc1880f002</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>af1f91f01870956dc39000dde8c4455bd</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ComplexVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexMultiVector.html</anchorfile>
      <anchor>afbbe0aeebd4b900bda66c8e00f485718</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::ComplexOperator</name>
    <filename>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</filename>
    <base>LOCA::BorderedSolver::AbstractOperator</base>
    <member kind="function">
      <type></type>
      <name>ComplexOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>a7deae24125986c5f4adc382c29318750</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::Hopf::MooreSpence::AbstractGroup &gt; &amp;grp, double omega)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComplexOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>a601aabcdd7d301ffd659d7ec3ef8f505</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getGroup</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>abe77367d4b2206e3c4996cea9060aadc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFrequency</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>a442b26f3b5f5a491638b032f24b9e1d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>a9a23399290c1a3f90175d4e73b8ecf8e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>acdfbf6bcf176141c485d9ddc5136bff1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>a300087f707fb7b2269dff24c2df5bd79</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>a7625301668419ea40913b01be730ea15</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::Hopf::MooreSpence::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>aabbaee610eb0c78d046bb9a011f4a7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>omega</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1ComplexOperator.html</anchorfile>
      <anchor>adcf7c094a028e7b365baf85f0f53fcbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::ComplexVector</name>
    <filename>classLOCA_1_1Hopf_1_1ComplexVector.html</filename>
    <base>LOCA::Extended::Vector</base>
    <member kind="function">
      <type></type>
      <name>ComplexVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>a883a27a86ae9e09a23c6fe16ad91ba0b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;realVec, const NOX::Abstract::Vector &amp;imagVec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComplexVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>ab59ddb3bc0df665fb5c248d63629bf35</anchor>
      <arglist>(const ComplexVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ComplexVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>a84cd80c0cb8e2262c1377e1afa69f2ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>ab4ff018043e419c75aba8efdd6e3496e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>a3b701eaa8b3715a97ea0c127fc259e74</anchor>
      <arglist>(const LOCA::Extended::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ComplexVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>ab5b1b3b724dcde754163922f7aedca37</anchor>
      <arglist>(const ComplexVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>a9a3a367decdec4e8d59b8d4f6cc216b6</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>ad76fc1f180ac2fb3e45911f73166495c</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;realVec, const NOX::Abstract::Vector &amp;imagVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getRealVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>ae4418c28e3de0ace2b4263aa22f8cc21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getImagVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>afd15628179ad8f70e2a0a94794ca52a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getRealVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>afee72e14c536244f839f004d74b8d6de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getImagVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>a8adaa13033c8e0cb68ffcbb15c389ace</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ComplexVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>aa03689ea040b9eb31fdb605c3700dc6a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>a8037d88ecc545eb4d68aefc1d77f046f</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1ComplexVector.html</anchorfile>
      <anchor>ad10a252b4bfceab2b400a47173763304</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::CompositeConstraint</name>
    <filename>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::ConstraintInterface</base>
    <member kind="function">
      <type></type>
      <name>CompositeConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a157a940ceb92540637d67ced75129dba</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const std::vector&lt; Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt; &gt; &amp;constraintObjects)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ac240ad01630714baf151d88a93b4dd79</anchor>
      <arglist>(const CompositeConstraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompositeConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a5800b3d92730d9500d52293d900bc322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a4f28e5fe88a015ca07077d09dd7cc1fe</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>aa46ccda9f22ef6ca17dd3e88bac38574</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a896dab67c449fda8d73755fab4454c34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a34803eeeb4c755f8a2369bfbf33d855b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a0419da840bdfd599b25d50ccc5f94d09</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>aab945bf6d1bbcc967b9bfcb516307cd3</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ad5db8adace560a3bbad23042ab1142d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ad7009b2e50a1dc3f6927cfc725a346a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a580ed3bd26a60a90baba3e4bb566ef3c</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a9edf65a8bf8bb9ade61e73d3e0e72071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a53f71a471e6d3cb091ed467c4c46f290</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ae833f5f026b60fe174c6b2003439fcc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>multiplyDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a0146375e628e11aa273deb5f55ff3a00</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;input_x, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>addDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a39ab7b2d732de2e00fdb3151acd4557f</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double beta, NOX::Abstract::MultiVector &amp;result_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a38f89fc7f7e055a7b0bb0a39c778111e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a98282d5fde0a2fedb910d89709af11b5</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a5a85e93e06cc9ca03370b65737c4461d</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>CompositeConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>aa0514a5807948ecdc2007f3d2e1c4763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a20582b80267949b20a541f33dfd07c5a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const std::vector&lt; Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt; &gt; &amp;constraintObjects)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ad7c932cdc5e913e394b3a85053114c01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numConstraintObjects</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ab015de1d9d50b8ff8cb67908fb93cd38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt; &gt;</type>
      <name>constraintPtrs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a1630c7298fbf40103e3f549670ec2bf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
      <name>indices</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a4b28a582a4183bb57c305ab1006dc170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>totalNumConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ac4061773d94eee9556f378d59f8fc5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a8a3f2ee5f00bba4ba2ebfa031823b268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a6b485aefe4cd0c46faf620abdb31d99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a2f2fd3bf076bce2d639acc885697897f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a4f28e5fe88a015ca07077d09dd7cc1fe</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>aa46ccda9f22ef6ca17dd3e88bac38574</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a896dab67c449fda8d73755fab4454c34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a34803eeeb4c755f8a2369bfbf33d855b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a0419da840bdfd599b25d50ccc5f94d09</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>aab945bf6d1bbcc967b9bfcb516307cd3</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ad5db8adace560a3bbad23042ab1142d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ad7009b2e50a1dc3f6927cfc725a346a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a580ed3bd26a60a90baba3e4bb566ef3c</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a9edf65a8bf8bb9ade61e73d3e0e72071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a53f71a471e6d3cb091ed467c4c46f290</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>ae833f5f026b60fe174c6b2003439fcc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>multiplyDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a0146375e628e11aa273deb5f55ff3a00</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;input_x, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>addDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a39ab7b2d732de2e00fdb3151acd4557f</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double beta, NOX::Abstract::MultiVector &amp;result_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a38f89fc7f7e055a7b0bb0a39c778111e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a98282d5fde0a2fedb910d89709af11b5</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraint.html</anchorfile>
      <anchor>a5a85e93e06cc9ca03370b65737c4461d</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::CompositeConstraintMVDX</name>
    <filename>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::ConstraintInterfaceMVDX</base>
    <base virtualness="virtual">LOCA::MultiContinuation::CompositeConstraint</base>
    <member kind="function">
      <type></type>
      <name>CompositeConstraintMVDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a40a04a8da40009b23d3964e2d58b799c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const std::vector&lt; Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterfaceMVDX &gt; &gt; &amp;constraintObjects)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompositeConstraintMVDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>af792daf54267945d5529eb406e859296</anchor>
      <arglist>(const CompositeConstraintMVDX &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CompositeConstraintMVDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a3931d8523ca37587fbddf47e880f3340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>ad2990b0ff350d56c8e2665aa9bc7f667</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>aa5d566f923dc05fb82135e3210f50fe4</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a8055f80d05dfa799d024c013f72e2f1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>multiplyDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>ad2df6b398a08cb36a8007e4aa3c4ca31</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;input_x, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>addDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>ab72f405f9ecf84b3978b2c1ae0ce4aab</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double beta, NOX::Abstract::MultiVector &amp;result_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a30fcb32359239c764aafd44f79986cff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterfaceMVDX &gt; &gt;</type>
      <name>constraintMVDXPtrs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a2823a460aa77e91f1b8e206d9a675160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>compositeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a417c569dd516cfa401e2730aecc05f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>ad2990b0ff350d56c8e2665aa9bc7f667</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>aa5d566f923dc05fb82135e3210f50fe4</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a8055f80d05dfa799d024c013f72e2f1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>multiplyDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>ad2df6b398a08cb36a8007e4aa3c4ca31</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;input_x, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>addDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>ab72f405f9ecf84b3978b2c1ae0ce4aab</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double beta, NOX::Abstract::MultiVector &amp;result_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1CompositeConstraintMVDX.html</anchorfile>
      <anchor>a30fcb32359239c764aafd44f79986cff</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StepSize::Constant</name>
    <filename>classLOCA_1_1StepSize_1_1Constant.html</filename>
    <base>LOCA::StepSize::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Constant</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a6fd220dec5928d38826f13632b073790</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constant</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a5533de03153dcf0deee02d25195f751d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a5e448775a0dcb047bdb14ab72797d630</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractStrategy &amp;curGroup, const LOCA::MultiContinuation::ExtendedVector &amp;predictor, const NOX::Solver::Generic &amp;solver, const LOCA::Abstract::Iterator::StepStatus &amp;stepStatus, const LOCA::Abstract::Iterator &amp;stepper, double &amp;stepSize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getPrevStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>ad7456712055e6aad8d71107cc6c06bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getStartStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a96f6a917fb7c3cf01c94936baf4f27e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>clipStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a0e0b5a02642053dcd72b0eabe599aaaf</anchor>
      <arglist>(double &amp;stepSize)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a68c877246ffca7600c7282243b8565a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a99dc9b5c293e912929fbd56edd02f969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>ad9513861a71c732e9e014ca7dad1a515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>startStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a0a49582191f294ffa969dfaacd3d328f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>failedFactor</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a8845136df9a66edbe5795852daed87d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>successFactor</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a3c418e9b5997ab50558952f24b31178f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>prevStepSize</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>ae0969b29596c7769e5df30be99aab579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isFirstStep</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Constant.html</anchorfile>
      <anchor>a8cdf0ad69127c60cacf682308d6b48aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::Constant</name>
    <filename>classLOCA_1_1MultiPredictor_1_1Constant.html</filename>
    <base>LOCA::MultiPredictor::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Constant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a193b782815c137613ec0024d37ab848f</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>acc4a45edb16478328771a9a5ea06303c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Constant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>ac8643c3f4dbf0d3657e3fe0a53af86fd</anchor>
      <arglist>(const Constant &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::MultiPredictor::AbstractStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a0a9c2e0c259d2bf53790a2d482597cca</anchor>
      <arglist>(const LOCA::MultiPredictor::AbstractStrategy &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a47b7e64b6481fb0b7ab67724f24d9398</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>ab285f02b8b8649226b2c15e232d439d4</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>evaluate</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>ad7e58a9336a30386685ac8e0ee431ac4</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeTangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a0df0cb13f8104061f57be20c1061699b</anchor>
      <arglist>(LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTangentScalable</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>abba989380f04db9aa92b59b9f62e62f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a75ab25cdfb21e39a43348bee7972c5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a78f0ce813133b0e8e2e6576f2dbbd18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>ac3c2286d183e46776ab06761891539c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Constant.html</anchorfile>
      <anchor>a1be4a81f9239c0b411780a46e20f97da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ConstrainedGroup</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::Abstract::Group</base>
    <base virtualness="virtual">LOCA::BorderedSystem::AbstractGroup</base>
    <base virtualness="virtual">LOCA::Abstract::TransposeSolveGroup</base>
    <member kind="function">
      <type></type>
      <name>ConstrainedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a032a6b08ea148b6e3a9cf39a537ab7ea</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;constraintParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt; &amp;constraints, const std::vector&lt; int &gt; &amp;paramIDs, bool skip_dfdp=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstrainedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aa701391e55e9de5cb8e6627edf030208</anchor>
      <arglist>(const ConstrainedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstrainedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a25040ce2eb50bab659b5743a8ecb5547</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraintParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a1f9b9232600f49386896af7e3713579e</anchor>
      <arglist>(int i, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConstraintParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a95e12ecf78416342947fdf72a08a4123</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getConstraintParamIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a3b93fa363099b0bc4850f97581dc40c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a76d6746dc9d032b34fde9045340ddf00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5760f477350d9160d158d73c3007cb62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aca502bb74ce3fab27d2da0be9243bb46</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4daf454d6020830b2211a3e0772bbd98</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad4f906310a5117670cc24b2a3e1d438d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>abf3412e4fd94a6cfe314462ecee9a6bf</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4298d95affd3c2bcbef81c681e1dba72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a99acf1242e171511e7d75207203ecdb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a44d3836a78cd2015bc7e4e3818795678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac1ce54a38f32d1f365a80d071f26bf19</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4336bd0982b2c4950ac05ded2d6102d6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a38a1ad30ab1bc763c32df7282e4b2573</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac94c62f666a6b940465bd55a0a58a419</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a9be6520df6636225691d84fd795ecee2</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aabcb414b35926ea854e408beaf909086</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>af66a5df3722354b008d6c4724db71a60</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac0e33816adee5b82ff0ea183c76beb91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad79fbed13d3d0e67eaa81cd92f149196</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a12d53678ca6a2c5a50f6f4e9a1b1540d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>af79bd5250517ab8a7585c31b5d7d5e47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a02e19eb63659b84cef771c05647a592c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4e99c740d4a0b4a0feb6cd81a9f56ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>afe1f58733b72103d5fac8c78376978ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac806b0d09ee1765a850130cf92b1f85b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab69510b9d00814c8074fb96a6babc042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>abaff07289fccadae68f7aa82cbaf7f28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a59dbf50ca9bc9c8de7ca72bea3d6c22a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ade8c8cd99df5e77a18c6688c923a4f29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab0f389a9104040cee783657e61967c84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aeeea7941dac919c902ba02d2eb5e0a6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4d7bd210fc117d46f6b41f03fdb9cb86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aa8c84cc4c65838301107698e6910d53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aaade27146c7edd0744d406777721aa4d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a985f53f39d4439591e217dbc5a57ebba</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a11c4ba6991046db996447915bd720078</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a933f30fee64a702fff0f8daad5e0fd35</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad85f1f2becd6b4687c8d343191460b66</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a19b3ead0d4fefc4635ed80bd27d9cdd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ae86f197294e90fac68ea8ea0a7120cde</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>af27ef36192348ab27441b87f1dcc6a72</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aacc96f449fca4b513f9127dafbf67920</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5bdbed40feaa08eeba9d9232bc179369</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a490e2d6410bc94a5cd16682ba430d2a9</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a599661f9aab71c25c8a66486c64ca79a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4e7a5616da1cd92d79b17add6bb176aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>abbe8b551870656b17daa6c2981d01e92</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4811b789b7f075ed79ae3f61fdf40791</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a746fb7dbd27b2c583e34cd28a20a26b1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a707689f2889af2a6e39cb44c271c16d8</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a3ef239ebfb5d5acee538b80ed8431383</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a91f9b947f1a780e927634d32d1ab3b80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>addac42a15e488bf9ca5eac9a269d0b3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac7304e7a770bd7a72bce9153a5d02428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a7963280780964c9c5e82912c8896eaf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a8747c907d84976b55b137bd4354d3989</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4acc3e105bcf108019f73df4c7ae40da</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a238d7b2a0849a56423dedc0bf13a56e8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac0e1b02bd452025c71e8e65d17a08212</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aedf4f493cda85f2ca72a94a99c489959</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a683c3f413a2a3fa0f134d18086d79160</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a421a4783530de4d27879ed9bddcf6c6a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>acd1d01f01495450eed1766270b7fd930</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>adecd71f5a5a6a5b682dc7b9daad71810</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a47bcfa89e81a1a0c697fb01d8748d15f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5211b4c0e1b1f2c82cd2e9b56d6d66a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a173ecb59b0788b4e3af8d268671f247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>constraintParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a1cf56042f25b20cfd0aab08fb07f8d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a41f52e0a6fdb54c4353bf61d96af01d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSystem::AbstractGroup &gt;</type>
      <name>bordered_grp</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a93d135e241c20fd4ff316fcb2b95f080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>constraintsPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a8bf752c9f3e36e055d94ac4236934495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a70157317a743c98f976a5eab28619289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a6d570e4c1ff7c20d0cc32c42464112a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad73adf8582c45ddaa43c0d472c2f4807</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a2bd71d20a628aee6ad2cedf48004a3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>gradientMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ae6f1f41a90db956c22640f70f0ce0a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad6739da0b178619aca1954d76619dcb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a6aa08942b92ba3ec0c6fc72bfea93ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>ffMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a6269c8e8be37c334b818885d456dde29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>dfdpMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ae799ffcac4bfe085a8105ed17cfd71d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a784358038cefffceea3274fd3e6d1cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>gradientVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aa56fc52f1ddeca8ecb10359c50c5dea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>affe805815523e34df969e7dd1d9af0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a58af2cc8d00033897237aca32b6e189b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_dfdp</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a89c58f0a2ba73cae8d721ea968b18b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>constraintParamIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab5d00e15a974093c3aee0e94afe756fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a0350689c9d0ed9168dff2df762f89b77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ae0c0d1082903f82c0fc2afcd93ee6dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a63a0a75f93fd089679d39a1d20554402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a7c3cbb3b8e0a8352a28d7c06941eda2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isBordered</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab91f0273bcf9885161c13ff4953cb4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>skipDfDp</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aaea56e8d01039b75fb43addf3edf53bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aca502bb74ce3fab27d2da0be9243bb46</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4daf454d6020830b2211a3e0772bbd98</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad4f906310a5117670cc24b2a3e1d438d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>abf3412e4fd94a6cfe314462ecee9a6bf</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4298d95affd3c2bcbef81c681e1dba72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a99acf1242e171511e7d75207203ecdb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a44d3836a78cd2015bc7e4e3818795678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac1ce54a38f32d1f365a80d071f26bf19</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4336bd0982b2c4950ac05ded2d6102d6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a38a1ad30ab1bc763c32df7282e4b2573</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac94c62f666a6b940465bd55a0a58a419</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a9be6520df6636225691d84fd795ecee2</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aabcb414b35926ea854e408beaf909086</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>af66a5df3722354b008d6c4724db71a60</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac0e33816adee5b82ff0ea183c76beb91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad79fbed13d3d0e67eaa81cd92f149196</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a12d53678ca6a2c5a50f6f4e9a1b1540d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>af79bd5250517ab8a7585c31b5d7d5e47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a02e19eb63659b84cef771c05647a592c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4e99c740d4a0b4a0feb6cd81a9f56ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>afe1f58733b72103d5fac8c78376978ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac806b0d09ee1765a850130cf92b1f85b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab69510b9d00814c8074fb96a6babc042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>abaff07289fccadae68f7aa82cbaf7f28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a59dbf50ca9bc9c8de7ca72bea3d6c22a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ade8c8cd99df5e77a18c6688c923a4f29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ab0f389a9104040cee783657e61967c84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aeeea7941dac919c902ba02d2eb5e0a6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4d7bd210fc117d46f6b41f03fdb9cb86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aa8c84cc4c65838301107698e6910d53a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aaade27146c7edd0744d406777721aa4d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a985f53f39d4439591e217dbc5a57ebba</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a11c4ba6991046db996447915bd720078</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a933f30fee64a702fff0f8daad5e0fd35</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ad85f1f2becd6b4687c8d343191460b66</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a19b3ead0d4fefc4635ed80bd27d9cdd9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ae86f197294e90fac68ea8ea0a7120cde</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>af27ef36192348ab27441b87f1dcc6a72</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aacc96f449fca4b513f9127dafbf67920</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a5bdbed40feaa08eeba9d9232bc179369</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a490e2d6410bc94a5cd16682ba430d2a9</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a599661f9aab71c25c8a66486c64ca79a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4e7a5616da1cd92d79b17add6bb176aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>abbe8b551870656b17daa6c2981d01e92</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4811b789b7f075ed79ae3f61fdf40791</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a746fb7dbd27b2c583e34cd28a20a26b1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a707689f2889af2a6e39cb44c271c16d8</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a3ef239ebfb5d5acee538b80ed8431383</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a91f9b947f1a780e927634d32d1ab3b80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>addac42a15e488bf9ca5eac9a269d0b3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac7304e7a770bd7a72bce9153a5d02428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a7963280780964c9c5e82912c8896eaf1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a8747c907d84976b55b137bd4354d3989</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a4acc3e105bcf108019f73df4c7ae40da</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a238d7b2a0849a56423dedc0bf13a56e8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>ac0e1b02bd452025c71e8e65d17a08212</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>aedf4f493cda85f2ca72a94a99c489959</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a683c3f413a2a3fa0f134d18086d79160</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>a421a4783530de4d27879ed9bddcf6c6a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstrainedGroup.html</anchorfile>
      <anchor>acd1d01f01495450eed1766270b7fd930</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MinimallyAugmented::Constraint</name>
    <filename>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</filename>
    <base>LOCA::TurningPoint::MinimallyAugmented::Constraint</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aeb946994cd8e53322acd1b882037ac68</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pfParams, const Teuchos::RCP&lt; LOCA::Pitchfork::MinimallyAugmented::AbstractGroup &gt; &amp;g, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;psi, int bif_param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aec6e434940b8e9e5478f7c2d5994a240</anchor>
      <arglist>(const Constraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ab7b3ecf838be3cffb73ce2c7b228fba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a99f3207693873c45d2b529437bd3ae65</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a00724fc90ebf90519293f10e29a4fb0f</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a8e18f238f7d4b8a81112dd12c448c915</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae3ac27bf09ad023bc1325a9533a95bb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a9dbbaf386c3acfe9073793f251fe4104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aa0758154b6ce9c0b2c83a8fa9206da09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a9461e276c6dcd21217de176b7e9fef32</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a175ad71e13f4d698b78c133d8e0dc9c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a65ba586d3ad7c5ddadb2921c1bd4aa25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MinimallyAugmented::AbstractGroup &gt;</type>
      <name>pf_grp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5da81c8d08b49d9bcf5bd21be90195f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>psi_vector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aec1d92d3de80189e451748e7d96da116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>dgdx</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a413a1cc5a78578ff760085d102deed39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>pf_constraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a0e9bd6b44f73313233e6ac59984e5062</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a00724fc90ebf90519293f10e29a4fb0f</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a8e18f238f7d4b8a81112dd12c448c915</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae3ac27bf09ad023bc1325a9533a95bb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a9dbbaf386c3acfe9073793f251fe4104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aa0758154b6ce9c0b2c83a8fa9206da09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a9461e276c6dcd21217de176b7e9fef32</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a175ad71e13f4d698b78c133d8e0dc9c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a65ba586d3ad7c5ddadb2921c1bd4aa25</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MinimallyAugmented::Constraint</name>
    <filename>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</filename>
    <base>LOCA::MultiContinuation::ConstraintInterfaceMVDX</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1e97d9825ebc6fd0395fd5b57d0436d3</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;tpParams, const Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt; &amp;g, int bif_param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae725efa01da8f8ee8c903bf3b1cda782</anchor>
      <arglist>(const Constraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>af6b404bc0c3e0dc212698501e804cc71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aaf51d025132867cb1f1d166f23ce5464</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getLeftNullVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a56d547a3344806d441496b6e99c3f83b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getRightNullVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ab314a613c68abf53ea1aa5d50f44ff62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getAVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a2cfef8a2edd407b14dabcea0380880bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getBVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a55dcd1f60491a4b2042ab5f62b52e85a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSigma</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a2062cbf95c5f0c392d5c6d3eb38f858d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aaa222e7089ac70f11974d09f64d52b1a</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>afd7bc3e1dd8b0b19d0093fe2b54af8af</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac4a619100fd18f958f74b4d4edc7d128</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7bc0c00089faf8cc020d549a46c3f42e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>abd6f100ab5dbb5811ca3476fdd008f87</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a65d33964755453581c3d06d4701cc707</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae4ed7658c9175f6525cd6d1ee5ae2319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aef032a81c310c8da7bd1508aa4035477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ad5009b96b019525d539a0658fd586a93</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a68e32d12b99c02ce609cd323551c6635</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ad27acffdf4dc62a627f3d75eedfaf18b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1bf9f241b94b6fb017e3d1af22d16ba7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ace6cc90324f0cde89356224b3ebc2f59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5c022ea922f905eb025550ffd55dd309</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a418f702d8899b329059ce0faa530dec4</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>NullVectorScaling</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a38db38b0e3e8f3a4c82ef9d9a3dfd8c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderOne</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a38db38b0e3e8f3a4c82ef9d9a3dfd8c4a89e4685ae05baaf30ad7e27cd00d644d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderN</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a38db38b0e3e8f3a4c82ef9d9a3dfd8c4a4b837677d8c27a63dd584dcd809deb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderOne</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a38db38b0e3e8f3a4c82ef9d9a3dfd8c4a89e4685ae05baaf30ad7e27cd00d644d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderN</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a38db38b0e3e8f3a4c82ef9d9a3dfd8c4a4b837677d8c27a63dd584dcd809deb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleNullVectors</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a4bf21204913b24f51f51c5150aa841f6</anchor>
      <arglist>(NOX::Abstract::Vector &amp;a, NOX::Abstract::Vector &amp;b)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getInitialVectors</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ace6bbfb88768dfd3d16baaa10d7ef261</anchor>
      <arglist>(NOX::Abstract::Vector &amp;a, NOX::Abstract::Vector &amp;b)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a01621ac6ecbfba0dedec3e7f58aa33ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae10fa8ecbc407902bd9b6e2572e6d52e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>turningPointParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7b474139a7d6909519fe4e7f343d16f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7cab027bde435d7a1c4f50c6145e8367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>a_vector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a8b408b009e46964fe8a6030baeb3c96d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>b_vector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a469d0f537baa36a2c375c19eb56f25d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>w_vector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a87a0ca90336b6c46c3e87c13afbb491c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>v_vector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5c971af2ad812abbf21d5b136e554d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>Jv_vector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a60025198eeeafbca0f44ea302feec824</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>Jtw_vector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>afdff0caab01f2ef5af16eed9c1c45bd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>sigma_x</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a72f1ff8a9841a776903c43a6c8fe43b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a648d98ab77ceea1670990c6ddd436de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a72977ffdc2847cb267da4eea7064a748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dn</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac135479ff49e9d0b97b65d7ea9aa074b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma_scale</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a6a4ce230019fc84dbb50a59f7cb7b8a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac1f89ceace1179f84e67ce531f1bc2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>adf1ec25c1549fe89aeb9821be65dd076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac2ca1bf55219fc06f5a8acb32819fa06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>af2847869fc7623e01a1e8a5964d8b5dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateVectorsEveryContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aac760b49406bfe2ee93c6d31b4647427</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateVectorsEveryIteration</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5fcf3608c3d6e8ad27aca9876fa0ca0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NullVectorScaling</type>
      <name>nullVecScaling</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aaf2d13f4f29b037d686f9f0cb44098cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>multiplyMass</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aec52a9154105eef6d10a4f0e379ba63b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt;</type>
      <name>tdGrp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a4a54bf6ec50f51ff2caa3e181fc7b77e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>tmp_mass</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7ddfdc13a88f78427e8f856e87bea6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aaa222e7089ac70f11974d09f64d52b1a</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>afd7bc3e1dd8b0b19d0093fe2b54af8af</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac4a619100fd18f958f74b4d4edc7d128</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7bc0c00089faf8cc020d549a46c3f42e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>abd6f100ab5dbb5811ca3476fdd008f87</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a65d33964755453581c3d06d4701cc707</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae4ed7658c9175f6525cd6d1ee5ae2319</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aef032a81c310c8da7bd1508aa4035477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ad5009b96b019525d539a0658fd586a93</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a68e32d12b99c02ce609cd323551c6635</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ad27acffdf4dc62a627f3d75eedfaf18b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1bf9f241b94b6fb017e3d1af22d16ba7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ace6cc90324f0cde89356224b3ebc2f59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5c022ea922f905eb025550ffd55dd309</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a418f702d8899b329059ce0faa530dec4</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MinimallyAugmented::Constraint</name>
    <filename>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</filename>
    <base>LOCA::MultiContinuation::ConstraintInterfaceMVDX</base>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ab0d4c23f94fe9d92062f8aa087c5e945</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;hpfParams, const Teuchos::RCP&lt; LOCA::Hopf::MinimallyAugmented::AbstractGroup &gt; &amp;g, bool is_symmetric, const NOX::Abstract::Vector &amp;a_real, const NOX::Abstract::Vector &amp;a_imag, const NOX::Abstract::Vector *b_real, const NOX::Abstract::Vector *b_imag, int bif_param, double freq)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Constraint</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a64594ad9a35e9be9571a659f92e9ba29</anchor>
      <arglist>(const Constraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Constraint</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a51120ddf682124fec6afd3eeac602c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a622165cb88c3ee78c2080ab06704d2e2</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Hopf::MinimallyAugmented::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFrequency</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7e1b9618d2d294fc9c79887cf7d710c3</anchor>
      <arglist>(double freq)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getLeftNullVecReal</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a80c20b8c5e417a8f5493f3f8f697cf5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getLeftNullVecImag</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a01f7cbccca249c37949ea0f494195f60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getRightNullVecReal</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ad64b9d81709bd0d7fea34ff4abaf9df2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getRightNullVecImag</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aa02d1ddebb87734c938e485306dd5ffe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSigmaReal</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aebbf4045cdadcbf46ee0e198545de489</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSigmaImag</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a797f7682622c1fc3d4c51ce602cf6f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDOmega</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a2bdd63e828821ef6631c076873629a00</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;domega)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>abc70dd460e889d78e926a77825285a6f</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae3762f812c5c10a03915aea958943fa8</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7cc5d85e0b221f702fe55c4446009f45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a429bef1d124def5858a55751bba1010d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>af3919aba62f443e685e0cfb7d7fe8826</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5488bfb2846c3eec664ae9cb5504f5cd</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5a7f8045066f8e82ddccecc27925e474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>afe350d4d701f5683ee2c46bb77211b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a30b1b191acf672ff5aaaf882f98571bd</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a567db8c04ddd025f3628c0cb8ecc5233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a0dd1e9d2ca514b133a4690640f347383</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1a2bba4c44958572205ef5c15fb314ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a119c0c4256121d0b42fbd590406dcf95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aa88ab9eddb4f1846dc09b301a7ce0815</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aeb2286523c2aca996c2d03d16bca2209</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a98e3cdab021eb0c26fdc9919cf0a1a3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a21901ba667cddabf242bf733e1cb93f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>hopfParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a6dc3f07365f374387df693db3fcf118a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MinimallyAugmented::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a0342544dded281f872cf990e35f67187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>a_vector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac85341a15094aba284b4c39d0f470547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>b_vector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ada528a441f0dac29ba02759e1c4aed97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>w_vector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a688400fc93bffe3d680a8d302cf0f7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>v_vector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ac7a3df3b2cb706d45ec553938b15bdbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>Cv_vector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>abda0f304cc4cb33e0fe315ec2203d785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>sigma_x</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aa370ee463ceadd5670f377b7f3237e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1f54d20667532381df29689f549123a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>acb60a21924c2542fa65e49d24bff582f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dn</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a871938cd902849d1c71186e37b4aa389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma_scale</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1c92ab2832d60936be4ad81d2b7adcaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isSymmetric</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1f94505c4bb4ee53f7a75f78e4b9f8fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a088c51d8acbae21678a05c1721d992e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>af71b255b7dbdf1d489a2884c261ae932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a0172c55b68518fbe87f731c895da0197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>omega</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ad1ead1fd4cdeac22482ab588c1089510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateVectorsEveryContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ab60c056956ea3ccee9c5649418321da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateVectorsEveryIteration</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a3b26cd30908e79b06cf3970bb786e0bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>abc70dd460e889d78e926a77825285a6f</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>ae3762f812c5c10a03915aea958943fa8</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a7cc5d85e0b221f702fe55c4446009f45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a429bef1d124def5858a55751bba1010d</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>af3919aba62f443e685e0cfb7d7fe8826</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5488bfb2846c3eec664ae9cb5504f5cd</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a5a7f8045066f8e82ddccecc27925e474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>afe350d4d701f5683ee2c46bb77211b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a30b1b191acf672ff5aaaf882f98571bd</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a567db8c04ddd025f3628c0cb8ecc5233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a0dd1e9d2ca514b133a4690640f347383</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a1a2bba4c44958572205ef5c15fb314ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>a119c0c4256121d0b42fbd590406dcf95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aa88ab9eddb4f1846dc09b301a7ce0815</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1Constraint.html</anchorfile>
      <anchor>aeb2286523c2aca996c2d03d16bca2209</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ConstraintInterface</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstraintInterface</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a001d0d5f362865a6e7f16145fd385a03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintInterface</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>ab47470c323ff88cc681b500246769c01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a65343ff38a670013cd7dc254e3c42b2e</anchor>
      <arglist>(const ConstraintInterface &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a5f47cc646414d7bdace35feaab35dbd0</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a29445cdab79553016bebd5d0385800d8</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>abf9bd5342cb03b009dd7e3cc97f222b9</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>ad581acb1dfd9892136eacf411e16b10b</anchor>
      <arglist>(int paramID, double val)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>af7e32a00f0781da2c08e2271335aa465</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a1684ebc4c337d807bb426bb68f943bc6</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a9d0903eff532c4e835da5859093537a8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a20311658b134d2035907f5adf89ee68b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a829c272b655f1ec30f02f3fdff93be79</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a5eae8203a980ff1fbfdb3a64aaaeb070</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a4a60119c5bf3320e899d1be3198b2193</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>multiplyDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a8509a810dc1fb7843179d97641099461</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;input_x, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>addDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>ab648e7cd07c7df744f043583ed416333</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double beta, NOX::Abstract::MultiVector &amp;result_x) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a96a8a26c9759654136e21630d2e84cc4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a7aebc74533fc35358ee57cc37d76ef59</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterface.html</anchorfile>
      <anchor>a93bb61503501acc207e054ac92bc24a5</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ConstraintInterfaceMVDX</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ConstraintInterfaceMVDX.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::ConstraintInterface</base>
    <member kind="function">
      <type></type>
      <name>ConstraintInterfaceMVDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterfaceMVDX.html</anchorfile>
      <anchor>a5081e5ec7465ee10b0ee35d1a7cf11d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintInterfaceMVDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterfaceMVDX.html</anchorfile>
      <anchor>a049b2b878109ade437d638a8e1c05ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterfaceMVDX.html</anchorfile>
      <anchor>ac0c09cd020bcac62d942e2f11e28a962</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>multiplyDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterfaceMVDX.html</anchorfile>
      <anchor>a35e405585201f5838823fec7a6d1c21c</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;input_x, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>addDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ConstraintInterfaceMVDX.html</anchorfile>
      <anchor>a0ce2ada9fde6743341d715cfb7a9181a</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double beta, NOX::Abstract::MultiVector &amp;result_x) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ContinuationManager</name>
    <filename>classContinuationManager.html</filename>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Utils::Counters</name>
    <filename>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</filename>
    <member kind="function">
      <type></type>
      <name>Counters</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>ac1f8dc38d19cb68b58f2e1abb65bcc97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Counters</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a6e13d75d11a8147f92d6c62799cb0bea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>af1acad78248b3684077f4377b9f9dc31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>setValues</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a21d95e10c72c2d58784f525bbbb9c3d9</anchor>
      <arglist>(Teuchos::ParameterList &amp;lineSearchParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a764de85ebfbcf3252c193ff775addbe3</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumNonTrivialLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a2adb50e83488801fc4f298757eb5123c</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumFailedLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>af061ca6b620ff30c43469efe876a0e99</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumIterations</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a261ff4c06abb42417d4bdd755b6cc6f9</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a49133e1dcadd54547e8e5107af4e91b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumNonTrivialLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a8baa07c5ebb1ec337c4d9882f75b8c85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumFailedLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a9b604da416d7bd42e3b9683d5e8a1a5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>ae8076753253423707ba16dbc646f791d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a764de85ebfbcf3252c193ff775addbe3</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumNonTrivialLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a2adb50e83488801fc4f298757eb5123c</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumFailedLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>af061ca6b620ff30c43469efe876a0e99</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>incrementNumIterations</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a261ff4c06abb42417d4bdd755b6cc6f9</anchor>
      <arglist>(int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a49133e1dcadd54547e8e5107af4e91b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumNonTrivialLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a8baa07c5ebb1ec337c4d9882f75b8c85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumFailedLineSearches</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>a9b604da416d7bd42e3b9683d5e8a1a5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Counters.html</anchorfile>
      <anchor>ae8076753253423707ba16dbc646f791d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SingularJacobianSolve::Default</name>
    <filename>classLOCA_1_1SingularJacobianSolve_1_1Default.html</filename>
    <base>LOCA::SingularJacobianSolve::Generic</base>
    <member kind="function">
      <type></type>
      <name>Default</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a70c53f7e279d3e5fd18a12c8bf2bbb71</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Default</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a8b4c93144d2812c850df272ab00e35b6</anchor>
      <arglist>(const Default &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Default</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a4985baffc17ea86c1a06f6b93e472a74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a6345f153037e9edc25c08f5198bb21bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a526d518e554e7f7f98f40522a88fe473</anchor>
      <arglist>(const LOCA::SingularJacobianSolve::Generic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Default &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a2ee56fedd5bff33088553d508324c581</anchor>
      <arglist>(const Default &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a39b8814ba1750e4dac1b7441a5422637</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>acdb7b74e453b069daab54452b10730d8</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;input, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeMulti</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Default.html</anchorfile>
      <anchor>a74cc3ecb91e586ff7b56ecf59828de29</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector *const *inputs, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector **results, int nVecs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Parameter::DefaultFunctor</name>
    <filename>classLOCA_1_1Parameter_1_1DefaultFunctor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>DefaultFunctor</name>
      <anchorfile>classLOCA_1_1Parameter_1_1DefaultFunctor.html</anchorfile>
      <anchor>a3f8b3cd43bbb3762686ef34b530a176d</anchor>
      <arglist>(ObjectType &amp;object, ValueType ObjectType::*object_val_ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DefaultFunctor</name>
      <anchorfile>classLOCA_1_1Parameter_1_1DefaultFunctor.html</anchorfile>
      <anchor>aac6b8d100efdaa01a7e914db9badf05b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set</name>
      <anchorfile>classLOCA_1_1Parameter_1_1DefaultFunctor.html</anchorfile>
      <anchor>a0925ba86fbe03bc55023e0c5b136ba63</anchor>
      <arglist>(const ValueType &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ValueType</type>
      <name>get</name>
      <anchorfile>classLOCA_1_1Parameter_1_1DefaultFunctor.html</anchorfile>
      <anchor>ae6959c47cd9405d979cc5d129e3a8f53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ObjectType &amp;</type>
      <name>obj</name>
      <anchorfile>classLOCA_1_1Parameter_1_1DefaultFunctor.html</anchorfile>
      <anchor>a647fdff974828aa4053733dab749983c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ValueType ObjectType::*</type>
      <name>obj_val_ptr</name>
      <anchorfile>classLOCA_1_1Parameter_1_1DefaultFunctor.html</anchorfile>
      <anchor>a4e793f57f25cd2c5542888853bffe996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::DefaultLinearOpSource</name>
    <filename>classThyra_1_1DefaultLinearOpSource.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>LOCA::SaveEigenData::DefaultStrategy</name>
    <filename>classLOCA_1_1SaveEigenData_1_1DefaultStrategy.html</filename>
    <base>LOCA::SaveEigenData::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>DefaultStrategy</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1DefaultStrategy.html</anchorfile>
      <anchor>a6bef520876371d65722040fc46e03207</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DefaultStrategy</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1DefaultStrategy.html</anchorfile>
      <anchor>ae2ca7c85e1050b38c629e2b2b509520f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>save</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1DefaultStrategy.html</anchorfile>
      <anchor>a22909d2ee8689ef0775adb40bc9a46d6</anchor>
      <arglist>(Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_r, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_r, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_i)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1DefaultStrategy.html</anchorfile>
      <anchor>a75b33a810f377ee76689985692138f47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Eigensolver::DefaultStrategy</name>
    <filename>classLOCA_1_1Eigensolver_1_1DefaultStrategy.html</filename>
    <base>LOCA::Eigensolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>DefaultStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DefaultStrategy.html</anchorfile>
      <anchor>a8ebd9536f0b9472c11b8017aa13f38e5</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DefaultStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DefaultStrategy.html</anchorfile>
      <anchor>a1fbc6deac1ab0c5ae93a204acb6f7365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeEigenvalues</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DefaultStrategy.html</anchorfile>
      <anchor>af6096d16d1dc0779bb2bdeb4c8679990</anchor>
      <arglist>(NOX::Abstract::Group &amp;group, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_r, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_r, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_i)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DefaultStrategy.html</anchorfile>
      <anchor>a77f00f05c33e7ecc153d08d7f93a324c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Homotopy::DeflatedGroup</name>
    <filename>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <base virtualness="virtual">LOCA::BorderedSystem::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>DeflatedGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3c448de00a58de51768f22218660493f</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;hParams, const Teuchos::RCP&lt; LOCA::Homotopy::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;start_vec, const std::vector&lt; Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &gt; &amp;prev_solns, const double identity_sign=1.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeflatedGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a1389d14dfd2e70ee4a5a25355208b0c5</anchor>
      <arglist>(const DeflatedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DeflatedGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aae14f30b5c6c58b05842e1053ecadeb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getHomotopyParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4c82fb166d5fe54c89078c86ec9d743e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a274c6a6c6098d8467359d3ef5e94fe14</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3f4005b573421980c82d433fb4afd3df</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac9dd10fc8657184f1a3b64bfe3efd507</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad8a494832d3f8960155e21e7b768143b</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>af9ef47396d8e5b4baa0450809c760bb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a812ede391c00d8fa6a43d28064a9b633</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3163e7b7fc34d6d75de433ae9926c58d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae14c18393b60bcaebb9ef2a60265f7ea</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a78003d2556e50ed0ec39e356b80ae7eb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>addbe5472eaa9faa79875f3f6d2d43572</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a5fb28baea94ca498ec2543454ae36a14</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac532860e5e80c6e2729085c00a5bfab8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a685196928f80a3bac790fd1efe829863</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a76bdd4bb0693e778f588971920f61bd5</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>abf3aa851efae2a087985f0c5d66d520f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>abcd72527862d1eed392c7f0bd65f3f2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a1281ccca1442d1a4319c16a9d0164612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a037b806b82d5df80dfacf9082342fb4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a18b5c19796c2ef7efac98f3b85d34003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a7b30ce17a0db6f61f03151e158ed234f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a822ead3e3958defd48f5dacb64c5ba73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a38e7667c01ec74187743bb45d83e4462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a54177356d54430ba022c3d9c139a8e7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a056049375fa9918a09610b016b82906a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a995fe0f570d15b3d9638798ebc6c2ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a113a1a5c0a64f6de68ddc531de331734</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a85b7c47d53cd993d87e1c556a4d47da2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a8c97b82ca7c8f2f7a5274369984fa265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a2eebd4bce117d710009585f87bc4b603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4013ca25aea3b90565befbb8d2f33422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aa46546149a1709a66cac8964abd0d711</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a8c7c499b041cbb9cde3ed6bb4f498490</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a381d59d81f42f2e0f9d2c50c7ceb3839</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a5cfa4340dcdb0103c118efa398a74581</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a5ee587cb469d1cda93833d88e586ff23</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a244d2a9d2a648a71ba0c643cfd662940</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>af1bb7d074fc123a1bcfe657049abb445</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a05c79e69d10586eaa66463193c91836a</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9710850ff2e8e5cd3f91c4ebe482d8ee</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>acbf8e39d83fbddddca67abb8f22308d6</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae8780c863b2282c91541f4bac56811c3</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9c5f246fe7c42124d523dfdc484db6e7</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae2f4ab85aef3d95e9b3a51a4d494c10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a03b247cdcf042f3b8ef1d5203e4d362f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aa158dad0f5bfc5881184c176e48c2966</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a37c9234a8145637881e421227652aec6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a7839f54e9f5731c9af1ca83e6b13bda6</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9985d74d4b425c49d9fa2e829cf3a548</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a28aa2d76a8aa02f452872522223fd651</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a902858d1380df4d248c76b9a9ce75b97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a7c87fd0c3a4e64515a5cea0460c46109</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a2b54c2dda3a585688c9edf086008a65a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a26a0cee34a1caaa6dd2293fc99630804</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a83cf2173e3da657f09984b5d6d32c331</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>af85490fe5df867d0fe3eaad2fa8bd43a</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac29c0a180d8888ab76c601f3623be96c</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4392b657a29aa98d56bd165de54f79a7</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a6879199c1013c04a8fae9edd1167106c</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3411ba1eac25cd7af5e4e215a912fe28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad2f2584f84e714377f7f9300daba9c1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setHomotopyParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3a2b131ae63a576cb1b62f00f10a157a</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setStepperParameters</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad91d949cc18bc021a3f1b4dc4a710b24</anchor>
      <arglist>(Teuchos::ParameterList &amp;topParams)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a16d583557f4cb48f75f3058100ff54d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad0c8ea4262d7892ed14c35467a825ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>homotopyParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae60c9de8a7a10079fc90a92f203dfe81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Homotopy::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4b1314a91562468d49cacbf5f5f1db06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSystem::AbstractGroup &gt;</type>
      <name>bordered_grp</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a92f154116e598a9758d3f064a6615a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a67b8843fcf7b085225469f6e8121d905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a73500c2cee4c6db6d722e044256bda60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a65319ad46b0d538300e91b4297a61070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>gradientMultiVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac224a779c593d253b14b02a88fbfd69a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a8684bb3db9b2b55e6033ed07078f16a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4c6bb00205b5aaaf52029afc5fb2e02b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a04fbfc8e9867dcb493996cca6a9734a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>gradientVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>abccb434744518c9a508b451c58365eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>startVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a577e31f6738ff228838d1e46ceddec9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &gt;</type>
      <name>solns</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a0fc180b0c44ceb885966f9b2e7b619d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>distVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a808a8c351692e61afc0eb5ac196b98b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>totalDistMultiVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac8708d335f5d1174d55af82c8ba4cb30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>totalDistVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad5a33579ba4850dc3092002097b9620d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>underlyingF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a641203371ce20a3edc09d2425665ccc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae61f06fbb8fc71389791c2498015adfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>minusOne</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aa17f6f43c167cdf57578a26f3d9f7208</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numSolns</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae734052ea696a8dc8e0ff8f715ace8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>distances</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4dda9851cce39415be3a1ddc023a1daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>distProd</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a8d69fc8b18b0840fed76633e2aaaa6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a0ebb7af57848d6f468296b91c00188db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::ParameterVector</type>
      <name>paramVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aec793579828006f6327de2bb99004944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>conParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad8d5c8c07685466c5a88f663a5f9e95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>conParamID</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae17b67b0e90fa6375821b7f1da071ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>conParamLabel</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aef8f2a8df13ca3790ea9a9b6c98ecfd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>augmentJacForHomotopyNotImplemented</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a1efdb367c37e667449d2f53fad67f083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ab6426165304d32c195354e3e87baa3f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a21fc7cba8879fb33ef23b1de26f80fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a551645909159ed418cb699487d4c710e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a1f66e0c21f482a18feb10ccca5323f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isBordered</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9f502d66261166c46c5d3805648183d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a274c6a6c6098d8467359d3ef5e94fe14</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3f4005b573421980c82d433fb4afd3df</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac9dd10fc8657184f1a3b64bfe3efd507</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ad8a494832d3f8960155e21e7b768143b</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>af9ef47396d8e5b4baa0450809c760bb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a812ede391c00d8fa6a43d28064a9b633</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a3163e7b7fc34d6d75de433ae9926c58d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae14c18393b60bcaebb9ef2a60265f7ea</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a78003d2556e50ed0ec39e356b80ae7eb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>addbe5472eaa9faa79875f3f6d2d43572</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a5fb28baea94ca498ec2543454ae36a14</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac532860e5e80c6e2729085c00a5bfab8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a685196928f80a3bac790fd1efe829863</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a76bdd4bb0693e778f588971920f61bd5</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>abf3aa851efae2a087985f0c5d66d520f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>abcd72527862d1eed392c7f0bd65f3f2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a1281ccca1442d1a4319c16a9d0164612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a037b806b82d5df80dfacf9082342fb4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a18b5c19796c2ef7efac98f3b85d34003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a7b30ce17a0db6f61f03151e158ed234f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a822ead3e3958defd48f5dacb64c5ba73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a38e7667c01ec74187743bb45d83e4462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a54177356d54430ba022c3d9c139a8e7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a056049375fa9918a09610b016b82906a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a995fe0f570d15b3d9638798ebc6c2ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a113a1a5c0a64f6de68ddc531de331734</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a85b7c47d53cd993d87e1c556a4d47da2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a8c97b82ca7c8f2f7a5274369984fa265</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a2eebd4bce117d710009585f87bc4b603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4013ca25aea3b90565befbb8d2f33422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aa46546149a1709a66cac8964abd0d711</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a8c7c499b041cbb9cde3ed6bb4f498490</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a381d59d81f42f2e0f9d2c50c7ceb3839</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a5cfa4340dcdb0103c118efa398a74581</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a5ee587cb469d1cda93833d88e586ff23</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a244d2a9d2a648a71ba0c643cfd662940</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>af1bb7d074fc123a1bcfe657049abb445</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a05c79e69d10586eaa66463193c91836a</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9710850ff2e8e5cd3f91c4ebe482d8ee</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>acbf8e39d83fbddddca67abb8f22308d6</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae8780c863b2282c91541f4bac56811c3</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9c5f246fe7c42124d523dfdc484db6e7</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ae2f4ab85aef3d95e9b3a51a4d494c10e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a03b247cdcf042f3b8ef1d5203e4d362f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>aa158dad0f5bfc5881184c176e48c2966</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a37c9234a8145637881e421227652aec6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a7839f54e9f5731c9af1ca83e6b13bda6</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a9985d74d4b425c49d9fa2e829cf3a548</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a28aa2d76a8aa02f452872522223fd651</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a902858d1380df4d248c76b9a9ce75b97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a7c87fd0c3a4e64515a5cea0460c46109</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a2b54c2dda3a585688c9edf086008a65a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a26a0cee34a1caaa6dd2293fc99630804</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a83cf2173e3da657f09984b5d6d32c331</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>af85490fe5df867d0fe3eaad2fa8bd43a</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>ac29c0a180d8888ab76c601f3623be96c</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a4392b657a29aa98d56bd165de54f79a7</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1DeflatedGroup.html</anchorfile>
      <anchor>a6879199c1013c04a8fae9edd1167106c</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::DerivUtils</name>
    <filename>classLOCA_1_1DerivUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>DerivUtils</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ab97aa4268384cd0ef8bce3cd742b2083</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, double perturb=1.0e-6)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DerivUtils</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a4d87eff116d083b3bcc99eda835ec236</anchor>
      <arglist>(const DerivUtils &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DerivUtils</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ab0e715e57e8ff99ab31743f7a74df0b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; DerivUtils &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>abe814a51bb1ff2ce2f46fcc2dc49af3e</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDp</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a222c6a387a2f9f99a5ac8918df855f7f</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const std::vector&lt; int &gt; &amp;param_ids, NOX::Abstract::MultiVector &amp;result, bool isValidF) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDp</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>acc78dd83503001928a8815478d855b82</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;, const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result, bool isValid) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxa</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ac83bc947f6b5c3da888adae82094de07</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxa</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a2edbd29c3ec29327fddef5ddd29123db</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::MultiVector &amp;aVector, const NOX::Abstract::Vector &amp;JnVector, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDp</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a22ca875b67a77fa78ccc21d574dc6662</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector::DenseMatrix &amp;result, bool isValid) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJDp</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a1853bd2abf9b3ca0cbc6e326b1bbc1be</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, NOX::Abstract::MultiVector &amp;result, bool isValid) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDx</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ad07464e31627d4a2a3ea81c19b8ba05f</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDx</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ab40d24f825653f26863b3eb8d9e2112c</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const NOX::Abstract::MultiVector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDp</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ada0fdac9462cf9b54c8ec7818115e156</anchor>
      <arglist>(LOCA::Hopf::MooreSpence::AbstractGroup &amp;grp, const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag, bool isValid) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a159fd8843cb60d7430e4d0e4d5526ef2</anchor>
      <arglist>(LOCA::Hopf::MooreSpence::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a37e7b8d7d302d94af37dc793c22b4a78</anchor>
      <arglist>(LOCA::Hopf::MooreSpence::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, const NOX::Abstract::Vector &amp;Ce_real, const NOX::Abstract::Vector &amp;Ce_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDp</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a133e6565dc2a04a461721570dd090f66</anchor>
      <arglist>(LOCA::Hopf::MinimallyAugmented::AbstractGroup &amp;grp, const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double omega, NOX::Abstract::MultiVector::DenseMatrix &amp;result_real, NOX::Abstract::MultiVector::DenseMatrix &amp;result_imag, bool isValid) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDx</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>adadf51ade88c7fe18843c3f9d67bbf78</anchor>
      <arglist>(LOCA::Hopf::MinimallyAugmented::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double omega, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>perturbParam</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a6124dea623a09619f4bf0f2941a2171c</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, double &amp;param, int param_id) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>perturbXVec</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ad4795130303773cc78a4a3e5d2860ab0</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;xVector, const NOX::Abstract::Vector &amp;aVector) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>epsScalar</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>aacecbdc942af4c9235c7cbeeb6a30944</anchor>
      <arglist>(double p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>epsVector</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>aa91db1058618f9c3cd0e69334baafd93</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;xVector, const NOX::Abstract::Vector &amp;aVector) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>a653548520210084a4643a74c3f4fc810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>perturb</name>
      <anchorfile>classLOCA_1_1DerivUtils.html</anchorfile>
      <anchor>ade054e9727798def75238eb67e826dc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Eigensolver::DGGEVStrategy</name>
    <filename>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</filename>
    <base>LOCA::Eigensolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>DGGEVStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>a896e333bc64212a1b50e3b96651b3864</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DGGEVStrategy</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>a05ad0e5c2fee729348b46589dca2d7a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeEigenvalues</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>ab2152d30d8c68a9f70a184b247141067</anchor>
      <arglist>(NOX::Abstract::Group &amp;group, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_r, Teuchos::RCP&lt; std::vector&lt; double &gt; &gt; &amp;evals_i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_r, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &amp;evecs_i)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>a0537cb46133b0fcf0fe455337d2cb7fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>topParams</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>a2f1ba9c28746bec674cc4bdada00319c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>a3de5d6cddcda1bb5f98ad925a858dfdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nev</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>af009c8ce82157ac0426af6b0c692d385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>which</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1DGGEVStrategy.html</anchorfile>
      <anchor>a1ba6bb8d6d9bbb6153f109b8d2bb54d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::Divergence</name>
    <filename>classNOX_1_1StatusTest_1_1Divergence.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>Divergence</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a4942536d1cf0e89ff50f4b42cbef9265</anchor>
      <arglist>(double thresh, int n=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Divergence</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a3ca66bca2f8049a86c8aafe3d37ec6ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a3812178b72ed73c3d64e146002418379</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a82019237847863b024dcfc71a32194e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a933931cac870fcc94d36040cd1d264d9</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMaxNumSteps</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a1d0e37b9ad4f1c1a2ab041855037b174</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getCurrentNumSteps</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a1f2fd1514326ddea445c03042ae26cdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getThreshold</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Divergence.html</anchorfile>
      <anchor>a8e903c49a787eda3af6bc8d3aaa473ff</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Parameter::Entry</name>
    <filename>classLOCA_1_1Parameter_1_1Entry.html</filename>
    <templarg>ValueType</templarg>
    <base>LOCA::Parameter::AbstractEntry</base>
    <member kind="function">
      <type></type>
      <name>Entry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Entry.html</anchorfile>
      <anchor>a0a7d12932fdf7d80e7656f0c426b59aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Entry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Entry.html</anchorfile>
      <anchor>a74877a82909424bea13869bf6fda936b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setValue</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Entry.html</anchorfile>
      <anchor>aad8fb555705ad183c5e6e27d2a070463</anchor>
      <arglist>(const ValueType &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ValueType</type>
      <name>getValue</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Entry.html</anchorfile>
      <anchor>a361b87fa1d2f24c4663cb517cc9207c3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setIsInLibrary</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Entry.html</anchorfile>
      <anchor>a70dc72da336927b04a17344038fc43b2</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::EpetraAugmented</name>
    <filename>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</filename>
    <base>LOCA::BorderedSolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>EpetraAugmented</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>aa4b4b1c274cce15a14aa2bf530046dc7</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraAugmented</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a0278111995a982658d47580c9520e0f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMatrixBlocks</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a4d98d228dc5ea7e2d52cc8d1dc48e98e</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a0636d82e753c72c98f71455e9c4a3f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a76602ba738fa142c0cac471b95ea3005</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>ae288fbed196bed2b7568cb0b9f1ac880</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a09494f5166ac30b7e0f1fbef947294b6</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a5719770f003456749550df8317741908</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>ae3243e9113d1ccf1026764bfc7e6828e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a805fdf47f7b7eaf47d390231ee9927a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a967380e26913c0090df5b69db9c8aad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Group &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>af24cd806a94578bde87d3d1590ff4ca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>A</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a3139f65d88fd5c952949b96a47ce4ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>B</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a6b475a880643e38014a2d671329c73c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>C</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a7feeb67552664472c3e5a8646ea02c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterfaceMVDX &gt;</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a1e5c10eb9fc7078eff36e6ddab3e1a14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a8aefc73714decf5bb0118c667c1cb132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroA</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a220d0b0b1749e5e973db5130538cb2b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroB</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a46eb47e10bc5b26791a0a4e21f0e7a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroC</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraAugmented.html</anchorfile>
      <anchor>a6780c77863f74e6e38fbcfb0a2a76db9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::EpetraHouseholder</name>
    <filename>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</filename>
    <base>LOCA::BorderedSolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>EpetraHouseholder</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ae2fe14545be2049496e76ef6cbadb80e</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraHouseholder</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a3ca788ac33d671127669f29c58155654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMatrixBlocks</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ab412e6e428e23671fca04a05951ee2e9</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a60cd2f99d4a3a4d35b2105189199f13c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ab05faadcee0d2b3141f4be6a6f1b7d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ad19b9e5c20bafe4bbc52ed8f312498d8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a18e09c493247e019aebd6f78884b7cb6</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>af67a476410e3bd2947ff9d24e93a052d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a94120d40e892fd69c57021c12ffec910</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>PRECONDITIONER_METHOD</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ab9398e3e0419dd88627e9c447fd94266</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>aa5351f255444679b9322798fee70aae3</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a8a3f3af05a75b4b50b760dc5234bcb3c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeUV</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>adb7bbedf1e293b4d313342d6cfca596e</anchor>
      <arglist>(const NOX::Abstract::MultiVector::DenseMatrix &amp;Y1, const NOX::Abstract::MultiVector &amp;Y2, const NOX::Abstract::MultiVector::DenseMatrix &amp;T, const NOX::Abstract::MultiVector &amp;A, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector &amp;V, bool use_jac_transpose)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateJacobianForPreconditioner</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a088f3431979e6c335b24b6415dcbd21b</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;U, const NOX::Abstract::MultiVector &amp;V, Epetra_CrsMatrix &amp;jac) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>aa2b08ad20640b76d43c53ad3b1f65609</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a57d8bf21486421ec44e2da55161a7754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Group &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a9b1dc29dcdea82cb82c60ca262e600e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>A</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a3b4efefbae7174b8a6346be2e871ad36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>B</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a838f1eb4c20b033c333fc420eac7383d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>C</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>af9b00b23896f1a671b48811062685343</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterfaceMVDX &gt;</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>aa4014606b4f2ee94ddae1db9384ff578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::BorderedSolver::HouseholderQR</type>
      <name>qrFact</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ae9be40d7f5357af95b3170cdf6c5eb7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>house_x</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a7c642f333a4fd1ff1266b23e254d261c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>house_p</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>af3db81bf3335f586b2aea40cf320f1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>T</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a835c593033099b37b43c26ca7fbd651e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>R</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a2f316bd208225fb86a71c3b6b6b7c525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>U</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a4e62c38379f8e2e30636d435995da431</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>V</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>aa929bc2636fc21ba931bcdf73e766072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>house_x_trans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a8d2e87a1cb14ba8a9419f07e283e9598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>house_p_trans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a0c90937a58011f5932d7738648e96020</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>T_trans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ae4545f0242df8c35831608aea25cc0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>R_trans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a2b967314c3973492d3a886e7f152edc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>U_trans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a4626b31abe9092549bb539209f2004c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>V_trans</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a925c13546d81f8e543f24da0b252cc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>Ablock</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a1b77e742a64e6e0a8cff49a852ea182b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>Bblock</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a40b4bad8792e51045ac6145e9d1c1567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>Ascaled</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a60b14d181a0c4137b5e83ad163073db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>Bscaled</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a2acaf8f687fe908cf35844002ca3af0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>Cscaled</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a0f51242eee2661bf83a4abda71d4babb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>linSys</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ac3f57fbabc81f492e184bcdd7c7db712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>epetraOp</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>acb5e3630f75aa227ed523f75db779e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>baseMap</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a86dcfbf85844d4f149ca363ead767851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>globalMap</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a5c62117be50bd5f412fd439da998614d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a09b31278dbf518858a3888e1263ba828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroA</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>aa3560dfa36bdfa62f9c0596b14e02785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroB</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a514f6ab544c8127875e9353dbf4f5f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroC</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>aa37535aa358ea8c881db62d9993e9ffa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a3eb2697d589cf5f721705fdf8128ccb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ad2f23b42783e1b12db306a12c2edf347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; int, double &gt;</type>
      <name>dblas</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ac0f4a6b6bd904df92842f7d72dd6957f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_rows</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a28718fed61f2bf27d654bb7057c0f63c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>scale_vals</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>abae4b26079e0ab5baf01cdca2bd9aec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PRECONDITIONER_METHOD</type>
      <name>precMethod</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>acdfa2b7b0081eef53a9ee667a95beb20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>includeUV</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>ae0c3406acd8655deff3475387d5dd0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_P_For_Prec</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>afd8a94a7fa15730809ba77b4ef812a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a1154deb32b8842743e1ff12f314e4686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>omega</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1EpetraHouseholder.html</anchorfile>
      <anchor>a79a44a90621b11c16a14ff1ec85ffbf6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::ErrorCheck</name>
    <filename>classLOCA_1_1ErrorCheck.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ActionType</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>aeb35470817e367bb58c66ab3a99e9290</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ThrowError</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>aeb35470817e367bb58c66ab3a99e9290a95fbcfea92c4d7011e35c0d51e5e99d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrintWarning</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>aeb35470817e367bb58c66ab3a99e9290a2c146189dbfdf43d7a7af565a91b031c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ThrowError</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>aeb35470817e367bb58c66ab3a99e9290a95fbcfea92c4d7011e35c0d51e5e99d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PrintWarning</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>aeb35470817e367bb58c66ab3a99e9290a2c146189dbfdf43d7a7af565a91b031c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ErrorCheck</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>a37e4640304c59e3e31453f77940d4351</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ErrorCheck</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>aee1d5c6c97e5cb3ad80b89e961bfa641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throwError</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>a330f957dd8e788cf9eddfada45ae3c5b</anchor>
      <arglist>(const std::string &amp;callingFunction=&quot;&lt;Unknown Method&gt;&quot;, const std::string &amp;message=&quot;&quot;, const std::string &amp;throwLabel=&quot;LOCA Error&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWarning</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>ac06fd2e9cd96db258614014a3b57d3f3</anchor>
      <arglist>(const std::string &amp;callingFunction=&quot;&lt;Unknown Method&gt;&quot;, const std::string &amp;message=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReturnType</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>af54f6dd1e1c890e450ff88233d789c4e</anchor>
      <arglist>(const NOX::Abstract::Group::ReturnType &amp;status, const std::string &amp;callingFunction=std::string(&quot;&lt;Unknown Method&gt;&quot;))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkReturnType</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>a63a82000986e2dc3ecc6473e9da530fc</anchor>
      <arglist>(const NOX::Abstract::Group::ReturnType &amp;status, const ActionType &amp;action, const std::string &amp;callingFunction=std::string(&quot;&lt;Unknown Method&gt;&quot;), const std::string &amp;message=std::string(&quot;&quot;))</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>combineReturnTypes</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>a2a6269ad1f0d2cec97ffc8dbd448f93b</anchor>
      <arglist>(const NOX::Abstract::Group::ReturnType &amp;status1, const NOX::Abstract::Group::ReturnType &amp;status2)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>combineAndCheckReturnTypes</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>a31083da9ad92f253dacc36731c025d7b</anchor>
      <arglist>(const NOX::Abstract::Group::ReturnType &amp;status1, const NOX::Abstract::Group::ReturnType &amp;status2, const std::string &amp;callingFunction=std::string(&quot;&lt;Unknown Method&gt;&quot;))</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getReturnTypeString</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>ab706f2ed423148ad48f3e20f2a4df33a</anchor>
      <arglist>(NOX::Abstract::Group::ReturnType status)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1ErrorCheck.html</anchorfile>
      <anchor>a0493a5730c636ea61a9eed2b4fe84780</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::TransposeLinearSystem::ExplicitTranspose</name>
    <filename>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</filename>
    <base virtualness="virtual">LOCA::Epetra::TransposeLinearSystem::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>ExplicitTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a4b5584eae05a46353d38821b7fe0fbaf</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linsys)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExplicitTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a7e08b57c34867bab04b7fb3154c037e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>aaecb49751992b4ba1e5a082f9ffc0aef</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a7dc8c8368144e8a85d96999d490042a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>ac14363f515c5c5ba06e92cbc0a413e5f</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a9bf3502f69006c7ee68c7da953d9adc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a119d53d844ac0171395c73480b5fbe61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>abcf3e1c690040326cfbc1c9ae33e1317</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_jac_trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a282a73000829637750ff991e001aa435</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_prec_trans)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a8a213d6c58e20019cc769fa6bea338bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>linsys</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a2c0516a3fd47c838abcf9ee188e124ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>jac_trans</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>adbbb2e544c912dd694992105c1d62ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>prec_trans</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a7ad83c7938de21d446c51ebd6d0aa8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Scaling &gt;</type>
      <name>scaling_trans</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a4d75aeb439e6184173649d0bfd191c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EpetraExt::RowMatrix_Transpose</type>
      <name>transposer</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1ExplicitTranspose.html</anchorfile>
      <anchor>a7ae7dda056788b35802620d9d1813dd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MinimallyAugmented::ExtendedGroup</name>
    <filename>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <base virtualness="virtual">LOCA::BorderedSystem::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab95787e736ce3bbd0a7c7ed524e5f7f7</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pfParams, const Teuchos::RCP&lt; LOCA::Pitchfork::MinimallyAugmented::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a511f7f7e29a032c6d2c37e2eceec37e1</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad9cd63829eb8dfc4f0935417b38f335a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>afbe971b89de952eec09a8019c27ccbb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9ea2d8c4816d3ceac7baaf08241d327e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a38eccc41c85bc7fd1bf291083933b92f</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acb92d8db7f1a82a54a1c51f5e157608e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae810c431e689a3a846849eb1f7db05ea</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5ee7d487c905618802699ab4c4052d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a76aee8cbff64262b53a93846c80d56a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac913f178b703aa36d2010416b8930790</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95abdf68c2395cecf71d2240528ca715</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af9762be48e22002858ca82cfde748b3e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a053aca8d64ff299d1833e8c5b3c1dbe0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0cd50cd263dfb631772095e7995fed03</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adcb3c8e68d9199041002a5b9807e3704</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac01230c4223d83ac2c15660ae375870a</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a72cc077fed484ee852bd42a144b10464</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a431840c6ffcad7c7bd94fb886cec25d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a988b5124e2386b6d740a7a3227c392a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac5c98e02d446c4bfe3cabe5e5e8f1498</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a075761634466bc7e0aff14ec966a3eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8a9745a904d9ea557e4d87ca8ab02693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4f2d9fc510ef99ebed99760633a5d688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7dce749bfd98e6b5729c6734e5b1eecb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a32e9a84bf16287f113523b3e52fada9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3193aa9586c31308dbb75fd736a36b69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a944a12f01974afaa6d41a068cbca43b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aab175d4e529f813e045ed9bd1a67b257</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a788c6c5f48d8b179c12f08c3b677e4e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aab3a3c14e1a3300b33639089461627fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a459199b833bd4787daa619bbc0c6622c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aec895cced095245f698007d300fc8fcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a99dc8af5928168a7f453959d1519b39a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab59e22d3520462548eb0311ed3b27321</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af0e4ab763828a5df013dc08099f7150a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae67c4aa4a7b69c7f81553e638c43ff4c</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1528b621b7f8bb81558742aae8f6129</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a58a88c67bea41f35ebd88c60ffc2cf68</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0c8c44a8b9862afcba75a62d3fe75721</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1fac17318ea65c60783b61c2722fe1bc</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a16a006bd5421850d4f44e9e9a3cd2253</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adf04da3fdcd557ec5ab910d06a90fa35</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab4f373d79c8090257e3193c87e9e2a2a</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a04fc7cc0a6cc4349306c4c94c3463a16</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d6fefc8a817b0d960b5d34c26bbd1b3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae58894be0757ca818a3dba76c7ff2c45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a60d1037c8dc8ba2f3ba399b4a041ac8e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a779619da2f151563b864b0ffae264580</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a96a900084dc85250da058c2989491254</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a71f93f994db1b037ca539e523988f02f</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a37602b1468ef94c52f3c971f5d487255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1254f48992ab615b2ee3952c266f275a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae0248f7a870a5017682b55de95e7db68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab35d2971437e27916e4b73177fbea919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaaee7e5474f5eb2d456fe312c8eee6bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac722f38b8568e4b30ad8d7053cd6d8b1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a87218a53680f59b3d27c1330c06496be</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6be4b857aaa2ea3f2beef2b32c6d04f1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4db66652a08bc9b072199d6d321e544f</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aed87342c829766808697198359188f83</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af52490823d188cdf09760349caf58edc</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a74677c26f8847fadfb0067848d111749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ace7038637c5c0a15f1d8383cbff26559</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBifParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a93cfffb344580a5a566e0496df6ddfce</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInitialVectors</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8546afbdea745de0f9ad9de817457f0c</anchor>
      <arglist>(Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;aVecPtr, Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;bVecPtr, bool isSymmetric)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaab7eca8bdf308fda99c1948eb0c0919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae48a7421b7f0d2cffb1486fa3db75a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>pitchforkParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a277ec111812c8395ba78a9b4a3c9dfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MinimallyAugmented::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a096dbcdd2bbb7f0b22970446e3999f10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSystem::AbstractGroup &gt;</type>
      <name>bordered_grp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a27d262c2b455edc142feee3a9e821eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MinimallyAugmented::Constraint &gt;</type>
      <name>constraintsPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0f46bf34ed65220b9cb6952b1c7fd970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1fbb23a76f8204a31744c4f00982fc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8a0e8d265627bbb37e333356521229e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae7028c72bc7b44eac1c72514dbdafc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>gradientMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab3a881ab875e10739ef2638d9f3f1fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6018ef097e57b40c5686bc0ba4b24e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>psiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af9c171f502c3fc0450bf7761c3962517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8cb61316a0ab92e6200ce7601a8f4174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>ffMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af68221bcdbfb4d4c70e6a2281a447a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>dfdpMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95d6da168a695cebba3ad3face3c619b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>fBifMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7fd2eeca06d62760fbb6916fe399d711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acfd90c6eab6b27bdcfcd7626caf8d51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>gradientVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>addd64906f6ea731a8f4156e6e7c2a24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5e9cf1ab7498ad9d2a769dd93053aaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae6e83ddf6f8392438e724517c9375e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_dfdp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a25e8d3f3372d3c6474c3d6a5f1e926f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a11c0263074e3d2745191f59cbd1ec9fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7935558cba0909339f17a4e9741b048b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acb1392ea62a68dd5fefe5617c4b28c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a42f52a0a75ba064c98ad85fec5ca216f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa53c761aeb891292b47d7462e3692df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isBordered</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4ff4f16a798fbe2565fb2d3856cacaee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9ea2d8c4816d3ceac7baaf08241d327e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a38eccc41c85bc7fd1bf291083933b92f</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acb92d8db7f1a82a54a1c51f5e157608e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae810c431e689a3a846849eb1f7db05ea</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5ee7d487c905618802699ab4c4052d14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a76aee8cbff64262b53a93846c80d56a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac913f178b703aa36d2010416b8930790</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95abdf68c2395cecf71d2240528ca715</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af9762be48e22002858ca82cfde748b3e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a053aca8d64ff299d1833e8c5b3c1dbe0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0cd50cd263dfb631772095e7995fed03</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adcb3c8e68d9199041002a5b9807e3704</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac01230c4223d83ac2c15660ae375870a</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a72cc077fed484ee852bd42a144b10464</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a431840c6ffcad7c7bd94fb886cec25d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a988b5124e2386b6d740a7a3227c392a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac5c98e02d446c4bfe3cabe5e5e8f1498</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a075761634466bc7e0aff14ec966a3eef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8a9745a904d9ea557e4d87ca8ab02693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4f2d9fc510ef99ebed99760633a5d688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7dce749bfd98e6b5729c6734e5b1eecb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a32e9a84bf16287f113523b3e52fada9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3193aa9586c31308dbb75fd736a36b69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a944a12f01974afaa6d41a068cbca43b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aab175d4e529f813e045ed9bd1a67b257</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a788c6c5f48d8b179c12f08c3b677e4e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aab3a3c14e1a3300b33639089461627fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a459199b833bd4787daa619bbc0c6622c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aec895cced095245f698007d300fc8fcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a99dc8af5928168a7f453959d1519b39a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab59e22d3520462548eb0311ed3b27321</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af0e4ab763828a5df013dc08099f7150a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae67c4aa4a7b69c7f81553e638c43ff4c</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1528b621b7f8bb81558742aae8f6129</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a58a88c67bea41f35ebd88c60ffc2cf68</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0c8c44a8b9862afcba75a62d3fe75721</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1fac17318ea65c60783b61c2722fe1bc</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a16a006bd5421850d4f44e9e9a3cd2253</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adf04da3fdcd557ec5ab910d06a90fa35</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab4f373d79c8090257e3193c87e9e2a2a</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a04fc7cc0a6cc4349306c4c94c3463a16</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d6fefc8a817b0d960b5d34c26bbd1b3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae58894be0757ca818a3dba76c7ff2c45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a60d1037c8dc8ba2f3ba399b4a041ac8e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a779619da2f151563b864b0ffae264580</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a96a900084dc85250da058c2989491254</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a71f93f994db1b037ca539e523988f02f</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a37602b1468ef94c52f3c971f5d487255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1254f48992ab615b2ee3952c266f275a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae0248f7a870a5017682b55de95e7db68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab35d2971437e27916e4b73177fbea919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaaee7e5474f5eb2d456fe312c8eee6bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac722f38b8568e4b30ad8d7053cd6d8b1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a87218a53680f59b3d27c1330c06496be</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6be4b857aaa2ea3f2beef2b32c6d04f1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4db66652a08bc9b072199d6d321e544f</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aed87342c829766808697198359188f83</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af52490823d188cdf09760349caf58edc</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::ExtendedGroup</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8f578a88964070ac57d381354e7a35cd</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pfParams, const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a511668fd9420aad6f59b18d5e842d66d</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae4130dcb0dbf13d0cab3969ca8e48560</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0f2856bdfc30a1424a92e6173a3566bb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a69debbe3321de7426914a1bce5b5abcc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aab15eee9fbb074e4d10af65ae031936a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a09018d4c16af5fa77882a04bbd5e2f84</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0932ad73d377177de01d3393cc3906ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad0303c40aa9a31190e607da74d7c953c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a445651170f8f0a033ec0987974d2f1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5efccd7291d06ab6010d9332ad65bc45</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af0d41c7d7c1477bc58b09bca93b49eeb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa3d73e33b72654681ced202ed781bf9e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3edae3667bab6771fff563f05f75f039</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7e300ee6c8bb2969b9db6e85623c79c</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a89b4cf84d09e2ac58d59010e438371f9</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8f8246f097892a656b32aec801e9821f</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adc172a815c96abbf0f09f78cb8d52f2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a139b2004840cfa17466f4e58ea6def16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa781b93f84914180f4af7e6f22553af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad170e23ec336bd4dff039cdfae269bc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a13948f221cb72df950af8709ed4d8aa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a558b31f29eeac59813b0ea0fd2ec4942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0c5bcd6f09610293887fcbf301d0b39c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab15779beaf6f515772996fee7ec84595</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a50b7e9a1250989c54d606cc91478f935</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a10393e09ae64fec762ce41d2dc21b259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9a65ed1c2940a6fe373b0a5d030605ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a46a17587927499a503fa607bf6d2197b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a45fc2290454cfe391a1ce0a661e18a7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1d4fc0bf04b876f4353d07d4a687af89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac054cb30d0253f32a3113c943e5a71a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>afb0db676c100472cb35856e1073a0600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0f2856bdfc30a1424a92e6173a3566bb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a69debbe3321de7426914a1bce5b5abcc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aab15eee9fbb074e4d10af65ae031936a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a09018d4c16af5fa77882a04bbd5e2f84</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0932ad73d377177de01d3393cc3906ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad0303c40aa9a31190e607da74d7c953c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a445651170f8f0a033ec0987974d2f1db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5efccd7291d06ab6010d9332ad65bc45</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af0d41c7d7c1477bc58b09bca93b49eeb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa3d73e33b72654681ced202ed781bf9e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3edae3667bab6771fff563f05f75f039</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7e300ee6c8bb2969b9db6e85623c79c</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a89b4cf84d09e2ac58d59010e438371f9</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8f8246f097892a656b32aec801e9821f</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adc172a815c96abbf0f09f78cb8d52f2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a139b2004840cfa17466f4e58ea6def16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa781b93f84914180f4af7e6f22553af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad170e23ec336bd4dff039cdfae269bc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a13948f221cb72df950af8709ed4d8aa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a558b31f29eeac59813b0ea0fd2ec4942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0c5bcd6f09610293887fcbf301d0b39c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab15779beaf6f515772996fee7ec84595</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a50b7e9a1250989c54d606cc91478f935</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a10393e09ae64fec762ce41d2dc21b259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9a65ed1c2940a6fe373b0a5d030605ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a46a17587927499a503fa607bf6d2197b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a45fc2290454cfe391a1ce0a661e18a7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1d4fc0bf04b876f4353d07d4a687af89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac054cb30d0253f32a3113c943e5a71a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>afb0db676c100472cb35856e1073a0600</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a02c2c2b6cc2f257248aa8bfc701f5283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adf575df5f2131dd04c8402e14abd3afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>pitchforkParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a60099a5b8de4470cd26cc918880bbc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a54357021a010562cd3338c8755f7ada7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Pitchfork::MooreSpence::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab402e335ad358c17567236b5e7694907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Pitchfork::MooreSpence::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5ec0387678f6db397de6cc04f6d760be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Pitchfork::MooreSpence::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac1bfaabcf44eb56c6fe90089fdc8fa74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>asymMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9e4b2c9376d051ad089edd0b389d87bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>lengthMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7bd34f1388b4fdc0f48b3ecb7495656c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa3ce3bfae369143e097947349af57fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a80aeed5d33a70a9c5fc020e0ba352a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &gt;</type>
      <name>ffMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a105bc9a2c86212235bc056b4ba00aa4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &gt;</type>
      <name>dfdpMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9d82a2ca9ca7ebbea728785c43c3eb21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac76a18cd310a078304a1200c82fdf319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>asymVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a077b865733e1b8d198c3c1c45e426cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>lengthVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad3552d443a2e7ea503768c86c33c5450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::SolverStrategy &gt;</type>
      <name>solverStrategy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5778c631ae4095b8b62be29ca59fbab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9e958dbc79a641941346a852ef510111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_dfdp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a79b567518e6de5511a5ca0bd3c8e6988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2d5fe8197f4df04445cbc9c535310625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4c54b81eeecbd978795fdcdba9dfec29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a53d46cf51a35a53a727ac7179f45a420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a03e53d671000c215e2cbd04b71a36724</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae12cd5a726c490166a44455f56583fcc</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa4b23ca7dc92379472f325387f8e3e25</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a966354960f3fd5e17ae887edac1572e1</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a383d58508d7c4b4a8f0f3a6b26a5f805</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a54ac327659395138e0a45da9c6083443</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7f94eeebfa49c6545992079d6e60f709</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a474320a11a81f412b3ece7c6b3d44277</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a84143da057e07c0ac4e961efba0c2416</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab32fea11841b19e18fc8b7cc3ffafe06</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a882bd7abf93d6a7d1a01ba3bda04865a</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a34ac84ba73acccdc64d5ed8ead7bf57d</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9592202ac51618d9ea1dfb005133da1e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa690b23ece82b142cee6b9da0caa3782</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad8772ee4f762b528dbb818e202d497f4</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac1686b4cf18ea9f2cc266185a9c8b440</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a404f9f3783aff45d685350749347f099</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lTransNorm</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a450c774fe282091721a322d482ee3e11</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;n) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lTransNorm</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a998eb8d91386ca4e560f1c259bd2dc82</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;n, NOX::Abstract::MultiVector::DenseMatrix &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBifParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aba6f225b195569db14903020357fc2b8</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>acce6af97b5ddf614afd26b5f006e7ab3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a35109581c13f73631fc12dc54d450add</anchor>
      <arglist>(bool perturbSoln=false, double perturbSize=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MinimallyAugmented::ExtendedGroup</name>
    <filename>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <base virtualness="virtual">LOCA::BorderedSystem::AbstractGroup</base>
    <base virtualness="virtual">LOCA::Abstract::TransposeSolveGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4fa6bf9e7383dfb74b80165c63fd6c81</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;tpParams, const Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8beb7deff4fd5be1fafc6a4fbcaef4de</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4fac4cd57f9b1bd08127a53f7730d8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad86bb7c18a42d8a3e833e1b69bb8468d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getLeftNullVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa9d439c1aeff29a749223d78ae8da64a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getRightNullVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa0042ad268a6bbc1ee7bc8df8dc55e9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getAVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a689d0fbb7ca53b01aec77f3950e7682c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getBVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad8b9ad42f9a5a394a3e2b213c1930f2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa45e2845f638015df82b23085f7b5a4b</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aed52fe73dd25dc9dd98c31911e5ccd49</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2c8e5f0d8b5518fb8c5307bff6a426fa</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aee3a75bb34777ba6093326b8c15c4325</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a498e76c9d2bc624ee027c584bf02c596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a928ac25bb33d1776012da56ce2e4029f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9467d9377b5b1770c8f8de564418ab60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5f5adf96ebb54f61dc31470615990eeb</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6f5d719a245b20ef514072f06cea3567</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a91dfed98cf895800de198fe2136167b0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa2c12a1d471d853a32fcaff89b07b234</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8082b39b74904379549d7555e5cfb029</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7cdc98eb9af20bbbf5439442a3c4c1c5</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8c57ce6a754619237849b777f05f2c4e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad0351080eb48c63336f9662a795822d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad80bb2cbefbbb56abe53d37eb822a612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac398752990d111a9239ae849361ee3e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a51d692c13d71ea15994b21c725d05c08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adf9826b3bfe97e890bb91d54aac7a38b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae941c25258833b1b1fcd213ebe718ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5c35b75fa6e0192448e81af513f0464d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acc5f97423afa802e4498bd614e5a9ab1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac78cc3e7120b3113d04af25f1957674f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a330929b8a5c2feee406c12a81ac3c369</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9bdfb6a52d02c90159ffad30b4d76b9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a122a627f339ee2bad171547d85a23745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7e0897e11e6013b654b5bb582f7409c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af55d9733a82e137d2e94167d5b7c93c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac82e5ad85f3f9f074493a9da6892a6b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a379657cbe3d69d21a8a8e23783d1444a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2ccdd0ed858b5c49daf3cd7789e0e407</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a249fdc8557b61fd294ffd17ce7e03669</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d91c4548df144cb8c6ae12895a35d80</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2bb83e32c039064892df1feec3d231bb</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7f51482260d12d08d92364075d6b4a03</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a67dd52d2371c69124097f03b8f7a5050</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa226b79cc40f9ce1b4c10ae46f4e6f29</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aec31876506f7664bb9055978474f963b</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1be2bd00810aafe6bd7606317f7a8c5</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6f1015b160cdebf1a5e13086584ed53e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5e0b5255e43f499bc457edde3dec7b55</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d139090fd2e5bda8139a155c282a840</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af6c34e68833c0d7b1ef7fc7ea526f13e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa98b3c7bbad45df40e1b2c9b9970e4d4</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7ba22161ab77d91cfb030ef8dbd8cdca</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a211a56ac683357d0f341a85e425ccc46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a800985792585602603009bb7a3840bdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3373bd04a3586da6e1706017c0133caf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7a63201d1e94c140533acbb229a85974</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a81900f25e9143a4fa105e07d5f494554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2d069e690092e7fc978d0f19cae982aa</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4a57b6d1910860cf542ee1d30f3cb3df</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac49e3e158a0ccf8116584b7f8190b3dd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0230b941467a0cbe0c59c729fab7c88f</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aad394cbab78ad7b2c2c77cbd1d6ebf1c</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>afcd57b54117936615d8a42f6373970ac</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a664439b18c30420559e050edb2d96fc8</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acba6e9e74b539bec6c87133860984921</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBifParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9eee247c0ecad0e8bef15277c0e98eb4</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab8264618433a4a37b7b30b94690000bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2af885d35de6f508dc67da94ea4e7169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>turningPointParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa5e41bb1210f0d8c90ad741b486a1f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6279f1944fff966d91f3b7678de1f284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::Constraint &gt;</type>
      <name>constraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a179b3f253ec60da872eb5319ed81a43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ConstrainedGroup &gt;</type>
      <name>conGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac67f222ba20b8d1683e0766ebbed48b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>addbf3c48d8b6d5790cce24f0d7595803</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa45e2845f638015df82b23085f7b5a4b</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aed52fe73dd25dc9dd98c31911e5ccd49</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2c8e5f0d8b5518fb8c5307bff6a426fa</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aee3a75bb34777ba6093326b8c15c4325</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a498e76c9d2bc624ee027c584bf02c596</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a928ac25bb33d1776012da56ce2e4029f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9467d9377b5b1770c8f8de564418ab60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5f5adf96ebb54f61dc31470615990eeb</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6f5d719a245b20ef514072f06cea3567</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a91dfed98cf895800de198fe2136167b0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa2c12a1d471d853a32fcaff89b07b234</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8082b39b74904379549d7555e5cfb029</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7cdc98eb9af20bbbf5439442a3c4c1c5</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8c57ce6a754619237849b777f05f2c4e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad0351080eb48c63336f9662a795822d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad80bb2cbefbbb56abe53d37eb822a612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac398752990d111a9239ae849361ee3e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a51d692c13d71ea15994b21c725d05c08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adf9826b3bfe97e890bb91d54aac7a38b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae941c25258833b1b1fcd213ebe718ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5c35b75fa6e0192448e81af513f0464d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acc5f97423afa802e4498bd614e5a9ab1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac78cc3e7120b3113d04af25f1957674f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a330929b8a5c2feee406c12a81ac3c369</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9bdfb6a52d02c90159ffad30b4d76b9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a122a627f339ee2bad171547d85a23745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7e0897e11e6013b654b5bb582f7409c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af55d9733a82e137d2e94167d5b7c93c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac82e5ad85f3f9f074493a9da6892a6b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a379657cbe3d69d21a8a8e23783d1444a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2ccdd0ed858b5c49daf3cd7789e0e407</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a249fdc8557b61fd294ffd17ce7e03669</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d91c4548df144cb8c6ae12895a35d80</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2bb83e32c039064892df1feec3d231bb</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7f51482260d12d08d92364075d6b4a03</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a67dd52d2371c69124097f03b8f7a5050</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa226b79cc40f9ce1b4c10ae46f4e6f29</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aec31876506f7664bb9055978474f963b</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1be2bd00810aafe6bd7606317f7a8c5</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6f1015b160cdebf1a5e13086584ed53e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5e0b5255e43f499bc457edde3dec7b55</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d139090fd2e5bda8139a155c282a840</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af6c34e68833c0d7b1ef7fc7ea526f13e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa98b3c7bbad45df40e1b2c9b9970e4d4</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7ba22161ab77d91cfb030ef8dbd8cdca</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a211a56ac683357d0f341a85e425ccc46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a800985792585602603009bb7a3840bdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3373bd04a3586da6e1706017c0133caf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7a63201d1e94c140533acbb229a85974</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a81900f25e9143a4fa105e07d5f494554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2d069e690092e7fc978d0f19cae982aa</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4a57b6d1910860cf542ee1d30f3cb3df</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac49e3e158a0ccf8116584b7f8190b3dd</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0230b941467a0cbe0c59c729fab7c88f</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aad394cbab78ad7b2c2c77cbd1d6ebf1c</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>afcd57b54117936615d8a42f6373970ac</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a664439b18c30420559e050edb2d96fc8</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acba6e9e74b539bec6c87133860984921</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::ExtendedGroup</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <base virtualness="virtual">LOCA::Abstract::TransposeSolveGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>afecaf0e133f8aad2853e310edb8a8ed7</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;tpParams, const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abbc37ac143318e03c077e02c9a9806af</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2f986976eb4aab72bc1477df1971b4fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3c295f2696e4b501b7debf0162fa5969</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lTransNorm</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aba1d255007ac597d0ddb8fd733f8bfdb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;n) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lTransNorm</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adc59e3f8507a9bbf76294dfb7ff09527</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;n, NOX::Abstract::MultiVector::DenseMatrix &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getLengthVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a127177cb7d8610842c679ba7e99c26c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae2207ed3ebaf4ca7ce40371ea78a885</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3e211d72d10f5933ca9057f585eb0aaf</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adb00bb346e4853693a3bd8fb21555da8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa8982477a863d5276b0e158393a25f89</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3520d2b47a823f83a25cf79c89d664c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a1e8ecdda62ef9feef188b95ce4fe47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6843cd39e1523c0ffbdcd23cfaa71b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4a4164bae6038a79e7d7cad1ebcebf81</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a34cd7b3b076dde9d7c2601da999bed21</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8012061617e879a29a84d345d35c3fb4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af1e51381578d16c1c00c407c55e6f343</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2df15fee2c4a4c8f2a29151a1c6156f2</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1f017ef7dfc198ab1ef01bc6a0ed910e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a26c1021f3388e0c45997f2c79edd7c9b</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8fa00609c48fc625c13d3a8da46f548e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a06253f4b457cc9bf81565599255d3913</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0bbb8363783e0c35d91f811a1cb4b9dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2aaa00d1d58beb2191b04048f6059eae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a15cc60627f249d583d2c76ece07bfcf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9d873fb166453266f9d0f218b06da5e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5086df3edce54ada9de6b49dfd67150a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a413f4d63880b872106d996fc32e085cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3f568507b7d6678045232b09d812fd35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95340d4e6e67a87c17a5e0caacf13c80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a3db1fdb1e7a4c70be614ca6b8cb4e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3caa18a347ef50cca5fd715cd6dcb46c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a86e447e975c7bbf587b6d1f0a87780a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3e4981744e47650ac1a28c3d10cb5242</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa18e775c7ec7b9f920d99a3172a90718</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa91412c02489e7a1410d426425c89e58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8bdf0ca832052a96c8cf80401922b1d4</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>acfe13a666f1cd5b6bd99dc4595832c43</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6c884fdac3811a8a5ba0874c9a9cc250</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2ff3ecc860ff2251cda66f352c6bc57a</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a72c2db833a51cfc8bd301fee77dbe368</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2cfa5290cac8ebe376720a5f96ac78a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3ff5ad6c0532b24604c9b8f2967aff19</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a617d876fff8b4f619f1916e7ec7cc70a</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a781a0ff73918082d94d86611caf443a2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a179eb89be1d21638c535694940759b68</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a61dbf4168769b0f8aa27aaa270bb371f</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad8ec4d895e9d820ca67cdf02ef69d15c</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa1cc00d63c3a76759a99335b7ad75b95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5c0370fdf0d147f939b4e0119ac5369b</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adca3d175ad38ecbab281905d9c584e52</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5088f919b72d5ced568094178cf9cb41</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae3940eeb6569b5ed62f8fdcd2709d96</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>NullVectorScaling</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a169cae44e2adab802f8a6447bf1e99db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderOne</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a169cae44e2adab802f8a6447bf1e99dba7d890df02c06eddb2db802ea3978dc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderN</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a169cae44e2adab802f8a6447bf1e99dbade67aa64c5af9439f9a5184b4499a1f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderOne</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a169cae44e2adab802f8a6447bf1e99dba7d890df02c06eddb2db802ea3978dc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>NVS_OrderN</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a169cae44e2adab802f8a6447bf1e99dbade67aa64c5af9439f9a5184b4499a1f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBifParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a870735d53fa5df9ea478033b9d637a91</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab271f4a1db7b0e342737b8c98b3dce3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af122a6de21c49f2ec253351cf42ff03b</anchor>
      <arglist>(bool perturbSoln=false, double perturbSize=0.0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scaleNullVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a93d436df28548550beba72af6996269e</anchor>
      <arglist>(NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa592b14781404fbd2b17abeb51a03774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a109a65fcd68675d9d6c4e5e5cd647a09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>turningPointParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af6ae5558eb6fe373bdcb4a9906bde925</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a25440fc7a97d58feeb394b5f3cb9289f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::TurningPoint::MooreSpence::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac11c492bc651876c4c4fc0d08ed5286c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::TurningPoint::MooreSpence::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8e89b0f817f704bf85e81a7b111b1742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::TurningPoint::MooreSpence::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>acbe7473fed8b300f3580aae76686a268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>lengthMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a80592b5f675d7351f83e5a6854471213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3a1acd3779762a1f1f14b0f5e36d6ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2a4de59b664994552eca6777a5771c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &gt;</type>
      <name>ffMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a19c0297e15efcc6b3371c6e4bdc41412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &gt;</type>
      <name>dfdpMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a993f15201afb6adf612adc9d6da123b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a96face0830f00fcbd444db7f06065969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>lengthVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae2b6520d17eff391e8c89ebdd1e3ee2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::SolverStrategy &gt;</type>
      <name>solverStrategy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af02235c2ce38e7924de5fcb7fae54a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1d1728267d5041dac6c070833cf4566a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_dfdp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af7e03c9dbd954c96c741408f447514cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a504e170c422f7a921a932e510e86aa08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab03ac3a67b5d9745d1ba0067360bae90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af8b34a9c8a744bf97e735af666b0c372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a254b2625bfb50c75c9f2187dabc8efb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>updateVectorsEveryContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a861803287b028102336304664d42cef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NullVectorScaling</type>
      <name>nullVecScaling</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2ef143d53aa56a07ca7324cb81c4671a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>multiplyMass</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9d00504d25c670c8ced5bbe046a8907d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt;</type>
      <name>tdGrp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5e291a382eca4ae81c8504738c0fe1b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>tmp_mass</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a85f85cb1cbbd90c938501b44ecc80e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae2207ed3ebaf4ca7ce40371ea78a885</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3e211d72d10f5933ca9057f585eb0aaf</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adb00bb346e4853693a3bd8fb21555da8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa8982477a863d5276b0e158393a25f89</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3520d2b47a823f83a25cf79c89d664c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a1e8ecdda62ef9feef188b95ce4fe47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6843cd39e1523c0ffbdcd23cfaa71b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4a4164bae6038a79e7d7cad1ebcebf81</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a34cd7b3b076dde9d7c2601da999bed21</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8012061617e879a29a84d345d35c3fb4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af1e51381578d16c1c00c407c55e6f343</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2df15fee2c4a4c8f2a29151a1c6156f2</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1f017ef7dfc198ab1ef01bc6a0ed910e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a26c1021f3388e0c45997f2c79edd7c9b</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8fa00609c48fc625c13d3a8da46f548e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a06253f4b457cc9bf81565599255d3913</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0bbb8363783e0c35d91f811a1cb4b9dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2aaa00d1d58beb2191b04048f6059eae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a15cc60627f249d583d2c76ece07bfcf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9d873fb166453266f9d0f218b06da5e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5086df3edce54ada9de6b49dfd67150a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a413f4d63880b872106d996fc32e085cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3f568507b7d6678045232b09d812fd35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95340d4e6e67a87c17a5e0caacf13c80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a3db1fdb1e7a4c70be614ca6b8cb4e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3caa18a347ef50cca5fd715cd6dcb46c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a86e447e975c7bbf587b6d1f0a87780a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3e4981744e47650ac1a28c3d10cb5242</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa18e775c7ec7b9f920d99a3172a90718</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa91412c02489e7a1410d426425c89e58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8bdf0ca832052a96c8cf80401922b1d4</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>acfe13a666f1cd5b6bd99dc4595832c43</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6c884fdac3811a8a5ba0874c9a9cc250</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2ff3ecc860ff2251cda66f352c6bc57a</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a72c2db833a51cfc8bd301fee77dbe368</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2cfa5290cac8ebe376720a5f96ac78a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3ff5ad6c0532b24604c9b8f2967aff19</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a617d876fff8b4f619f1916e7ec7cc70a</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a781a0ff73918082d94d86611caf443a2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a179eb89be1d21638c535694940759b68</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a61dbf4168769b0f8aa27aaa270bb371f</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad8ec4d895e9d820ca67cdf02ef69d15c</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa1cc00d63c3a76759a99335b7ad75b95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5c0370fdf0d147f939b4e0119ac5369b</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adca3d175ad38ecbab281905d9c584e52</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5088f919b72d5ced568094178cf9cb41</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae3940eeb6569b5ed62f8fdcd2709d96</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MinimallyAugmented::ExtendedGroup</name>
    <filename>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <base virtualness="virtual">LOCA::BorderedSystem::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7397675c75476b1eb3a60aac4351d627</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;hpfParams, const Teuchos::RCP&lt; LOCA::Hopf::MinimallyAugmented::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae4fee01b85f5ee716d8b7cf94c6d9ef6</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a10378ea3f9073cf76a817abfc92aa4fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af8a3a138eea07b96a028ea161258ce70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac710da491e30c902e5bbc1f7db935323</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5b030893d29007e970848ff74de99927</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1becf85968a8efac58c4c40915099c21</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a480f8a2fb0f244f4588f52b18a1b836d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>afc2fb838c08fddfc76c7cedc0a677353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6b3367e5b048fef74c6db99e5b129488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7ae7fc785c7aefb8ffbad699930d774c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aecd794239ed87974c0df4e794485f8b0</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1b38b35ef627705bfc7017abe0715874</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3b74ca103d1b1fe065d78373b11d8656</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a69c9d1ffa21a2e823df39b9b7af1a909</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa862ab188d1220543aac258bb7e9d1e5</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7954715b61a3b61cbf307fe5e3d88ab7</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af48062df7b8da83e9db3bca42b29663c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad942235b39a6f97c277157f92840acc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae9c5f1887f74956cf5be43c400362454</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af7e42e9cced5385900293a45d0a61318</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acfe44c084a9597e73f85f2cb58f9db36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1f58cceb49b4bf4ebd053e1a87dc086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aacdc710c7c253f5ac903908aa661c1d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab3ba564932cc38d0bf92684e5ec05246</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9fbd697262776046b2d455eb2c798b83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3a7dbb541f1ad95ddc65aaa67016044e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac08d668c0db9f7a4bb50200a2f6733b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5ab6c337f358a43af7ee9dbbb815e310</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad5d99ae811193411294fe7d1010bf03d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a994ba24689c5d58dedae9b838e327be2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1c7e01e7f441a7ec82db3c452732e8d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1f88fb73b3d208794c8719e796193562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a34d6668462934c94d8b665209cf50de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac2cab2f7587419fb437691f29d14df53</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a417805999d03c07d00f5c4a8e1f7d19b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9ad135b5d38bb614510daaa6d70c98f0</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7653aede805732b7b92c09bb3fe4a64c</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adbf16379dd4872df4e8d35a1a73d326f</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae20a5adfaf6d5f3d0c1a1c81381a8b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a182e92cd7263f6c9f60b0a9868bcf862</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa0f4054ecd330f07ece219a80c40510f</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7ee2ae796b153de0d65e0e57f3bb3de4</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a710001a84a73a91c615d788f8a8becbc</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aee160f1bf7a66cb690e1549c2317156c</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa95b65e85d735ddeac45fcd1961922ae</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7e9a33217befbb525eb8d6d936bb0dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8543517ffc4889453f3bcfb459a0183b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1a0c211bd9712be1fbd059fe2374d85f</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a86e159e74ca7ff2b8b1fc902398b29ba</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac78ff4612a6a2d3ec1aa205afba72d0f</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a69c389a3a9cbc2294211b8abe54641d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>add8207a2cdf2a2111c97424c73827ee8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a803ef8725d9ab597fb7511a0406c3433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95fa4bf09234568f29c4c0180c97a259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a93f0b147c9b192346357acb55c1eeef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae2dedb735978ed6fc5c09d374d502b83</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aff1f23acc7a8be275143e63946e1c215</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3d6ab8cccbf115a5515ff4b119d11a63</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6a8abc77d65bfcd783f822c4244ae01f</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3d9def9f24568d3712f5205100e64434</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa9059761f41c072798a4fadcbbfe97c0</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1a1f6baa6e127722ddaf5634d95e857d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a922b9ff239f4309a250fcc8df16544d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBifParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a109cbe0322b196ec309d2a3e8bcfec14</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getInitialVectors</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae089964901e2e2be14e4413dec1e4cbf</anchor>
      <arglist>(Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;aVecPtr_real, Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;aVecPtr_imag, Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;bVecPtr_real, Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;bVecPtr_imag, bool isSymmetric)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab17a4ac1edf2aaae195aa8893cde2f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac1c6dbf2aa89f06b74e540848404ed91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>hopfParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a92d19196067cda003020da41e369b3ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MinimallyAugmented::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a07627618ace7995e104c3de3d6c0bf44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSystem::AbstractGroup &gt;</type>
      <name>bordered_grp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0e79a9489b5129dc6a7d5a9e2880f7d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MinimallyAugmented::Constraint &gt;</type>
      <name>constraintsPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acc650acf1d7248a7c5b9a2464bc67fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7f068721077f86b69ff29fd438d9674e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa1966f7a975c86cd816e6f049fb3d967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3b772132c55740e12b6ded4c63cdffd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>gradientMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae19e114dee79851ab19a2deecd45ea3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9a5d1da0a0a527e3919654b1731a1c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6d6f2d7cf22d6595fadd1e7835157517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>ffMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad5e542045aa046a02bf89ec42b9ed123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>dfdpMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a29389c88e772086587259145e943297e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>fBifMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7deda841f8949f9b7d1da2599e69309d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9ca4df4d6b80dee1a5ee17258eb16b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>gradientVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5168d37a9733d3efd4b61f07b2fb01eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acba858c6dc82ec0d0072fe5ca44c9a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af94da829f784e4c8ec1bc4c936965b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_dfdp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8543c7dbc2b9d78a5ce4cfe9bb988abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad508aa9dc368b6eeb9d356944a8b3647</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a54663c846e916079b2da5d0260199706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5aaadb07441fbba1dd187365471a8803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a907d0131a58ca0cce279cc727f7ae4e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a476ec55c74b0b7e7a554ad5a16e9589f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isBordered</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2335d131286845c9cbabe741e01eb8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac710da491e30c902e5bbc1f7db935323</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5b030893d29007e970848ff74de99927</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1becf85968a8efac58c4c40915099c21</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a480f8a2fb0f244f4588f52b18a1b836d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>afc2fb838c08fddfc76c7cedc0a677353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6b3367e5b048fef74c6db99e5b129488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7ae7fc785c7aefb8ffbad699930d774c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aecd794239ed87974c0df4e794485f8b0</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1b38b35ef627705bfc7017abe0715874</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3b74ca103d1b1fe065d78373b11d8656</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a69c9d1ffa21a2e823df39b9b7af1a909</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa862ab188d1220543aac258bb7e9d1e5</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7954715b61a3b61cbf307fe5e3d88ab7</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af48062df7b8da83e9db3bca42b29663c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad942235b39a6f97c277157f92840acc8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae9c5f1887f74956cf5be43c400362454</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>af7e42e9cced5385900293a45d0a61318</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>acfe44c084a9597e73f85f2cb58f9db36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1f58cceb49b4bf4ebd053e1a87dc086</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aacdc710c7c253f5ac903908aa661c1d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab3ba564932cc38d0bf92684e5ec05246</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9fbd697262776046b2d455eb2c798b83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3a7dbb541f1ad95ddc65aaa67016044e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac08d668c0db9f7a4bb50200a2f6733b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5ab6c337f358a43af7ee9dbbb815e310</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad5d99ae811193411294fe7d1010bf03d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a994ba24689c5d58dedae9b838e327be2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1c7e01e7f441a7ec82db3c452732e8d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1f88fb73b3d208794c8719e796193562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a34d6668462934c94d8b665209cf50de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac2cab2f7587419fb437691f29d14df53</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a417805999d03c07d00f5c4a8e1f7d19b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9ad135b5d38bb614510daaa6d70c98f0</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7653aede805732b7b92c09bb3fe4a64c</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>adbf16379dd4872df4e8d35a1a73d326f</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae20a5adfaf6d5f3d0c1a1c81381a8b50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a182e92cd7263f6c9f60b0a9868bcf862</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa0f4054ecd330f07ece219a80c40510f</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7ee2ae796b153de0d65e0e57f3bb3de4</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a710001a84a73a91c615d788f8a8becbc</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aee160f1bf7a66cb690e1549c2317156c</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa95b65e85d735ddeac45fcd1961922ae</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7e9a33217befbb525eb8d6d936bb0dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8543517ffc4889453f3bcfb459a0183b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1a0c211bd9712be1fbd059fe2374d85f</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a86e159e74ca7ff2b8b1fc902398b29ba</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac78ff4612a6a2d3ec1aa205afba72d0f</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a69c389a3a9cbc2294211b8abe54641d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>add8207a2cdf2a2111c97424c73827ee8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a803ef8725d9ab597fb7511a0406c3433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a95fa4bf09234568f29c4c0180c97a259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a93f0b147c9b192346357acb55c1eeef3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae2dedb735978ed6fc5c09d374d502b83</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aff1f23acc7a8be275143e63946e1c215</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3d6ab8cccbf115a5515ff4b119d11a63</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6a8abc77d65bfcd783f822c4244ae01f</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3d9def9f24568d3712f5205100e64434</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa9059761f41c072798a4fadcbbfe97c0</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::ExtendedGroup</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5e3431861fa0aa33312addfb39c392bd</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;hopfParams, const Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::AbstractGroup &gt; &amp;g)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abc0ae796ee2a7e1d30738f05bcfa86a8</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a82aa870d0c4ed4fcd4e344e42cf47412</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8a05dbd60e002bf087e1c516b7c5d820</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0812db357b2b0b7af1767e44c9415147</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a479027b05797002573b024253433f4d1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a03bee39f87c0fc0c63264a350345a8b3</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adda5627593ef2b50d619fc1a231ad274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abb89d119cbfca7acd3e59961fc693a4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac9f03cd276d8e2e797d7c67df822df7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a21d24139568277269138101d3b6b7d58</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d2afdeb0d3f738a723af6c1e1dff233</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aeadb1c9211cac202198e4331281caa15</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a921bd6e9a024543c92dcb2a78dda498c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a14151518dfaee2c0eca6a1571ab59344</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af673dda314a98a696f5b3f9e31293ce1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad6422a1bb581c7be22e253fb69b0cc26</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a976dc61de7a4acf5dcc4b907577fc83d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a82bf1f48f37b49b92773815db9c5ee41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1a5bf2638690ac65791bcd9932afc11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adce0206797d5d4f91c52ed98b13c2b21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3e5e4d83a4a9a97a180bec49c78a8e6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>afe646fd37f9cab970d2a8f4a0462ac6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0ff26f2180f1ec08dc277db9fd306bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac41707a1be20e483e7e5f41991c62b4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af26d0639e21e41beba1d43f7a031ac6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac3036240ebf7579ad27e764fec1a3b4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a604f062da7ebea4e5831a83b91a4de39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a164735661d4df73339eb114d5e667381</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8b55f8553f1a3d6874875a9f3c8459a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a77564ef3b115d8d0073a90833e752f3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a589915242e2fdaaba239bb029fd1d8b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abbfd68a4faf5158cb0962b0554bfe27a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8a05dbd60e002bf087e1c516b7c5d820</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0812db357b2b0b7af1767e44c9415147</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a479027b05797002573b024253433f4d1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a03bee39f87c0fc0c63264a350345a8b3</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adda5627593ef2b50d619fc1a231ad274</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abb89d119cbfca7acd3e59961fc693a4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac9f03cd276d8e2e797d7c67df822df7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a21d24139568277269138101d3b6b7d58</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8d2afdeb0d3f738a723af6c1e1dff233</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aeadb1c9211cac202198e4331281caa15</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a921bd6e9a024543c92dcb2a78dda498c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a14151518dfaee2c0eca6a1571ab59344</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af673dda314a98a696f5b3f9e31293ce1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad6422a1bb581c7be22e253fb69b0cc26</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a976dc61de7a4acf5dcc4b907577fc83d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a82bf1f48f37b49b92773815db9c5ee41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1a5bf2638690ac65791bcd9932afc11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adce0206797d5d4f91c52ed98b13c2b21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3e5e4d83a4a9a97a180bec49c78a8e6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>afe646fd37f9cab970d2a8f4a0462ac6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0ff26f2180f1ec08dc277db9fd306bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac41707a1be20e483e7e5f41991c62b4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af26d0639e21e41beba1d43f7a031ac6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac3036240ebf7579ad27e764fec1a3b4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a604f062da7ebea4e5831a83b91a4de39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a164735661d4df73339eb114d5e667381</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8b55f8553f1a3d6874875a9f3c8459a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a77564ef3b115d8d0073a90833e752f3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a589915242e2fdaaba239bb029fd1d8b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abbfd68a4faf5158cb0962b0554bfe27a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>acc58f85b14becdaa5287cfd2d5d9c9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a62822539b629192bc73b22340c180904</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>hopfParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abaa709d2483091e3a86b46d4c81701ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a709434a453077ec6089c6e7057644371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Hopf::MooreSpence::ExtendedMultiVector</type>
      <name>xMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adba111ece065a7a354605d7650db79bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Hopf::MooreSpence::ExtendedMultiVector</type>
      <name>fMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a91696c62a59c7c8f6a81fb4e8abb8682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Hopf::MooreSpence::ExtendedMultiVector</type>
      <name>newtonMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2f05ec0c056f6ff2747d117f4fd47a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>lengthMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2711b37f12be10e724b376115c225226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedVector &gt;</type>
      <name>xVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aba3cf37c429bc7e7241d98000bc18226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedVector &gt;</type>
      <name>fVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af56301f1717fe2201244fb4b1a81d06c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedMultiVector &gt;</type>
      <name>ffMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab78c17b58149388019739119a65f770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedMultiVector &gt;</type>
      <name>dfdpMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab60ddee05f8a35068bf7d6b6d23f52a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedVector &gt;</type>
      <name>newtonVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1b6386c96d1d6a6fa7a6e527a16baf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>lengthVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7163cf741ebf7eaaecf3fb10aaeaa3dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>massTimesY</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac0122d246cfac6ec551ec6a556e6df90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>minusMassTimesZ</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>adbbda242a6d49faa678c3ed671eed900</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::SolverStrategy &gt;</type>
      <name>solverStrategy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a535447c2e9bd6a8cefddfcac793c86eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_f</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae03914ea165311f873f30cfb5364cf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>index_dfdp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6469ba19bfe48f450a4d783378acd1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>bifParamID</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab9eff6e5d0cb3ec952d036be6e1b6f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9d30754be44b6b599e80246f2a7ed371</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae02a6d81894840ba375f0269caf66cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a58ecf7c236d61d977dd273da03832108</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a89289fd471a81a23dbcf71712890bbda</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>abea3fbee72b70a8d83675bc0a68bc990</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaf936debba4e16e9bcb5430c65aa6e68</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a015fef7884504cc6478498497322203c</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6fbb06f42695c2ad32ed76b5c9d0a043</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2f759a979bd0a4ec232a480840817667</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a55c5dd5c29a0cda8ebb62ceb01b7a6e0</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a06722e48cbefaae32884998cfb17436c</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad040597b46154993814ab81976104dfb</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5c57952901fb2fdf069fef63f7374c9e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>aad015d9eeda66d271b5ac09edc52a16d</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a94a704fc623e2d3c35066d41cc812ab1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7dcc64bb99712df2bc1d94e5d091deb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9b3dc74774f7ef644c34e719eb217af6</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5cb3fc0315f55d44fcdbfad9579326a5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2bb0adce140aef3a018c9f8d082f9bcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFrequency</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af234c8d0593dd6f84fc03ddead07e661</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>lTransNorm</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2583e5a3bc3478dc1043cf77e85daf89</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;z) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lTransNorm</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a52b797e6668c09f7a0c510c8121d0a49</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;z, NOX::Abstract::MultiVector::DenseMatrix &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setBifParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>af45bf0b5a233e2da64b266e97206c29c</anchor>
      <arglist>(double param)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupViews</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a425873857a848802f52b2ec6031fb26e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1a4d880e949ac230a12865ec5f6df26c</anchor>
      <arglist>(bool perturbSoln=false, double perturbSize=0.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ExtendedGroup</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractStrategy</base>
    <base virtualness="virtual">LOCA::BorderedSystem::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3f282dbb8bfe8259c1e0c29c9baa8398</anchor>
      <arglist>(const ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af810971fc6abd73acd41245f9ef266cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ace16fecb8718e72f7974ab11bd7726fb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1c26f7a671ab6a0d4f79201df5e44540</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a155b59f39a88fbf917a1f3521052121e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a51596b82e9c97318b6bd35d1662b46a0</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0d372ec561407f632d465de3f899caad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab71672f50cba0fdad5f3233da08f300a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a89e07279134b10dab906352efedf8a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a12aac54f720519d69a015d53e2d83281</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a95929382478aca78ecb0cd4f113739</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa51252b7c343fcd37b095afb9b023ea5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af40a77aa6baf0dcd70d7d8f64b31bc22</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa1f313d57f7fb453f202dd0b1bf09953</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a476423529ed6a1e4b842fc7ca08d3365</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a18a2b8dac117257e3e42927f875a7321</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab8ef0e93801fad0db8c03a290689c170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0c31ee8f02b6b6bf5ffba225a63deec8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a19e0b1125c3fcb715d361b0eab83051c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a17c5da25cecfb53e568de0cb57304674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6b033fec594f77a9f646fedd14484beb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a14273aa4116d75a502d6a9ed0df6dc7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaf7db56e801097849f9addd5e1922d82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac0d0bc252de755f4b92e8a1331311957</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a65865b5bb3df7a10d811db9394fdd530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9e3150f2c54e32175967b1aa1f7a2e92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3000dd9018941a966710078f71fd5d3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1bc9c52393d7a5c266c87497a7fa879b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab69542821b5c5ac80244a06725351d4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7bfbfb84da15b41db03cdc1709f7d2e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7e3523af3228fe3fcdeae07ba66a97ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a81c85825cabca78b11fd4349fa453684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a09faca4a08204c1205285e3e5f23a2f6</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af31baddecdd9a41da4be3abc190abece</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4e8b811025019f69eb92e8335ff0dd41</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a362d66f59433ae490297e3a2bc87d7e0</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computePredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a778fad061e83e4a27d5286a9e3212525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a905ccc0c1429fc4aa2250a9984cacd16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a66fea580172c6e080499adba22a62713</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPredictorTangentDirection</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad7d38c1da024477322dcb47eb46f6cbc</anchor>
      <arglist>(const LOCA::MultiContinuation::ExtendedVector &amp;v, int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const LOCA::MultiContinuation::ExtendedMultiVector &amp;</type>
      <name>getPredictorTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6a515f7bb3c35bd5d7dfc90aa04238ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const LOCA::MultiContinuation::ExtendedMultiVector &amp;</type>
      <name>getScaledPredictorTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a64c8252f336a6fa0c5ab337630c504</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPrevX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3c23a6e2f43f7c787b21deee930a6302</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const LOCA::MultiContinuation::ExtendedVector &amp;</type>
      <name>getPrevX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6fad8df9f503e0ccdc0358757d840a6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaba6e887244c560e9cfedc8925bdb592</anchor>
      <arglist>(double deltaS, int i=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getStepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9db1e382c2850fdce0255c9cf3788a68</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setContinuationParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6f9946718dda1eb9d9951dca3586e619</anchor>
      <arglist>(double val, int i=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getContinuationParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad7919248e1ddbaf768d077b50ba8e818</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getContinuationParameterID</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac0c21b33359183f76a45b8664eb02b46</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getContinuationParameterIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac12d29c6d1e07f1508498c385b6090d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getContinuationParameterName</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8b7c07908b046e290e53c52787788c2e</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getStepSizeScaleFactor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a35f5aca315e54d5e9d823ae3c0ae7a31</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8420f649000d0c9c8d18722d3bc9d826</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a55a94b403674d7ff9ad8e63d9032e2f9</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad26fd2f59163d0569a3570afb94e3126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4316e79dfe3bbceb6c5cd83141815ebb</anchor>
      <arglist>(const LOCA::MultiContinuation::ExtendedVector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9faebb178d8896020290133682d34283</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a260aeb837054c6394fb7447b4379b8ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af06906581dc0cd5dfe9b6170d281898c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a32d752d5a08f0959dec419bb915df6d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8efe1c5e24eaacea31c86e2cca106e19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a1b4624acf16c6635299aaf80e52c97</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac93667ed9722dcfd6518104b8898f141</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa2390d2bf1088eb7b9d8b0bad4c60ede</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a101d1dfe972931787b5295896df6a93e</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1755a47cdeed4dc7e42087061f129de</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a76f4f90c761761a079f9cff629c79b2b</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a90c700970a261853c276643a188f8fca</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;continuationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac7ae62d18dd87e6bb4ff8712ae97ca73</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt; &amp;constraints, bool skip_dfdp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a86f8f54401d74a5d2fd8cf69cb659c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4867cec600bf2b615c13d76eb2947c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>continuationParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa82e003320086e8d1870517dd5227098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8c8143ba1c966d9c612af2d5137c7e84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaa8b8eba022ff74a48e7f65d2a8e1fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ConstrainedGroup &gt;</type>
      <name>conGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>adf9620df9bb23f4581528bae39ecab3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a29b3a1b79eb2bb05295b971a00aa7215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>tangentMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8ca06abd23dfbca37a9004b1c56ae99b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedMultiVector</type>
      <name>scaledTangentMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5789cbea69baeb616c8915709ce418da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::ExtendedVector</type>
      <name>prevXVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5036abd369dd60ffcc5052c2b5d5b0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a118be6cd2aa71dcab151580d96cdf565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>stepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8bb1fc52176364fc11dc4fc8d68cae95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>stepSizeScaleFactor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3f8b9bf5bb6f499a7e158a47b01f238d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidPredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a075e7ea4d543f4b9c49763ca484d409b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>baseOnSecant</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>afe004af2c07bc200a000365c48dc3537</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ace16fecb8718e72f7974ab11bd7726fb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1c26f7a671ab6a0d4f79201df5e44540</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a155b59f39a88fbf917a1f3521052121e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a51596b82e9c97318b6bd35d1662b46a0</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0d372ec561407f632d465de3f899caad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab71672f50cba0fdad5f3233da08f300a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a89e07279134b10dab906352efedf8a47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a12aac54f720519d69a015d53e2d83281</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a95929382478aca78ecb0cd4f113739</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa51252b7c343fcd37b095afb9b023ea5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af40a77aa6baf0dcd70d7d8f64b31bc22</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa1f313d57f7fb453f202dd0b1bf09953</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a476423529ed6a1e4b842fc7ca08d3365</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a18a2b8dac117257e3e42927f875a7321</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab8ef0e93801fad0db8c03a290689c170</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a0c31ee8f02b6b6bf5ffba225a63deec8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a19e0b1125c3fcb715d361b0eab83051c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a17c5da25cecfb53e568de0cb57304674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6b033fec594f77a9f646fedd14484beb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a14273aa4116d75a502d6a9ed0df6dc7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaf7db56e801097849f9addd5e1922d82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac0d0bc252de755f4b92e8a1331311957</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a65865b5bb3df7a10d811db9394fdd530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9e3150f2c54e32175967b1aa1f7a2e92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3000dd9018941a966710078f71fd5d3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1bc9c52393d7a5c266c87497a7fa879b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab69542821b5c5ac80244a06725351d4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormNewtonSolveResidual</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7bfbfb84da15b41db03cdc1709f7d2e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7e3523af3228fe3fcdeae07ba66a97ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a81c85825cabca78b11fd4349fa453684</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a09faca4a08204c1205285e3e5f23a2f6</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af31baddecdd9a41da4be3abc190abece</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4e8b811025019f69eb92e8335ff0dd41</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a362d66f59433ae490297e3a2bc87d7e0</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computePredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a778fad061e83e4a27d5286a9e3212525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPredictor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a905ccc0c1429fc4aa2250a9984cacd16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a66fea580172c6e080499adba22a62713</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPredictorTangentDirection</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad7d38c1da024477322dcb47eb46f6cbc</anchor>
      <arglist>(const LOCA::MultiContinuation::ExtendedVector &amp;v, int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const LOCA::MultiContinuation::ExtendedMultiVector &amp;</type>
      <name>getPredictorTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6a515f7bb3c35bd5d7dfc90aa04238ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const LOCA::MultiContinuation::ExtendedMultiVector &amp;</type>
      <name>getScaledPredictorTangent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a64c8252f336a6fa0c5ab337630c504</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPrevX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3c23a6e2f43f7c787b21deee930a6302</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const LOCA::MultiContinuation::ExtendedVector &amp;</type>
      <name>getPrevX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6fad8df9f503e0ccdc0358757d840a6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aaba6e887244c560e9cfedc8925bdb592</anchor>
      <arglist>(double deltaS, int i=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getStepSize</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9db1e382c2850fdce0255c9cf3788a68</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setContinuationParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6f9946718dda1eb9d9951dca3586e619</anchor>
      <arglist>(double val, int i=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getContinuationParameter</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad7919248e1ddbaf768d077b50ba8e818</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getContinuationParameterID</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac0c21b33359183f76a45b8664eb02b46</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getContinuationParameterIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac12d29c6d1e07f1508498c385b6090d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getContinuationParameterName</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8b7c07908b046e290e53c52787788c2e</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getStepSizeScaleFactor</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a35f5aca315e54d5e9d823ae3c0ae7a31</anchor>
      <arglist>(int i=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8420f649000d0c9c8d18722d3bc9d826</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a55a94b403674d7ff9ad8e63d9032e2f9</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad26fd2f59163d0569a3570afb94e3126</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a4316e79dfe3bbceb6c5cd83141815ebb</anchor>
      <arglist>(const LOCA::MultiContinuation::ExtendedVector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getBorderedWidth</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a9faebb178d8896020290133682d34283</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getUnborderedGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a260aeb837054c6394fb7447b4379b8ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedAZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>af06906581dc0cd5dfe9b6170d281898c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedBZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a32d752d5a08f0959dec419bb915df6d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isCombinedCZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8efe1c5e24eaacea31c86e2cca106e19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractSolutionComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5a1b4624acf16c6635299aaf80e52c97</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector &amp;v_x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>extractParameterComponent</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac93667ed9722dcfd6518104b8898f141</anchor>
      <arglist>(bool use_transpose, const NOX::Abstract::MultiVector &amp;v, NOX::Abstract::MultiVector::DenseMatrix &amp;v_p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>loadNestedComponents</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa2390d2bf1088eb7b9d8b0bad4c60ede</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;v_x, const NOX::Abstract::MultiVector::DenseMatrix &amp;v_p, NOX::Abstract::MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillA</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a101d1dfe972931787b5295896df6a93e</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;A) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillB</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab1755a47cdeed4dc7e42087061f129de</anchor>
      <arglist>(NOX::Abstract::MultiVector &amp;B) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillC</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedGroup.html</anchorfile>
      <anchor>a76f4f90c761761a079f9cff629c79b2b</anchor>
      <arglist>(NOX::Abstract::MultiVector::DenseMatrix &amp;C) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::PhaseTransition::ExtendedGroup</name>
    <filename>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</filename>
    <base virtualness="virtual">LOCA::Extended::MultiAbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa83aec8bb0633b50355d27bedaa17ac4</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; gD, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;bifurcationparams_, const Teuchos::RCP&lt; LOCA::PhaseTransition::AbstractGroup &gt; &amp;grp_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae6db5664dab5835bd1b8bbc627738587</anchor>
      <arglist>(const LOCA::PhaseTransition::ExtendedGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ExtendedGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a036cf1cf0191ae63ea03a9243c90ecdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aae5656321de5e1a44349bc833f56c720</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa7543fcbcda062d1011b39503af88d3d</anchor>
      <arglist>(const LOCA::PhaseTransition::ExtendedGroup &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5bf6fbe26c7116fbf1b7c72972e465cc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac93eadb7fa70b039d1d3007bfedfcec3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac1c29c5fb55f90ff9189664569430b25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa2963d6b5ed4945ac23ee2fb3618cc68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a5e3e86284897baf02e8c7d28fbc0db73</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>af1cc7a28d8af8076ba282af4cc06ce28</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValid_F)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3499cf103ca78737dbe050f9dd50a859</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a011ffc9eccd3ffab300dad20503fcefe</anchor>
      <arglist>(const LOCA::PhaseTransition::ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a99900e0ee60d35112d5388399b8b7c44</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a47ee4323b6818899bf0b856c5e679ea9</anchor>
      <arglist>(const LOCA::PhaseTransition::ExtendedGroup &amp;grp, const LOCA::PhaseTransition::ExtendedVector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a97d29cd17affa5e744727bf29ecf8b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8b6d66e4bf587dd27e5564b692f247c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a168a0ff9acd5058e359e72e6756e932a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a61e7f1a84bbc06dc5aa369e1af72791b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1a1b595f3d7ed2e351351dbb09fea16e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aabf18bf891377b6b8c9732add3b7f3ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad421ea4174b1ff9deab204ac8bc69c0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aeba67c455873527d9d882ddf4fa33acb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a32e957dffb9f555b264d37f5c6843220</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>af041bbed78ab6f15a5fe5c24139eb258</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad943fb3bf40d935c7d27a847890f7fb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad7790a6ceabb88939c0b2623d45e322b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a07af51037dd7d0ae2172ccda9b8b6e9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a753ac0f58e9721d891d206e88955baac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a547f35a87be097b0c9385072e23b12e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab37ec536afe1dbf38e5b4f8d78143493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7c4a011fdc63092675c41e53a6731527</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6d0312ad8b366285e3fcd18c01315ccb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad73a25c01bcf75cab2523f82abe767c6</anchor>
      <arglist>(const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad4af4037aac405daca34b21ee5bcf9e3</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac885d4befee27f8e317ce4e759cf8818</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2a9cae3fc91ea93f1dfe656415083dc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae3b38708aca7e3c45e1bbfff2dd5a6c6</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a19155923269bb710515d6a8b5d4aef36</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3a8a09ccbfb305432e1bd190eccfafdb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;solution, const double param) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aedde18c4ef5974af8222fd644afe0e55</anchor>
      <arglist>(const double param) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae2aa5ba8119116a8ab7b825550dfb834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::AbstractGroup &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a061f55df47a6cac1d93d020006848df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>xVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa5746a0a6181eb6075b3ee7443fa101c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>fVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8ec492b4ef92d62e4470c637f40ff3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>newtonVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6448ea229c1d3a801f4229c1b31ff44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3499cf103ca78737dbe050f9dd50a859</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a011ffc9eccd3ffab300dad20503fcefe</anchor>
      <arglist>(const LOCA::PhaseTransition::ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a99900e0ee60d35112d5388399b8b7c44</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a47ee4323b6818899bf0b856c5e679ea9</anchor>
      <arglist>(const LOCA::PhaseTransition::ExtendedGroup &amp;grp, const LOCA::PhaseTransition::ExtendedVector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a97d29cd17affa5e744727bf29ecf8b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8b6d66e4bf587dd27e5564b692f247c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a168a0ff9acd5058e359e72e6756e932a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a61e7f1a84bbc06dc5aa369e1af72791b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a1a1b595f3d7ed2e351351dbb09fea16e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aabf18bf891377b6b8c9732add3b7f3ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad421ea4174b1ff9deab204ac8bc69c0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aeba67c455873527d9d882ddf4fa33acb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a32e957dffb9f555b264d37f5c6843220</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>af041bbed78ab6f15a5fe5c24139eb258</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad943fb3bf40d935c7d27a847890f7fb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad7790a6ceabb88939c0b2623d45e322b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a07af51037dd7d0ae2172ccda9b8b6e9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a753ac0f58e9721d891d206e88955baac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a547f35a87be097b0c9385072e23b12e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ab37ec536afe1dbf38e5b4f8d78143493</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a7c4a011fdc63092675c41e53a6731527</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6d0312ad8b366285e3fcd18c01315ccb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad73a25c01bcf75cab2523f82abe767c6</anchor>
      <arglist>(const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ad4af4037aac405daca34b21ee5bcf9e3</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ac885d4befee27f8e317ce4e759cf8818</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a2a9cae3fc91ea93f1dfe656415083dc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>ae3b38708aca7e3c45e1bbfff2dd5a6c6</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a19155923269bb710515d6a8b5d4aef36</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a3a8a09ccbfb305432e1bd190eccfafdb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;solution, const double param) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aedde18c4ef5974af8222fd644afe0e55</anchor>
      <arglist>(const double param) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>xVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>aa5746a0a6181eb6075b3ee7443fa101c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>fVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a8ec492b4ef92d62e4470c637f40ff3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>newtonVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedGroup.html</anchorfile>
      <anchor>a6448ea229c1d3a801f4229c1b31ff44d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::ExtendedMultiVector</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</filename>
    <base>LOCA::Extended::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a24fefbc6acde941711e0e409c0446952</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;cloneVec, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>afb323176160467944676d08322c8dc17</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;xVec, const NOX::Abstract::MultiVector &amp;nullVec, const NOX::Abstract::MultiVector::DenseMatrix &amp;slacks, const NOX::Abstract::MultiVector::DenseMatrix &amp;bifParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a89fa2b952748c5464e3bfd38e03da884</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a91fac6b7bf75b8dd491a48fa11db47b8</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a47295d5b89bd23547df91ea62ce898eb</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>afc77722f453159781684244b722c1e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a57c92ca019fb541ee774266603705725</anchor>
      <arglist>(const ExtendedMultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a88ab0a5927392d53d9a0122156321de5</anchor>
      <arglist>(const LOCA::Extended::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a497557de7d40008b8944e904d376eaeb</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a378ac7d07482e821159c74b0d8bb7adb</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>abbf5afe714ec4bd87319ce9b7259f962</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a00f52864c4a70387b82c818470b56282</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>abb1b679f9328f0d65fc7203352534875</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a45d4aa19356dd468941ef4654701f32e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a64caea4f7540854a85d05bc95944f00e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getNullMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a612c4ebf2977feec3411e3be764f2fb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getNullMultiVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a9661f3343cc7f4ae8edf34a8e686fc8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getSlacks</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a671fee379c6175901c0b378e95825ab4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getSlacks</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a49df078c55a015edf7c15fbc9c75b71d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getBifParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab257b3c92d0de33a37b41b2b2b9e6072</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getBifParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a89fc5e51bc515cb47efac5172fe020d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a5d5571f3b25502558da0c353a8b8038d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::Pitchfork::MooreSpence::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab636c49a15fec38d14addd5b900a4d4a</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a507674f75a68d9a70decc8122587a5cd</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>abe7f146a575b30a7524dfaa84739beab</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a397937a747aba73aff250d60c13764a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::ExtendedMultiVector</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</filename>
    <base>LOCA::Extended::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a83795ff83a4906b52fb58d78f060fc4b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;cloneVec, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aeec4e5bcb22c842890bf6ede03015d3a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;xVec, const NOX::Abstract::MultiVector &amp;nullVec, const NOX::Abstract::MultiVector::DenseMatrix &amp;bifParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a32f35e4ed1a8832d6598e25dc3939f31</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a29c7caeecd6cfcda63570ae59dee5ac2</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aa2f0c030588402983c40a73713e2a429</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a44689b88ffd8e99c51c289de28b2a708</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>af47a9f089386e8e6896e322e38dbba80</anchor>
      <arglist>(const ExtendedMultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ad6605c353f47c4e3fdebade3d08316c6</anchor>
      <arglist>(const LOCA::Extended::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a276706f1876eb4a795c9f1f1320ac525</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a26855b8175bf209cb490cc757befad80</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aec1014fc4528ccdf329a9e35ca4d1b18</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a10f0945de9b5e9b7ead05d901a776392</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a9618d2e87b18550ec5617454687da9f2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab67e6a6eb277eaaf368e84370d7a2654</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ae7201a8a6eef2667e1929b7ffde56659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getNullMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a2aedca270b585c61baf5d89df03145ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getNullMultiVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a0d5becab098144613fa4aec37946576a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a4fb0cb9d9c1cacb3062cfd4c513f0e2d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::TurningPoint::MooreSpence::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ae51819bd5f6e654b9b8a61434c2ae442</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a0787bef27589df2bfdad96ee693da129</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ae3f2447e519ada8f74f307315fe57281</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a397937a747aba73aff250d60c13764a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::ExtendedMultiVector</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</filename>
    <base>LOCA::Extended::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a4757c7e9c3ee382b136dd5ab13d4c441</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;cloneVec, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a7d3f94db1e6443789e2ac5afd0dbd849</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;xVec, const NOX::Abstract::MultiVector &amp;realEigenVec, const NOX::Abstract::MultiVector &amp;imagEigenVec, const NOX::Abstract::MultiVector::DenseMatrix &amp;freqs, const NOX::Abstract::MultiVector::DenseMatrix &amp;bifParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a82df0f38baddfb1177b4ae5e09c804e4</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a17cb933518fa4f6fb99ffedbed981985</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab90558955b1edb6a6b6d068c670ec1f1</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a8da4ae5d9b830c67e3076d2abbcd5e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ac652b973b50bf19b470313bcff70ba96</anchor>
      <arglist>(const ExtendedMultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a6db70fbc13a6b64a7a5697f4b13de2f3</anchor>
      <arglist>(const LOCA::Extended::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a02636823d163ff95099804c49426ab88</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab62166b5ed99c4bc062bcb4f4c0a93dc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aaeae6bdebf3d383f2a1deab5fe18b4f8</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a38ec8929be16b2c6904c896435407fb8</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a18f239afeeaa18ad1edaba2780ba0d3a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a9fabf2afe0b20001f22d67a3b88611af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a83ce50ac87239cf8fed4a68f5177f53d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getRealEigenMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aa117af17f9f2f2ff428a5140aa0b5381</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getRealEigenMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ae80cc292931b0a6e141e64f058c87e8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getImagEigenMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>af4e2971139a4ad5b8dbc26d1d465f868</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getImagEigenMultiVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ac46862df48aa9bc937592c28206243db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getFrequencies</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a76475f8d244859550d9fdc23d408ea12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getFrequencies</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a94d3d89b3bedaf7b14a34b4d5b740a23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getBifParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>af83d7e256d8a3c0531757b68db69b6bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getBifParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a91cfa03e98a268003bc08a8df49dc8fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a3390e0a9ab0bf0f512b931226b6e9cbd</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::Hopf::MooreSpence::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a813d2ad8a4a0943d8ef772c79e8683ca</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a8ae774c3b5d599ed3df31c7013ddec17</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a2c3ccce161121c4c1dc4fcb229dcc3d5</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a397937a747aba73aff250d60c13764a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ExtendedMultiVector</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</filename>
    <base>LOCA::Extended::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ae1b056f89fb8f1f8e5ff00fbce6d8691</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;xVec, int nColumns, int nScalarRows, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a0c21c4471fc9eb6d365aa4ea7f809ab3</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;xVec, int nScalarRows)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a937e76dfae6bbf7505944107f7491054</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;xVec, const NOX::Abstract::MultiVector::DenseMatrix &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a135bb5eea6c1f999fe3cd1aa59b0bf00</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a5d27cb5685981fd59055e9719d8e9d16</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ad8a1f9835fe5e1bd4750e44170a7e101</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a2b69fc035ecc17bf7eb6096d583ef930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a0c15cf9600b02fd84557a94e216fc2a7</anchor>
      <arglist>(const ExtendedMultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a046a55e318a38209f648b9c18f9c175d</anchor>
      <arglist>(const LOCA::Extended::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a4bf17df9553cdc793a80c155e6529c8f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aabf474d3b7c6dff72cab46256d595d47</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a02c4040b4b663fa25eccd734b4f26fd4</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a4cb5f74110eb921f433ab14283818c7d</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a59d198b8fb93c21d626ab3bc59223a66</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>af500a6529cf3fa6877e8174035062137</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ae593b7f25080b8f25c0cddc107cea85a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a297b4a92d55e1105b6803b06da5314f4</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns, int nScalarRows)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a1e9778be14fdf7e48c152943892bc88c</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a397937a747aba73aff250d60c13764a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::PhaseTransition::ExtendedMultiVector</name>
    <filename>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</filename>
    <base>LOCA::Extended::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a79caee35e24e6e85cd320473f7188d0f</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;cloneVec, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a0c6c61a2af43e5e11d64c2513a0cc97d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::MultiVector &amp;xVec, const NOX::Abstract::MultiVector &amp;nullVec, const NOX::Abstract::MultiVector::DenseMatrix &amp;bifParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aeb93ef3c634f4c0b1a765fee540d62c4</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a40a1114bd2338ae47bb5809ac6f97eca</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a5a9e37c382de6e0c90ad4f8fc099e514</anchor>
      <arglist>(const ExtendedMultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a17e39842a596ee96e9fcf4efd855823d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a954f1da4d31c80f1ab591da7f8b52cfb</anchor>
      <arglist>(const ExtendedMultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab5fd81989af8b438bb0bbffb89339cec</anchor>
      <arglist>(const LOCA::Extended::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>abce514eb094ca4aead696e14cad05a60</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a2160bb5ed2db0d95c14f7e5269767ff1</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ac090712aea50158324fb68b5fc16132e</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aa106b71cbcc4eae21ae7dae0d4b6f90e</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a62fa9ff3258cfea8485701597a3101ae</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>ab1fad6b38be24669759c0fcd83333917</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getXMultiVec</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>afcf2b0fe3c28af8ac2c28377e8446d58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getNullMultiVec</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a7bb36349f12cbee42dfba1632aa706ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getNullMultiVec</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a7d2fff985501ac48c09243fdc107be6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>aa68c18753e91d7d4e4e246fef61b4727</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::PhaseTransition::ExtendedVector &gt;</type>
      <name>getColumn</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a7ec1958fb0c4b24efed261653b19247b</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a1e6c4e70584d4c441bc4bb776a158870</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a06bb4709808de391dec21ebed76d89eb</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedMultiVector.html</anchorfile>
      <anchor>a397937a747aba73aff250d60c13764a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::PhaseTransition::ExtendedVector</name>
    <filename>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</filename>
    <base>LOCA::Extended::Vector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>ae2d5f37803373c3a91d9f3b465d168e7</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;x1Vec, const NOX::Abstract::Vector &amp;x2Vec, double ptp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a68541c3e7d145022be8f74e9d25349d9</anchor>
      <arglist>(const ExtendedVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>abb2ef59bfcc4c4455b7b26160ba0f641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>aa77ed49015013fc4b17f7c7e3d2b704f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a3de0780e4f926856a8790c913ddac1da</anchor>
      <arglist>(const LOCA::Extended::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a9ebd503864aa7e93497da82ac34346f3</anchor>
      <arglist>(const ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>aa379539222acf346cbca6b012c4fd769</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVec</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a8d0db5fcebda9e735c47856b31c37f05</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;nullVec, double bifPar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>X1</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a969e21cea1a776a6a7feb36c7a7ace13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>X2</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a37e01b5f2a1d4ee5907556869416d9af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>PTP</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a766e96e2d9b369df34209db1a4a614ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>X1</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>ac67b931f283b758eaadf9cabb3f253ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>X2</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a404c3dc2932ed3ed745374b420c2821d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>PTP</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>ac98cdb40869ac42dd889d4142dab9911</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a8b662868b1463684702e0566caf137c6</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>a3a67f91b26903ee03780186e3861a80e</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1PhaseTransition_1_1ExtendedVector.html</anchorfile>
      <anchor>aadf779e238a9b7b7ad17d8dfcc55fa10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::ExtendedVector</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</filename>
    <base>LOCA::Extended::Vector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ac294b800be1ef4182756df41b41b1d96</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;nullVec, double slack, double bifParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>aece8c2c3409e7e8bba0c0b6ac8361880</anchor>
      <arglist>(const ExtendedVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a9c75b54efb769bdbcd67be939ee03060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>afd1091c81dbb35d0bf3b1da562a97804</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a98e4a90ece3b66008128d9c6553fd116</anchor>
      <arglist>(const LOCA::Extended::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a57ad5ba43ae926005345d2464d2a89ea</anchor>
      <arglist>(const ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a56367a470a70c38069b1b2728657c93a</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a4a99a92d3bac8176068339a6d2c5c6fd</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;nullVec, double slack, double bifPar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>af40dad2593b87db5a15a0b9c721105ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNullVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a94c04f3bdc6d82626c14aaa03869aa1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSlack</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a01836188b237b364660eb7a05a78edd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>abccd7e8188f61834f098f6ad1ab8cbfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>af8e45d5eadc1ec18812ef7cd6099eb4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getNullVec</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a8e4dee48241ee50012385c12c20a048c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getSlack</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a29b8d04e7211a204dd1b68ea9435a6e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ae2595441185c4ca9cc710225083348ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>af381620d223592d1161f9dbf9878d784</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a877b500d9fca7933a4b8be88d8878bfa</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>aadf779e238a9b7b7ad17d8dfcc55fa10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::ExtendedVector</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</filename>
    <base>LOCA::Extended::Vector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a6367877b9b76f0de8b895ef81e57eecd</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;nullVec, double bifParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ae4e4cf64b21c0e1db78088d13f7a5559</anchor>
      <arglist>(const ExtendedVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ad608557ec8e22458a5acc218e75e870f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a76cd823fd5b77460b1adca6323109667</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a7852eb888357a34981da7e1cdf1eedfd</anchor>
      <arglist>(const LOCA::Extended::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a19d4eaff182e84597116295dd3316c5a</anchor>
      <arglist>(const ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a4d7068acf65c443fc99dfd797422e8dc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a5e0edbe74cde8786981e18ff2622fcd6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;nullVec, double bifPar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>aec9011a5076454243a3935535262cacc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNullVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a4c80974e3fef14e3a3f9ba803e93a3a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ad108eddb8cc903ca91d9819a40efa12e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a4ad606e971d78776a97a8b5f12938339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getNullVec</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>aa6f3caa9102e77eab231b8856ce259d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ac4c381ea3d0b0d5b4235d94c392aa2d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a7496f86f14a17fe29e410db04b049d24</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a151199ea3369d39a2d805217146db514</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>aadf779e238a9b7b7ad17d8dfcc55fa10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::ExtendedVector</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</filename>
    <base>LOCA::Extended::Vector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a1f498bee349f85a61d8b92e23fc3fb7c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;realEigenVec, const NOX::Abstract::Vector &amp;imagEigenVec, double frequency, double bifParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a435bd1e3985db158e872e1c1fee04e7c</anchor>
      <arglist>(const ExtendedVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ae73f2fea0d96961106c4e682087fb6de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a0527da6de449b4ed601554d1038d9ead</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>ae947abbfefe99264f053e8694f472a14</anchor>
      <arglist>(const LOCA::Extended::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a127c1f3680686839bbe75f4c0b2cae2a</anchor>
      <arglist>(const ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a8e53d47d322b1193a2378e363b3b95e8</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>af53319b6745bd9d36f7de73cfab2d77f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;xVec, const NOX::Abstract::Vector &amp;realEigenVec, const NOX::Abstract::Vector &amp;imagEigenVec, double frequency, double bifPar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a8e9fe03723638c249e70740185bf20db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getRealEigenVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a68b99224c1be9776e0488a31b333da7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getImagEigenVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a99cca84ac2c71c0ff7cd6b110f322f13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getFrequency</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a4dfcc6d9134fdfad4ec4b176ad807e95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a6a5be6feda1e285cb16526b91a649d9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a14014f1f79796af5a5b8aba749f798b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getRealEigenVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>acc0f77585dee8eb5720b075ee40466f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getImagEigenVec</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>adf74a95b6f3e813fe498abf81770ec03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getFrequency</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a182e574ca8283150b1b4f3b1b4332991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getBifParam</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a8dd2005622b1826cb94fc0253d64c5e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a557dc0e508b89c2b24d20f599ec37462</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>a40e8669ba912c1d9f8fe3515dfd6122f</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1ExtendedVector.html</anchorfile>
      <anchor>aadf779e238a9b7b7ad17d8dfcc55fa10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::ExtendedVector</name>
    <filename>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</filename>
    <base>LOCA::Extended::Vector</base>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>af42178459ec6b209cfd19e40eb4207f1</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Abstract::Vector &amp;xVec, int nScalars)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a609397430741db28182b570e9432da90</anchor>
      <arglist>(const ExtendedVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtendedVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a19911d88dfaebb5b5d26a32f680fc35d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ExtendedVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>affefd7838d0e8233767d3202bce35b12</anchor>
      <arglist>(const ExtendedVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Extended::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a2397902c7ea309275c34282bd1697f0c</anchor>
      <arglist>(const LOCA::Extended::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a24d53a638487020a14c1f3986791ce82</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a3cc44325bf91e89aec138031fdcb5f85</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>ae11a752f7d668f18340a9dccce77ce4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getXVec</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>adc2976e62c4a75e2471fa0cf03e5d5d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ExtendedVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a11c33803a7fb2055aa9dfdb3ca2e6adc</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nScalars)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>a3eb36ad1bb7c79427c43ef3db1e01d98</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ExtendedMultiVector</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1ExtendedVector.html</anchorfile>
      <anchor>aadf779e238a9b7b7ad17d8dfcc55fa10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Abstract::Factory</name>
    <filename>classLOCA_1_1Abstract_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a43d4efd5f7f4801f0cd871e053394d30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a20ba1f1274c5b887a779c1374646b72e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>ab45050f4ffbee9e21c507ccf06225a15</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createPredictorStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a18792eb062c06007baf3affc04539744</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predictorParams, Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createContinuationStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>ad9b9b53cb53b3ee300f339b7c58e9f63</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepperParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs, Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBifurcationStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a4e6ee2c6f7665a47be9ba87b89dc99af</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;bifurcationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createStepSizeStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a48df626a5b3f39f29608af14609de43f</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams, Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a035f8a53cc468eff80d1e9a1df43f00b</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createEigensolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>ac6040ed84efaaa1c0200aa4803061b68</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createEigenvalueSortStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a59bb6e21a45543910be97d66020dbc79</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createSaveEigenDataStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a50928829988b024a1dc596731b48ac8b</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createAnasaziOperatorStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a6b1388ee0a9fa69e4d64b2941eaeeacd</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createMooreSpenceTurningPointSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a80102358e2512be5d00dabfb670b23d5</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::SolverStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createMooreSpencePitchforkSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a7f04c7c940608a24bd77a5a5f40fab30</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::SolverStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createMooreSpenceHopfSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>aa90d8bd91896e0ad370fc55d27ea2711</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::SolverStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createPredictorStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a18792eb062c06007baf3affc04539744</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predictorParams, Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createContinuationStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>ad9b9b53cb53b3ee300f339b7c58e9f63</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepperParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs, Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBifurcationStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a4e6ee2c6f7665a47be9ba87b89dc99af</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;bifurcationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createStepSizeStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a48df626a5b3f39f29608af14609de43f</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams, Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a035f8a53cc468eff80d1e9a1df43f00b</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createEigensolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>ac6040ed84efaaa1c0200aa4803061b68</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createEigenvalueSortStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a59bb6e21a45543910be97d66020dbc79</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createSaveEigenDataStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a50928829988b024a1dc596731b48ac8b</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createAnasaziOperatorStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a6b1388ee0a9fa69e4d64b2941eaeeacd</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createMooreSpenceTurningPointSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a80102358e2512be5d00dabfb670b23d5</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::SolverStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createMooreSpencePitchforkSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>a7f04c7c940608a24bd77a5a5f40fab30</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::SolverStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createMooreSpenceHopfSolverStrategy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Factory.html</anchorfile>
      <anchor>aa90d8bd91896e0ad370fc55d27ea2711</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::SolverStrategy &gt; &amp;strategy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::Factory</name>
    <filename>classNOX_1_1StatusTest_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a8c8d544e69e807a34407e7caea7abb32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a255f2d9fe1a2a681da4488b100598fe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a1bf30472ec2c985e7d97d49b893b02f1</anchor>
      <arglist>(const std::string &amp;file_name, const NOX::Utils &amp;utils, std::map&lt; std::string, Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &gt; *tagged_tests=0) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>ad1cb2a7c3cabc35e99449bb77661f8fd</anchor>
      <arglist>(Teuchos::ParameterList &amp;p, const NOX::Utils &amp;utils, std::map&lt; std::string, Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &gt; *tagged_tests=0) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>aaf9f5c875fec48c3b87930c5c2c0655f</anchor>
      <arglist>(const std::string &amp;file_name, const NOX::Utils &amp;utils, std::map&lt; std::string, Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &gt; *tagged_tests=0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>ab40e175bdcbf2b4506ca899b990ce62d</anchor>
      <arglist>(Teuchos::ParameterList &amp;p, const NOX::Utils &amp;utils, std::map&lt; std::string, Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &gt; *tagged_tests=0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a48b42486a50ced34f87924c68ae1a9ef</anchor>
      <arglist>(const std::string &amp;file_name, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; &amp;globalData, std::map&lt; std::string, Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt; &gt; *tagged_tests=0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a91e6c0dd762a120a83dc93063593424e</anchor>
      <arglist>(Teuchos::ParameterList &amp;p, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; &amp;globalData, std::map&lt; std::string, Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt; &gt; *tagged_tests=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SaveEigenData::Factory</name>
    <filename>classLOCA_1_1SaveEigenData_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1Factory.html</anchorfile>
      <anchor>add429b742c1fb1e44292f99e246fa3d0</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1Factory.html</anchorfile>
      <anchor>a16b61b4f1f9ace3610fa8b027bb2fa25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1Factory.html</anchorfile>
      <anchor>afb6df2727938b538b88081fdc06c38e0</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1Factory.html</anchorfile>
      <anchor>aa19e73d85fce56eb4776206a8b324bba</anchor>
      <arglist>(Teuchos::ParameterList &amp;eigenParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1SaveEigenData_1_1Factory.html</anchorfile>
      <anchor>ab8ab9deb493aaabb921dc798f8518020</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StatusTest::Factory</name>
    <filename>classLOCA_1_1StatusTest_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a59d047ab1e86950bce0b16bbd917df45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a305bd74ea18fe3846a195203968e7e4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>a7a5e05336abbcf97e6bd85eb9090d2e7</anchor>
      <arglist>(const std::string &amp;file_name, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; &amp;globalData, std::map&lt; std::string, Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt; &gt; *tagged_tests=0) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt;</type>
      <name>buildStatusTests</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Factory.html</anchorfile>
      <anchor>abe2e49d11592883a86ff357d3c283272</anchor>
      <arglist>(Teuchos::ParameterList &amp;p, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; &amp;globalData, std::map&lt; std::string, Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt; &gt; *tagged_tests=0) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StepSize::Factory</name>
    <filename>classLOCA_1_1StepSize_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Factory.html</anchorfile>
      <anchor>a291c312d253806ee99cc97401a46b61d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Factory.html</anchorfile>
      <anchor>a38fb61a34477762aff0f13683cc01742</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Factory.html</anchorfile>
      <anchor>ab3027beab2e26d1d69c4299b844b4b1f</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Factory.html</anchorfile>
      <anchor>a29820570065800b86c2b60055c3fbee8</anchor>
      <arglist>(Teuchos::ParameterList &amp;stepsizeParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1StepSize_1_1Factory.html</anchorfile>
      <anchor>a682cbcfca48c1997b17c6159c7abfb09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Factory</name>
    <filename>classLOCA_1_1Epetra_1_1Factory.html</filename>
    <base>LOCA::Abstract::Factory</base>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>a350726763101913dbd39d5d1a4709adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>aa2d30a4844256873bd11c5bc6af58c42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>a7f6a685f01237908cf4e518c65825896</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>a66375ec954edfbabee6deb73ad8a8eab</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createAnasaziOperatorStrategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>afdb74965dd5d7bac775b0e3d63e9501c</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>a2bb5289ec9171c76d00362e1c22dae51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>a66375ec954edfbabee6deb73ad8a8eab</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createAnasaziOperatorStrategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Factory.html</anchorfile>
      <anchor>afdb74965dd5d7bac775b0e3d63e9501c</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::Factory</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Factory.html</anchorfile>
      <anchor>a3b90c25453297c52d08a6c098de3f7ee</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Factory.html</anchorfile>
      <anchor>a1de278e94eed2714f6c4d18ca45d2a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Factory.html</anchorfile>
      <anchor>ac37819c07835d41e8b1925f3be64afc0</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Factory.html</anchorfile>
      <anchor>a6e7f5f027ce98b36c8f55771f7ff06bf</anchor>
      <arglist>(Teuchos::ParameterList &amp;eigenParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1Factory.html</anchorfile>
      <anchor>a550758cb5b6417e1854c32af9ad28b6a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Bifurcation::Factory</name>
    <filename>classLOCA_1_1Bifurcation_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1Factory.html</anchorfile>
      <anchor>ad44cd15c81c4abff0a01f22795d9030d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1Factory.html</anchorfile>
      <anchor>aae59fae49f795966766d0d9446201c11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1Factory.html</anchorfile>
      <anchor>acf76a19fcde6722709529684b6d7c58d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;bifurcationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1Factory.html</anchorfile>
      <anchor>a526d3b121daad68a7c4a0d9dd3564593</anchor>
      <arglist>(Teuchos::ParameterList &amp;bifurcationParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1Factory.html</anchorfile>
      <anchor>ac07823ba5b4bfa96e8f8aa2117f8faad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::TransposeLinearSystem::Factory</name>
    <filename>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1Factory.html</anchorfile>
      <anchor>a276aaaafb25adc68e64c3dd995d71aa3</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1Factory.html</anchorfile>
      <anchor>af6d9bb6fa0704368508564c6c0470b75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Epetra::TransposeLinearSystem::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1Factory.html</anchorfile>
      <anchor>a610a8879fe649f51207504dca76d1526</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linsys)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1Factory.html</anchorfile>
      <anchor>a913b15f2f80b3a8384b42428c75589ad</anchor>
      <arglist>(Teuchos::ParameterList &amp;solverParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1Factory.html</anchorfile>
      <anchor>abdcab5df55d7c555c5b77cb802fde86b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::LAPACK::Factory</name>
    <filename>classLOCA_1_1LAPACK_1_1Factory.html</filename>
    <base>LOCA::Abstract::Factory</base>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>a0e10c37eb783e1c90568096ba4b18b00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>a5ec62e10b7774ba08d498b567bdb7e3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>a591958b6de925a28b53c24903f88d058</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>ad645b74cab60609b84787b163778059b</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createEigensolverStrategy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>a031f515e64f984b1f36443fb68421ed1</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>a0f29e69a1cb9c43eb7b00bb8b6fc8820</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>ad645b74cab60609b84787b163778059b</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createEigensolverStrategy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Factory.html</anchorfile>
      <anchor>a031f515e64f984b1f36443fb68421ed1</anchor>
      <arglist>(const std::string &amp;strategyName, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt; &amp;strategy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::Factory</name>
    <filename>classLOCA_1_1BorderedSolver_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Factory.html</anchorfile>
      <anchor>a26921a39d984906e8e3ce068e2eda515</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Factory.html</anchorfile>
      <anchor>a128156c4fa50fec4142637bd48983e7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Factory.html</anchorfile>
      <anchor>a664370ffa40eebed017b31fa1593a696</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Factory.html</anchorfile>
      <anchor>af4fc5f9694abf55aa0955b7ef4188d3b</anchor>
      <arglist>(Teuchos::ParameterList &amp;solverParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Factory.html</anchorfile>
      <anchor>a4b8ae9168fb703448514c85d24871301</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Factory</name>
    <filename>classNOX_1_1Direction_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classNOX_1_1Direction_1_1Factory.html</anchorfile>
      <anchor>a5ab805c6b4f9258f385fb093d175ca5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Factory</name>
      <anchorfile>classNOX_1_1Direction_1_1Factory.html</anchorfile>
      <anchor>ae5b2fb1fe8ef17f12778eb355de2abf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>buildDirection</name>
      <anchorfile>classNOX_1_1Direction_1_1Factory.html</anchorfile>
      <anchor>a4f67844b504e520a574645554858d51d</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>buildDirection</name>
      <anchorfile>classNOX_1_1Direction_1_1Factory.html</anchorfile>
      <anchor>ac05ea643b673177b0692743dab1e8a9f</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Eigensolver::Factory</name>
    <filename>classLOCA_1_1Eigensolver_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1Factory.html</anchorfile>
      <anchor>a80c2d940687dd031f80f09e76ad54c15</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1Factory.html</anchorfile>
      <anchor>ae1a6d55cc79eb4e6716fdac3f7db4bf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1Factory.html</anchorfile>
      <anchor>a9d7136fe6d072f3983629873114b8b3d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1Factory.html</anchorfile>
      <anchor>acd12360a1bd4fee765da1226cb2adfed</anchor>
      <arglist>(Teuchos::ParameterList &amp;eigenParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Eigensolver_1_1Factory.html</anchorfile>
      <anchor>a6c0975d85ec9a3a65b7ea7c7df3c85bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::Factory</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1Factory.html</anchorfile>
      <anchor>a5ecfab1641292e7347475fb8dcded601</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1Factory.html</anchorfile>
      <anchor>a823dc271328c5f738026a1840a43594f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1Factory.html</anchorfile>
      <anchor>a8af893e80a4089846aa0594a0f70ac6b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1Factory.html</anchorfile>
      <anchor>a2ae03f51d69cd62e5e16bc25582fd7fb</anchor>
      <arglist>(Teuchos::ParameterList &amp;eigenParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1Factory.html</anchorfile>
      <anchor>ad3d05fe2f28eee26519e26cb0695701d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Factory</name>
    <filename>classNOX_1_1LineSearch_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Factory.html</anchorfile>
      <anchor>ac777f747d0920183edce051873faa1fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Factory</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Factory.html</anchorfile>
      <anchor>aa1aae9e85a1481f3088abfc3bda09c05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>buildLineSearch</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Factory.html</anchorfile>
      <anchor>a1b1bd95358927ed997e3cf019db053b1</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>buildLineSearch</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Factory.html</anchorfile>
      <anchor>a17988d0784e739dc69edd9b2751b2859</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Factory</name>
    <filename>classLOCA_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a373b6846d1a0c9bbcd5d9e421636e830</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a49e50c1e1476769fa1ca1730cdfb46e8</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Abstract::Factory &gt; &amp;userFactory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>afe77bd4a28b089773de13b9c41af4aea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>createPredictorStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ac5ab16288b3b8b8a4fa6ad6c885310c1</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predictorParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>createContinuationStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>af9cf5adfd2459488f1e919d21b3aa3cf</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepperParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>createBifurcationStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a663c15fd275257fec4aa3f5fc3bd5b79</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;bifurcationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt;</type>
      <name>createStepSizeStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>aa8d304715cc727caa72727c5f28cdb50</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>abf6def5eab63dea7f0883dc7be453f28</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt;</type>
      <name>createEigensolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae19d4c3e0b265ebdc05fd8e998c0b663</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt;</type>
      <name>createEigenvalueSortStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a37575c9556d62dbcd7f39b6fd177c26a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt;</type>
      <name>createSaveEigenDataStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae1f7063a317b982232075584bba9fd28</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt;</type>
      <name>createAnasaziOperatorStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a5ce102e02489d7f37cc19e37189758cb</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::SolverStrategy &gt;</type>
      <name>createMooreSpenceTurningPointSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a75c4a3180e4eac822217e75357b672d8</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::SolverStrategy &gt;</type>
      <name>createMooreSpencePitchforkSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a6f5654476a33190ca5adb3ce378bbd74</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::SolverStrategy &gt;</type>
      <name>createMooreSpenceHopfSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae8622a4c6897664737985afe9f35022b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a72f14bfb28a5873f4cd05a259c1407cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Abstract::Factory &gt;</type>
      <name>factory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>afddb13a8b69bfec1486476c1f4c5f068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>haveFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a73e0d714bb657667cedb67729142564c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiPredictor::Factory</type>
      <name>predictorFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a5098d8497289f70f9191b079d1fca10c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::MultiContinuation::Factory</type>
      <name>continuationFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>aa9f69536f6ae84b3a9c2d28cd8c19905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Bifurcation::Factory</type>
      <name>bifurcationFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae4b57ce84675dfb7e9fc9e12d618fba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::StepSize::Factory</type>
      <name>stepsizeFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae927206f045a9fae36f77c3c3185efac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::BorderedSolver::Factory</type>
      <name>borderedFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a76ae27715235b7feb97d3b94711f9805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Eigensolver::Factory</type>
      <name>eigensolverFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a41042fa8d33a45b8f86ebc41a01cdb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::EigenvalueSort::Factory</type>
      <name>eigenvalueSortFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae2be0db1efc2ed1e32af1cefe63a2101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::SaveEigenData::Factory</type>
      <name>saveEigenFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>af86e2ff2164ebc9ac6535934c54d230e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::AnasaziOperator::Factory</type>
      <name>anasaziOperatorFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>acd1019932ec67cbee03165239cb4f11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::TurningPoint::MooreSpence::SolverFactory</type>
      <name>mooreSpenceTurningPointSolverFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a6d5aabd5fabc65ee1c00696ffefa5605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Pitchfork::MooreSpence::SolverFactory</type>
      <name>mooreSpencePitchforkSolverFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a000322615b7fcd119574d1aa6d739aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::Hopf::MooreSpence::SolverFactory</type>
      <name>mooreSpenceHopfSolverFactory</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a60435fb2bc2cc65ebcd60345905ba020</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>createPredictorStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ac5ab16288b3b8b8a4fa6ad6c885310c1</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predictorParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>createContinuationStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>af9cf5adfd2459488f1e919d21b3aa3cf</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepperParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>createBifurcationStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a663c15fd275257fec4aa3f5fc3bd5b79</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;bifurcationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt;</type>
      <name>createStepSizeStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>aa8d304715cc727caa72727c5f28cdb50</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepsizeParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>createBorderedSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>abf6def5eab63dea7f0883dc7be453f28</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt;</type>
      <name>createEigensolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae19d4c3e0b265ebdc05fd8e998c0b663</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt;</type>
      <name>createEigenvalueSortStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a37575c9556d62dbcd7f39b6fd177c26a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt;</type>
      <name>createSaveEigenDataStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae1f7063a317b982232075584bba9fd28</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::AnasaziOperator::AbstractStrategy &gt;</type>
      <name>createAnasaziOperatorStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a5ce102e02489d7f37cc19e37189758cb</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::SolverStrategy &gt;</type>
      <name>createMooreSpenceTurningPointSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a75c4a3180e4eac822217e75357b672d8</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::SolverStrategy &gt;</type>
      <name>createMooreSpencePitchforkSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>a6f5654476a33190ca5adb3ce378bbd74</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::SolverStrategy &gt;</type>
      <name>createMooreSpenceHopfSolverStrategy</name>
      <anchorfile>classLOCA_1_1Factory.html</anchorfile>
      <anchor>ae8622a4c6897664737985afe9f35022b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::Factory</name>
    <filename>classLOCA_1_1MultiContinuation_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1Factory.html</anchorfile>
      <anchor>a7b81b982d995e214b9d7ff87711f787d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1Factory.html</anchorfile>
      <anchor>ab2f45da843866469fa7b95e2a4521129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1Factory.html</anchorfile>
      <anchor>a36b65175b853f6dcf57e2f6e38793317</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;stepperParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1Factory.html</anchorfile>
      <anchor>aacd64f44e31d791782af99f875e6d531</anchor>
      <arglist>(Teuchos::ParameterList &amp;stepperParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1Factory.html</anchorfile>
      <anchor>a98718a315840e74a46a98618c2b466b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::Factory</name>
    <filename>classLOCA_1_1MultiPredictor_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Factory.html</anchorfile>
      <anchor>a2fb5485b4cb2f49e753a19ba642b1279</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Factory.html</anchorfile>
      <anchor>a44b5ee713396d8fad598dad9859bb878</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Factory.html</anchorfile>
      <anchor>a69c0bb07e83982e6c9e7671a03dd2706</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predictorParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Factory.html</anchorfile>
      <anchor>abf7996d2e1397ff107bb91eb130489c8</anchor>
      <arglist>(Teuchos::ParameterList &amp;predictorParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Factory.html</anchorfile>
      <anchor>ac529d9d72d43d3ed32950e0b4a965e11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::Factory</name>
    <filename>classNOX_1_1Solver_1_1Factory.html</filename>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classNOX_1_1Solver_1_1Factory.html</anchorfile>
      <anchor>a9da694338e5279221d8d6679cfdbed60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Factory</name>
      <anchorfile>classNOX_1_1Solver_1_1Factory.html</anchorfile>
      <anchor>aedab4b9c8cc961bd1335e3205682ba4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>buildSolver</name>
      <anchorfile>classNOX_1_1Solver_1_1Factory.html</anchorfile>
      <anchor>a774dad242ad0cc17847c1a60995e4a44</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Utils::Fill</name>
    <filename>classNOX_1_1Utils_1_1Fill.html</filename>
    <member kind="function">
      <type></type>
      <name>Fill</name>
      <anchorfile>classNOX_1_1Utils_1_1Fill.html</anchorfile>
      <anchor>a3b49f8827e9664b6fcce585834508dec</anchor>
      <arglist>(int ntimes, char ch)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Fill</name>
      <anchorfile>classNOX_1_1Utils_1_1Fill.html</anchorfile>
      <anchor>ac1ec524658af39a49bd66ab5de8263ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>classNOX_1_1Utils_1_1Fill.html</anchorfile>
      <anchor>a1e0ba6a555d991646dff351cbd3cb93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>c</name>
      <anchorfile>classNOX_1_1Utils_1_1Fill.html</anchorfile>
      <anchor>a2ccf6e3c82dc7bceaabac7f6d9ca233c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::FiniteDifference</name>
    <filename>classNOX_1_1Epetra_1_1FiniteDifference.html</filename>
    <base>Epetra_RowMatrix</base>
    <base>NOX::Epetra::Interface::Jacobian</base>
    <base>NOX::Epetra::Interface::Preconditioner</base>
    <member kind="enumeration">
      <type></type>
      <name>DifferenceType</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aa4fe7f3e7e53ee64a45b8393915e0f2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifference</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a31b0bf59ffdc21bea2a21dbce5537f39</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifference</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a6e016d6ff432caafd7296d70ac5fffa4</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; const Epetra_Vector &gt; &amp;beta, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifference</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a59ba9a05bd21bb013dd8f50643bfb15a</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;g, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifference</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a546a1c0bea068de00c106bb613be20b3</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;g, const Teuchos::RCP&lt; const Epetra_Vector &gt; &amp;beta, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifference</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>afcae03641c43cbad2bcb182741903c3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ae39421fe16d2387242b33c2fb751605b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a4b47b7a65624772f85a1fa39daea4b4e</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a88f739f10761994e2334c3ce8d103833</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ab3614780bbce6bc6fdd8d9b6d29d3013</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aa04e5551aaf7ad567eb2f4b8eee3f048</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a53359f11520fe977ed4a93c3226882de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a71989a062d50808d95dd7f738273ff84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a1d88c5703c5674bec2e5e9722fab9230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Filled</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>af8825a4669496dd0bce318b9363d5490</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRowEntries</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ad659829ddbe8c092164d802085e8f68f</anchor>
      <arglist>(int MyRow, int &amp;NumEntries) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>MaxNumEntries</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a9cba3faf19b016088b36ea5db72e4da2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractMyRowCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>afa74a75f3ffd6e979e3c0f90b73d00d1</anchor>
      <arglist>(int MyRow, int Length, int &amp;NumEntries, double *Values, int *Indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractDiagonalCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a11d3d62575d78e3d9ef44852dda925e0</anchor>
      <arglist>(Epetra_Vector &amp;Diagonal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Multiply</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ad6dfb3c252469b99864eb9d6dff2eaa9</anchor>
      <arglist>(bool TransA, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Solve</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a32349892e94e4a16ef3c8a82775f0c1d</anchor>
      <arglist>(bool Upper, bool Trans, bool UnitDiagonal, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvRowSums</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>af1e16edf57aa78445a314c67ec372452</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LeftScale</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a4fbf365510675ba7716d00c223ed26de</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvColSums</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a5011e58826e801b33306f8ffd37277a2</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>RightScale</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ac44fe63e1cfb636659e9e2b93d07306f</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ac51c502bc27ef808c0bc23890f592bee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormOne</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a45a7250c63f1646fef6c9dd16d274fd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalNonzeros</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a8c77c6ecc47b0155fdc7bbd39d71da41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalRows</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a540ff87745efa8f5a0e50df8d605dc74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalCols</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a7926993b78a86c7fb66b722be5be4b1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalDiagonals</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>acf2d3ea7692bf04b18b24536033080ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyNonzeros</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a5cfeba8cd66052484057c324df837bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRows</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ad4279e3124cb9d00e12c5d802e7d64b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyCols</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a87381bf58fbcc437a660d5a71c105bbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyDiagonals</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a927de3d39bda9ba54c7c583c3e00d4d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LowerTriangular</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a949ab25fab2c2958a4c540b126c79bf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpperTriangular</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>afe8fa67af7291c42f24423b094da26c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a3f4a12faf4846ce9bffb6245c640f8a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixRowMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a9a83c44ab282333941a7e50bd21c4722</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixColMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>af29500be3fe88b67875dccba5fe76b64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Import *</type>
      <name>RowMatrixImporter</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>af8ac48949e188e767e6fa4bea545ab60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_BlockMap &amp;</type>
      <name>Map</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aa9e5df6da918e2ed31ca751fd2946f9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ad017d8fd143d8e39a64e88c7f15418cb</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a64fbaff05d8bf73fe60ef914d0d84f4c</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a5302f6b39c6e53aed659e0e39bb3ea5b</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Prec, Teuchos::ParameterList *precParams=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDifferenceMethod</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aa9e439d481107ffc141f3b63a821cf46</anchor>
      <arglist>(DifferenceType type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Epetra_CrsMatrix &amp;</type>
      <name>getUnderlyingMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aa7605a50638646fdb36cd4e8afcd669d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Print</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a653aaa0155ce372a9b391050d985651a</anchor>
      <arglist>(std::ostream &amp;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupForComputeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a9ba9ef2a7d671eea80d34bc72d2f5756</anchor>
      <arglist>(NOX::Abstract::Group &amp;group)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>BetaType</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ad3e4bb3dbbe6e99ec620d99626163d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>createGraphAndJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>afc6f85fbbbd992f2e17030bbb82aaee9</anchor>
      <arglist>(Interface::Required &amp;i, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const NOX::Utils</type>
      <name>utils</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a72188ba50e8da7117570a7f281afc77f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>graph</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a0dff806bb359007afb3c1b6386cf060f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>jacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a7b1d2577e3ce23ae054702b9ac89e9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt;</type>
      <name>interface</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>abe42dbacd016802f3b8401df3c7cff58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector</type>
      <name>x_perturb</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a544f0fc8847983a6b562df184540a9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector</type>
      <name>fo</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aeeaef75a3844de8f113cdc0a4f21eb4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector</type>
      <name>fp</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ae9d8825adb3995d8d269daed6db1e161</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>fmPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>abc606845e95dc4a873564f0ff8f401e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector</type>
      <name>Jc</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a04ff5bc609888fd92ce13f0c50966c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a4711f93f089fe82d59ceedfdb236f8f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>beta</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a163d917a886a8b390421cfab142f95fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>betaVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a83cf948f6e2fe8c12cacb6271d1eace3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BetaType</type>
      <name>betaType</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a5121a553a80ca66daaa83403787b7d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DifferenceType</type>
      <name>diffType</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>a36909d8c5b9b6c84c8373aa7c74197f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aa738fd3340dfca6f1a6980ecfd575b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useGroupForComputeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>ae8e375358eb3a54985084c7623891084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>groupPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifference.html</anchorfile>
      <anchor>aadd6ae04ec2facb27df86a0af8f174df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::FiniteDifferenceColoring</name>
    <filename>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</filename>
    <base>NOX::Epetra::FiniteDifference</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceColoring</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a5d4ab9c40b323caf085540a13ce4fdc9</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;colorMap, const Teuchos::RCP&lt; std::vector&lt; Epetra_IntVector &gt; &gt; &amp;columns, bool parallelColoring=false, bool distance1=false, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceColoring</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>ae6e7b1464f120b62cf9ff7eacc3f8d30</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;rawGraph, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;colorMap, const Teuchos::RCP&lt; std::vector&lt; Epetra_IntVector &gt; &gt; &amp;columns, bool parallelColoring=false, bool distance1=false, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceColoring</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>aad9773c113f02048bd3ab402a41baa92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a9a0b7a4f00c275f9b0939b7b891fab64</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>aa28eddbbf11969f2ee9b1f55b0ded4d6</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>createColorContainers</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>af6b3040e7dcbcf029aff3fe1a49805d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ColoringType</type>
      <name>coloringType</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>aa7f7ca7f6f5457803d947957ccc0c259</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>distance1</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>aa4dedf17b7084016ceb77769d51d912a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MapColoring &gt;</type>
      <name>colorMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>ab68a00ce55ecac157c404070fabb1596</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; std::vector&lt; Epetra_IntVector &gt; &gt;</type>
      <name>columns</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>ae248e97c14b864a559744765e3d6df1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numColors</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>abf694c4d651b169a704086524545746f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxNumColors</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a4b9cecef21ef3d27685bf6c1177bb872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>colorList</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>ae889f7b17faf070f793f30e6a4e61130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; int &gt;</type>
      <name>listOfAllColors</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a65790dc4381a23b66ae4c880a99c0f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>colorToNumMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a8b8d51bb113012340d236fe40be09d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>cMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>aeb53c1f1446a083c12a789a14b81bb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Import *</type>
      <name>Importer</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a2e03c9baa1383cbf86fd8773408aeecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector *</type>
      <name>colorVect</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>ab81677a7d632b422b9e198e7fea219bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector *</type>
      <name>betaColorVect</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a5bbfee29e315775c3d80fc244836cf45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector *</type>
      <name>mappedColorVect</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a564b1111f64f3bf50b6b4e6a53c28bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector *</type>
      <name>xCol_perturb</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>af5a0bc15d36359f0de9a2f2f84882823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_BlockMap *</type>
      <name>columnMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>a1654196faeaaa41227dce1a6a6ac1056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Import *</type>
      <name>rowColImporter</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoring.html</anchorfile>
      <anchor>aca5b49f5ed9c6e402146345de101b753</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::FiniteDifferenceColoringWithUpdate</name>
    <filename>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</filename>
    <base>NOX::Epetra::FiniteDifference</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceColoringWithUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>a006bc1646e781b0cdb312dae36dce454</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;colorMap, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceColoringWithUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>a3093517be8002b2dedf4b29b8a3a9059</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;rawGraph, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;colorMap, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceColoringWithUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>a5bb97e90a05927a5b19fa590cf83e2c5</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;colorMap, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;updateColorMap, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceColoringWithUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>ab1ed7552b179e7453375b632f78e9430</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; Epetra_CrsGraph &gt; &amp;rawGraph, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;colorMap, const Teuchos::RCP&lt; Epetra_MapColoring &gt; &amp;updatecolorMap, double beta=1.0e-6, double alpha=1.0e-4)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceColoringWithUpdate</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>a09a35458d1e5242e62a81c56ab03461c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>aa2ad58a09905c8440e67743fd5e9f74a</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>a3c197e0cb7be222bde7f9826785bcba9</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetProbingDiagnostics</name>
      <anchorfile>classNOX_1_1Epetra_1_1FiniteDifferenceColoringWithUpdate.html</anchorfile>
      <anchor>a47143e5c692d44c0ef099db82cd0c47d</anchor>
      <arglist>(bool activate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MinimallyAugmented::FiniteDifferenceGroup</name>
    <filename>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</filename>
    <base virtualness="virtual">LOCA::TurningPoint::MinimallyAugmented::AbstractGroup</base>
    <base virtualness="virtual">LOCA::TurningPoint::MooreSpence::FiniteDifferenceGroup</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a69296e1df3fa20af2a0dbc234ed0399a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a4af52ce370bffe48643d0e527284962f</anchor>
      <arglist>(const FiniteDifferenceGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a40cd91c423bc1d02725462d0295f20cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a38e3755601fabcf9db8496bbc3ccef0f</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector::DenseMatrix &amp;result, bool isValid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJDp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a33657443de49d85b198a0e1c107cc742</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w, NOX::Abstract::MultiVector &amp;result, bool isValid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDx</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>abb0278c596476c75035bbb520de35e92</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::Vector &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::FiniteDifferenceGroup</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</filename>
    <base virtualness="virtual">LOCA::TurningPoint::MooreSpence::AbstractGroup</base>
    <base virtualness="virtual">LOCA::MultiContinuation::FiniteDifferenceGroup</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a251d62ac1562eb3ca564931b0c36181b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a4a4b59615c6d5517b8cc5836477c24f8</anchor>
      <arglist>(const FiniteDifferenceGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a7254bd708ef74ac69aa3445f33e69129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDpMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>ae55df50bf19cf9ebb28f44063bfaba03</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result, bool isValid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxaMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a79ed26703da83cdae4769dc421b7d712</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDJnDxaMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>ae1b0742b10f5da899c204bef8dd2ead3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;nullVector, const NOX::Abstract::Vector &amp;JnVector, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtJnDxMulti</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a3b35ffe9882c0c49827e6041ac2cb7aa</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;w, const NOX::Abstract::Vector &amp;nullVector, NOX::Abstract::MultiVector &amp;result)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MinimallyAugmented::FiniteDifferenceGroup</name>
    <filename>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</filename>
    <base virtualness="virtual">LOCA::Hopf::MinimallyAugmented::AbstractGroup</base>
    <base virtualness="virtual">LOCA::Hopf::MooreSpence::FiniteDifferenceGroup</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>ab26d0c941ab903b87d0d0a7854c57d96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>af3b6448005e6724a9e7ae076b5cebaa3</anchor>
      <arglist>(const FiniteDifferenceGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a1e6cb1d7fdf8789b1f9a715f2b671b48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>ae3b88da0cc7f3d1f0cc3642ed749d55f</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;y, const NOX::Abstract::Vector &amp;x, double omega, NOX::Abstract::MultiVector::DenseMatrix &amp;result_real, NOX::Abstract::MultiVector::DenseMatrix &amp;result_imag, bool isValid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDwtCeDx</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MinimallyAugmented_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a757d3445f5e3a2f8140f8acd8d7f8973</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;w1, const NOX::Abstract::Vector &amp;w2, const NOX::Abstract::Vector &amp;y, const NOX::Abstract::Vector &amp;z, double omega, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::FiniteDifferenceGroup</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</filename>
    <base virtualness="virtual">LOCA::Hopf::MooreSpence::AbstractGroup</base>
    <base virtualness="virtual">LOCA::TurningPoint::MooreSpence::FiniteDifferenceGroup</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a553ab90b13bdcbff08fd36621ce2b990</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a1192ec71493e3590f98e68947e0ef2a1</anchor>
      <arglist>(const FiniteDifferenceGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a0993354ebd89591bf8dd5393968e0324</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a606ec017be4d9e9a19359ba8e84e6065</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag, bool isValid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>af0adb969c82ee63d791c0435e8d7e770</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDCeDxa</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a97727091a3c500de7c28f96415cde10a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;yVector, const NOX::Abstract::Vector &amp;zVector, double w, const NOX::Abstract::MultiVector &amp;aVector, const NOX::Abstract::Vector &amp;Ce_real, const NOX::Abstract::Vector &amp;Ce_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::FiniteDifferenceGroup</name>
    <filename>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a4a93d0d3da95ae26f22c22f779d47201</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a59c3b830451f421d6976afaddc5682a8</anchor>
      <arglist>(const FiniteDifferenceGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteDifferenceGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a1bacdcbe5d1cc69511780fcceb549adb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>aa527a4ca4572ca0201d5170233e972aa</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a592b4e3784b72f62e8b46552e95b97cb</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDerivUtils</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a45d44eeeab51982e8f84503a4692f0b3</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::DerivUtils &gt; &amp;deriv)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>a16e11055e0f442a59f8ced81d99953ba</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; DerivUtils &gt;</type>
      <name>derivPtr</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1FiniteDifferenceGroup.html</anchorfile>
      <anchor>afeb6243ddeb7978dacfffe5f8709497b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::FiniteValue</name>
    <filename>classNOX_1_1StatusTest_1_1FiniteValue.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="enumeration">
      <type></type>
      <name>VectorType</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>ac2b082ce91f712a6ea7efe9f40658133</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FiniteValue</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a6e77c79a82440a13594aae6db15590a4</anchor>
      <arglist>(VectorType v=FVector, NOX::Abstract::Vector::NormType n=NOX::Abstract::Vector::TwoNorm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FiniteValue</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>ae7439ddd251e094e7c1da365d2b4a23e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a5d865947f3188cb180486a2ea69812f1</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a70ac80cbfbacf15876b31779a1ee87d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a6c58a84e2074cea138283526f44a0527</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>finiteNumberTest</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a3587d2fd129a8d08ee43fad59bb1756d</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>NOX_isnan</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a7a50fa50bcc7a4af17327eff02e8458f</anchor>
      <arglist>(double x) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>NOX_isinf</name>
      <anchorfile>classNOX_1_1StatusTest_1_1FiniteValue.html</anchorfile>
      <anchor>a4cd3ba98c4827b8e227c7f3b4986ed07</anchor>
      <arglist>(double x) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Multiphysics::Solver::FixedPointBased</name>
    <filename>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</filename>
    <base>NOX::Multiphysics::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>FixedPointBased</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a958627a60b297d0811d6e23122a57175</anchor>
      <arglist>(const Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt; &amp;solvers, const Teuchos::RCP&lt; NOX::Multiphysics::DataExchange::Interface &gt; &amp;interface, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FixedPointBased</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a6caa3d1a580a9ef52bede5ac52aa0d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a47a4ed623fb8a665b7b84402b7a312ee</anchor>
      <arglist>(const Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt; &amp;solvers, const Teuchos::RCP&lt; NOX::Multiphysics::DataExchange::Interface &gt; &amp;interface, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>ad9c2ad1537699f8161972bccb3314d96</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a8bca13c9bc4fc1779de0ce9819b2676f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a02c24985664ca88ade51d3a28854e28b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a418f6968e4f247946cf3fc8e2509c7c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a45fa2d5cab92bf711a61cba6a90acb4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a3f05a26af93dc7ae6678efc7a33f945a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a5b8e6fdb9d039b67d9d97452437f3edc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a1b1590af1cd09e222c98d6233cf34baf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>ae007592ea782d33bb77af721ade8aa74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a05f5ec0a28aeb37c232e214bd94bcc8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a09ce4205ecb9a2c5e9e10418f0c71d4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a89c9d2eda63969bfd53b5efc7dff1bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printUpdate</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a95fb2f8080807308c09a97375ffafbf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SOLVE_TYPE</type>
      <name>solveType</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>aeb514bfc099cce51681d595686998267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt;</type>
      <name>solversVecPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>add7b171d7d3172043cd01af62d96c557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Multiphysics::DataExchange::Interface &gt;</type>
      <name>dataExInterface</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a53d1e77df66476f959e6056f5885604c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a0204afd9ee3fd92bffad0f11a716a620</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utilsPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a6088e28eb43ecedeaa78c21b8521227a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Multiphysics::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>ab4253c1af216ae73a58a4bf4aa9c69eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a2d891601c29878b946eb3b62bfb7f2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a0f6648223d035afdc94779ba829aeaea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a06abceb98421e00cc2ea41036fa7b069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a51cadbf46bb278a0b4cb0802a368c450</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>ad17c11056f1ac108a0b7a01aab59859b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1FixedPointBased.html</anchorfile>
      <anchor>a72b7fc917768df4e3ea079092e66025d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::AnasaziOperator::Floquet</name>
    <filename>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</filename>
    <base>LOCA::AnasaziOperator::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Floquet</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>adbbc3a5dfab7c4993932938bf18e5074</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Floquet</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>af9ff3cdc160b7fb425b1461aaf188c0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>a07edf0584720e486f9ebb18908172ad2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>a5224d36c919c5d20c13ed14cd81b1638</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>af48c6afc62d203207c3c4ad7ba24e3e0</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>af4b0b1e33f672a1771df0ae2f6a7f806</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>a462feaa540a08c129f349ca2e3402689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLabel</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>aad6f3c2aa8860c95743fbea600c48acb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>a78dce6f89a2f9a512cd67c8f7a69d5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>aeb705ccc1196fbbced3b7e0d1072d624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>a00e68a79888543ef55681cdcbdb1eec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Interface::xyzt &gt;</type>
      <name>xyztInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1AnasaziOperator_1_1Floquet.html</anchorfile>
      <anchor>ac649fb9009b6ea4c404b1b8fd3b95cb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Interface::FreeEnergy</name>
    <filename>classLOCA_1_1Epetra_1_1Interface_1_1FreeEnergy.html</filename>
    <member kind="function">
      <type></type>
      <name>FreeEnergy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1FreeEnergy.html</anchorfile>
      <anchor>af99533895ff3b7276a58f038246e81ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FreeEnergy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1FreeEnergy.html</anchorfile>
      <anchor>a9e35bd084f2a252b71ecadc5c7f264e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1FreeEnergy.html</anchorfile>
      <anchor>aeaa08c3c744a630ff1d203978d4a3c32</anchor>
      <arglist>(const Epetra_Vector &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::FullStep</name>
    <filename>classNOX_1_1LineSearch_1_1FullStep.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>FullStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1FullStep.html</anchorfile>
      <anchor>a0967747ac721bb6ab57ef213ce064e6b</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FullStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1FullStep.html</anchorfile>
      <anchor>abef37834dc02caba8dcfb2f37bf1b12d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1FullStep.html</anchorfile>
      <anchor>a2d6205143e0a513d30e88d7af443e46e</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::Generic</name>
    <filename>classNOX_1_1StatusTest_1_1Generic.html</filename>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Generic.html</anchorfile>
      <anchor>a0207d46c8681e0b430c33d052229ea46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Generic.html</anchorfile>
      <anchor>ad6d6af1afe426e94c732aa1f38094e83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Generic.html</anchorfile>
      <anchor>ab7e88e285f449f234c5bd1eb7576aad8</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Generic.html</anchorfile>
      <anchor>aac6bcf7012b5085096da6024ec858e16</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Generic.html</anchorfile>
      <anchor>a299fcca308c721fd1e52cf99c4d6ab45</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SingularJacobianSolve::Generic</name>
    <filename>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</filename>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>a5aa5abf8a0676eeb394dd967f6267ba6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>a619b4d51707bef58ae66d748d30ff1c4</anchor>
      <arglist>(const Generic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>abdfd8f52a37621c7e39fd42cbe0c20a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Generic *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>ad2c4f9b995b69fb43ebacca28841792f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Generic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>a51200120efab6388a3f3db480fc0d286</anchor>
      <arglist>(const Generic &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>a0d58d07a1a886e0ef780de6208e53035</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>a147c16e4fbbe937d38983bd1e69e9887</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;input, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeMulti</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Generic.html</anchorfile>
      <anchor>a8370398b9ec50417d0788e713e373b07</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector *const *inputs, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector **results, int nVecs)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Generic</name>
    <filename>classNOX_1_1Direction_1_1Generic.html</filename>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classNOX_1_1Direction_1_1Generic.html</anchorfile>
      <anchor>aa489f06f98da561d1ce6c8c2ff9745e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classNOX_1_1Direction_1_1Generic.html</anchorfile>
      <anchor>abdf1a86e69934bcaa7e16a491a77ff08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Generic.html</anchorfile>
      <anchor>a18af4fb08cc02dda65b0b667e2942af6</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1Generic.html</anchorfile>
      <anchor>a3d553830bad5897184e3f65e810ac8da</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::Generic &amp;solver)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1Generic.html</anchorfile>
      <anchor>ac5ba5b303307058999fc1551313a5a93</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::LineSearchBased &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Generic</name>
    <filename>classNOX_1_1LineSearch_1_1Generic.html</filename>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Generic.html</anchorfile>
      <anchor>a274c9aa2442142931223d3b599705f91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Generic.html</anchorfile>
      <anchor>a1caa85a7d8683f8a27c988d7bbf44874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Generic.html</anchorfile>
      <anchor>a4cc419fb25b2e3597750ed5a27f4f55a</anchor>
      <arglist>(NOX::Abstract::Group &amp;grp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::MeritFunction::Generic</name>
    <filename>classNOX_1_1MeritFunction_1_1Generic.html</filename>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>a4c63b1efc06f09663683aa0e1de7d420</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>aece9eba45845b6559f2cedb2bc276033</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computef</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>a0f67a5753fe42bc6de540197cae03584</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>a9140ef9c59607294aa5a6138bfde9973</anchor>
      <arglist>(const NOX::Abstract::Group &amp;group, NOX::Abstract::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeSlope</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>aec6c42474b825ca9647b1a7bf13827b6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;grp) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeQuadraticModel</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>a97613057a6b747b9d1d463d3b8cd2805</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;grp) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeQuadraticMinimizer</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>af209ec339ccde70f4a40c24d6126ab54</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, NOX::Abstract::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1Generic.html</anchorfile>
      <anchor>a71e1a023057426da9101203721e5c584</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Multiphysics::Solver::Generic</name>
    <filename>classNOX_1_1Multiphysics_1_1Solver_1_1Generic.html</filename>
    <base virtualness="virtual">NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a390d975b24f9c38b2d39d604c5057701</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a70e1dcd457717582ab3c71186d1549c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a6e5f566cac46259402563fd4fdb81630</anchor>
      <arglist>(const Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt; &amp;solvers, const Teuchos::RCP&lt; NOX::Multiphysics::DataExchange::Interface &gt; &amp;interface, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>acc358f9152cc298193d65b8c3d11cafb</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::Generic</name>
    <filename>classNOX_1_1Solver_1_1Generic.html</filename>
    <member kind="function">
      <type></type>
      <name>Generic</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a8f8756d17b8b27dac012e5684e85ab06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Generic</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>af05ff8b84af8bec5de5a0d766f901b4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>ab17bb247909986bd353e10c963bb8253</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initial_guess)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a148929953d00e9ab978e67bf08a74890</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initial_guess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;test)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a37d4bb9a0d93782f382809bf774b3601</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a7f9d07e6b19cd316437bd695a57d80c7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>acaef442decf010cd1d970e4695ae0476</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>aae7130c150d7fc524c63c936d4e582e9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a826b01203f28cde273f7ee4f12d60541</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a011ca0e0a35d140aa295a2f0beada7b8</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>aeaf56d5c814bf4b4dfc942e5cb5832bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a6363d56778512a3faf0d17b740bde905</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a516d54714d9bbc330e71c40289551c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>aeffeed1fd0f0f3498e9e80ac628d78b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a6363d56778512a3faf0d17b740bde905</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>a516d54714d9bbc330e71c40289551c6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1Generic.html</anchorfile>
      <anchor>aeffeed1fd0f0f3498e9e80ac628d78b6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::GlobalData</name>
    <filename>classNOX_1_1GlobalData.html</filename>
    <member kind="function">
      <type></type>
      <name>GlobalData</name>
      <anchorfile>classNOX_1_1GlobalData.html</anchorfile>
      <anchor>afa2a34c4b3ceafe4442cf6c35c98e563</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;noxParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalData</name>
      <anchorfile>classNOX_1_1GlobalData.html</anchorfile>
      <anchor>aeaa59c55a0a74f6280f590d2cf604e99</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Utils &gt; &amp;utils, const Teuchos::RCP&lt; NOX::MeritFunction::Generic &gt; &amp;mf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlobalData</name>
      <anchorfile>classNOX_1_1GlobalData.html</anchorfile>
      <anchor>a2270583df1cdbc2de967ff7d2d51d4b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>getUtils</name>
      <anchorfile>classNOX_1_1GlobalData.html</anchorfile>
      <anchor>a1929bca16a0b3ca356ea642c6fcee66f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::MeritFunction::Generic &gt;</type>
      <name>getMeritFunction</name>
      <anchorfile>classNOX_1_1GlobalData.html</anchorfile>
      <anchor>a14aaf04cba3b5efa51e782092f63610f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNoxParameterList</name>
      <anchorfile>classNOX_1_1GlobalData.html</anchorfile>
      <anchor>a25127b5958964778b602a1747c8fd31f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::GlobalData</name>
    <filename>classLOCA_1_1GlobalData.html</filename>
    <member kind="function">
      <type></type>
      <name>GlobalData</name>
      <anchorfile>classLOCA_1_1GlobalData.html</anchorfile>
      <anchor>a693a65e1a64cc73f338d980640c73e3f</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Utils &gt; &amp;loca_utils, const Teuchos::RCP&lt; LOCA::ErrorCheck &gt; &amp;loca_error_check, const Teuchos::RCP&lt; LOCA::Factory &gt; &amp;loca_factory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlobalData</name>
      <anchorfile>classLOCA_1_1GlobalData.html</anchorfile>
      <anchor>a9b7f4e6f0310f19fc3e0de89e11f3216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>locaUtils</name>
      <anchorfile>classLOCA_1_1GlobalData.html</anchorfile>
      <anchor>af7b65d8af3a9ef7eeac0a46929b90ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; LOCA::ErrorCheck &gt;</type>
      <name>locaErrorCheck</name>
      <anchorfile>classLOCA_1_1GlobalData.html</anchorfile>
      <anchor>aae690aae6947c8a9cc3f51fda3bc5b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; LOCA::Factory &gt;</type>
      <name>locaFactory</name>
      <anchorfile>classLOCA_1_1GlobalData.html</anchorfile>
      <anchor>a747094d72ca05e5caca212abba2f98f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1GlobalData.html</anchorfile>
      <anchor>af20339148a1220ce4900753fdf9dd9ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LAPACK::Group</name>
    <filename>classNOX_1_1LAPACK_1_1Group.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aab381898c039dd60d2fce50af1c18105</anchor>
      <arglist>(Interface &amp;i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a9753362bef00dea9efbd7cd49c7180f9</anchor>
      <arglist>(const NOX::LAPACK::Group &amp;source, NOX::CopyType type=DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Group</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a58c12bdac4632be7893f4b72dc5e6ae8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ae053bcb25123d5903bf9610e069e889e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a221892fb66286317860dfcd493a1de37</anchor>
      <arglist>(const NOX::LAPACK::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a1710a8092ff3cd3d3e88869ffb4b1ae2</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>addee1c6a3447f465e4b51b8a5d62cd2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a7a2d47dd294f89553730caf1830a1ce8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>acf85760b01ca680711fb4e1ac7972a5b</anchor>
      <arglist>(const NOX::LAPACK::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aed3c6f6ed9c608889ceed69c1abfa07e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a456d7237be5d0d9fffc1512f7b4193d2</anchor>
      <arglist>(const NOX::LAPACK::Group &amp;grp, const NOX::LAPACK::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a0ecbab80310e700babb16b883ae41cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a27eafb7768d3965a8f1b35a0e64b9cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a978543289599fb5a05287118ed05253d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>adf437ee696db6e0427c8350422bbff01</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>af64b3650029604abc5d955ec90502b79</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5f91734e8410ec6b92118ce18619abc1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a90558ffeb0af04e4ef5fd9ff9a2b5b27</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a6859425458adf39e5b9ba82d99c56074</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a623779688e260514fff195316ade64c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5571f82c5e46fdd10c3e47224b43f116</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a40c5f8c027006205b20f633982442d2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a64e232e5407af062b65938092a59d4a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab7a9b722081c6ceb2098385773524efe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab4a89f817f89b4b7845b28553e019487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a61bf0d8d7871eff9577e5cb07abf7a8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab8f331c945953f54dab884a8df162704</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>af94f905fdadc489d282ac480ee50e73d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a8faa535b9f3446f1a338d7f77d210148</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5b1fd6f3845118a4c48e09ca9458cbc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a904088eb5aac1ddab194da6805f1ab29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a1b2253a8278cc6888df55f83f0562b76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetIsValid</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a09bfdb4997fc2f0a1971fdd625e1f755</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::LinearSolver&lt; double &gt;</type>
      <name>jacSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a4cc7d2e46f61d29b2f5c64aad0005a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Interface &amp;</type>
      <name>problemInterface</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a318f9a162c6a3a914a10cc52a52f5082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>xVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>afd113b90f51f4477309934bdbd0f8d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>fVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac312cd0c6b294b83c5386e422abd1e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>newtonVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac49a2d53b1f61a86d8e96ee091cad485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>gradientVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a2235e1fb226e861de8e5ba0b0c0bdbe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a7a2d47dd294f89553730caf1830a1ce8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>acf85760b01ca680711fb4e1ac7972a5b</anchor>
      <arglist>(const NOX::LAPACK::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aed3c6f6ed9c608889ceed69c1abfa07e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a456d7237be5d0d9fffc1512f7b4193d2</anchor>
      <arglist>(const NOX::LAPACK::Group &amp;grp, const NOX::LAPACK::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a0ecbab80310e700babb16b883ae41cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a27eafb7768d3965a8f1b35a0e64b9cb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a978543289599fb5a05287118ed05253d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>adf437ee696db6e0427c8350422bbff01</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>af64b3650029604abc5d955ec90502b79</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5f91734e8410ec6b92118ce18619abc1</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a90558ffeb0af04e4ef5fd9ff9a2b5b27</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a6859425458adf39e5b9ba82d99c56074</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a623779688e260514fff195316ade64c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5571f82c5e46fdd10c3e47224b43f116</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a40c5f8c027006205b20f633982442d2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a64e232e5407af062b65938092a59d4a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab7a9b722081c6ceb2098385773524efe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab4a89f817f89b4b7845b28553e019487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a61bf0d8d7871eff9577e5cb07abf7a8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab8f331c945953f54dab884a8df162704</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>af94f905fdadc489d282ac480ee50e73d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a8faa535b9f3446f1a338d7f77d210148</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5b1fd6f3845118a4c48e09ca9458cbc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a904088eb5aac1ddab194da6805f1ab29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a1b2253a8278cc6888df55f83f0562b76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>xVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>afd113b90f51f4477309934bdbd0f8d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>fVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac312cd0c6b294b83c5386e422abd1e10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>newtonVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac49a2d53b1f61a86d8e96ee091cad485</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::Vector</type>
      <name>gradientVector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a2235e1fb226e861de8e5ba0b0c0bdbe9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Abstract::Group</name>
    <filename>classNOX_1_1Abstract_1_1Group.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ReturnType</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ok</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217aac87f53fa40531f3330d4f5be59c3068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotDefined</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217a302fd2d44af4090ac9615234349db91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BadDependency</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217a3724fc7881d6483aac6286e1832468c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotConverged</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217ae2a529a0ab7b662115a1a2ac809d6c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Failed</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217a68d385c7e85322afedcc9d4567a25f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Ok</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217aac87f53fa40531f3330d4f5be59c3068</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotDefined</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217a302fd2d44af4090ac9615234349db91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BadDependency</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217a3724fc7881d6483aac6286e1832468c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotConverged</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217ae2a529a0ab7b662115a1a2ac809d6c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Failed</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa17ab5aa51d466fd6f2d5dc361d5c217a68d385c7e85322afedcc9d4567a25f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>af49179db064ac14246c4386d1b5bff0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a1e6fd1bfff8659f64b0000b6c3e64134</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>afd8c696db42ef7b6de1fc0720b5ecdc1</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>getNormLastLinearSolveResidual</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aff564622011b8e9f2d660cfab878987c</anchor>
      <arglist>(double &amp;residual) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aebc79123e1828ad14e94ba88d724844e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a567a5000e48967e6bbbe59daae97ea9d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>afb0a17ceea78a12923bb9932fb0c7182</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ab763d80297f77eb10c78e88ddb00df6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a469ffcb3439a045b386c4ee2f3e8b9ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a0ea79dfbca4bb39b408bc472bcd8853e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a91b48bd0ecfba4ccc0c3182f99647ef0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>abd4697937bacb5187b9277e27ff77443</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a82f903ff7ff1ffe531a23e9edd8ad0e3</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>adfff66c8911319e7a9e6b601a48e8557</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a5fed1c301c5e396587163f9e7b0d5e07</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a16f8f20f256529bcd71c78c6f170124f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a9c2647b2d10f74f826aad1fc1185ba82</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioningMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>afff561560473055236a5cd47438712f5</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>af653903f941d5068ebf30405205d0c3a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a7a6be0e3d06f6b4e939c5d553ed286db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a81d96ebdeac62638d32a4ea33e85949f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a0d51dbd819961450407ff1437df3a085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a4f3aa7ffda479d9ce735778bada9102d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getScaledX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a48048eab7216de44df9ee6a5c4258411</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aed614f548246a16697905f65231b2cbd</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a29a89178debbe5dbbac4a9b169d76244</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ac520f03a749db81550341e2275d92dda</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a72f4dea2050a8edae1edb30c5776fe80</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a58890585e133812578abf5fc622b33b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a244b84efc05668c33d61625739e4237a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a1b2daab0ee1e02bed02bb9443100efd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aabb0cd9b1ca706df6ddb101e9a9fac9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a03ebb33441f97b9dde6f24d4f6cc68cc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aebc79123e1828ad14e94ba88d724844e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a567a5000e48967e6bbbe59daae97ea9d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>afb0a17ceea78a12923bb9932fb0c7182</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ab763d80297f77eb10c78e88ddb00df6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a469ffcb3439a045b386c4ee2f3e8b9ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a0ea79dfbca4bb39b408bc472bcd8853e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a91b48bd0ecfba4ccc0c3182f99647ef0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>abd4697937bacb5187b9277e27ff77443</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a82f903ff7ff1ffe531a23e9edd8ad0e3</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>adfff66c8911319e7a9e6b601a48e8557</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a5fed1c301c5e396587163f9e7b0d5e07</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a16f8f20f256529bcd71c78c6f170124f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a9c2647b2d10f74f826aad1fc1185ba82</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioningMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>afff561560473055236a5cd47438712f5</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>af653903f941d5068ebf30405205d0c3a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a7a6be0e3d06f6b4e939c5d553ed286db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a81d96ebdeac62638d32a4ea33e85949f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a0d51dbd819961450407ff1437df3a085</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a4f3aa7ffda479d9ce735778bada9102d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getScaledX</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a48048eab7216de44df9ee6a5c4258411</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aed614f548246a16697905f65231b2cbd</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a29a89178debbe5dbbac4a9b169d76244</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ac520f03a749db81550341e2275d92dda</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a72f4dea2050a8edae1edb30c5776fe80</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a58890585e133812578abf5fc622b33b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a244b84efc05668c33d61625739e4237a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a1b2daab0ee1e02bed02bb9443100efd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aabb0cd9b1ca706df6ddb101e9a9fac9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a03ebb33441f97b9dde6f24d4f6cc68cc</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::LAPACK::Group</name>
    <filename>classLOCA_1_1LAPACK_1_1Group.html</filename>
    <base>NOX::LAPACK::Group</base>
    <base>LOCA::Abstract::Group</base>
    <base virtualness="virtual">LOCA::Abstract::TransposeSolveGroup</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a003550da5e4f95796cb99834fb683394</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, LOCA::LAPACK::Interface &amp;i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab2bfd3f9e7f3718138657f235c092b67</anchor>
      <arglist>(const LOCA::LAPACK::Group &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Group</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a4e9d7f4dd9d8bc9c4307b713ac621260</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LOCA::LAPACK::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>acfc1ae4b20ee316c7ed05441a7d1e6d2</anchor>
      <arglist>(const LOCA::LAPACK::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>NOX::LAPACK::Matrix&lt; double &gt; &amp;</type>
      <name>getJacobianMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a998d98562a67ce53f8ae0bb1d02286e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NOX::LAPACK::Matrix&lt; double &gt; &amp;</type>
      <name>getJacobianMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ad7e272a13c0af1ad13ff2c888d274bca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NOX::LAPACK::Matrix&lt; double &gt; &amp;</type>
      <name>getShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a36257d03c7b026b1dd21cbd20612a0ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NOX::LAPACK::Matrix&lt; double &gt; &amp;</type>
      <name>getShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a788d89065781a4c85c0eb415df933ba5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>abbedfbb109620a034ede316b47978d50</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>NOX::LAPACK::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a928f39b174f09cf4d08abeeb224377e1</anchor>
      <arglist>(const NOX::LAPACK::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a97a3c21fdd6f94d1f4a01e53475fb97b</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a6dda2f9c53524b0cba7debec6b151bf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aa875b49329eefdb3b0e8d450c784dcd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab60a0096ad3b8dfd7781d4bd80ad0807</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a314e7ce1cf3c80d154e779991d3406b9</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab3a459b1e3d0aa713599f2104db9df90</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a54c1ce73d4076a9c282ac8526866d48d</anchor>
      <arglist>(const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aace9092a9c7424dff6cb0c3203d90a3d</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a1b462442a77932acecd3f7c7ac0ccba2</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5bcad0938fce84ddece93d905a336d49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a12fc610fc6867549f672eeaaf4ea756f</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>adaf086d239af0b20ac7b143af74750d0</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac7180d4c36c1a72203410ffe6dfe416a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a743491081696449f465ae3d31a13e9c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5ddd829690dfbca9d7bcf67ed1d8001e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>af01b470ae23bf51ebc8142c0e4192d41</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aa0a3eb0bf5b7b2eb945c88af3b5a4321</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a99cd886188ef17405d11812ae583b0c5</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a2c52680d4ec9c946631018324aa9887c</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a8360f4945d4af12149a4c553dc6d41f5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a8713ce3c39a4ce0ff1931b64abcbbf8f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a70c46cabdb4a224a349979daba77bf13</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a620c114f8c0cd3399d0db01c97e0825f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a7c6635eabed1e5dee1680e989c9354d5</anchor>
      <arglist>(double frequency)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5a7c921db875ac51dbae29696a024a56</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5619af67966bf499ef627ed1e56d0c28</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a79cd343997f5b134d2e4fdea294fdcb1</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab66414f808e825a1622055c6c99384a4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab125e39b36b0f1719dba1d48e0bdfb41</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ae13b20c821cb293a40deaf28fd5e24ed</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aaa7edee6d2d9600e06423b0ebe6c9b9c</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a0b4d87a7dd636b83f78c27cbab119b58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a7071eb4f50fdae9d85dedb01e62b9f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::LAPACK::Interface &amp;</type>
      <name>locaProblemInterface</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a09375f3dc31b9d2f268be40f1a786186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParameterVector</type>
      <name>params</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a30fddedca3edaba70499a3ab09bc68cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LAPACK::LinearSolver&lt; double &gt;</type>
      <name>shiftedSolver</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a6c3e7325aef2d08dd53ec4f452e3c0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>freq</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac76f4fa5d16513ca16ee2f7bafc29504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>adceeb2b01f57cdce7cbe0e5412a0a5e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>abbedfbb109620a034ede316b47978d50</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>NOX::LAPACK::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a928f39b174f09cf4d08abeeb224377e1</anchor>
      <arglist>(const NOX::LAPACK::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a97a3c21fdd6f94d1f4a01e53475fb97b</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a6dda2f9c53524b0cba7debec6b151bf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aa875b49329eefdb3b0e8d450c784dcd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab60a0096ad3b8dfd7781d4bd80ad0807</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a314e7ce1cf3c80d154e779991d3406b9</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab3a459b1e3d0aa713599f2104db9df90</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a54c1ce73d4076a9c282ac8526866d48d</anchor>
      <arglist>(const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aace9092a9c7424dff6cb0c3203d90a3d</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a1b462442a77932acecd3f7c7ac0ccba2</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5bcad0938fce84ddece93d905a336d49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a12fc610fc6867549f672eeaaf4ea756f</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>adaf086d239af0b20ac7b143af74750d0</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ac7180d4c36c1a72203410ffe6dfe416a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a743491081696449f465ae3d31a13e9c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5ddd829690dfbca9d7bcf67ed1d8001e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>af01b470ae23bf51ebc8142c0e4192d41</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aa0a3eb0bf5b7b2eb945c88af3b5a4321</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a99cd886188ef17405d11812ae583b0c5</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a2c52680d4ec9c946631018324aa9887c</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a8360f4945d4af12149a4c553dc6d41f5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a8713ce3c39a4ce0ff1931b64abcbbf8f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a70c46cabdb4a224a349979daba77bf13</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a620c114f8c0cd3399d0db01c97e0825f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a7c6635eabed1e5dee1680e989c9354d5</anchor>
      <arglist>(double frequency)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5a7c921db875ac51dbae29696a024a56</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a5619af67966bf499ef627ed1e56d0c28</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>a79cd343997f5b134d2e4fdea294fdcb1</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab66414f808e825a1622055c6c99384a4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ab125e39b36b0f1719dba1d48e0bdfb41</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>ae13b20c821cb293a40deaf28fd5e24ed</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Group.html</anchorfile>
      <anchor>aaa7edee6d2d9600e06423b0ebe6c9b9c</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Thyra::Group</name>
    <filename>classLOCA_1_1Thyra_1_1Group.html</filename>
    <base virtualness="virtual">NOX::Thyra::Group</base>
    <base virtualness="virtual">LOCA::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a270f301541f3b05a866b7963566e7e59</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Thyra::Vector &amp;initial_guess, const Teuchos::RCP&lt; ::Thyra::ModelEvaluator&lt; double &gt; &gt; &amp;model, const LOCA::ParameterVector &amp;p, int p_index, bool implement_dfdp=false, const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;weight_vector=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4b9b019942996f07f33a046f53ea5db6</anchor>
      <arglist>(const Group &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4d7c2d5aefa133d3db7c8338f5e7ccc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2cc0da6fef7407ff3d5e7bb063901b13</anchor>
      <arglist>(const Group &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSaveDataStrategy</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a403646b2d2303c52a59a9d053ae6c9e7</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Thyra::SaveDataStrategy &gt; &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a92e4672be84fa5833e24583c1c395fd3</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9b5a1d2fd3d896a6ae447db828aa8178</anchor>
      <arglist>(const NOX::Thyra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>af9a13d2cb3f87043545d086f5df9a786</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a0bdef05e8d84bfa7d22c79b6665ee336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a7c7691299d4af6f3ca50b44ce61319be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a53df46a4395b27de82411aa5f5e5f447</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ae1e760e0f0bcd9d33686684a8fed3a71</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a55bb235ca550e142da40c196060f9656</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a016e326c0b26a2169735b2f636604a37</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9a39c63c3a50a73e434e3ffc30e771d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9bed7301418ae6b88cf586be9f2c2b87</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ac6a03fb4489d408d31e7b1420276d64b</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a36a29969d9e7761e271ab3b4aa89e677</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aa80dc6c08703b3051b7fdfe0572e42ef</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ad203024c89997127efce0c825766acdb</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2e293a9e0862f1411c313ab539f54e44</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a23b21c62df879039325d912fb4fc9c2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a6d7b8245de9e0db968decf7c7ab7baba</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afdb98c7789148813a834a191f6d81aae</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aba306591c5fe30a958921940641918e0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ae79cb661a9f1e3b21619b2ec920d96be</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a676da86ec4bf326cc6d53c27b29be863</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ae64164e88234b35c0cc534ecfbae14a6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a16214a6fc9b7cb2340795aa4d308e91e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>abc82a0fb1dcf357b3f3264f962fcbad0</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a829eb8ba7845fd3a464f79249d40e9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::ParameterVector</type>
      <name>params</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a54440baf7570c4fb39d7ab00547c04e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>param_index</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a64c363f65c899de679af27dd6c05dac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>param_thyra_vec</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a1aa4fef75652efccf6f3ecb6ccd9290e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>x_dot_vec</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>affc7dde656d8ca4d58766ba7138f3008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Thyra::SaveDataStrategy &gt;</type>
      <name>saveDataStrategy</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4dc520488694bb2eea156e13c5eaf6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>implement_dfdp</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ac2d67a22b8fc7c28c771a9f3e3682f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>weight_vec_</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a275e1977da8e78790cc032483da5c78a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a92e4672be84fa5833e24583c1c395fd3</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9b5a1d2fd3d896a6ae447db828aa8178</anchor>
      <arglist>(const NOX::Thyra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>af9a13d2cb3f87043545d086f5df9a786</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a0bdef05e8d84bfa7d22c79b6665ee336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a7c7691299d4af6f3ca50b44ce61319be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a53df46a4395b27de82411aa5f5e5f447</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ae1e760e0f0bcd9d33686684a8fed3a71</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a55bb235ca550e142da40c196060f9656</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a016e326c0b26a2169735b2f636604a37</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9a39c63c3a50a73e434e3ffc30e771d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9bed7301418ae6b88cf586be9f2c2b87</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ac6a03fb4489d408d31e7b1420276d64b</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a36a29969d9e7761e271ab3b4aa89e677</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aa80dc6c08703b3051b7fdfe0572e42ef</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ad203024c89997127efce0c825766acdb</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2e293a9e0862f1411c313ab539f54e44</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a23b21c62df879039325d912fb4fc9c2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a6d7b8245de9e0db968decf7c7ab7baba</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afdb98c7789148813a834a191f6d81aae</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aba306591c5fe30a958921940641918e0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ae79cb661a9f1e3b21619b2ec920d96be</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a676da86ec4bf326cc6d53c27b29be863</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ae64164e88234b35c0cc534ecfbae14a6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a16214a6fc9b7cb2340795aa4d308e91e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>abc82a0fb1dcf357b3f3264f962fcbad0</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Group</name>
    <filename>classNOX_1_1Epetra_1_1Group.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a235d0540d1b7a81f9fe293d2e40f9a83</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>af89d1c72fb136f638ea296bf2bcf029e</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linSys)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2376b5186018058863cbd33e109e201d</anchor>
      <arglist>(const NOX::Epetra::Group &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aed00a22ff227ee2657ae44a5cbcedf7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a461641a567f337a7aa3249b6dfdd8d69</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a74ede301b13e5617b905b2234fe74ab2</anchor>
      <arglist>(const NOX::Epetra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ad539c91b6fa73114ae44c419ba04acd7</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt;</type>
      <name>getRequiredInterface</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a969d4dc946960028ea42d2211b0ce129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Epetra::LinearSystem &gt;</type>
      <name>getLinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a3cd6b2bd3a6a68644c08e3f9b4a89461</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>getLinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>abfb3f1eba4080ef46f13e3d2ab0a445d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getJacobianConditionNumber</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a69d9972d5df927c2989ff526a3d599fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>disableLinearResidualComputation</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aba3f1b0a93241367ffe80def2c33ae54</anchor>
      <arglist>(const bool disableChoice)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a098f135e50238d2a690636f5ae536e2a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a494995fa24d49afedaa319089eb5b9ab</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aef10f7019097fe83ea055dcf29df0402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>abe2870acb70eca31d6c56b27a960a16f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2aaa7683fb5f41bffec408a185e000bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2066b02281a058f146c2aeafd654f7fe</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a42e274af15740837a37ea8be118929b5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a25f809f91e90e442d4c0480d3e88ef63</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a6e059f494ded95bfda586482f1bc739e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0e6d215101c7637c4084c9f9b4c7b0b2</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ace2360d4e1878144447e1e4727c00fda</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a9ad86703435fd174fc5a6125fbc321d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7895f69a656aa6f4a53ef04112c8c08a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7996519446060d1a0db07d1fcf91f71d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a50743da9ae5e877985dceb5574d156d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNormNewtonSolveResidual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a388298189a564bd479774412d921aa52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa9fc82c5b25632c962d7db1fa91fb3a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConditionNumber</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa1a8d5b6586f4213578b71eaec611a37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a3302b608c0f436a14c475536f0dcc29c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac2a4386943e3e8f3fb7c9db73b40fc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a52d36e005b4293184d3e67277d62c580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac9d0d741b25f1c33796d1b9aa7675662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a28d2702c9f4bc7cfdc92555dd00c9de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac3a6c8641aa0a92e9f758d6e06787ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa34950f12577cfef6dda280ccbb87c6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a1dcd3db35658374309d214bedf05deb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a6d5fb9a25af751e8a051e612d013e14b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>getNormLastLinearSolveResidual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aae541cd0515d6c551f5e2950cd7aa619</anchor>
      <arglist>(double &amp;residual) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ab7dde8d4226ddd1c1b8ee63464862192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeNormNewtonSolveResidual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a1f5e1517ffe0318a8089496b5b576c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const NOX::Utils</type>
      <name>utils</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a49718a11017b881578d01d8a868a7349</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>normNewtonSolveResidual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a1af24396fb54983866a65c4a82b1660c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>conditionNumber</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aeb5c2aa5dc41fe1e1215c67427f03911</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; AztecOOConditionNumber &gt;</type>
      <name>azConditionNumberPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7a1f684afd373d0f5933c5fed1838a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt;</type>
      <name>userInterfacePtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a35678c6f63a1cb5348b48a84694334eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>xVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aeeacb5c18a2e60e78fd9a891c945cd34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>xVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7ebb1b6ecf2d328428fcbd190f098ea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>RHSVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ab2c778c58708b3a53a38234963aa05fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>RHSVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a20f29786ff4d1f5d85d21f0bb6c3c17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>gradVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a63b22e8b615a59dbdb9b981771dea8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>gradVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa4209dfbe651ff2b9d0a6af0fe34d5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>NewtonVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a593c67dc05a4dbf7de6e52b0a68b6c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>NewtonVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a456bbd737c3713b8234c2f4ab48e23d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>tmpVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ae4b8b40c323efac008ec628cde2b8a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::SharedObject&lt; NOX::Epetra::LinearSystem, NOX::Epetra::Group &gt; &gt;</type>
      <name>sharedLinearSystemPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>acaa5eb71342ddff27a6df14a18ed3126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::SharedObject&lt; NOX::Epetra::LinearSystem, NOX::Epetra::Group &gt; &amp;</type>
      <name>sharedLinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>abcfe5a323d9ce273e0eb8dbf5bc69741</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a098f135e50238d2a690636f5ae536e2a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a494995fa24d49afedaa319089eb5b9ab</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aef10f7019097fe83ea055dcf29df0402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>abe2870acb70eca31d6c56b27a960a16f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2aaa7683fb5f41bffec408a185e000bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2066b02281a058f146c2aeafd654f7fe</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a42e274af15740837a37ea8be118929b5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a25f809f91e90e442d4c0480d3e88ef63</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a6e059f494ded95bfda586482f1bc739e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0e6d215101c7637c4084c9f9b4c7b0b2</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ace2360d4e1878144447e1e4727c00fda</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a9ad86703435fd174fc5a6125fbc321d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7895f69a656aa6f4a53ef04112c8c08a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7996519446060d1a0db07d1fcf91f71d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a50743da9ae5e877985dceb5574d156d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNormNewtonSolveResidual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a388298189a564bd479774412d921aa52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa9fc82c5b25632c962d7db1fa91fb3a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConditionNumber</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa1a8d5b6586f4213578b71eaec611a37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a3302b608c0f436a14c475536f0dcc29c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac2a4386943e3e8f3fb7c9db73b40fc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a52d36e005b4293184d3e67277d62c580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac9d0d741b25f1c33796d1b9aa7675662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a28d2702c9f4bc7cfdc92555dd00c9de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac3a6c8641aa0a92e9f758d6e06787ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa34950f12577cfef6dda280ccbb87c6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a1dcd3db35658374309d214bedf05deb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a6d5fb9a25af751e8a051e612d013e14b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>getNormLastLinearSolveResidual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aae541cd0515d6c551f5e2950cd7aa619</anchor>
      <arglist>(double &amp;residual) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>xVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aeeacb5c18a2e60e78fd9a891c945cd34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>xVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7ebb1b6ecf2d328428fcbd190f098ea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>RHSVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ab2c778c58708b3a53a38234963aa05fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>RHSVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a20f29786ff4d1f5d85d21f0bb6c3c17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>gradVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a63b22e8b615a59dbdb9b981771dea8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>gradVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa4209dfbe651ff2b9d0a6af0fe34d5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>NewtonVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a593c67dc05a4dbf7de6e52b0a68b6c48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector &amp;</type>
      <name>NewtonVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a456bbd737c3713b8234c2f4ab48e23d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>tmpVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ae4b8b40c323efac008ec628cde2b8a6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::SharedObject&lt; NOX::Epetra::LinearSystem, NOX::Epetra::Group &gt; &gt;</type>
      <name>sharedLinearSystemPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>acaa5eb71342ddff27a6df14a18ed3126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::SharedObject&lt; NOX::Epetra::LinearSystem, NOX::Epetra::Group &gt; &amp;</type>
      <name>sharedLinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>abcfe5a323d9ce273e0eb8dbf5bc69741</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Thyra::Group</name>
    <filename>classNOX_1_1Thyra_1_1Group.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a38de43756ab029127655bdbc069c9af1</anchor>
      <arglist>(const NOX::Thyra::Vector &amp;initial_guess, const Teuchos::RCP&lt; const ::Thyra::ModelEvaluator&lt; double &gt; &gt; &amp;model, const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;weight_vector=Teuchos::null, const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;right_weight_vector=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a3758bcdc3578be5a3ad6532c5b076904</anchor>
      <arglist>(const NOX::Thyra::Vector &amp;initial_guess, const Teuchos::RCP&lt; const ::Thyra::ModelEvaluator&lt; double &gt; &gt; &amp;model, const Teuchos::RCP&lt; ::Thyra::LinearOpBase&lt; double &gt; &gt; &amp;linear_op, const Teuchos::RCP&lt; const ::Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt; &amp;lows_factory, const Teuchos::RCP&lt; ::Thyra::PreconditionerBase&lt; double &gt; &gt; &amp;prec_op, const Teuchos::RCP&lt; ::Thyra::PreconditionerFactoryBase&lt; double &gt; &gt; &amp;prec_factory, const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;weight_vector=Teuchos::null, const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;right_weight_vector=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a15e3afc46d56980b1c4cb45c7a7599fe</anchor>
      <arglist>(const NOX::Thyra::Group &amp;source, NOX::CopyType type=DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Group</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afe12d16061856e041389248a1fb901a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aedc115d416746eb7ddda266006a915e8</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a066d5c1890603f81d131101732c0ab0b</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a42a765af5a6f409652032bd00b684049</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>::Thyra::ModelEvaluatorBase::InArgs&lt; double &gt; &amp;</type>
      <name>getNonconstInArgs</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a3104f3d07a407be53dbba50d6dfd89c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>abce50aac0aaafc4c74527ef86a43a194</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2c796635c94a22bdbed973387163199f</anchor>
      <arglist>(const NOX::Thyra::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ad15ae6058f024d77c053f0745c3ef94e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>adc379f3434b3b7036c18a655131fe388</anchor>
      <arglist>(const NOX::Thyra::Group &amp;grp, const NOX::Thyra::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a77844a29d5f6a02d95ab294f48a259bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aeedffa57479128c777f78565902215a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aebf0ee549de9fd7b013be91200f87290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a88722de7a732f0d8eb58c8e2d3461d62</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ab3590ac69469a591676deda9634a6b71</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a71fb12ee56d1ee2e9d7ffd4734873099</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2335a1478c759b45f974c9c21d91a059</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4d561f131533d92f5ef8a93aa439e60f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afb2a0e8417827c82c1faa0b1d4b5e747</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a97014fa0cc8507e3f57d8d5573e79ea6</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ad08f9e9bab65447c8f5be6212dfa4c99</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2ec334fd6f14591ed0e1ff0cc7b78cee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4bd563160ecbb3554e9d2dea47ca588f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afb39c207331497aae7eab448cfff17e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2d18ad814a8f2a45078083dca945e121</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a8f9b29a4e4a0cfeb6daaac46760a821b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getScaledX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aaed3ba7abf9a3401969952c4aa457fc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aede3a23bab53076bf82cbb820573fb18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a1a378c1b6b0c00270485f8c24497aebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a7492f3a9c09b84c589922bb4ddd03db5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a66fcb74d2ed7b196f8952f655cba7c5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a24bc1cfb7d27618ad5099665429ab908</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a18d382a2bc9a3913fb61740ff75d2b94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aeb15c88fa972340bf0f110fe315547ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>af5d9f9dbcad9303ab332cd07ad635efe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetIsValidFlags</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a1bd8635f911793823473f961b1e9dbd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a22b027914ff3cbb0030629087580fe23</anchor>
      <arglist>(Teuchos::ParameterList &amp;p, const ::Thyra::MultiVectorBase&lt; double &gt; &amp;input,::Thyra::MultiVectorBase&lt; double &gt; &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateLOWS</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a5b66ce62aeea7493095bf8871241227c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::ModelEvaluator&lt; double &gt; &gt;</type>
      <name>model_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>af0b37547b56933c194dd60fe102f8b17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Vector &gt;</type>
      <name>x_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9845a8449218b0e04dc62197ab15c0c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Vector &gt;</type>
      <name>f_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>addb658fede2093f47cfeb967e7aef398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Vector &gt;</type>
      <name>newton_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>af8ce389db8ebf1cdac07839a617cb64b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Vector &gt;</type>
      <name>gradient_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4ed9f729edc671909bda0bbc04c2ea68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::SharedObject&lt; ::Thyra::LinearOpWithSolveBase&lt; double &gt;, NOX::Thyra::Group &gt; &gt;</type>
      <name>shared_jacobian_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>abb3771b31b751f9d8e68d033fcbbdd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::LinearOpBase&lt; double &gt; &gt;</type>
      <name>lop_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a43c9efd44a2cb6932cf2d8702da0ecff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>lows_factory_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a145eee12fd36e3bfc66d2eaa16b0b87a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::DefaultLinearOpSource&lt; double &gt; &gt;</type>
      <name>losb_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aed3f9ae401cbeea2bf5be964afd72e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::PreconditionerBase&lt; double &gt; &gt;</type>
      <name>prec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a8d13fc6bde1c4bbe6cdcd740ff335c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::PreconditionerFactoryBase&lt; double &gt; &gt;</type>
      <name>prec_factory_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a521421339690059473e9a418ff2e3f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mutable::Thyra::ModelEvaluatorBase::InArgs&lt; double &gt;</type>
      <name>in_args_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afbcb2543c4759dd5b631dfdbcdbb09df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mutable::Thyra::ModelEvaluatorBase::OutArgs&lt; double &gt;</type>
      <name>out_args_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>adf6a636fb81839b161f4773057594d97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>weight_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aa0cf912ca40f1623d2ced6873917f52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>right_weight_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a9937bc0c654ecc33160f714904dbbe9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>inv_weight_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a8513371f13bfa46d73e425fb40b54fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>inv_right_weight_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2ddf605880d6c0eb735ea2bd2e2bdbee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Vector &gt;</type>
      <name>scaled_x_vec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a66f279ab32e8524880d0c159aaabed9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>abce50aac0aaafc4c74527ef86a43a194</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2c796635c94a22bdbed973387163199f</anchor>
      <arglist>(const NOX::Thyra::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ad15ae6058f024d77c053f0745c3ef94e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>adc379f3434b3b7036c18a655131fe388</anchor>
      <arglist>(const NOX::Thyra::Group &amp;grp, const NOX::Thyra::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a77844a29d5f6a02d95ab294f48a259bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aeedffa57479128c777f78565902215a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aebf0ee549de9fd7b013be91200f87290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a88722de7a732f0d8eb58c8e2d3461d62</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ab3590ac69469a591676deda9634a6b71</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a71fb12ee56d1ee2e9d7ffd4734873099</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2335a1478c759b45f974c9c21d91a059</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4d561f131533d92f5ef8a93aa439e60f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afb2a0e8417827c82c1faa0b1d4b5e747</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a97014fa0cc8507e3f57d8d5573e79ea6</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>ad08f9e9bab65447c8f5be6212dfa4c99</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2ec334fd6f14591ed0e1ff0cc7b78cee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a4bd563160ecbb3554e9d2dea47ca588f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>afb39c207331497aae7eab448cfff17e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a2d18ad814a8f2a45078083dca945e121</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a8f9b29a4e4a0cfeb6daaac46760a821b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getScaledX</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aaed3ba7abf9a3401969952c4aa457fc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aede3a23bab53076bf82cbb820573fb18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a1a378c1b6b0c00270485f8c24497aebd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a7492f3a9c09b84c589922bb4ddd03db5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a66fcb74d2ed7b196f8952f655cba7c5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a24bc1cfb7d27618ad5099665429ab908</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>a18d382a2bc9a3913fb61740ff75d2b94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>aeb15c88fa972340bf0f110fe315547ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Thyra_1_1Group.html</anchorfile>
      <anchor>af5d9f9dbcad9303ab332cd07ad635efe</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Group</name>
    <filename>classLOCA_1_1Epetra_1_1Group.html</filename>
    <base virtualness="virtual">NOX::Epetra::Group</base>
    <base virtualness="virtual">LOCA::Abstract::Group</base>
    <base virtualness="virtual">LOCA::Abstract::TransposeSolveGroup</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a651b9cb33fc89482167ed10ad4ebd5dc</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; LOCA::Epetra::Interface::Required &gt; &amp;i, NOX::Epetra::Vector &amp;initialGuess, const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a606a9ee1fafabae4c58583f88b7b5d67</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; LOCA::Epetra::Interface::Required &gt; &amp;i, NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linSys, const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac2a92a50a6d76a652234ebe5146518e8</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; LOCA::Epetra::Interface::TimeDependent &gt; &amp;i, NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linSys, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;shiftedLinSys, const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a5f956fca35eedc0433d34bd1d4bae55b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, Teuchos::ParameterList &amp;printingParams, const Teuchos::RCP&lt; LOCA::Epetra::Interface::TimeDependentMatrixFree &gt; &amp;i, NOX::Epetra::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linSys, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;shiftedLinSys, const LOCA::ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a9db88ecb771c7d48e3d614e63bacace4</anchor>
      <arglist>(const Group &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a93c55a29d0307405ae2736e92d0bc7da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a5087510740be731b35d98192c99aae60</anchor>
      <arglist>(const Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setFreeEnergyInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a48375e512d38fa03d48a4c593880a89e</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Epetra::Interface::FreeEnergy &gt; &amp;iFE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>declareSeparateMatrixMemory</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>adfc25aabc4b591798df8fd319a2cf621</anchor>
      <arglist>(bool separateMem=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt;</type>
      <name>getUserInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>af65aea294ec35643b4f16653158accad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a50c024d4aa89ffe2391cb44034303b95</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setScaleVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4132b09c1b11a71297362101ce866aea</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJacobianOperatorForSolve</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aca5c40c2a068248f7d81aa919ee8c557</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;op) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Epetra::LinearSystem &gt;</type>
      <name>getComplexLinearSystem</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>afb386f265f1923e137d61b3eeebfb16f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>getComplexLinearSystem</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2475a36b208759b209c8230e8d12822a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a60791c77710eab832624b0b2791aa3b8</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0f1a18cfeb7e556dfdd0673ac3622b71</anchor>
      <arglist>(const NOX::Epetra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aaee8a7ed9d1875f4a44fe72da4f22af8</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0b3a8b4bdc4446a10481f8ad1e3c8f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a034c7612859f31f606acbdba0f182fde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a5f8facbb7268894cfcaa04f51a95f0ca</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>add650fc5e97781d284aaa0bc0239fb78</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ad66eeadf8955a5520add5c25e96a6073</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a339aaff62c203e21b85843ed34cbbe6f</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a66b55b7228ee3e5c8b4d809ced7a0928</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa15ed89a9913da0ebb26e1e3e6fb508e</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>addc00941b8ecc665ccb8f382113e06a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>adb928be4261477bc7fef123b433b1e44</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>afaf23cee7432ccfa534354b9843bb48d</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a43557449157703ed343653340d39241e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ad26fe248021e09c1eb63bf2e9b72b327</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a8f2dd51e1be4b3726cf10a2451d731f0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2b0c316c0a58ea2ba1add2629a838946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4e3ab2254c2b8048ada3bad6c4516766</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a6327f2706194092d26edc4d350afde17</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a9095958a720e790c811f7639298694cf</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a417536f45303dd05bff3569c743095f2</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a87e0d80ff511a7e6dd99e8701460a205</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a21b44d6dcfa7ab58dfc5fc5d8118b727</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a99720f0a3bc0bff65381c5ca43f2fc5b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0b76b6101841a2d350ceb4b37f054556</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>afad20a8f12e08732d4061eb3bf1e90ed</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeSecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a565f518bddf2e54fa0ba59af4fe2c836</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac4ee171fdbab6540df9871708e4b2673</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a07a157d3401ea571aae70672ff9e89b2</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a76c6ec049a45740366902f7da961ef7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a005be7a6a84e12faa3a7a0bb30e4a3b2</anchor>
      <arglist>(double frequency)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a26226222e6a725d0c9cb2f2c09d380b4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac7638ecea81be094fc8791b2de043e74</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a24914ad35beba55f1d25b70d498e0e8c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a65cdcb6a716862f9cc405c2cd5d11061</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>af9565725d96931b2aa57459679b0ffe7</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4d5aeb59b4eed708c63823ce483e5306</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ae3e048466f562a32167580296f4a1ff8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a1564228abc386e4da5e87d1b53adc70d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a48ce1a3e50fcc19a593728997db1988d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList &amp;</type>
      <name>printParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0ee7565c57c4595aed0b431d9ddd326b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::ParameterVector</type>
      <name>params</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a358a218d057e6a34d90571457beb3270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Interface::Required &gt;</type>
      <name>userInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0dbcaaee8c1bc81b3f1ae2e7d02562c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Interface::TimeDependent &gt;</type>
      <name>userInterfaceTime</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>adcfee56d4b23fbe95391228953286615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Interface::TimeDependentMatrixFree &gt;</type>
      <name>userInterfaceTimeMF</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aaa81fb0e3d7fd35601792f5edcc719f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::Interface::FreeEnergy &gt;</type>
      <name>userInterfaceFreeEnergy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aff8fc960776e43497a96b44204f330a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::SharedObject&lt; NOX::Epetra::LinearSystem, LOCA::Epetra::Group &gt; &gt;</type>
      <name>shiftedSharedLinearSystem</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0b36025e1a58b1b3257aad9531ea254f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidShiftedPrec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4553bb9835f22ad9166215a7f7f8ab08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>alpha_</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac47191098b790ab4d564dc1c0f243734</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>beta_</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7e99cbfbae7a769bb754a8eac3599984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>tmpVectorPtr2</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a7f6d3f651e6106fb43faf87d1502c8f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>scaleVecPtr</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aeecd90411de100a5d0292135884d229e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Epetra::TransposeLinearSystem::AbstractStrategy &gt;</type>
      <name>tls_strategy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a057754d3d4b43d865214f0c282258468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::SharedObject&lt; NOX::Epetra::LinearSystem, LOCA::Epetra::Group &gt; &gt;</type>
      <name>complexSharedLinearSystem</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a762290e74a861c43080c4f952f6a3bd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockCrsMatrix &gt;</type>
      <name>complexMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a43974cbb4c37dc9298a2910eae8dc5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>complexVec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a3c77e5d7804be1ee7a6bbf963156d67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a5d567f6d3b41cca3086737a253f30439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidComplexPrec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>abee0bbe9300e73ac939cb56fe1d3fe31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>separateMatrixMemoryDeclared</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4303bd033f712fd05aa7f5313f89f3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a60791c77710eab832624b0b2791aa3b8</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0f1a18cfeb7e556dfdd0673ac3622b71</anchor>
      <arglist>(const NOX::Epetra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aaee8a7ed9d1875f4a44fe72da4f22af8</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0b3a8b4bdc4446a10481f8ad1e3c8f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a034c7612859f31f606acbdba0f182fde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a5f8facbb7268894cfcaa04f51a95f0ca</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>add650fc5e97781d284aaa0bc0239fb78</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ad66eeadf8955a5520add5c25e96a6073</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a339aaff62c203e21b85843ed34cbbe6f</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a66b55b7228ee3e5c8b4d809ced7a0928</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>aa15ed89a9913da0ebb26e1e3e6fb508e</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function">
      <type>const LOCA::ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>addc00941b8ecc665ccb8f382113e06a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>adb928be4261477bc7fef123b433b1e44</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>afaf23cee7432ccfa534354b9843bb48d</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a43557449157703ed343653340d39241e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ad26fe248021e09c1eb63bf2e9b72b327</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a8f2dd51e1be4b3726cf10a2451d731f0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a2b0c316c0a58ea2ba1add2629a838946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeScaledDotProduct</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4e3ab2254c2b8048ada3bad6c4516766</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a, const NOX::Abstract::Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a6327f2706194092d26edc4d350afde17</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a9095958a720e790c811f7639298694cf</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a417536f45303dd05bff3569c743095f2</anchor>
      <arglist>(NOX::Abstract::Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a87e0d80ff511a7e6dd99e8701460a205</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a21b44d6dcfa7ab58dfc5fc5d8118b727</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a99720f0a3bc0bff65381c5ca43f2fc5b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a0b76b6101841a2d350ceb4b37f054556</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>afad20a8f12e08732d4061eb3bf1e90ed</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeSecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a565f518bddf2e54fa0ba59af4fe2c836</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac4ee171fdbab6540df9871708e4b2673</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a07a157d3401ea571aae70672ff9e89b2</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a76c6ec049a45740366902f7da961ef7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a005be7a6a84e12faa3a7a0bb30e4a3b2</anchor>
      <arglist>(double frequency)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a26226222e6a725d0c9cb2f2c09d380b4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ac7638ecea81be094fc8791b2de043e74</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a24914ad35beba55f1d25b70d498e0e8c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a65cdcb6a716862f9cc405c2cd5d11061</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>af9565725d96931b2aa57459679b0ffe7</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>a4d5aeb59b4eed708c63823ce483e5306</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Group.html</anchorfile>
      <anchor>ae3e048466f562a32167580296f4a1ff8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Petsc::Group</name>
    <filename>classNOX_1_1Petsc_1_1Group.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a5295772db546ebd3b0795a3d466193d9</anchor>
      <arglist>(Interface &amp;i, Vec &amp;x, Mat &amp;J)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>af82690e4bfea4e2cbfd383fd05c47848</anchor>
      <arglist>(const Group &amp;source, CopyType type=DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>aed00a22ff227ee2657ae44a5cbcedf7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a461641a567f337a7aa3249b6dfdd8d69</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a8812d352fc408b28c16c6a5c2cc5f5f2</anchor>
      <arglist>(const Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ad539c91b6fa73114ae44c419ba04acd7</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a913663a1050eeb0e6bb791ae26ce1eb0</anchor>
      <arglist>(const Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a5d71e87269aed71e94c840bf0b926c93</anchor>
      <arglist>(const Abstract::Group &amp;grp, const Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>aef10f7019097fe83ea055dcf29df0402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>abe2870acb70eca31d6c56b27a960a16f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a2aaa7683fb5f41bffec408a185e000bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a2066b02281a058f146c2aeafd654f7fe</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a4b6d117a0d51d12c6b48b744deb76d7a</anchor>
      <arglist>(const Abstract::Vector &amp;input, Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ae8f4bcace3adeabfd99017d19c220cda</anchor>
      <arglist>(const Abstract::Vector &amp;input, Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a73eb3386b7caa66e1dcb1e2175e90450</anchor>
      <arglist>(const Vector &amp;input, Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>abd43bc8eefec1d651b48e909f8087ce1</anchor>
      <arglist>(Teuchos::ParameterList &amp;, const Abstract::Vector &amp;input, Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a9ad86703435fd174fc5a6125fbc321d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7895f69a656aa6f4a53ef04112c8c08a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7996519446060d1a0db07d1fcf91f71d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a50743da9ae5e877985dceb5574d156d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a3302b608c0f436a14c475536f0dcc29c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ac2a4386943e3e8f3fb7c9db73b40fc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a52d36e005b4293184d3e67277d62c580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ac9d0d741b25f1c33796d1b9aa7675662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a28d2702c9f4bc7cfdc92555dd00c9de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ad55981d0a6819b0e788c32e9d3bcf7d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a44c32936ade74a71095ff4e40f7f1930</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ab15619b9a8c2843e993ed2c6e7dbaaea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a21aaf65928adf86183d5a8d90f49877b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ab7dde8d4226ddd1c1b8ee63464862192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>normRHS</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ac5303dd6977bc9267e19d18255fa9b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SharedJacobian *</type>
      <name>sharedJacobianPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a5f79b8423e73f1e9ebc9509f6a5d271f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SharedJacobian &amp;</type>
      <name>sharedJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a0e291a7a333b7f3d1c2a85e2b182b4ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>jacType</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ae653da869b812990f68702ed5226cf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Interface &amp;</type>
      <name>userInterface</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a565ea2b392a40daee0bb6fba5327d736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>xVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a60558e0225856566ab696cddd4fe439b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>RHSVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7d11a9407390c1ea853b78addc36ae6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>gradVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a95349d25b6d256ff0089ddb5fe0ee689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>NewtonVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7e9bc423d86991676fb0268a1431a8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a913663a1050eeb0e6bb791ae26ce1eb0</anchor>
      <arglist>(const Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a5d71e87269aed71e94c840bf0b926c93</anchor>
      <arglist>(const Abstract::Group &amp;grp, const Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>aef10f7019097fe83ea055dcf29df0402</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>abe2870acb70eca31d6c56b27a960a16f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a2aaa7683fb5f41bffec408a185e000bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a2066b02281a058f146c2aeafd654f7fe</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a4b6d117a0d51d12c6b48b744deb76d7a</anchor>
      <arglist>(const Abstract::Vector &amp;input, Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ae8f4bcace3adeabfd99017d19c220cda</anchor>
      <arglist>(const Abstract::Vector &amp;input, Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a73eb3386b7caa66e1dcb1e2175e90450</anchor>
      <arglist>(const Vector &amp;input, Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Group::ReturnType</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>abd43bc8eefec1d651b48e909f8087ce1</anchor>
      <arglist>(Teuchos::ParameterList &amp;, const Abstract::Vector &amp;input, Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a9ad86703435fd174fc5a6125fbc321d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7895f69a656aa6f4a53ef04112c8c08a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7996519446060d1a0db07d1fcf91f71d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a50743da9ae5e877985dceb5574d156d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a3302b608c0f436a14c475536f0dcc29c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ac2a4386943e3e8f3fb7c9db73b40fc97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a52d36e005b4293184d3e67277d62c580</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ac9d0d741b25f1c33796d1b9aa7675662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a28d2702c9f4bc7cfdc92555dd00c9de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ad55981d0a6819b0e788c32e9d3bcf7d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a44c32936ade74a71095ff4e40f7f1930</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>ab15619b9a8c2843e993ed2c6e7dbaaea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a21aaf65928adf86183d5a8d90f49877b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>xVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a60558e0225856566ab696cddd4fe439b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>RHSVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7d11a9407390c1ea853b78addc36ae6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>gradVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a95349d25b6d256ff0089ddb5fe0ee689</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vector</type>
      <name>NewtonVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Group.html</anchorfile>
      <anchor>a7e9bc423d86991676fb0268a1431a8ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Abstract::Group</name>
    <filename>classLOCA_1_1Abstract_1_1Group.html</filename>
    <base virtualness="virtual">LOCA::Homotopy::AbstractGroup</base>
    <base virtualness="virtual">LOCA::TurningPoint::MinimallyAugmented::FiniteDifferenceGroup</base>
    <base virtualness="virtual">LOCA::Pitchfork::MinimallyAugmented::AbstractGroup</base>
    <base virtualness="virtual">LOCA::Hopf::MinimallyAugmented::FiniteDifferenceGroup</base>
    <base virtualness="virtual">LOCA::PhaseTransition::AbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ad8bed569685574f8f51a96b6a193434a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aed1d392b5a3988c1835ac2daa786772c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::DerivUtils &gt; &amp;deriv)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ab9e99198c045cff6433d56ba62d2ee8d</anchor>
      <arglist>(const Group &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aa1c5112c022634cf41c56b6768af636d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a357949ba9501a2b39d422f937e9e72ca</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ade7e3c812479b936480cc0d114c0e498</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a3d8aa3c4b9431ea79124615e573acf38</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a6e761f513be4307aeaf9df13dddd81a8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ae62beaaaf48d043751820493816b4380</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeSecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aace03aaea50a5834a67c72008723a065</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a26759035f8363c7d4f30f98566f4428f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a389a03a5bd95f7ab77a9586031f897c0</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ac0bbb8ec5f930ce8dec84cd34c32bc5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ad3e4e32781845cc2a1cbb569563bf31f</anchor>
      <arglist>(double frequency)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ab9a782913cc044bea4f5a60baa9b1e1f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a49185e0299cb03d1250f9c01f580b189</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a50be625710fecf0460956fdbc092bd71</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a2f03b33f89a003384fbffc6607cd4b0a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a768e2fb15d6011c6976819554c7f02e4</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ac37613e28158654e5c5609925f8b901d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a31a0f35e246af3b930187999651ae04d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a0d7af16d5f9d9bce3c037a1fe556f2b2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyCompletedStep</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ae4fe8b9ea7be452cae4e836d29543cd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a1f367b7a316488e421176b184ab7a4f4</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>af11e79abab349f89349605a2e1c6104e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a94a2b2f071cea6023810cfd9d707e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>augmentJacobianForHomotopy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a357949ba9501a2b39d422f937e9e72ca</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ade7e3c812479b936480cc0d114c0e498</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a3d8aa3c4b9431ea79124615e573acf38</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a6e761f513be4307aeaf9df13dddd81a8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyShiftedMatrixInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ae62beaaaf48d043751820493816b4380</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeSecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>aace03aaea50a5834a67c72008723a065</anchor>
      <arglist>(double alpha, double beta)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a26759035f8363c7d4f30f98566f4428f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applySecondShiftedMatrixMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a389a03a5bd95f7ab77a9586031f897c0</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ac0bbb8ec5f930ce8dec84cd34c32bc5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeComplex</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ad3e4e32781845cc2a1cbb569563bf31f</anchor>
      <arglist>(double frequency)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplex</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ab9a782913cc044bea4f5a60baa9b1e1f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a49185e0299cb03d1250f9c01f580b189</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a50be625710fecf0460956fdbc092bd71</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTranspose</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a2f03b33f89a003384fbffc6607cd4b0a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input_real, const NOX::Abstract::Vector &amp;input_imag, NOX::Abstract::Vector &amp;result_real, NOX::Abstract::Vector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a768e2fb15d6011c6976819554c7f02e4</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyComplexTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ac37613e28158654e5c5609925f8b901d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_real, const NOX::Abstract::MultiVector &amp;input_imag, NOX::Abstract::MultiVector &amp;result_real, NOX::Abstract::MultiVector &amp;result_imag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a31a0f35e246af3b930187999651ae04d</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a0d7af16d5f9d9bce3c037a1fe556f2b2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyCompletedStep</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>ae4fe8b9ea7be452cae4e836d29543cd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>a1f367b7a316488e421176b184ab7a4f4</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeFreeEnergy</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Group.html</anchorfile>
      <anchor>af11e79abab349f89349605a2e1c6104e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Homotopy::Group</name>
    <filename>classLOCA_1_1Homotopy_1_1Group.html</filename>
    <base>LOCA::MultiContinuation::AbstractGroup</base>
    <base>LOCA::Extended::MultiAbstractGroup</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>af288866f86a959883f0d2d2aafbc8768</anchor>
      <arglist>(Teuchos::ParameterList &amp;locaSublist, const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Homotopy::AbstractGroup &gt; &amp;g, double scaleRandom=1.0, double scaleInitialGuess=0.0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a3e0922cb8d82daec7fea437fd05dea60</anchor>
      <arglist>(Teuchos::ParameterList &amp;locaSublist, const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Homotopy::AbstractGroup &gt; &amp;g, const NOX::Abstract::Vector &amp;randomVector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>abf720da4842953bee6bcdaf9c40be0c9</anchor>
      <arglist>(const Group &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aa883ab62d911992b5e67730218de2327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a0a3a47df2ce84acd19b3bc29c6205c63</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4f66fbc8584ca19977802dfb2b54f280</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>af7b4f65a2178c5201c6706d650d7fbc5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4021b6e646b0c66901f0ec452c9f925c</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad1906227fa6892734796c5d8767f7add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a8a48064de6128fdd9fb8087217eabc6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad59acae7ca6b912de3e7214789d63110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a49f5755c08cd7d2118c2c46644cca5d3</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad61faba4af7cab74b5cd7b2daf6d3af2</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a0c5d7bcc7db331e6be699c8ecbf102a5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aad23d79e67958db55a5ccd35d62c2a83</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a2861eb9564a0f6f9e498321cf92f4de6</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9308627d35aecc12c0e3edae160255ce</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9b5eaa345f415c8ca6e4a0106eb75095</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a43fbfadf092879bdf015e85c74520fcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aee9196fada0ec797b03da739bcee85f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>acc7a5878f15f23f57041afcf76953e07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a6ddc72fec9300c0fe4aec1dd60e92424</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>addf15583dbfdbe5a4c5c256a3acbd5dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a786ff1a5699ab1f9a47d9b70353009d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a7dd80e90c10f312e1c6588b49de30000</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>adbaae77bd8cf0d2c78fa51ac974ad09b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a3a486f31e7c1a7ed777420c0ea46553a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a18813d6d8850201a9a48adcd230d00ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aa89961007efe6e78ae1af70c92fec281</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad14795a964fc6713b556f165601383d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a6078314ac0d136a5d4be86baa89bb74d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ac8e4ec9fa433ad3e72dfcddd8af68ff3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a68871f1465252f4045dcf903b7c60952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a519e44f32e8f0e8ea3884798b76d4e25</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4dbb5228f7a8c43622352949625ebfd2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>acba3a62e575eba78e01771b5297471fc</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ae9651820ca8e9f4446c6b5c598d21da1</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a19754e64145055aea406d9061fe95f37</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a06514614fcf556bfa3b61748dc72525f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ae21c337e5621be7cd2d99bc38502d4a2</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a27d9d0520fa86559854eadb627047b82</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a8adecee3b06c9395e8b278de7118bd8d</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a5f8dbfcf1504eabd6830c0ec8c14101d</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9835e67e01ea1d10fde75ea5a4435e83</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9678455466a65bc9a942c3e62bad6f35</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a1315fc4e00c2adb5847c5fd5c55294f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad3d84cebd76e58b14eed84526a8be0b1</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad52fc01dba88af18840f93b7cc69e831</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetIsValidFlags</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a890dbdb9b7a80c8c691747af58c7bd9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setStepperParameters</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aceac6e072faf78aa6319df552e23fb9d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aa687c9c955dab3cc5a964a972fd78018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Homotopy::AbstractGroup &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aa91e4323cd7720db181b39274aac523f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>gVecPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a466920fb84bdfb1542fc354450caa717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>randomVecPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a0183861742e859c06bd25b70f5c5fef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>newtonVecPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ab91232b858251d181e5cc0083cef6a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>gradVecPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a208dbfadabf18f6ba59438fde642ba7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a40cd68b5030bb59fb582e6af0e144fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4c922bd0ca2ea1ff61dc26549bd5d568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aa21d9d770e5117898d7eaf2d4f5998e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>afdbe3a253b3c6ecc9e3c472e34d6affe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::ParameterVector</type>
      <name>paramVec</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a364d24089bfe6bdd232da2e3dde24abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>conParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aca7c51b4e93ab9691d4bbeace4bf93c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>conParamID</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ac1c7806fdd8c9f7e92101398b4d72514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const std::string</type>
      <name>conParamLabel</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a298d3f8ae0e1eaade2fdc8e52d4d177e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>augmentJacForHomotopyNotImplemented</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a10c222e3d0c62f3977cee005c2829b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a0a3a47df2ce84acd19b3bc29c6205c63</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4f66fbc8584ca19977802dfb2b54f280</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>af7b4f65a2178c5201c6706d650d7fbc5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4021b6e646b0c66901f0ec452c9f925c</anchor>
      <arglist>(const NOX::Abstract::Group &amp;g, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad1906227fa6892734796c5d8767f7add</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a8a48064de6128fdd9fb8087217eabc6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad59acae7ca6b912de3e7214789d63110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a49f5755c08cd7d2118c2c46644cca5d3</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad61faba4af7cab74b5cd7b2daf6d3af2</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a0c5d7bcc7db331e6be699c8ecbf102a5</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aad23d79e67958db55a5ccd35d62c2a83</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a2861eb9564a0f6f9e498321cf92f4de6</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9308627d35aecc12c0e3edae160255ce</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9b5eaa345f415c8ca6e4a0106eb75095</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a43fbfadf092879bdf015e85c74520fcf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isJacobian</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aee9196fada0ec797b03da739bcee85f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>acc7a5878f15f23f57041afcf76953e07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a6ddc72fec9300c0fe4aec1dd60e92424</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>addf15583dbfdbe5a4c5c256a3acbd5dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a786ff1a5699ab1f9a47d9b70353009d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a7dd80e90c10f312e1c6588b49de30000</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>adbaae77bd8cf0d2c78fa51ac974ad09b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a3a486f31e7c1a7ed777420c0ea46553a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a18813d6d8850201a9a48adcd230d00ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>aa89961007efe6e78ae1af70c92fec281</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad14795a964fc6713b556f165601383d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a6078314ac0d136a5d4be86baa89bb74d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ac8e4ec9fa433ad3e72dfcddd8af68ff3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a68871f1465252f4045dcf903b7c60952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a519e44f32e8f0e8ea3884798b76d4e25</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParamsMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a4dbb5228f7a8c43622352949625ebfd2</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>acba3a62e575eba78e01771b5297471fc</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ae9651820ca8e9f4446c6b5c598d21da1</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a19754e64145055aea406d9061fe95f37</anchor>
      <arglist>(std::string paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ParameterVector &amp;</type>
      <name>getParams</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a06514614fcf556bfa3b61748dc72525f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ae21c337e5621be7cd2d99bc38502d4a2</anchor>
      <arglist>(int paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getParam</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a27d9d0520fa86559854eadb627047b82</anchor>
      <arglist>(std::string paramID) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDpMulti</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a8adecee3b06c9395e8b278de7118bd8d</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector &amp;dfdp, bool isValidF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a5f8dbfcf1504eabd6830c0ec8c14101d</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9835e67e01ea1d10fde75ea5a4435e83</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a9678455466a65bc9a942c3e62bad6f35</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>a1315fc4e00c2adb5847c5fd5c55294f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad3d84cebd76e58b14eed84526a8be0b1</anchor>
      <arglist>(const double conParam) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Homotopy_1_1Group.html</anchorfile>
      <anchor>ad52fc01dba88af18840f93b7cc69e831</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x_, const double conParam) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Multiphysics::Group</name>
    <filename>classNOX_1_1Multiphysics_1_1Group.html</filename>
    <base>NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a1c7165f7ef283855c9a7d733887383f2</anchor>
      <arglist>(const Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt; &amp;solvers, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;t, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Group</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a4fb5dda26cfa83674f61c0af6d1b1555</anchor>
      <arglist>(const Group &amp;grp, NOX::CopyType typ)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Group</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a4a7db1eab4ab25131d1fdf298eee1cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a925551ca1678de892e92f6f94afaa5cd</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a22e6942b1202574ec520d689d43c6488</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a8fc0469b95a1efe3c6d639a88100df54</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>ab7ba907c6d8f1c3b57fdb96ee9b7de74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>ae2454c700fe0ec8286143a77cd3ae37f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a75a9b839928d572d504d549596339d2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>aafa51a562f22f97a0975a082705e9502</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>af7d30e66774b0542a77eaa20b9f998f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a611cfc94a5630e575eb8a3e85940888b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a334cc1322c2e489fca57d1864039c853</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a6b00c7e9395a29ecdb0d7932004ae134</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>aafb58ec96364eb08ab817c981175fa10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a33d4d3f9e3dbd1a46326afad3e245401</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a45408b110bcb943ba260066467f97125</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>ab276b9a4607797bb3e58bb24144a4a41</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetIsValid</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>afcf8f32b06cc1e396486a57705526756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt;</type>
      <name>solversVecPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a4ae939415518c2a636885dd8b07b9ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>normRHS</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a8dd345441fe92c8fa11446be72dc1304</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a22e6942b1202574ec520d689d43c6488</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeX</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a8fc0469b95a1efe3c6d639a88100df54</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, const NOX::Abstract::Vector &amp;d, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>ab7ba907c6d8f1c3b57fdb96ee9b7de74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>ae2454c700fe0ec8286143a77cd3ae37f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getX</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a75a9b839928d572d504d549596339d2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>aafa51a562f22f97a0975a082705e9502</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>af7d30e66774b0542a77eaa20b9f998f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getGradient</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a611cfc94a5630e575eb8a3e85940888b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>getNewton</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a334cc1322c2e489fca57d1864039c853</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getXPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a6b00c7e9395a29ecdb0d7932004ae134</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getFPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>aafb58ec96364eb08ab817c981175fa10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getGradientPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a33d4d3f9e3dbd1a46326afad3e245401</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getNewtonPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a45408b110bcb943ba260066467f97125</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>ab276b9a4607797bb3e58bb24144a4a41</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>normRHS</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Group.html</anchorfile>
      <anchor>a8dd345441fe92c8fa11446be72dc1304</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Thyra::GroupWrapper</name>
    <filename>classLOCA_1_1Thyra_1_1GroupWrapper.html</filename>
    <base>LOCA::Thyra::Group</base>
    <member kind="function">
      <type></type>
      <name>GroupWrapper</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>a6c0ab1221af250949877beee6b865cf6</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const NOX::Thyra::Vector &amp;initial_guess, const Teuchos::RCP&lt; ::Thyra::ModelEvaluator&lt; double &gt; &gt; &amp;model, const LOCA::ParameterVector &amp;p, int p_index, bool implement_dfdp=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GroupWrapper</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>a5ceef4caed4b8a6f42c71055ba52585c</anchor>
      <arglist>(const GroupWrapper &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GroupWrapper</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>af81a8bcf17ad9d4e4f8ac6681de9dcaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GroupWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>a66d5d93dd878636d5e6972c259a6486e</anchor>
      <arglist>(const GroupWrapper &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>af67499dd6d4cbf6ae5393f1c3634f0bd</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>aec2efbc6af983371382e0a8a8c2f3f8e</anchor>
      <arglist>(const NOX::Thyra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>ac43012954fbe7829de860fb88140eef5</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const NOX::Thyra::Vector &gt;</type>
      <name>getNOXThyraVecRCPX</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>a8d154c27c96ce20b9edf30829e012294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>af67499dd6d4cbf6ae5393f1c3634f0bd</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>aec2efbc6af983371382e0a8a8c2f3f8e</anchor>
      <arglist>(const NOX::Thyra::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>ac43012954fbe7829de860fb88140eef5</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; const NOX::Thyra::Vector &gt;</type>
      <name>getNOXThyraVecRCPX</name>
      <anchorfile>classLOCA_1_1Thyra_1_1GroupWrapper.html</anchorfile>
      <anchor>a8d154c27c96ce20b9edf30829e012294</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::HouseholderQR</name>
    <filename>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</filename>
    <member kind="function">
      <type></type>
      <name>HouseholderQR</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>ac970ca046945dd2ba02409dbcb502cbf</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HouseholderQR</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>a43b7f3bd6985431f3bd70a29d041c34d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeQR</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>a850990fa1115248e29a0b952cab4f331</anchor>
      <arglist>(const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector &amp;B, bool use_c_transpose, NOX::Abstract::MultiVector::DenseMatrix &amp;Y1, NOX::Abstract::MultiVector &amp;Y2, NOX::Abstract::MultiVector::DenseMatrix &amp;T, NOX::Abstract::MultiVector::DenseMatrix &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyCompactWY</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>ac5c1957c25318daf4795927873115d79</anchor>
      <arglist>(const NOX::Abstract::MultiVector::DenseMatrix &amp;Y1, const NOX::Abstract::MultiVector &amp;Y2, const NOX::Abstract::MultiVector::DenseMatrix &amp;T, NOX::Abstract::MultiVector::DenseMatrix &amp;X1, NOX::Abstract::MultiVector &amp;X2, bool isZeroX1, bool isZeroX2, bool useTranspose) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyCompactWY</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>a29c652040f3f1a7d9b016fa7dcde73ea</anchor>
      <arglist>(const NOX::Abstract::MultiVector::DenseMatrix &amp;Y1, const NOX::Abstract::MultiVector &amp;Y2, const NOX::Abstract::MultiVector::DenseMatrix &amp;T, const NOX::Abstract::MultiVector::DenseMatrix *input1, const NOX::Abstract::MultiVector *input2, NOX::Abstract::MultiVector::DenseMatrix &amp;result1, NOX::Abstract::MultiVector &amp;result2, bool useTranspose) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>computeHouseholderVector</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>ae8735dcb44a833d64db7438d18b75b05</anchor>
      <arglist>(int col, const NOX::Abstract::MultiVector::DenseMatrix &amp;A1, const NOX::Abstract::MultiVector &amp;A2, NOX::Abstract::MultiVector::DenseMatrix &amp;V1, NOX::Abstract::MultiVector &amp;V2, double &amp;beta)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyHouseholderVector</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>ad9c5538fd620981bb310983b3a2f8f93</anchor>
      <arglist>(const NOX::Abstract::MultiVector::DenseMatrix &amp;V1, const NOX::Abstract::MultiVector &amp;V2, double beta, NOX::Abstract::MultiVector::DenseMatrix &amp;A1, NOX::Abstract::MultiVector &amp;A2)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>a3a9093627153657bd3205a41b0fb93bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; int, double &gt;</type>
      <name>dblas</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1HouseholderQR.html</anchorfile>
      <anchor>ac94fae200651167434739182dcfb44d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::IdentityOp</name>
    <filename>classLOCA_1_1Epetra_1_1IdentityOp.html</filename>
    <base>Epetra_Operator</base>
    <member kind="function">
      <type></type>
      <name>IdentityOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a90ad518fab1d3678521825b72370dcb7</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Comm &gt; &amp;comm, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;map)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IdentityOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>aeea1276723dc3def7c4fee132444d251</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a273af830c16fdc3110eb35193b6285e3</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a986ffed8e1127b53bc8ae54ebca66f33</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a5eb96c4559cf712bf66e4a12328d9940</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a8c7daab372fde057105609d1a2c17708</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>ad97d4ea156b74641fb8e182c97692019</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a03d6ffa3048e7fa9942c236a967a7a8b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a4ceef986931324cede8f1a64690a264d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>af153f1b4d5fb585b00832b8455a41eaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>afefb2d9928f7246562d3bbe85ef856a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a9b87f13aab980a457fa523e9a784ec25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>add11f45327219d45e61db755cd3c7d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a5e4256a80aea96824adad7939020a09c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>map</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>a0da41b7a10ffc19d27506d3f43e4d91a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1IdentityOp.html</anchorfile>
      <anchor>ae46eed1cc24c8e054e859413e4504c0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Abstract::ImplicitWeighting</name>
    <filename>classNOX_1_1Abstract_1_1ImplicitWeighting.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getImplicitWeighting</name>
      <anchorfile>classNOX_1_1Abstract_1_1ImplicitWeighting.html</anchorfile>
      <anchor>a7d499d7505a2b24da9f1d100e779af04</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setImplicitWeighting</name>
      <anchorfile>classNOX_1_1Abstract_1_1ImplicitWeighting.html</anchorfile>
      <anchor>a1d6616841ceae1b3cad67a44b410d4f9</anchor>
      <arglist>(bool do_implicit_weighting)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Utils::InexactNewton</name>
    <filename>classNOX_1_1Direction_1_1Utils_1_1InexactNewton.html</filename>
    <member kind="function">
      <type></type>
      <name>InexactNewton</name>
      <anchorfile>classNOX_1_1Direction_1_1Utils_1_1InexactNewton.html</anchorfile>
      <anchor>aec0a89b8fd0a985c6309adb107ee55e0</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;directionSublist)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InexactNewton</name>
      <anchorfile>classNOX_1_1Direction_1_1Utils_1_1InexactNewton.html</anchorfile>
      <anchor>acbfa83e8eceb19fa64e050e283c21ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Utils_1_1InexactNewton.html</anchorfile>
      <anchor>aa1b46d410736f67ab9b9c93dbd0663bc</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;directionSublist)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeForcingTerm</name>
      <anchorfile>classNOX_1_1Direction_1_1Utils_1_1InexactNewton.html</anchorfile>
      <anchor>a220c23ca41ecd5a32b342b8552c37324</anchor>
      <arglist>(const NOX::Abstract::Group &amp;soln, const NOX::Abstract::Group &amp;oldSoln, int niter, const NOX::Solver::Generic &amp;solver, double eta_last=-1.0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::InexactTrustRegionBased</name>
    <filename>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>InexactTrustRegionBased</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a8044e3ef045a48df8acaf3548199df29</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InexactTrustRegionBased</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a8b2573ae3c42ec712b45056a892ce2bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>adc85de3d95d7b6f41e42951dc6140f81</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0fdb54e76b4649d0662a9d1d3c34ee8f</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0c7e6ca4fb4b68b72a72a2f862154232</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a381fc7a827facf2871a3a56119f78032</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>adfaac4bd4a0afd8f9904beb26361fb97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a43da9eb207a34cd9d1e0ded1c9ff3184</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a44b561b324c12f57cd15d969822d6f22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a7ee5d762693b97c33f6b53935bbcdb51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>aefad310b42910831201476de0355bcbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3a6611f0aaf5544d45d3e969e4e9e014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a68d7698ee0a460c77284534f2e44c50a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a260b88dd9123c5d2bd134aab5b0391d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>TrustRegionType</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0c8ae0cfd5ab9cbdbfddac506879e29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Standard</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0c8ae0cfd5ab9cbdbfddac506879e29aa2619f7e1aa91a0ae4298386812e51f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Inexact</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0c8ae0cfd5ab9cbdbfddac506879e29aa21171cc30f5c73b97f63a79f2acfc151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>InnerIterationReturnType</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Converged</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13aaa40969470d1b48baf403e9b8c8af620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Unconverged</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13a72b324381c7f150f600ae8dfeeb6477f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Failed</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13a74962f9835327feab8af7b9099c0b705</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>StepType</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Newton</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933eeaea5ef69e23844de4d069c6765a510748</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Cauchy</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933eeab10ea209416a5fca0bc064a0c8462cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Dogleg</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933eea3ceaddbfe6d5ff0e1ccf0c31b383d1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Standard</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0c8ae0cfd5ab9cbdbfddac506879e29aa2619f7e1aa91a0ae4298386812e51f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Inexact</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0c8ae0cfd5ab9cbdbfddac506879e29aa21171cc30f5c73b97f63a79f2acfc151</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Converged</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13aaa40969470d1b48baf403e9b8c8af620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Unconverged</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13a72b324381c7f150f600ae8dfeeb6477f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Failed</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a3fdc848e741e98cf3b1a04245c768b13a74962f9835327feab8af7b9099c0b705</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Newton</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933eeaea5ef69e23844de4d069c6765a510748</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Cauchy</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933eeab10ea209416a5fca0bc064a0c8462cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Dogleg</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a907e4b4cdfc535d2ea5ad5c7ebb933eea3ceaddbfe6d5ff0e1ccf0c31b383d1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>iterateStandard</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ade3be468bfd7ff75f167cf2fdf361c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>iterateInexact</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a54bf6a277319e450c2b47601cc7a256f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ac34904fa335df9de73cfdeb8233ecf21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printUpdate</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>aaf3065951d22500da42172f32aba74b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>invalid</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a10d17929e99775386b42cdbe48943d87</anchor>
      <arglist>(const std::string &amp;param, double value) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>throwError</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ae68296c49313e4672b60040685dc0508</anchor>
      <arglist>(const std::string &amp;method, const std::string &amp;mesage) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>resetCounters</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a453a838fba2828aeb8ca3f1f515874d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>checkStep</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ad49eb1c9492fd75a5346d0f890fa8266</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;step, double &amp;radius)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual double</type>
      <name>computeNorm</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>adbd389a598741aa5f66df9c6af2e1c95</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;v)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TrustRegionType</type>
      <name>method</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a44913cf8ea83d64547fc7d455df1bbe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a1563cc477bf650d75c4e745beed7ad5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utils</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a761eed4b89a93ed0c919cf5739233308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InnerIterationReturnType</type>
      <name>innerIterationStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>adf6ccfa68ba79f3c0a0e4705326c0b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a9c7094c77dab964bdfe3317801110290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>oldSolnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>aca27c283222e5ddc8bdd088d4011f154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>newtonVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a917c073a96279ad20c783ee975f2dca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>cauchyVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a550ccf66a21207b5eeb9811e21459099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>rCauchyVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a650d5091a667397e33bb34b46720a19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>residualVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a2225ce28b51fc56d014b618067853a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>aVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ad4a82f3415958107dd3b64a556ca6c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>bVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ae3f71e7faa64c18280e665730b08c60a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ab24bac5718c461077ad923c25832c876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a77f3917e6085422c853fb1b75d63891e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Direction::Utils::InexactNewton</type>
      <name>inNewtonUtils</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a2e3541289795edc36133120e88967d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>newtonPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ac3f04a78a8ef8c1a1194bd3d4d8fb8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>cauchyPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ae0367d16b3fd7b9f8f94cf23e67f69e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>radius</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a6616c7e14f788278e00afc532f35bc8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ad6ff9c691fc358d559a3a7336a7faf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minRadius</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ab83f68cad3b9140ed007024f74910bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxRadius</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a0568753da58100a300f9cbb3d45059bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>contractTriggerRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a5669098645f2744994820653da7dbc31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>expandTriggerRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>aa313120e0aac1ef8abd307998034bdaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>expandFactor</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a815c29433a45f6041014b12003ec9f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>contractFactor</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>af552395c77c97458587ad64109c4c22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>recoveryStep</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a9cc5a4ad790fa200ce69f1b90d718ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>newF</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a46d26a740f0ecd407cf4796119ec2aa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>oldF</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a616a179185f801cff4fa7194ce1b864d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a294542a29ad2b82e2dd2c795b580ce04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a2dd9c76986aa3a4e5f1f83c1e06bd39d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>eta</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a19b9c6595bc6da528583d8fd6ef4e5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>eta_last</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a4c8057e6b4bcd9daec109a072e398736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ae69e240f3efe1caad7be80f8c763cdd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a78c9e0c6fd69aae1cda7ff2849c216c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepType</type>
      <name>stepType</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a96e47c0b834e34b0916d24a3820f39e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::MeritFunction::Generic &gt;</type>
      <name>meritFuncPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a81caa617e71de8ff38999679e7d7dacf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useCauchyInNewtonDirection</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>afd795b52eef70316962acf744db198e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>writeOutputParamsToList</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a5a5b399f25ffa0849ed9da6ae4aceebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useCounters</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a95e38430684f3ba9db075cc1ad8971bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numCauchySteps</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a4475cc59b6e5900e3e45b9a99c6ede74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numNewtonSteps</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a065f06f9a2781633b95435ae035b52ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numDoglegSteps</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ab3f799fca55d95e7d9d37ec66348efb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numTrustRegionInnerIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a048a0966ff5b3779881ed0e44c304562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sumDoglegFracCauchyToNewton</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>aa939da7823c0143d8ba4251bbbd4cf4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sumDoglegFracNewtonLength</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>a5ecb5a5eb477daf9005ab6e1f232b702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useAredPredRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>adcb8fa731f04602f891c10f04c870971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useDoglegMinimization</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>ae1098c914a58e867f52e99f675ba8e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1InexactTrustRegionBased.html</anchorfile>
      <anchor>adf2ed1899461671670b750be5c562559</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::LAPACK::Interface</name>
    <filename>classLOCA_1_1LAPACK_1_1Interface.html</filename>
    <base>NOX::LAPACK::Interface</base>
    <member kind="function">
      <type></type>
      <name>Interface</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>ae02b05630803d1e5df14331a46737414</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interface</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>a6b05535bd49bedb361407869a5a0058a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>a01cc4fb2686496ac8d8581122358e677</anchor>
      <arglist>(const ParameterVector &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>acc20e8a50b90ba2830fe12f30416decb</anchor>
      <arglist>(const NOX::LAPACK::Vector &amp;x_, const double conParam)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>a881085e831561ec989b5547acc806bf5</anchor>
      <arglist>(double alpha, double beta, const NOX::LAPACK::Vector &amp;x, NOX::LAPACK::Matrix&lt; double &gt; &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>ac9cf42dcf2100808ae96c976d00f2d4d</anchor>
      <arglist>(const NOX::LAPACK::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>aad5ec405e865eeefb4c33de4557db48b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LAPACK::Interface</name>
    <filename>classNOX_1_1LAPACK_1_1Interface.html</filename>
    <member kind="function">
      <type></type>
      <name>Interface</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>a1ada4aad899426dbd5f5b9b4ed94afd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interface</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>a623c53dc7739d7dad9c8a0f6e6754a9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::LAPACK::Vector &amp;</type>
      <name>getInitialGuess</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>a781c507699e3207603bd73aae027fb75</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>aff57cb043504260d9f7b3083fe247766</anchor>
      <arglist>(NOX::LAPACK::Vector &amp;rhs, const NOX::LAPACK::Vector &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Interface.html</anchorfile>
      <anchor>ac30774502be92073a9a28d2c150a0a0f</anchor>
      <arglist>(NOX::LAPACK::Matrix&lt; double &gt; &amp;J, const NOX::LAPACK::Vector &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Petsc::Interface</name>
    <filename>classNOX_1_1Petsc_1_1Interface.html</filename>
    <member kind="function">
      <type></type>
      <name>Interface</name>
      <anchorfile>classNOX_1_1Petsc_1_1Interface.html</anchorfile>
      <anchor>a902c71acf9fa671feea5b5f3c83a46fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interface</name>
      <anchorfile>classNOX_1_1Petsc_1_1Interface.html</anchorfile>
      <anchor>ac0a8d8fd8fcf0e16c5b04217e7cbd298</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Petsc_1_1Interface.html</anchorfile>
      <anchor>ac5d5f2d138d1ac3d461621ce23bfe8d0</anchor>
      <arglist>(const Vec &amp;x, Vec &amp;RHS)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1Interface.html</anchorfile>
      <anchor>a101d09031bf329c80e55c685d32d70cc</anchor>
      <arglist>(const Vec &amp;x, Mat &amp;Jac)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computePreconditioner</name>
      <anchorfile>classNOX_1_1Petsc_1_1Interface.html</anchorfile>
      <anchor>ab681943ffbf85ebe1ab7c60508c81c68</anchor>
      <arglist>(Mat &amp;M)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>preconditionVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Interface.html</anchorfile>
      <anchor>a0b40ec00a6abcafda88586cc49516ae9</anchor>
      <arglist>(Vec &amp;y)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Multiphysics::DataExchange::Interface</name>
    <filename>classNOX_1_1Multiphysics_1_1DataExchange_1_1Interface.html</filename>
    <member kind="function">
      <type></type>
      <name>Interface</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1DataExchange_1_1Interface.html</anchorfile>
      <anchor>a0473c45256b0dd963b44f462b438ce58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Interface</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1DataExchange_1_1Interface.html</anchorfile>
      <anchor>ade03c6058b628345a89e643fcc91e8e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>exchangeAllData</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1DataExchange_1_1Interface.html</anchorfile>
      <anchor>aadf45413d7f0f0bcb7f99105f1ce60be</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>exchangeDataTo</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1DataExchange_1_1Interface.html</anchorfile>
      <anchor>af84cd1f21773b2ef7bcaa042a9993be1</anchor>
      <arglist>(int solverId)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Abstract::Iterator</name>
    <filename>classLOCA_1_1Abstract_1_1Iterator.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>IteratorStatus</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LastIteration</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fba5e3b0621835c353b6f7b96b7d8c13f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Finished</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fba9a436d7f61e22dbf66321d8febf78294</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Failed</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fba8bed7438fa0ad09a336b0610da447508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotFinished</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fbae1918fc9f53047f4db89feafffc8e86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>StepStatus</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Successful</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818a8b1e8a7a2943b83793dadc6e635356a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unsuccessful</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818a24ad05a71315ce7773629a39b70ed640</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Provisional</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818a0e105b35231cf4ffe7bff384ebda3245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LastIteration</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fba5e3b0621835c353b6f7b96b7d8c13f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Finished</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fba9a436d7f61e22dbf66321d8febf78294</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Failed</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fba8bed7438fa0ad09a336b0610da447508</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotFinished</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaf6fee3bc899dfc0e07096e17b7d3fbae1918fc9f53047f4db89feafffc8e86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Successful</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818a8b1e8a7a2943b83793dadc6e635356a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unsuccessful</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818a24ad05a71315ce7773629a39b70ed640</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Provisional</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a8fb1abffd7192ab30b4a98faac8fd818a0e105b35231cf4ffe7bff384ebda3245</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a74ce4b335fab16d2e16296ecec211650</anchor>
      <arglist>(Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>aaa95cfb421e52359a01436a8c7b6c2fd</anchor>
      <arglist>(const Iterator &amp;it)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Iterator</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a0e41c7530395d0cbe0e7a6cd8d749973</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>resetIterator</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a3d4f612d51483bd5b928115a79005221</anchor>
      <arglist>(Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IteratorStatus</type>
      <name>getIteratorStatus</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>acaab085aed96de75aeb9e4d21202ac3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getStepNumber</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a107d32513d4894b7bb19ee019b290820</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumFailedSteps</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>aa685f3f81c48fc66dca11c374f0847d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumTotalSteps</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a6a453fe6f740734cea7534703401dd2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual IteratorStatus</type>
      <name>run</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a33da62c6d88ec276802b01becd343cc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a40c48e7d7d1126f65b8aac61ff96b5c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IteratorStatus</type>
      <name>iterate</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a2e71cba6d0f6424c2b164ca6bf306771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual IteratorStatus</type>
      <name>stop</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a72c2f36bd258cc175dfe3f5c7dda5f69</anchor>
      <arglist>(StepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual IteratorStatus</type>
      <name>start</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a628073735296213ebf41193438b8a751</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual IteratorStatus</type>
      <name>finish</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>aeb7eb532fa24fa0b167f045c9203eea6</anchor>
      <arglist>(IteratorStatus)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual StepStatus</type>
      <name>preprocess</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a1381a070b1e5df9a77ebd1bbc3ac1671</anchor>
      <arglist>(StepStatus)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual StepStatus</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>ad0871901cd70aeb47f0439200d450c6f</anchor>
      <arglist>(StepStatus)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual StepStatus</type>
      <name>postprocess</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>ae779bd69da8ed7c2b616e28a1d53e118</anchor>
      <arglist>(StepStatus)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setLastIteration</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a1b267d5b17f2fb02c8e4c8ca78fbbac5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>isLastIteration</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a9eb303082f448092c0c4a32a270d28dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual StepStatus</type>
      <name>computeStepStatus</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a5222233a98a082171ac0d35f0e966d6b</anchor>
      <arglist>(StepStatus preStatus, StepStatus compStatus, StepStatus postStatus)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>stepNumber</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>aa9bdaba08c6837f77747a9a85f71360b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numFailedSteps</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a3da2acf8df1a75cb6d44d9ed41ee569f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numTotalSteps</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>aed6811283f1ae04799bbc962eb756bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxSteps</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>ae297dfb0c21febc39ab94286dca77dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IteratorStatus</type>
      <name>iteratorStatus</name>
      <anchorfile>classLOCA_1_1Abstract_1_1Iterator.html</anchorfile>
      <anchor>a23d068f70e415ff3c53991435e911459</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SingularJacobianSolve::ItRef</name>
    <filename>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</filename>
    <base>LOCA::SingularJacobianSolve::Generic</base>
    <member kind="function">
      <type></type>
      <name>ItRef</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>a481b6871c44b450ae92826e7e393c7aa</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ItRef</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>aa6bf363e558a432248ef301b5f84f4f3</anchor>
      <arglist>(const ItRef &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ItRef</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>a4195da5a017bbfcc8124ba252d7b203e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>aa0210379441297c1496a8f6811ce2db2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>a5ada7adc8a32f1fcafa8a82c4a330f47</anchor>
      <arglist>(const LOCA::SingularJacobianSolve::Generic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ItRef &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>a989aa1fdd7a6c16711d32e3937b1e1ee</anchor>
      <arglist>(const ItRef &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>aea3e98a7a44eda2208b37e25b54c4fb8</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>aa99af3f9c67eae6de4f842ac6dfb5330</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;input, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeMulti</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1ItRef.html</anchorfile>
      <anchor>a279a345c9d265a5b2871bc9edf839c3c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector *const *inputs, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector **results, int nVecs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Interface::Jacobian</name>
    <filename>classNOX_1_1Epetra_1_1Interface_1_1Jacobian.html</filename>
    <member kind="function">
      <type></type>
      <name>Jacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Jacobian.html</anchorfile>
      <anchor>af434cb277015f68923c74e68d009348b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Jacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Jacobian.html</anchorfile>
      <anchor>ae119138b12bf69e340896d28877072d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Jacobian.html</anchorfile>
      <anchor>a6a1bf6afca59f4bd1b339e0b94654d17</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::JacobianInverse</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</filename>
    <base>LOCA::AnasaziOperator::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>JacobianInverse</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a519c1f03f7e8fe9c1ddd865f9c2d2083</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianInverse</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>aa3882cbd19bb713f4641052f3eee1938</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a93c99d82c6b3212d0aa54174355a4057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>afd50fc42009db68e4aa38ac39feaf433</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginPostProcessing</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>ae41e88ee61de13b2ae95aca54e148724</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>ab5bd1ea8df7c28b70ec53a827d02ddbb</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a8bd320750a5675ba7a04600106b19c86</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a23feb4ccbeee22b9cff9f61c55153b24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLabel</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a01f64ff8f3e01b758d9e9a99e1e218f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a5a6830170b587d5647116251d003c576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>ac080859081b1dc546536aeddfcc32e9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>ad34507c264747826fdb0afc96765f7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>tmp_r</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a9e6951a1bf828771479ee479403adbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>tmp_i</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1JacobianInverse.html</anchorfile>
      <anchor>a09fa9ca0e96295df92da7d55e8791f41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::JacobianOperator</name>
    <filename>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</filename>
    <base>LOCA::BorderedSolver::AbstractOperator</base>
    <member kind="function">
      <type></type>
      <name>JacobianOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>a4ef4c62c57f0392ceca49268f8a63ed0</anchor>
      <arglist>(const Teuchos::RCP&lt; const NOX::Abstract::Group &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobianOperator</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>a09752fc4aa038e8dbd92dd744abe72a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getGroup</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>a27e51a358adbb88940f7cdb7b9a7f56a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>a8233aee9693476014b3ea4c2256ac5e3</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>aa4724c7ccf5631d201fb4f679497eee0</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>a87aefb77e806e76c80ee44cab588cb78</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>ad20786d2da8e7ac0286d85f19dbbf651</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;B, NOX::Abstract::MultiVector &amp;X) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>grpPtr</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1JacobianOperator.html</anchorfile>
      <anchor>abe22d60857107c21b6e427327eb13897</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::LAPACKDirectSolve</name>
    <filename>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</filename>
    <base>LOCA::BorderedSolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>LAPACKDirectSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a75fbe07e74553d7162786308eac0a18a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LAPACKDirectSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a04ca4e22950d813cbc2e8e14d264e8fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMatrixBlocks</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>afae92372cb6815cf700bedefdb30470c</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a35f98db87dfc1b4e818295c10f6be30f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a3044c2728d7075e4119400632b1df52c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a2bee3b136b18c8f83854a36017eaf5aa</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a577f214e2dc6f05ec6cd742165d65082</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>aef7eb491168953616e3af68f8ecddffc</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>aa8bd7179b4b809314a5e6f018da4d3ab</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a75d182bf4d50bf7db2bf575bb18fabc1</anchor>
      <arglist>(bool trans, Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a467b17f4b306a584efc4bfaab81a85ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a093a05fb5904b424cd9c50feec47379a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::LAPACK::Group &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>aad85fa79173f80898458248e8c9eab6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt;</type>
      <name>op</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>adea1e08d54269319ee87dab40332f5e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>A</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>aacf0ec127dcc122386e6174856663ef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterfaceMVDX &gt;</type>
      <name>B</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>ae38ea06539442190c82dd5880c34d491</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>C</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>aa24895d0eea348be35cc7affead2a7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::LAPACK::LinearSolver&lt; double &gt; &gt;</type>
      <name>augJacSolver</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a04d5ba5c19e4fe43f194bda04f2a5154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>n</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>ab894ecfc4abb4a1b3de7e70833be3c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a3ffb50730eb7410bcc1f382e8253c827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>N</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>ae0243fa30d66e69423d9ec34caea6771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroA</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a1526acc6192a26e5aba012057ddb0833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroB</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>ac54e64a55280897f3503ab9c96c55cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroC</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a4252eea3e1c83963d3422813a6d389f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroF</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a542dc5127d1080a98ee8cc8605c5a0c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isZeroG</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>aea67232b195e49f6886faebe654e5b70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isComplex</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LAPACKDirectSolve.html</anchorfile>
      <anchor>a7d9db3dc233c4dc4deb7e7f6ec836eb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::LargestImaginary</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1LargestImaginary.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>LargestImaginary</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestImaginary.html</anchorfile>
      <anchor>a8b8ab584a5a1fc9ea77268744a4bf8ed</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LargestImaginary</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestImaginary.html</anchorfile>
      <anchor>afdf8aaa65f1e64ad80706087f856af5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestImaginary.html</anchorfile>
      <anchor>a88a77f0f51480ea38575e2b51a14d8d1</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestImaginary.html</anchorfile>
      <anchor>ae939677437f4ed5349ed294050bc9b1c</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::LargestMagnitude</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1LargestMagnitude.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>LargestMagnitude</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestMagnitude.html</anchorfile>
      <anchor>ac2f32b80a5c792720e1198a9900df37d</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LargestMagnitude</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestMagnitude.html</anchorfile>
      <anchor>a98731b0b3a3e8e440bd7a045f9cd539a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestMagnitude.html</anchorfile>
      <anchor>a8b919c2755d18576bd98ba4a59a10715</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestMagnitude.html</anchorfile>
      <anchor>a615416617c65e5a8d1be092880f00022</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::LargestReal</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1LargestReal.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>LargestReal</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestReal.html</anchorfile>
      <anchor>a3ef1d7091eaa4294e343a7a5475f0374</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LargestReal</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestReal.html</anchorfile>
      <anchor>a0eb8c7a7b4dd3c374baa6cb5ae451c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestReal.html</anchorfile>
      <anchor>ac3ca542b485e27e28142eedeec589128</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestReal.html</anchorfile>
      <anchor>a23a496255e37b647929d7758ceab74b2</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::LargestRealInverseCayley</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>LargestRealInverseCayley</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>ab13cd4f3f45b307fa946ed0d1669d309</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LargestRealInverseCayley</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>a59691a7871b4463441f65e3a281c603c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>ab582957a66bb6eb810649e3e0944c9d1</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>a03f2a23390351750d2335547ec673894</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>realLambda</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>a9e54f24965929aefcb6a8a29b8c2024d</anchor>
      <arglist>(double er, double ei) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>a8f5add49b68d26f7e3ebca372a16f0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mu</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1LargestRealInverseCayley.html</anchorfile>
      <anchor>a54a79db23587d8c1ee3d80baee3d1e91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::LeftPreconditionedOp</name>
    <filename>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</filename>
    <base>Epetra_Operator</base>
    <member kind="function">
      <type></type>
      <name>LeftPreconditionedOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>ae007a5a586456df0121827a60ce19297</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;jacOperator, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;precOperator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeftPreconditionedOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>af6111a36376dcfea6020485e4abca4e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>acf29ea421890347af9a47c66375d24d6</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a3034314cba8f8aae910b9e64bad137db</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a0fee1957affd2c41caffe296b38669cd</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a4ac20f5dd63a28b738e256b40a85982e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>ad5695fcc127897f17655dcc76149e0d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>abdf14af909820ccd80a56bc0fd10275f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a9dd0985e113d654889718717d8ccea4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a6ec32bcf224c04465d13b557d56a8604</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a8fe4a51f9d89135e3a8bd96a9bd7bb40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>aaf880f129f8a0b6df137343fa0131d6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>adb83b625bb9845fd0aaa12f923047429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>J</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a85e5e9b5d9470e3fb78164fce44ec830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>M</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a7d97fc437f403798d25ee47cb759115b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LeftPreconditionedOp.html</anchorfile>
      <anchor>a40ccc8674ef6b52b02291559b17025d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::TransposeLinearSystem::LeftPreconditioning</name>
    <filename>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</filename>
    <base virtualness="virtual">LOCA::Epetra::TransposeLinearSystem::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>LeftPreconditioning</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a269d3e32012cf608eb4e0910417d02d0</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linsys)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeftPreconditioning</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a8422dbdde9e95c68d060f2d9e9453d7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a988260f77a203c02a11aabb7a6d26fb8</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a7953fa46b5929bfebdf4ce0fc086056e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>aed3e56c0220b88afc9b627aac53ad034</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>abfcd855cfeb86a2f7ae1b15becf2df45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a23d01e9c3e9ccd7412187fb903536b4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a952683bfac70334b72a59cd7d0302d96</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_jac_trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a319b338010113c24af7593132f039d92</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_prec_trans)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a3e39c9a2a5eedce71479c521f497d2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>linsys</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a173f01d9c80ac25106837565efb6c251</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>jac</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>ac2f863cfa233c21b7e029624d56524ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>prec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1LeftPreconditioning.html</anchorfile>
      <anchor>a4ee105eace1fc6a87f9994f5b2f30e8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Parameter::Library</name>
    <filename>classLOCA_1_1Parameter_1_1Library.html</filename>
    <member kind="function">
      <type></type>
      <name>Library</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a051bc8a84f2718b4b1d721e7466e2d69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Library</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a3a020b9e049a92cf23a93c1de5541d71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a1149039b9848024f317b4b85420f5b66</anchor>
      <arglist>(const std::string &amp;name, const ValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>getValue</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a89c1a85dbc08a3ed5d62dac89025db28</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addParameterEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a0a51fc1752d5522c38870f2a2a593cbc</anchor>
      <arglist>(const std::string &amp;name, ObjectType &amp;object, ValueType ObjectType::*object_val_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addParameterEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>ae7d37c0a73ae2d697869e67101693467</anchor>
      <arglist>(const std::string &amp;name, FunctorType *fctr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addParameterEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>abb9abe7df55ad4290d5a35ef1f337389</anchor>
      <arglist>(const std::string &amp;name, Entry&lt; ValueType &gt; *entry)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Library</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a6bf8105888cdc16e290e970b11babeb1</anchor>
      <arglist>(const Library &amp;l)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Library &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>ace53fb6cf1a5fb905a68798f1b2818bb</anchor>
      <arglist>(const Library &amp;l)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParameterMapIterator</type>
      <name>getEntryMapIterator</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>af8bd2764935eaf265d31a541523d5dd8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParameterMapConstIterator</type>
      <name>getEntryMapIterator</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a8a183a945f3ca6b26f5fa3862c19ef7e</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ValueTypeMapIterator</type>
      <name>getEntryIterator</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a19fbddca49e600a22fd00006a82f29bd</anchor>
      <arglist>(const std::string &amp;valueTypeString, const ParameterMapIterator &amp;paramIterator)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ValueTypeMapConstIterator</type>
      <name>getEntryIterator</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a47cde1f678b0fbf7e4d75655a3754c19</anchor>
      <arglist>(const std::string &amp;valueTypeString, const ParameterMapConstIterator &amp;paramIterator) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Entry&lt; ValueType &gt; &amp;</type>
      <name>getEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>ac4628e1e63b2329520b0b474f9a76aba</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Entry&lt; ValueType &gt; &amp;</type>
      <name>getEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a0cd3529f026f63e0fe33d23aec5f3a6c</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getTypeName</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a28dc6c159c1178f1d09808ab665833f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParameterMap</type>
      <name>library</name>
      <anchorfile>classLOCA_1_1Parameter_1_1Library.html</anchorfile>
      <anchor>a51c7b0cd3931e72f9a284078c52a52d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::LinearOpBase</name>
    <filename>classThyra_1_1LinearOpBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Thyra::LinearOpWithSolveBase</name>
    <filename>classThyra_1_1LinearOpWithSolveBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Thyra::LinearOpWithSolveFactoryBase</name>
    <filename>classThyra_1_1LinearOpWithSolveFactoryBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>NOX::LAPACK::LinearSolver</name>
    <filename>classNOX_1_1LAPACK_1_1LinearSolver.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>LinearSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a1683a371b58534bde98fd280d8d6ff1f</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a39898b2ca7a8194f7f7bbcc91f713cc1</anchor>
      <arglist>(const LinearSolver&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinearSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a31e0948f9c0e62958ac22b075877c0c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LinearSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a6a5f738d26a7551ea20f6a362314ee4e</anchor>
      <arglist>(const LinearSolver&lt; T &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; T &gt; &amp;</type>
      <name>getMatrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>af91a25a7cd167aaf609f2e81cecaf340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Matrix&lt; T &gt; &amp;</type>
      <name>getMatrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>acd7a2107133b69d671f2a98a8fdb9ab5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>ac436c645fbc6e0ecd12259b231616e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>ade2a897620ebad1cc71b9584a60b97b5</anchor>
      <arglist>(bool trans, int ncols, const T *input, T *output) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a3c8aef30cf293dbabee384f3527a5d43</anchor>
      <arglist>(bool trans, int ncols, T *output)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix&lt; T &gt;</type>
      <name>mat</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>ac462efdd4c5af5193405aa6b77abfdfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix&lt; T &gt;</type>
      <name>lu</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a798a6a60b1030bc025a6ea2b7df000a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>pivots</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>acc188f38d73b96efffd7cb7542c788df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidLU</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>aff091139130381179e33c73c001faaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; int, T &gt;</type>
      <name>blas</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a31a270fb6f284f660a81915a6b6b2e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::LAPACK&lt; int, T &gt;</type>
      <name>lapack</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a667074b6f0d8274eb934d5c25df0d6f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LinearSolver&lt; double &gt;</name>
    <filename>classNOX_1_1LAPACK_1_1LinearSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>LinearSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a1683a371b58534bde98fd280d8d6ff1f</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a39898b2ca7a8194f7f7bbcc91f713cc1</anchor>
      <arglist>(const LinearSolver&lt; double &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinearSolver</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a31e0948f9c0e62958ac22b075877c0c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LinearSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a6a5f738d26a7551ea20f6a362314ee4e</anchor>
      <arglist>(const LinearSolver&lt; double &gt; &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Matrix&lt; double &gt; &amp;</type>
      <name>getMatrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>af91a25a7cd167aaf609f2e81cecaf340</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Matrix&lt; double &gt; &amp;</type>
      <name>getMatrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>acd7a2107133b69d671f2a98a8fdb9ab5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>ac436c645fbc6e0ecd12259b231616e1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>ade2a897620ebad1cc71b9584a60b97b5</anchor>
      <arglist>(bool trans, int ncols, const double *input, double *output) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a3c8aef30cf293dbabee384f3527a5d43</anchor>
      <arglist>(bool trans, int ncols, double *output)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix&lt; double &gt;</type>
      <name>mat</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>ac462efdd4c5af5193405aa6b77abfdfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Matrix&lt; double &gt;</type>
      <name>lu</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a798a6a60b1030bc025a6ea2b7df000a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>pivots</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>acc188f38d73b96efffd7cb7542c788df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidLU</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>aff091139130381179e33c73c001faaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; int, double &gt;</type>
      <name>blas</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a31a270fb6f284f660a81915a6b6b2e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::LAPACK&lt; int, double &gt;</type>
      <name>lapack</name>
      <anchorfile>classNOX_1_1LAPACK_1_1LinearSolver.html</anchorfile>
      <anchor>a667074b6f0d8274eb934d5c25df0d6f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::LinearSystem</name>
    <filename>classNOX_1_1Epetra_1_1LinearSystem.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>PreconditionerReusePolicyType</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRPT_REBUILD</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067cea48321244a17afb664cdd75bd53a8a7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRPT_RECOMPUTE</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067cea9d23a1b901c58cebfe6c62cf7fce3ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRPT_REUSE</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067ceab92123e13e1eaac1cdf0b36dd14dff13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRPT_REBUILD</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067cea48321244a17afb664cdd75bd53a8a7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRPT_RECOMPUTE</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067cea9d23a1b901c58cebfe6c62cf7fce3ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRPT_REUSE</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ae34f9249eed5ec99227b53885fd067ceab92123e13e1eaac1cdf0b36dd14dff13</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a794599365346cae4e3b54407c1d3d9af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a03f3613441ae5f18d85c6b8f136475d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ac9867da1d4c31ec85770838ff3c9c0ab</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>af35e989f6bf574567e3338b00f84365c</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ac80d809e7059a87b0761c238d9780002</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a8005a47a3e4fab175d92eead8d817ed4</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::Scaling &gt;</type>
      <name>getScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a827d79c6c698e205a1bd62f65c2defa2</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ab09244ca723760152b28822eb2932a5a</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; &amp;s)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a5d5b57a4060d249b45b990bce4033ecf</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>createPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>abed89c8e9dd0889d90a41327b302ccb0</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;p, bool recomputeGraph) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>destroyPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a07dd201cd22da36cd2b576c9327118f9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>recomputePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a779bae3dc40654effe6cca060fba3034</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;linearSolverParams) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual PreconditionerReusePolicyType</type>
      <name>getPreconditionerPolicy</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a91f3041f37aef05c8e920b63549b358a</anchor>
      <arglist>(bool advanceReuseCounter=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isPreconditionerConstructed</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a162516108690e7051e6d76a66db3ae60</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a8cd4a67bd640630c14c15a1e63acf172</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>getJacobianOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>afe1e8f81761dd2a6c4ef18db1a67408f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getJacobianOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a9a16e66f31cc7b79c13e4830ba41c5dc</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>getGeneratedPrecOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>abed23c572f68f46a8ff3e41df7fce1a7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getGeneratedPrecOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>aaf3e2eb9a527892804c6b341c094b576</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setJacobianOperatorForSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a2e2e0f95fc2fb33b78a9152fb4ab8664</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;solveJacOp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPrecOperatorForSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>acfb4e23ba6a47585a34475e6415ec3f4</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;solvePrecOp)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumLinearSolves</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>aa028dd8c331741648d954cb1c17883eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getLinearItersLastSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>ad7cc0447b09039825f50229e838e3cc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getLinearItersTotal</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a9cab519a2dd2b637525e8d7a0aab7af3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getAchievedTol</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystem.html</anchorfile>
      <anchor>a69d933611a9b6cffebbb0611f0fbe681</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::LinearSystemAztecOO</name>
    <filename>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</filename>
    <base virtualness="virtual">NOX::Epetra::LinearSystem</base>
    <member kind="function">
      <type></type>
      <name>LinearSystemAztecOO</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>afa947181544c3f779d46bf8a7ad1bd6a</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, Teuchos::ParameterList &amp;linearSolverParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;iReq, const NOX::Epetra::Vector &amp;cloneVector, const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; scalingObject=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearSystemAztecOO</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a36a93d20ab7c9e16da358e4504816d09</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, Teuchos::ParameterList &amp;linearSolverParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;iReq, const Teuchos::RCP&lt; NOX::Epetra::Interface::Jacobian &gt; &amp;iJac, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;J, const NOX::Epetra::Vector &amp;cloneVector, const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; scalingObject=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearSystemAztecOO</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a65e8371005f51ce8a7c697f6459853ae</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, Teuchos::ParameterList &amp;linearSolverParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const Teuchos::RCP&lt; NOX::Epetra::Interface::Preconditioner &gt; &amp;iPrec, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;M, const NOX::Epetra::Vector &amp;cloneVector, const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; scalingObject=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LinearSystemAztecOO</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a865dc4f685e3459ffdb6571dbc708e20</anchor>
      <arglist>(Teuchos::ParameterList &amp;printingParams, Teuchos::ParameterList &amp;linearSolverParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Jacobian &gt; &amp;iJac, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;J, const Teuchos::RCP&lt; NOX::Epetra::Interface::Preconditioner &gt; &amp;iPrec, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;M, const NOX::Epetra::Vector &amp;cloneVector, const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; scalingObject=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearSystemAztecOO</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aa621cbb8284706f242a4480ed095635b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a0eec4414d898d1d7c266224ace238bd3</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyJacobianTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ac0d87de5b41c00a0059474326ad9a73e</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ace03ec2150bd45e6149d72da4f4fad78</anchor>
      <arglist>(Teuchos::ParameterList &amp;linearSolverParams, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyRightPreconditioning</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a7453bb2dd9755c4d6cdd8fec37218698</anchor>
      <arglist>(bool useTranspose, Teuchos::ParameterList &amp;linearSolverParams, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>afc63e6a6aa0c4bbaa25d1d1566d3d2cd</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;linearSolverParams, bool recomputeGraph) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>destroyPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ad8ee07b66ce7c253b59f96c115b3483e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>recomputePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>abeac76c87f3f0821bf71f3db8c50c7ca</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;linearSolverParams) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual PreconditionerReusePolicyType</type>
      <name>getPreconditionerPolicy</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a3bbbfd42da889ac03d4949db0ff60c56</anchor>
      <arglist>(bool advanceReuseCounter=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a99b1527d1720fd8dee9cafbb4b34bec9</anchor>
      <arglist>(Teuchos::ParameterList &amp;linearSolverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::Scaling &gt;</type>
      <name>getScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ab709c2705d1dac009292d4ffc51efaf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a48d846b150699783fbf04d63ae1386a4</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a7c84171c11dddfc6398990d1b6f1cd06</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Epetra::Interface::Jacobian &gt;</type>
      <name>getJacobianInterface</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>acc184db4ae4d8b12bca3e776038e7f26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Epetra::Interface::Preconditioner &gt;</type>
      <name>getPrecInterface</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a11c978b190130e85dfeba41159f276d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPreconditionerConstructed</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aac586789048941297a19bc26703574d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aa671c995ee0d360e14d495a3e6c93789</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>getJacobianOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a68ade92086a1acf85e988abc4a39b04e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getJacobianOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aec03a574cb5a5e48a906820c1a3aae3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>getPrecOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a1692aa84ed2bc9bb04b32d27a6db0abf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>getGeneratedPrecOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a11366042e1cb11e9adffe0b8925c3138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getGeneratedPrecOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a4a2266bf4bbaeafdbf4961ba0dc2dda7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeCreatePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a7bf251e455c05b3f997ca0a43c61b979</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimeApplyJacobianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aefc8858e156ff6d97fb9f93000b454d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJacobianOperatorForSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ad3018edb445b441b57dc528f46f235e2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;solveJacOp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPrecOperatorForSolve</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ab4e5b5ff27e5a7f2c3d9652c3e7d513e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;solvePrecOp)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>OperatorType</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6da7727278d5c62138ba56ad5e0ef77e54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraRowMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6daf2fcd40354584862a441847055986de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraVbrMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6da9dc72b8fa2a57f581860c7940cd4e08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraCrsMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6dae1d74a7e84507898914d26555bc03b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>PreconditionerMatrixSourceType</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a8dc2467b0af1505120900319bde36d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6da7727278d5c62138ba56ad5e0ef77e54b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraRowMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6daf2fcd40354584862a441847055986de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraVbrMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6da9dc72b8fa2a57f581860c7940cd4e08a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>EpetraCrsMatrix</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aeed370ae546c0d2c61ff23781f916f6dae1d74a7e84507898914d26555bc03b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setAztecOptions</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a4e44848649b4c3d6e25300ff563adfce</anchor>
      <arglist>(Teuchos::ParameterList &amp;lsParams, AztecOO &amp;aztec) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>createJacobianOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a2bd442db75713805d363c19b6e2d1c37</anchor>
      <arglist>(Teuchos::ParameterList &amp;printParams, Teuchos::ParameterList &amp;lsParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;iReq, const NOX::Epetra::Vector &amp;cloneVector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>createPrecOperator</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a083f8e6e5984e0ba5b9edffabfa2f737</anchor>
      <arglist>(Teuchos::ParameterList &amp;printParams, Teuchos::ParameterList &amp;lsParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;iReq, const NOX::Epetra::Vector &amp;cloneVector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkPreconditionerValidity</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ae9e731cc169d75cafd73adc960a3f4a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>createIfpackPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a0f4fbd8acd098340aba0043f6d837f09</anchor>
      <arglist>(Teuchos::ParameterList &amp;p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>createNewIfpackPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>af087019a2df3433941fba04252968e79</anchor>
      <arglist>(Teuchos::ParameterList &amp;p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual OperatorType</type>
      <name>getOperatorType</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>abf6b1801a9040fb119a2aab39bb4a872</anchor>
      <arglist>(const Epetra_Operator &amp;o)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setAztecOOJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a50f7ce2cbb83a2fae7ac5fe1b104aa46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setAztecOOPreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>afeba5e97b563230f2e444987ad9a2d3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>precError</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a2c3dd37506648e9b826e84ef8df2d770</anchor>
      <arglist>(int error_code, const std::string &amp;nox_function, const std::string &amp;prec_type, const std::string &amp;prec_function) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Utils</type>
      <name>utils</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a89c21cc100bbc459322da650b14e18b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Interface::Jacobian &gt;</type>
      <name>jacInterfacePtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ae996cba895ccc4c694ee524ee8af0ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OperatorType</type>
      <name>jacType</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a88b58c90029c9cfe7fc54d313dcc7657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>jacPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a2d2b186670a4be247b8ff5ea4ed03bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Interface::Preconditioner &gt;</type>
      <name>precInterfacePtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a9cd8d1c906d4fd90ba8190b6b6a903ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OperatorType</type>
      <name>precType</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a17e295a5c0829f68540645ce3cd99e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>precPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a664890cb31aa43dcf1fb7eb5aaabce94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; AztecOO &gt;</type>
      <name>aztecSolverPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a88bb34d2e0e65f705d10e1a03936adf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Ifpack_IlukGraph &gt;</type>
      <name>ifpackGraphPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a5e31518716c676304c3a69127190f29a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Ifpack_CrsRiluk &gt;</type>
      <name>ifpackPreconditionerPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a00f2b03416b34ba0692c41015f2ebf1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Ifpack_Preconditioner &gt;</type>
      <name>newIfpackPreconditionerPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a358c2eec7916a132c3c8bd99b25255be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Scaling &gt;</type>
      <name>scaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>afc4f9cf9cdba8371833a32a9ec855e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>tmpVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a1c9d2b77aa5f8e7ba3dfb0cd1e13d861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isPrecConstructed</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ab2a81180bcba43fb2cc968e0624428be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>outputSolveDetails</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aab8a9087f6756fc7e98625a17eab71f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>zeroInitialGuess</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a759ad503d3adad4ae99fde5dfad99ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>manualScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>abc326ab66fc0332598c7a7023d85ebf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PreconditionerReusePolicyType</type>
      <name>precReusePolicy</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>af8e2ebc77e97d09dea6c9cd2d6b10db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>precQueryCounter</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a427d28a09d4d51148de8f5eba81b4d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxAgeOfPrec</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ae3f9f9752e7f35dddba2ad7c85a69421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Time</type>
      <name>timer</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>a2f9fb0b276cee7fb19f62b6371d7eea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>timeCreatePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>aaa501ad2e7e579da04a491fec4346fcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>timeApplyJacbianInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>ac3e12c2af229c445e9735b095c5a40ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>solvePrecOpPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>af858fd9941ff636cd470212d130e44bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>throwErrorOnPrecFailure</name>
      <anchorfile>classNOX_1_1Epetra_1_1LinearSystemAztecOO.html</anchorfile>
      <anchor>adfb2461e8b1337dd2b21dd571a783eba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::LineSearchBased</name>
    <filename>classNOX_1_1Solver_1_1LineSearchBased.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>LineSearchBased</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a7a3ce4ed5880da128b33cc2ec020d9f4</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LineSearchBased</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a28fc4d7b75546fd8c168d40afb807315</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a2329ca79118c604f33cd572cbed77968</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a9cc0819a9e8777b73f99fabd1afe6599</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>aaa66f871041fee1657cbfe37ce488887</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a9fedb28b7d4eedbb2307f4085af46d52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a4b23dc75c91e57d941bfa871f27f7eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a70926e63f719b764643aac0469bd9db8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>affb953cf660496840da85a1e83918665</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>ae724904981699ee7fa00cf31cb1e0e05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>afd125139e78f6bb93cd0d3262f523205</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>acc678cd51ec3e354f96b97ef2b99e127</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a4d5217a73edb58a5c7436cf925c08067</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a888d1e0253fd675bbdd766c5d1dd71c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a1ac6bff972a34739bfbbb2095897598a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printUpdate</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a982678ab78a160c12a447fb2d2a1176d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a82f9d588756f5e237d2a0cda3688cab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utilsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a1b453bfad83f864355a4354d59bed9e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>add9e9e8be33e49e91dbc01f3df83083f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>oldSolnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a57ed7847e50a9e1b117a29f74fc7b332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>dirPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>aa3bc803bcccc96c83ce91898f43bc68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>ad22516be511dd03fb4ec5232df1735ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a62bf894123d62dc60d993456d79d39c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>lineSearchPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>acdf5307f881d4e9c30e0a0f60d9bfb62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>directionPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>ae198ab609066a0b8c03321aa7da24715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>accf3792a31a6ccc62167f35859bc590e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a8f0a8873ce208221af64601ddb60cd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>ae44843367f7a2e4472d10f866f4c404e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a63d05ec0de1a4db73e2a766761bfd7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1LineSearchBased.html</anchorfile>
      <anchor>a0811f1137ca2f3c1098696ef45e61bc9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::LOCAAdaptiveState</name>
    <filename>classThyra_1_1LOCAAdaptiveState.html</filename>
    <base>Thyra::AdaptiveStateBase</base>
    <member kind="function">
      <type>void</type>
      <name>buildSolutionGroup</name>
      <anchorfile>classThyra_1_1LOCAAdaptiveState.html</anchorfile>
      <anchor>a816b31431b0349fb805ceb81297fc035</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Thyra::Group &gt;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classThyra_1_1LOCAAdaptiveState.html</anchorfile>
      <anchor>a112f462e186997c06f4c148fe3400ac3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LOCAData</name>
    <filename>structLOCAData.html</filename>
  </compound>
  <compound kind="class">
    <name>LOCAInterface</name>
    <filename>classLOCAInterface.html</filename>
    <base>LOCA::Epetra::Interface::TimeDependent</base>
    <base>NOX::Epetra::Interface::Jacobian</base>
    <member kind="function">
      <type>bool</type>
      <name>computeF</name>
      <anchorfile>classLOCAInterface.html</anchorfile>
      <anchor>a2f2c5453f06de46c8d162665071b1ffa</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Vector &amp;f, const NOX::Epetra::Interface::Required::FillType F)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCAInterface.html</anchorfile>
      <anchor>ae054e206b66aebd3993c7928996de10e</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classLOCAInterface.html</anchorfile>
      <anchor>aebc6ce7a4a47ef45b29bcdfdcfac4533</anchor>
      <arglist>(const LOCA::ParameterVector &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printSolution</name>
      <anchorfile>classLOCAInterface.html</anchorfile>
      <anchor>adbddab672a7bc1073c95b75c4436a0ca</anchor>
      <arglist>(const Epetra_Vector &amp;x, const double conParam)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCAInterface.html</anchorfile>
      <anchor>a67f8e63a1f82710dcf02a26cf860395a</anchor>
      <arglist>(double alpha, double beta, const Epetra_Vector &amp;x, Epetra_Operator &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXdot</name>
      <anchorfile>classLOCAInterface.html</anchorfile>
      <anchor>a4f46464ce5191c91b3ef3de7fe641aaf</anchor>
      <arglist>(const Epetra_Vector &amp;xdot, const double time)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LOCANVectorData</name>
    <filename>structLOCANVectorData.html</filename>
  </compound>
  <compound kind="class">
    <name>Anasazi::LOCASort</name>
    <filename>classAnasazi_1_1LOCASort.html</filename>
    <member kind="function">
      <type></type>
      <name>LOCASort</name>
      <anchorfile>classAnasazi_1_1LOCASort.html</anchorfile>
      <anchor>a4400fbd6d1ab130845412d1d978fe400</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt; &amp;strategy_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LOCASort</name>
      <anchorfile>classAnasazi_1_1LOCASort.html</anchorfile>
      <anchor>a779a9c0cad579873fe1b24a6c51c8d34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classAnasazi_1_1LOCASort.html</anchorfile>
      <anchor>ab1946816bea71ab38ca838d52bcc5947</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;evals, Teuchos::RCP&lt; std::vector&lt; int &gt; &gt; perm=Teuchos::null, int n=-1) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sort</name>
      <anchorfile>classAnasazi_1_1LOCASort.html</anchorfile>
      <anchor>ac30440f04691c58f3106397247366f76</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;r_evals, std::vector&lt; double &gt; &amp;i_evals, Teuchos::RCP&lt; std::vector&lt; int &gt; &gt; perm=Teuchos::null, int n=-1) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classAnasazi_1_1LOCASort.html</anchorfile>
      <anchor>a1cf58afa6fd3cd6c91e0c5532524e7b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::EigenvalueSort::AbstractStrategy &gt;</type>
      <name>strategy</name>
      <anchorfile>classAnasazi_1_1LOCASort.html</anchorfile>
      <anchor>a6e158fd448eb587f8adfd6a428770400</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::LowerTriangularBlockElimination</name>
    <filename>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</filename>
    <member kind="function">
      <type></type>
      <name>LowerTriangularBlockElimination</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>a88eb5065b202869d43b0f63d17ce4092</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LowerTriangularBlockElimination</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>ae743fc5ed3a2c2730d77330c0ac1d836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>a6e1e2bd4340d4d19373f1570cb2834a5</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::BorderedSolver::AbstractOperator &amp;op, const LOCA::MultiContinuation::ConstraintInterface &amp;B, const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>a17006a351c7796cd53d4c14b7d797613</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::BorderedSolver::AbstractOperator &amp;op, const NOX::Abstract::MultiVector &amp;B, const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>a0b8df09142972d76ff1e714cc35cfeeb</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::BorderedSolver::AbstractOperator &amp;op, const LOCA::MultiContinuation::ConstraintInterface &amp;B, const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>addb14ce52628e575c404290ebcece02c</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::BorderedSolver::AbstractOperator &amp;op, const NOX::Abstract::MultiVector &amp;B, const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1LowerTriangularBlockElimination.html</anchorfile>
      <anchor>a796488a342619c9a550728a23b6b6a6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::LowRankUpdateOp</name>
    <filename>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</filename>
    <base virtualness="virtual">Epetra_Operator</base>
    <member kind="function">
      <type></type>
      <name>LowRankUpdateOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a64c488de0ea511f9a49afb69adc72b5c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;jacOperator, const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;U_multiVec, const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;V_multiVec, bool setup_for_solve)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LowRankUpdateOp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a2a088e63c0dc408bced614abbf2f28b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>afe956ec1adfa9484379aa1f8d3434adb</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a65fc0ad79771b29bd0eadf40d586010e</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a099b20d232402257fd8b430373e88900</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a686fc3e809f3a48a8a29247dfc8bf323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a443522eeb60c471718c07c5d6560756a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>af55c11b5407302bd0f2b90852882fa2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a7db2f0f644d01dc74017d23add882012</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>ab9e7ce554b03b683653033c6df2ec7d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a6863cfc89152ac06ec94a8aba5911662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a92160296ce766f02f60d0df124e6828f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a063ce522e3d6d340c065f3d85081b955</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a273bb8ba37ab7446c0e2a87dcfef32d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LocalMap</type>
      <name>localMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>ad5402f3b91d68dc1150de6ad1610d0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>J</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>ab06773ffa2510bc74c4701bdfef90089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>U</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a6b961daaafb1297d8e40a38dce4d9b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>V</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a182f0c105d507cdc1f5a926dc4433966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a4678a26e4a7f0ce6d60e54d024ad1c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmpMat</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a125f7024fa7431b9cfa04ce7fa18fb4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>JinvU</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a0e7f5ac9a2fc58525b741da922d09560</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>lu</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a99503640b416ba64f596f4695cc74e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>ipiv</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a53990518c3c46ba0a8983b858c0c44a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::LAPACK&lt; int, double &gt;</type>
      <name>lapack</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateOp.html</anchorfile>
      <anchor>a6b324b104faca60a52b27781c9746339</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::LowRankUpdateRowMatrix</name>
    <filename>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</filename>
    <base>LOCA::Epetra::LowRankUpdateOp</base>
    <base virtualness="virtual">Epetra_RowMatrix</base>
    <member kind="function">
      <type></type>
      <name>LowRankUpdateRowMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a5efdf3b36eb9ad0ec8642c4ebc12bdad</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Epetra_RowMatrix &gt; &amp;jacRowMatrix, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;U_multiVec, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;V_multiVec, bool setup_for_solve, bool include_UV_terms)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LowRankUpdateRowMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>af964ded31f950e1bc31dc56b2bcd8d9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_BlockMap &amp;</type>
      <name>Map</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a84c9530eadf88f1ab87e85a5ec9554e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRowEntries</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a679b609f5bf66aab141969484d1e0b8e</anchor>
      <arglist>(int MyRow, int &amp;NumEntries) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>MaxNumEntries</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a61d16dc775bf8197de656336542934df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractMyRowCopy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a9f3e29986020bf69af09bb004b319938</anchor>
      <arglist>(int MyRow, int Length, int &amp;NumEntries, double *Values, int *Indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractDiagonalCopy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a3d792d9fd4a3b61a15be7253099ccc4b</anchor>
      <arglist>(Epetra_Vector &amp;Diagonal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Multiply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a6226fe17ab07a2f1954716b8efa6bb5d</anchor>
      <arglist>(bool TransA, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Solve</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>afb65ebd94f2e5213090b2d8aa5d0c74b</anchor>
      <arglist>(bool Upper, bool Trans, bool UnitDiagonal, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvRowSums</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a41f090697e69cddc82ebc36fc4b4f083</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LeftScale</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a29fb781a3468f06ddd67023dfb2bd7af</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvColSums</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a7e8fdd0351af0188770728bc86923173</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>RightScale</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a6e9d773e21213ab5804b33270651a492</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Filled</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>aedf6620f04ce1bab0f451754c9dfdd26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a8b4790ca344ac1079c157a205d63864b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormOne</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a112bfc639d5a2b03cdc227c15cc7584b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalNonzeros</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a9bcca9b00ae90f43c941b5b69855b8f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalRows</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>ae70ab88805e5d55f432b6202406a3e89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalCols</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>af562d1610c65b411a014aa4a83546b11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalDiagonals</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a661b69f0b949fd35dcc732a5113a2b2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyNonzeros</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a66b39b5dd24fbefc180a6120f81b5662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRows</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a2af3d9513f5e0568cab4547992fbfcf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyCols</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a265b41bdee77ab96f926d982016a2230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyDiagonals</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a144726d068af0e62faf9e97c95a14474</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LowerTriangular</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>aed7079806bc39f403daed3de6edb0e1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpperTriangular</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a5d7e8bf7daa59f6418fa6a40609b8dd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixRowMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a9298cf70a1a32015e3053afbe5bf078e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixColMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a27b171d5d061e38b062a8ee4d455121c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Import *</type>
      <name>RowMatrixImporter</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a8512f72a99a9e17d0cfc6fd44470caac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>computeUV</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a532d3f89fa659d83eaaaa2383cdf18c5</anchor>
      <arglist>(int MyRow, int MyCol) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_RowMatrix &gt;</type>
      <name>J_rowMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a2dbc779894db5366f6c961d0a6b39f55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>nonconst_U</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>afefc220e6c1ed146e899f6cdcb82130e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>nonconst_V</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a791dc26cbae1acde3e1a9051f11359c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>includeUV</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a0d342866b40606f0021a241391b7b3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>afd48c40b64b895d7cbbedf10fdb5ac50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_BlockMap &amp;</type>
      <name>U_map</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>acd0b65614e71bc8c8321aa7730606894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_BlockMap &amp;</type>
      <name>V_map</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>ad5b5e72f2ea5f763694ad6ffcd2819bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_BlockMap &amp;</type>
      <name>row_map</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a42991a3f597ef6eea0908056b9355dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRowEntries</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a679b609f5bf66aab141969484d1e0b8e</anchor>
      <arglist>(int MyRow, int &amp;NumEntries) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>MaxNumEntries</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a61d16dc775bf8197de656336542934df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractMyRowCopy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a9f3e29986020bf69af09bb004b319938</anchor>
      <arglist>(int MyRow, int Length, int &amp;NumEntries, double *Values, int *Indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractDiagonalCopy</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a3d792d9fd4a3b61a15be7253099ccc4b</anchor>
      <arglist>(Epetra_Vector &amp;Diagonal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Multiply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a6226fe17ab07a2f1954716b8efa6bb5d</anchor>
      <arglist>(bool TransA, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Solve</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>afb65ebd94f2e5213090b2d8aa5d0c74b</anchor>
      <arglist>(bool Upper, bool Trans, bool UnitDiagonal, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvRowSums</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a41f090697e69cddc82ebc36fc4b4f083</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LeftScale</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a29fb781a3468f06ddd67023dfb2bd7af</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvColSums</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a7e8fdd0351af0188770728bc86923173</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>RightScale</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a6e9d773e21213ab5804b33270651a492</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Filled</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>aedf6620f04ce1bab0f451754c9dfdd26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a8b4790ca344ac1079c157a205d63864b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormOne</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a112bfc639d5a2b03cdc227c15cc7584b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalNonzeros</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a9bcca9b00ae90f43c941b5b69855b8f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalRows</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>ae70ab88805e5d55f432b6202406a3e89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalCols</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>af562d1610c65b411a014aa4a83546b11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalDiagonals</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a661b69f0b949fd35dcc732a5113a2b2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyNonzeros</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a66b39b5dd24fbefc180a6120f81b5662</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRows</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a2af3d9513f5e0568cab4547992fbfcf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyCols</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a265b41bdee77ab96f926d982016a2230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyDiagonals</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a144726d068af0e62faf9e97c95a14474</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LowerTriangular</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>aed7079806bc39f403daed3de6edb0e1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpperTriangular</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a5d7e8bf7daa59f6418fa6a40609b8dd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixRowMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a9298cf70a1a32015e3053afbe5bf078e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixColMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a27b171d5d061e38b062a8ee4d455121c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Import *</type>
      <name>RowMatrixImporter</name>
      <anchorfile>classLOCA_1_1Epetra_1_1LowRankUpdateRowMatrix.html</anchorfile>
      <anchor>a8512f72a99a9e17d0cfc6fd44470caac</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SingularJacobianSolve::Manager</name>
    <filename>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</filename>
    <base>LOCA::SingularJacobianSolve::Generic</base>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>a72350bcd3de1c8c427e7645fe32130b4</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>ae35a2cdb8beaf4480171ad1f090a1754</anchor>
      <arglist>(const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>a891fc86af13d27d6006ddf28ee125711</anchor>
      <arglist>(const Manager &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Manager</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>adcd99a0526d9c9ba2494be1e07c7fe39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>a930b8db077890e63eb3864996f5d94bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>a0ae8faf467ad93865365233aa28936d7</anchor>
      <arglist>(const LOCA::SingularJacobianSolve::Generic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Manager &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>ae9c294b5c72c90410b75eba7feb1a104</anchor>
      <arglist>(const Manager &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>ab24a5688e543941e9a21a131c1f8e599</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>abfd5c2a93420c3c2a0b86c5a5dee9f27</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;input, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeMulti</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>a5e4f97796d320acaf043c96e12800116</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector *const *inputs, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector **results, int nVecs)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getMethod</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>a357af0d11ba060b6f1fe0d42bb587cad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>method</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>ab86be89044b2bd9a3517b5f6300d88cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::SingularJacobianSolve::Generic *</type>
      <name>singularSolverPtr</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Manager.html</anchorfile>
      <anchor>ab2153c579ce2de91bfbc2c4f32dc33ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Multiphysics::Solver::Manager</name>
    <filename>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a3ac19111c5416b277702907022598e1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a9933c6d1d3fcefa34c3717a1694197d3</anchor>
      <arglist>(const Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; NOX::Solver::Generic &gt; &gt; &gt; &amp;solvers, const Teuchos::RCP&lt; NOX::Multiphysics::DataExchange::Interface &gt; &amp;i, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;t, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Manager</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>ae9d0c7f44aabfe05b4a5b19db57b6173</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;t, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Manager</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>aec2b6fb67b1d57851f76107ef5974f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>ab403bada8e17dab112ac9cdedb7ec9a6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a4434f2324c6c6d29331976e644b64200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>ad20ba1984c69b34dbd91425f5473b5a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>acffad435e2cca05d51b210621b4cbd44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a32213d49db0d751f22aa218c92e1e950</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a5c3ab5938cbebab778ec55baf7274435</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>acfe25db839dec158a002ed1e7f59b87b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>acdeb08dc261a7c6068cdfaa56c951bc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a71f23fdd59db92896bc7477a44cc9c51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>aadf28baa71b27efbfde170f0f7df25df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>ac3773de09baac2fff65166ceacba7f07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Multiphysics::Solver::Generic *</type>
      <name>cplPtr</name>
      <anchorfile>classNOX_1_1Multiphysics_1_1Solver_1_1Manager.html</anchorfile>
      <anchor>a8b79141a12ab0d6d49c31a478de9866d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Interface::MassMatrix</name>
    <filename>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</filename>
    <member kind="function">
      <type></type>
      <name>MassMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</anchorfile>
      <anchor>a084590eeb16c8044579d3f3c5cfce168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MassMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</anchorfile>
      <anchor>a21dd61a655b50bbf8f8c3825fab5ea66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeMassMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</anchorfile>
      <anchor>ad2b7b09856a33fcf772e3443ad152b39</anchor>
      <arglist>(const Epetra_Vector &amp;x)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOldSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</anchorfile>
      <anchor>a6343842993605a3a28bf4c8b351772ad</anchor>
      <arglist>(const Epetra_Vector &amp;x, const int timeStep)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setOldSolutionFirstStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</anchorfile>
      <anchor>ac349e10126a2b3c719460982badb4ee1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dataForPrintSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1MassMatrix.html</anchorfile>
      <anchor>a82a9c55ef6177221e0dc497d1dbbcf66</anchor>
      <arglist>(const int conStep, const int timeStep, const int totalTimeSteps)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LAPACK::Matrix</name>
    <filename>classNOX_1_1LAPACK_1_1Matrix.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>aa9d58b6eddf55010d6214839500bba7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>ac34ca1d9a931f511b285387731e016ad</anchor>
      <arglist>(int m, int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>adf0dc9f476d2e63297cf7bccec26ded7</anchor>
      <arglist>(const Matrix &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a3a56ac8c7c7c035df46412ffb93bc071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator()</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a4b86ca3a6323d4b88fcf5b6ebd1abfed</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator()</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a3cc5a6eb6c5715739eb88db8fd0f9a33</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a2737912f9cdb268fc2f9a920721e433b</anchor>
      <arglist>(T v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>print</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a79515a17b7a32221873fd585d59ff86f</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numRows</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a9e80d2b5b7b0db4a19ebe7339ab4a0b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numCols</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>ac3714ef1879db65ec8dbe86a2319225e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Matrix&lt; double &gt;</name>
    <filename>classNOX_1_1LAPACK_1_1Matrix.html</filename>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>aa9d58b6eddf55010d6214839500bba7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>ac34ca1d9a931f511b285387731e016ad</anchor>
      <arglist>(int m, int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>adf0dc9f476d2e63297cf7bccec26ded7</anchor>
      <arglist>(const Matrix &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Matrix</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a3a56ac8c7c7c035df46412ffb93bc071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a4b86ca3a6323d4b88fcf5b6ebd1abfed</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a3cc5a6eb6c5715739eb88db8fd0f9a33</anchor>
      <arglist>(int i, int j) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a2737912f9cdb268fc2f9a920721e433b</anchor>
      <arglist>(double v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>print</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a79515a17b7a32221873fd585d59ff86f</anchor>
      <arglist>(std::ostream &amp;stream) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numRows</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>a9e80d2b5b7b0db4a19ebe7339ab4a0b5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numCols</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Matrix.html</anchorfile>
      <anchor>ac3714ef1879db65ec8dbe86a2319225e</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::MatrixFree</name>
    <filename>classNOX_1_1Epetra_1_1MatrixFree.html</filename>
    <base>Epetra_Operator</base>
    <base virtualness="virtual">NOX::Epetra::Interface::Jacobian</base>
    <member kind="enumeration">
      <type></type>
      <name>DifferenceType</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a53a454125280c48971f65507b0368468</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MatrixFree</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a3342b37ca2ae486527173cac9831b961</anchor>
      <arglist>(Teuchos::ParameterList &amp;printParams, const Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt; &amp;i, const NOX::Epetra::Vector &amp;cloneVector, bool useNewPerturbation=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MatrixFree</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a57272d667289568538b424cac6f10c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a4e46a88b630e7ae85a3362169a1b75a3</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a75b28410bcd35a7e1d9df177ce3ec9bc</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a14e7224a5e84c3ef31659dd0129001a0</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>aab5a76055499ef7fca03cc029ac660bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a945c4e251c20e0fbecfd516e6d61869e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a6c9d5a5afee7e340b23dc07095d47853</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>af9a1bb81b0f61b59fafe569ec174e6ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a2d997eb9aad5e6870c7976331ef25ec3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a9e3aa5d428edc3597f73bf33d1cbb85f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>af66ade1c4bf099970ae4f8535dbf8d1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a97e32aeb373a7d7631aecb4cc043be7d</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDifferenceMethod</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a4b46246dfdace626c4a150cd936763e1</anchor>
      <arglist>(DifferenceType type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLambda</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>ad03e15cd39ac55b36c5cb819be27176d</anchor>
      <arglist>(double lambda_)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComputePerturbation</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a938f46bbd506c29ba5afff9d0885b858</anchor>
      <arglist>(bool bVal)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPerturbation</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>ad94473ad35df8e80011873d449a341a6</anchor>
      <arglist>(double eta_)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getPerturbation</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>af8a890cc3f879b524dd6e0f7d5ff57bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupForComputeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a03e730103dd8af851afecadac0863e9e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;group)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolverForComputeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a8a0516adcea5e5d2525f30baee21246e</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Solver::Generic &gt; &amp;slvr)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a8abefb87d5a32ea239f87d5f2fe911ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Interface::Required &gt;</type>
      <name>interface</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a6cd3bbd212dd594875f2acf550d1a7b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector</type>
      <name>currentX</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a3f9059dbba824e7d18e1285568df51c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector</type>
      <name>perturbX</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a2885057c4de430578fd1817023065917</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector</type>
      <name>fo</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>ad45e78696155d6eb57f184fd4adc6df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Vector</type>
      <name>fp</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a04c99d39b8d63dd16e75138e16094915</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Vector &gt;</type>
      <name>fmPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a359dba2ff9a04f48381c4a9c9f63f8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>epetraMap</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a60f121574772f013adf71046e7a413b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DifferenceType</type>
      <name>diffType</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>aac9e64248ef7901a245d75e0a5e3e518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>lambda</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>add8767adb4f6dee3df5cd97989a4bdde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>eta</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a1d7335c5cf7c3f7a7c066e58baed595c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>userEta</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a233d8c5a658f0d3ba46591f42bb23772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>computeEta</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>ae6b95a1ad8a58c934a4153371c78a683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useGroupForComputeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a5d8aefd0f7b0b733ad8a0ecf2ed0c370</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useSolverForComputeJacobian</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>ac2689fc273eb6ebdb0d8f92d74235db6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useNewPerturbation</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a8d9bc929d2b81ee6e61869c1149813ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>groupPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a8763503e2a6543b921032749e0b0fb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>slvrPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>ad9f485cffee104d4e6b280fdf8bc9c42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Utils</type>
      <name>utils</name>
      <anchorfile>classNOX_1_1Epetra_1_1MatrixFree.html</anchorfile>
      <anchor>a129e3a623333f7a052ce9ed1bc1a6078</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Thyra::MatrixFreeJacobianOperator</name>
    <filename>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</filename>
    <templarg></templarg>
    <base>Thyra::LinearOpBase</base>
    <member kind="enumeration">
      <type></type>
      <name>E_DifferenceType</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a6b02c2d3820bdd26d7c679054d42abb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>E_PerturbationType</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SalingerLOCA</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0feba81344e7b72c18d6b31a94afb93ca8b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KelleySalingerPawlowski</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0febadc2e2f6f83c7a45b72aa79677d86da5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KnollKeyes</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0febaf7b3f21ee427f5b1df683fc01615de02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserDefined</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0feba7eec435f26928afad4515fbaa55ad693</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>E_BaseEvaluationType</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a95598b49aebd59ddc62fcbe8131ad375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RawThyra</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a95598b49aebd59ddc62fcbe8131ad375ad28be92c81e2c46f7223713b38554801</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoxGroup</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a95598b49aebd59ddc62fcbe8131ad375a271f31a4ca14d537b05e1d04ec041e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SalingerLOCA</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0feba81344e7b72c18d6b31a94afb93ca8b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KelleySalingerPawlowski</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0febadc2e2f6f83c7a45b72aa79677d86da5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KnollKeyes</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0febaf7b3f21ee427f5b1df683fc01615de02</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserDefined</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af3931084b7af64314cb0d63de84f0feba7eec435f26928afad4515fbaa55ad693</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RawThyra</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a95598b49aebd59ddc62fcbe8131ad375ad28be92c81e2c46f7223713b38554801</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoxGroup</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a95598b49aebd59ddc62fcbe8131ad375a271f31a4ca14d537b05e1d04ec041e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLambda</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a983e217b716d1c3e7b4c1c2b41103632</anchor>
      <arglist>(double lambda)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>getLambda</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>af96771dfc8076822e4e75b9e64910d40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserDefinedDelta</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>afaeff2d4c68a9ac2803edf7c8cd1330e</anchor>
      <arglist>(double delta)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>getUserDefinedDelta</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a21b6af32a3588c16fcf4bad755e88f19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>getDelta</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a3613effbfc4ecdf5fe4c7cc1dad87176</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>setup_called_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a7eb6d88b5d71e1da7e2c1b34b599c764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::ModelEvaluator&lt; Scalar &gt; &gt;</type>
      <name>model_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>ae31897f7073e944ae7ada56c9be34fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Utils</type>
      <name>utils_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>aa034056a230530bea6386c1b4569b3fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>valid_params_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a7d3734b671c43014142740ce4bea0091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scalar</type>
      <name>lambda_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a5136713bfe7b92f716189f03fc96dc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scalar</type>
      <name>delta_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>a55abf50524c49fca1991b7144e334c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Scalar</type>
      <name>user_defined_delta_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MatrixFreeJacobianOperator.html</anchorfile>
      <anchor>ad2d7ec5851c185c1c4f0a7dbd53571fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>nox::MatrixFreeModelEvaluatorDecorator</name>
    <filename>classnox_1_1MatrixFreeModelEvaluatorDecorator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>NOX::MatrixFreeModelEvaluatorDecorator</name>
    <filename>classNOX_1_1MatrixFreeModelEvaluatorDecorator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::MaxIters</name>
    <filename>classNOX_1_1StatusTest_1_1MaxIters.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>MaxIters</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a7749c8f8991b5ea344ba94e32299a281</anchor>
      <arglist>(int maxIterations, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MaxIters</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a4f3bb0ed999d63c21831bdd62533e1bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>afd4c4abf8bf64015f44d55f98fae8b3d</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a421b5dd7f21c212438d74b608292e590</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>ad628128e6f8fa71900a130f6c859ead2</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMaxIters</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a3326758349bb635eb0bd0bd025c6231f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIters</name>
      <anchorfile>classNOX_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>ade7cc3dff29fd26715a6ab9c2e1d606a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StatusTest::MaxIters</name>
    <filename>classLOCA_1_1StatusTest_1_1MaxIters.html</filename>
    <base>LOCA::StatusTest::Abstract</base>
    <member kind="function">
      <type></type>
      <name>MaxIters</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a0972cb67cb17a1f63428844fca6838eb</anchor>
      <arglist>(int maxIterations, bool return_failed_on_max_steps=true, const Teuchos::RCP&lt; const LOCA::GlobalData &gt; globalData=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MaxIters</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>abd87dfdc00e98edb2115da1aa93a2593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>ad3c00d754fff795a92ef3f8c47b37757</anchor>
      <arglist>(const LOCA::Abstract::Iterator &amp;stepper, LOCA::StatusTest::CheckType status)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a5691767fd09617bf5ec514c292637b65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>ab9c2ec949c80b10ae3336a9d58f4c43d</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMaxIters</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>ad53c48809ba44528d5f5eae926c04c0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIters</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1MaxIters.html</anchorfile>
      <anchor>a67afe7ce0dc5c56cd1e17abf6819cb77</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::ModelEvaluator</name>
    <filename>classThyra_1_1ModelEvaluator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::ModelEvaluatorInterface</name>
    <filename>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</filename>
    <base>LOCA::Epetra::Interface::TimeDependent</base>
    <base>LOCA::DerivUtils</base>
    <member kind="function">
      <type></type>
      <name>ModelEvaluatorInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>aab0e3f4ee17de006ff3b6d8203d9bd43</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt; &amp;m, double perturb=1.0e-6)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModelEvaluatorInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a51ba509314c08f985c2f8cd2fee739ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ParameterVector &amp;</type>
      <name>getLOCAParameterVector</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>adb97f293410b7bb19ce0733152df4b31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a33e82d34ccdb748b8692c71d27fc0f26</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Vector &amp;F, const FillType fillFlag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>ab098853f16964fc1abe7ffa0392def70</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>aac8beb62c715e94ac289317e1adfc663</anchor>
      <arglist>(double alpha, double beta, const Epetra_Vector &amp;x, Epetra_Operator &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXdot</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>ae9388ca09fb9fdf7723048ae87e83954</anchor>
      <arglist>(const Epetra_Vector &amp;xdot, const double time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a9405d6af2540a5b07d2c361e543a28f6</anchor>
      <arglist>(const Epetra_Vector &amp;x_, double conParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelEvaluatorInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a00e2967f600a8b7634360fafe076878a</anchor>
      <arglist>(const ModelEvaluatorInterface &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; DerivUtils &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>ad7093eb88d1f4e6e37710f1fd7f03171</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDfDp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a6df12179b09968da03675a86c7ef4e0d</anchor>
      <arglist>(LOCA::MultiContinuation::AbstractGroup &amp;grp, const std::vector&lt; int &gt; &amp;param_ids, NOX::Abstract::MultiVector &amp;result, bool isValidF) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>ac38d437b699911dc30e9e46a21e45b29</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus, LOCA::Epetra::Group &amp;group)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector</type>
      <name>param_vec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a468d7172ae8ce2100a85b6782fbe6527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::ParameterVector</type>
      <name>loca_param_vec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>ab7f710b7cca92bbe36a5a4a0216fd7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Vector *</type>
      <name>x_dot</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a0c5354f68aeac55cafa5203a3ad08e9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>alpha_prev</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a25290be1385dedf2446658758dc0c01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Observer &gt;</type>
      <name>observer</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ModelEvaluatorInterface.html</anchorfile>
      <anchor>a9fe3b7868c81e01e2d279765b5ce35b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MinimallyAugmented::ModifiedConstraint</name>
    <filename>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</filename>
    <base>LOCA::TurningPoint::MinimallyAugmented::Constraint</base>
    <member kind="function">
      <type></type>
      <name>ModifiedConstraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a026dc89101e3c65c3eec31dbfe1e9c28</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;tpParams, const Teuchos::RCP&lt; LOCA::TurningPoint::MinimallyAugmented::AbstractGroup &gt; &amp;g, int bif_param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModifiedConstraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a5a2f10660a8369141f550f834180b8da</anchor>
      <arglist>(const ModifiedConstraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ModifiedConstraint</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a4db5f6460302f0b0550bf8edce585acd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNewtonUpdates</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>ae3b4e946cc9d881e0d907a5c5cf46593</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dx, double dp, double step)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a2ad3529be91336314f1452df3aea74d3</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>ac9d91a7a097bf2c57df7c7472e457f25</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>aff79d70383a2ab32f0e3188f3bb7e6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a99437443f8470ede93f49af21d831450</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>accb983b5eaa06d07ba633d6b901f94d5</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>w_vector_update</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a0f7e396662fa642739a1b259728d539b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>v_vector_update</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>af4fc12290636c60f301bad0259425ccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>w_residual</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a0f5b0ed06471f7c98add6571bfc54cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>v_residual</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>ad415abc083e34c5d6ace74e83a694c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>deltaX</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>abc7588949e8d25d20d049b9577498c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>sigma1</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a58256cdb62c142fa29ebfacb622a8ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>sigma2</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a6a88c5290b2c00260ce59f99293a3217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>deltaP</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a10287374eaef0d1682e75f4c3bd7ea86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isFirstSolve</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a888ff36929f1e8e65e96ccf416f6ee27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>includeNewtonTerms</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a2a45eb8636e8311762e923491c91e020</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a2ad3529be91336314f1452df3aea74d3</anchor>
      <arglist>(const LOCA::MultiContinuation::ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>ac9d91a7a097bf2c57df7c7472e457f25</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>aff79d70383a2ab32f0e3188f3bb7e6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>a99437443f8470ede93f49af21d831450</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MinimallyAugmented_1_1ModifiedConstraint.html</anchorfile>
      <anchor>accb983b5eaa06d07ba633d6b901f94d5</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::MoreThuente</name>
    <filename>classNOX_1_1LineSearch_1_1MoreThuente.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>MoreThuente</name>
      <anchorfile>classNOX_1_1LineSearch_1_1MoreThuente.html</anchorfile>
      <anchor>ab0c62d226c2c9ed537e3cec2b84042c6</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MoreThuente</name>
      <anchorfile>classNOX_1_1LineSearch_1_1MoreThuente.html</anchorfile>
      <anchor>a93169e9e357306ca951128ead88cbd7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1MoreThuente.html</anchorfile>
      <anchor>a688d3b890763da9ff14de4a548080d41</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Extended::MultiAbstractGroup</name>
    <filename>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>MultiAbstractGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a2f5e09f59e58286dd6e03b20d4d50afd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiAbstractGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a0aea0191cf4d83e683f28a22575f7e46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a44196b31a907a490f2f9a4736a3a8636</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a5ad900b573d7db1e58daa4c333323fcd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBaseLevelUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a69ac5f20267ec969ad422a69f1faf8ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBaseLevelUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a797c943cc11556fbf6295b8a7f27879c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a44196b31a907a490f2f9a4736a3a8636</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a5ad900b573d7db1e58daa4c333323fcd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBaseLevelUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a69ac5f20267ec969ad422a69f1faf8ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBaseLevelUnderlyingGroup</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiAbstractGroup.html</anchorfile>
      <anchor>a797c943cc11556fbf6295b8a7f27879c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiStepper</name>
    <filename>classLOCA_1_1MultiStepper.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiStepper</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>aecd3aa574d64d8955f1ea39b152ffb3a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;t, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiStepper</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>afeaa7975c32c6ac4ecccf73ca087385b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a1bae7022ff3b4cd3f5a0fed77b441725</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;t, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>run</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a50b8a2c54a547b9840b22348da42a860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a842190a75e6083905ac4cea2c2435041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getList</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>ac83ccb53987379bb2408b44d1e46c006</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printInitializationInfo</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>ade44f1fe85858e42de4462da6c205efc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getConParamData</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a46017662c527dedba38f56fff33b62ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>buildConstrainedGroup</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>ad8204e2773eb9b5fa16469e3bca88be0</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a22c7cfde85c3adc02585399a7ef8ffd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a471410ec38370f4d54ff8fa7691838b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a66bacbe97a83fdd6b11b22f3b718e840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>curGroupPtr</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>ae2f220fe03f5812549cecdaf5d224420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>bifGroupPtr</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a9acd1c599ad3082f8bbd804296364637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>statusTestPtr</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a0bfdeffdf32588b45b3bf87481fb4ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramListPtr</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>aa30061b681b698492c50ce4b8779bf12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>stepperList</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>acdd3f97bb06907960b2949839ac60e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>solverPtr</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a59105f6bccbe6227c51437cee872e947</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LOCA::ParameterVector</type>
      <name>paramVec</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>a2f313cd6f6bb0f3b83f41fb13669f580</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDVec</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>adb693c91ad6dfe1eb92a8181f48d17a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ParamData &gt;</type>
      <name>conParamData</name>
      <anchorfile>classLOCA_1_1MultiStepper.html</anchorfile>
      <anchor>aa063ba3abf387ebafc284bdddcf0ef90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::MultiVecConstraint</name>
    <filename>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</filename>
    <base>LOCA::MultiContinuation::ConstraintInterfaceMVDX</base>
    <member kind="function">
      <type></type>
      <name>MultiVecConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aa168a36928439b6228ce96641a0733bd</anchor>
      <arglist>(const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dx)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVecConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aa3219a86b102ce1302b50a4e99efeeca</anchor>
      <arglist>(const MultiVecConstraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiVecConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a67a40140e63d49bc12e6bd409ab3f234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDx</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a7acc680572096db6f1ccde0b85fed67a</anchor>
      <arglist>(const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>ac12546d8fcbb3bfc84417b951af73c93</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a3b881e7e3572a9f0f0119c8330731b21</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a6835372a97651db2dce703a4f9f350b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a763caeedadbde39dd6554702a102c46e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a1b74f47397c609df7b4efb660364f66a</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a961da8526325525d9251db27f1ca7eee</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a92a7e9b4315f08e43c3640942beda31c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a2320dc23a1775fe71bf85c934f52931a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a20c00e600455b2297fce8dabbff953fa</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aeb80365d920d806a3305b585eaced8d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aab9a00689d58167016c2b0381eea9578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aaf618d650858fefb3d42adcfe503e44b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a7379e43dca1a62a6857238acb949f3ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>ac65b99f54f21bb7f91cb289d73a6ba4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyCompletedStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a452344069bb1cf5316224d9ef7d48424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>dx</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>ac6a72a7c00c2e889377de80acdd8a542</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>x</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aac399d848ba791b3ea0ccc1fd398c001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a80189eb09ffb46f207adaad99fc9183d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a712eeebcb6a35c3ce293720cd29c23aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>ac12546d8fcbb3bfc84417b951af73c93</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a3b881e7e3572a9f0f0119c8330731b21</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a6835372a97651db2dce703a4f9f350b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a763caeedadbde39dd6554702a102c46e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a1b74f47397c609df7b4efb660364f66a</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a961da8526325525d9251db27f1ca7eee</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a92a7e9b4315f08e43c3640942beda31c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a2320dc23a1775fe71bf85c934f52931a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a20c00e600455b2297fce8dabbff953fa</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aeb80365d920d806a3305b585eaced8d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aab9a00689d58167016c2b0381eea9578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>aaf618d650858fefb3d42adcfe503e44b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a7379e43dca1a62a6857238acb949f3ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>ac65b99f54f21bb7f91cb289d73a6ba4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>notifyCompletedStep</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1MultiVecConstraint.html</anchorfile>
      <anchor>a452344069bb1cf5316224d9ef7d48424</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Abstract::MultiVector</name>
    <filename>classNOX_1_1Abstract_1_1MultiVector.html</filename>
    <member kind="typedef">
      <type>Teuchos::SerialDenseMatrix&lt; int, double &gt;</type>
      <name>DenseMatrix</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ad6def8480a4d3e948e62e2ca07c6ae0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a98b31ef46f43c6c8472f9f320f27962b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a5a1d60efde5abb331acad6b2593c6c82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a61140a6bc3b4a9f4984511fc9e582f63</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numVectors</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a212489311497a1f3300f6cccc7ee6bb5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a6802443c4a7f9083a1e82ec65c9bd8ed</anchor>
      <arglist>(std::ostream &amp;stream) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ac2d07807147e05c8b5027f3e1e28c4c6</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a78908de5b14f075f2af2d08908a462d8</anchor>
      <arglist>(bool useSeed=false, int seed=1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a6cdc47457362ff14f7ba279c1b4eac4d</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a52e3a2de4bb3cf069b99ca2ccb3d6e52</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a8da2d2c0ea7620910029c74e230c33c1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ac89ae10b2d251282ce3539d9f11b81c9</anchor>
      <arglist>(int i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a2ab1870f13c868d5669b39058a57582b</anchor>
      <arglist>(int i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a139c09202040a72e9f1dc59593260d07</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a354bcc5d22978038d844ece3e0ec2d98</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ab2f7efb69e7ee8f160a3b797af4c667d</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a75eda8091767c07ac4fb93fdb7d4b2c9</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const DenseMatrix &amp;b, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>af6861e0e0f0e64875a689fbd03f64f1b</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a9e79b7cda8da8acbd2dbc10cbd590e4f</anchor>
      <arglist>(int numvecs) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a44438aae804522e12a8c79bb740d5c4c</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>aaf0baae7b78f2a9ca26696346f968f5b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>adf5b5412abd26af2f11465a894486cc1</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a7383f920943e42799bbc3970f786e15a</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, DenseMatrix &amp;b) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ac2d07807147e05c8b5027f3e1e28c4c6</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a78908de5b14f075f2af2d08908a462d8</anchor>
      <arglist>(bool useSeed=false, int seed=1)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a6cdc47457362ff14f7ba279c1b4eac4d</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a52e3a2de4bb3cf069b99ca2ccb3d6e52</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a8da2d2c0ea7620910029c74e230c33c1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ac89ae10b2d251282ce3539d9f11b81c9</anchor>
      <arglist>(int i)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a2ab1870f13c868d5669b39058a57582b</anchor>
      <arglist>(int i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a139c09202040a72e9f1dc59593260d07</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a354bcc5d22978038d844ece3e0ec2d98</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>ab2f7efb69e7ee8f160a3b797af4c667d</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a75eda8091767c07ac4fb93fdb7d4b2c9</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const DenseMatrix &amp;b, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>af6861e0e0f0e64875a689fbd03f64f1b</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a9e79b7cda8da8acbd2dbc10cbd590e4f</anchor>
      <arglist>(int numvecs) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a44438aae804522e12a8c79bb740d5c4c</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>aaf0baae7b78f2a9ca26696346f968f5b</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>adf5b5412abd26af2f11465a894486cc1</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1Abstract_1_1MultiVector.html</anchorfile>
      <anchor>a7383f920943e42799bbc3970f786e15a</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, DenseMatrix &amp;b) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Thyra::MultiVector</name>
    <filename>classNOX_1_1Thyra_1_1MultiVector.html</filename>
    <base virtualness="virtual">NOX::Abstract::MultiVector</base>
    <base>NOX::Abstract::ImplicitWeighting</base>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a71e35437c181f2d78807ecc883f72ba2</anchor>
      <arglist>(const Teuchos::RCP&lt; ::Thyra::MultiVectorBase&lt; double &gt; &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aaec93ba754e443f731c865da43106280</anchor>
      <arglist>(const ::Thyra::MultiVectorBase&lt; double &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a4bf3609b74f1492558002e0caa912f1c</anchor>
      <arglist>(const NOX::Thyra::MultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a8ccc7df726a7ef0bdc6410134d3a3125</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>ab629780015b115a01979dbecf6d315aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numVectors</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a6af4fc1c255bff46a5f3cf14df38d5b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>ad528368669905d26ec98a45d3bc82c01</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeightVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a6cfe330146d9b118e25d49d1c8c32641</anchor>
      <arglist>(const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;weightVec)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getWeightVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a0372c1a8a624497e3e2c85ac41975e51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ::Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>getThyraMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a9129c5b02881005a4729af04ffd996e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ::Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>getThyraMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aaa031ca8820b92b8d39f4a1ffec2ec08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a638e877ea7c5edaf4284824be8957a7f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a93925d888cc82e474f3a14a7b1491b2e</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aae35ae75bb98c55b0b3d293db0eedb02</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a4e7ef0171f376c2ac687accc25a908e8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a8a2807d592a322137bf0c3e66ed7e58c</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a2a60f17a37e1e22eaffae5b5ad2d75fe</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>ad4adcfd77d055d285438a573cd39d1f7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a0942f3c53b6000751ecf936e007e671d</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aa49dd26d34312beab21f8b5a2ae3ff44</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>acda6198ab99371255875cff17bbbf9bd</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a486e07d3174d3de507de41140ae6b771</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>ac2120981ecda120608dd0a3911110227</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a82e6fb676e408ea95b3d3f8769b53ddc</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a6dc115104bb96506ac9bb975fdc59ba3</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>afe10de98eae77618fc69634283410ce7</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a63286039047fc2dd7fe769575569da89</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a136deb239f73a878cb629444138a2cec</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a5ee36d0112aa35789c76591d6e9f8ae3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a2752c82d298297baa596cd7184d00466</anchor>
      <arglist>(bool do_implicit_weighting)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aa75a6aecffecd2f259d78f7c6aac26ec</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>thyraMultiVec</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>abec3e7cbba1f0a14e191964b753006bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; NOX::Thyra::Vector &gt; &gt;</type>
      <name>noxThyraVectors</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a358810030d6d633d2ec3314d69028f9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>weightVec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a4488f04aafc50ee1e460ccd5b11b6fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>tmpMultiVec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a6a593fdf023b8bb047699f45275417aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>do_implicit_weighting_</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a039253befa292b1a9d5e0ca4471d7163</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ::Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>getThyraMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a9129c5b02881005a4729af04ffd996e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ::Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>getThyraMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aaa031ca8820b92b8d39f4a1ffec2ec08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a638e877ea7c5edaf4284824be8957a7f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a93925d888cc82e474f3a14a7b1491b2e</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aae35ae75bb98c55b0b3d293db0eedb02</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a4e7ef0171f376c2ac687accc25a908e8</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a8a2807d592a322137bf0c3e66ed7e58c</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a2a60f17a37e1e22eaffae5b5ad2d75fe</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>ad4adcfd77d055d285438a573cd39d1f7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a0942f3c53b6000751ecf936e007e671d</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>aa49dd26d34312beab21f8b5a2ae3ff44</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>acda6198ab99371255875cff17bbbf9bd</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a486e07d3174d3de507de41140ae6b771</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>ac2120981ecda120608dd0a3911110227</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a82e6fb676e408ea95b3d3f8769b53ddc</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a6dc115104bb96506ac9bb975fdc59ba3</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>afe10de98eae77618fc69634283410ce7</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a63286039047fc2dd7fe769575569da89</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a136deb239f73a878cb629444138a2cec</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a5ee36d0112aa35789c76591d6e9f8ae3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1MultiVector.html</anchorfile>
      <anchor>a2752c82d298297baa596cd7184d00466</anchor>
      <arglist>(bool do_implicit_weighting)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::MultiVector</name>
    <filename>classNOX_1_1Epetra_1_1MultiVector.html</filename>
    <base virtualness="virtual">NOX::Abstract::MultiVector</base>
    <member kind="enumeration">
      <type></type>
      <name>MemoryType</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>afd06d3a071e8d05f7cf04f9e3a698df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateView</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>afd06d3a071e8d05f7cf04f9e3a698df8a94e3a186bebb678401e7280a2fb114e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>afd06d3a071e8d05f7cf04f9e3a698df8ad9e6a9664cdf5a1a7e30df12d4d678b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateView</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>afd06d3a071e8d05f7cf04f9e3a698df8a94e3a186bebb678401e7280a2fb114e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>afd06d3a071e8d05f7cf04f9e3a698df8ad9e6a9664cdf5a1a7e30df12d4d678b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>abcd9682df17e2fef19ed4badd371126e</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;source, NOX::CopyType type=NOX::DeepCopy, NOX::Epetra::MultiVector::MemoryType memoryType=NOX::Epetra::MultiVector::CreateCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a274d9f35772b0c2f7c1d88796b4e762d</anchor>
      <arglist>(const Epetra_MultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a0baaacf106bd9dc0fe896bb9fcfca8fe</anchor>
      <arglist>(const NOX::Epetra::MultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a3147ac895839d3a547c55bb47f6325c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a31aeea9f8dbedf1d23ccef2082a9ed48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numVectors</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>aa6a49fbdc6d1ae4bfd8c555a72759ccf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>abfdea3d74984e7196130d37bb5655e6a</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Epetra_MultiVector &amp;</type>
      <name>getEpetraMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a4796bdce51dba3bf1f35bd5c984c044b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_MultiVector &amp;</type>
      <name>getEpetraMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a002fa79a82a35a7f0e6a0b5ff81b5ff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a9d4eaecf4c289bdc364022a110ac50d3</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>abe54be5e1566c0cc308f3faac59351fb</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a27490e6865d1436b017dc5ac46f4ef6b</anchor>
      <arglist>(const Epetra_MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>aa14a83377a09c74a05a3a56a9c43aefa</anchor>
      <arglist>(const NOX::Epetra::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>af9503f9693d4bd8b57c3aec451ca3642</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e7a3a9e0e23926748529c3a98db2da3</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a720833df4a82bead371152016e66c478</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a795e3a1392ab598244d1b01e402688ba</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ec85066d334909ee1304b88874d5ab7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>adce952a26f4af02a06cb88854bf57e5f</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a3b73fbde9fcd0810b9425b9461a7e890</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>ac3cad685d373085b8da39c83374ef67a</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>aa25d45f2f49569814f6871759a416d59</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a4487c30bde87cd49b7f96ecccca0d0b6</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>ad616dc9535d353fa2bc5897d91ad2b5f</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>ad631be0716aa25365429411c8df2f55a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a1f404d72848a4b52ea569b2fca461161</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a365b9fd2f12731106d1e321aaf27e4dd</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a1ca9b157c6e7cf58de4f55122413eb8f</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>acb803ec6c853f5bd7d681d1cd6b5c9bf</anchor>
      <arglist>(int numvecs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>af09e7b477626772eb92787b49717ebde</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>epetraMultiVec</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a12b9a8a8cba4f29cb1576dc41e70b90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; NOX::Epetra::Vector * &gt;</type>
      <name>noxEpetraVectors</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a84b434b746db501f241d35b1bf256f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Epetra_MultiVector &amp;</type>
      <name>getEpetraMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a4796bdce51dba3bf1f35bd5c984c044b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_MultiVector &amp;</type>
      <name>getEpetraMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a002fa79a82a35a7f0e6a0b5ff81b5ff4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a9d4eaecf4c289bdc364022a110ac50d3</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>abe54be5e1566c0cc308f3faac59351fb</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a27490e6865d1436b017dc5ac46f4ef6b</anchor>
      <arglist>(const Epetra_MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>aa14a83377a09c74a05a3a56a9c43aefa</anchor>
      <arglist>(const NOX::Epetra::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>af9503f9693d4bd8b57c3aec451ca3642</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a8e7a3a9e0e23926748529c3a98db2da3</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a720833df4a82bead371152016e66c478</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a795e3a1392ab598244d1b01e402688ba</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a8ec85066d334909ee1304b88874d5ab7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>adce952a26f4af02a06cb88854bf57e5f</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a3b73fbde9fcd0810b9425b9461a7e890</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>ac3cad685d373085b8da39c83374ef67a</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>aa25d45f2f49569814f6871759a416d59</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a4487c30bde87cd49b7f96ecccca0d0b6</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>ad616dc9535d353fa2bc5897d91ad2b5f</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>ad631be0716aa25365429411c8df2f55a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a1f404d72848a4b52ea569b2fca461161</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a365b9fd2f12731106d1e321aaf27e4dd</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1Epetra_1_1MultiVector.html</anchorfile>
      <anchor>a1ca9b157c6e7cf58de4f55122413eb8f</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::MultiVector</name>
    <filename>classNOX_1_1MultiVector.html</filename>
    <base virtualness="virtual">NOX::Abstract::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>ac7f9e65f35fb1b0780313c895da83c26</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;v, int numVecs=1, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a6328fa4201d4feb42ab11deb44f023d6</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vs, int numVecs, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a909cb05075d185015498965aa4ff3a74</anchor>
      <arglist>(const MultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>acd2b14c19498dfc97cba0fca2ed94b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a7ad451feb8f88077e8c8aa0693c88b45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numVectors</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>ace6f14b7abe4a03c4ccf01b30b76466e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>aebfe8c47436008f12aba6b9de92eb410</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>af65d560e55bc5e5f007befae39566714</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>ae3923e94271acb8ce77f06ef944cc5ad</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a68c120cb8d003577512e2c7e8c8c8dc1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a181dc3cfee589bb702d6c146f9a32404</anchor>
      <arglist>(const NOX::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>af01a8708bfcfbd828285eddff56f509c</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a060a9a3a6ebc82d5c0ea8c849a153242</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a9933d531973a2134d7c670a2c96af205</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>ae0250aeb7645eece4d6c4eca23bfcd9d</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a5fdbf93e6bc258f008d4995ea626160e</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a46a61de49f60640682512748a7192af9</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a96954660b4d9699c08bd13c09521db85</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a68b8e985be3ffba7998a5c0ee5c43e4a</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>af588aa03c3dab404e70b90cb91a6272c</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a1cd3632cd633b4724e801f6cea1fd827</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a237525e6a155ef8e05f59ce405838a2e</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a7d5a06e1925a6ec6cc2ccb21fd310bb1</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a462aa0f92e9ce8fa21aff361500da33d</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a93c717d33c44e80531267be249d9a479</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a5d6410af961851f45f3908c85a2b2871</anchor>
      <arglist>(int numvecs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>aa2cd42542b5382cfce2223251c0c57f0</anchor>
      <arglist>(int idx) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSize</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a1f1add39e4d41b76e4bab907b4d370ec</anchor>
      <arglist>(int sz) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &gt;</type>
      <name>vecs</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a7a3d697641999804f84e1e2caad6c355</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>af65d560e55bc5e5f007befae39566714</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>ae3923e94271acb8ce77f06ef944cc5ad</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a68c120cb8d003577512e2c7e8c8c8dc1</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a181dc3cfee589bb702d6c146f9a32404</anchor>
      <arglist>(const NOX::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>af01a8708bfcfbd828285eddff56f509c</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a060a9a3a6ebc82d5c0ea8c849a153242</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a9933d531973a2134d7c670a2c96af205</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>ae0250aeb7645eece4d6c4eca23bfcd9d</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a5fdbf93e6bc258f008d4995ea626160e</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a46a61de49f60640682512748a7192af9</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a96954660b4d9699c08bd13c09521db85</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a68b8e985be3ffba7998a5c0ee5c43e4a</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>af588aa03c3dab404e70b90cb91a6272c</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a1cd3632cd633b4724e801f6cea1fd827</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a237525e6a155ef8e05f59ce405838a2e</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a7d5a06e1925a6ec6cc2ccb21fd310bb1</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a462aa0f92e9ce8fa21aff361500da33d</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classNOX_1_1MultiVector.html</anchorfile>
      <anchor>a93c717d33c44e80531267be249d9a479</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Extended::MultiVector</name>
    <filename>classLOCA_1_1Extended_1_1MultiVector.html</filename>
    <base>NOX::Abstract::MultiVector</base>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a26c1ffb99cec816e8840e72a5baf8c39</anchor>
      <arglist>(const MultiVector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a1b43f8fd6822eb228284b566557e6d5a</anchor>
      <arglist>(const MultiVector &amp;source, int nColumns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aee6321800b0e00d10495525cfa2ce2ea</anchor>
      <arglist>(const MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index, bool view)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a292a0790e9ab10a555a2188b1ebef90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a5ff3f65fd180ac05c00bb40739231e29</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ab225d2d8ff0c70a963c1e88b4a7fd15d</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a68553528c20fa60119d7cd1d5227d05f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ac73683bfcf9771a5eaea70c5c4792f4a</anchor>
      <arglist>(const MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a63512a8c2b01e9eac965b2fc9e0bc29e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ac27d6371d6c4fe1cbb381453c0d21426</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a6a4a79cb2a0087d13b82e40e83658df7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adfa7d76cd5e10cb4f3dc32687e9fbc5c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ac0392ef17383ff061c5d46436aee5823</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>afc9468c3082abc71937523e28ebcf901</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a455563f66d6c2f35e76c04b8a5c39882</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a88e133035fd138e8be462cb97918fa09</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aa7e88d91cd1ea91ecc6a25dbf38b555f</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a73907f4535130b8740a83da04f9467d7</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a8366d5cabe6fd4ddc5208fca63d32f15</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aacdc136af9bb702ab6109044b0fb1109</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ab07a8e8a4287ca2318fb7fa55bc88cf8</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adbd67c32ce21489d640d54f2ab2e819a</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a9474ebb975342026480d6d743f28ee83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numVectors</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a301c6c5068af3cb907c2f2eb5a52ac4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a4c99fc15f1866414d44a590ff1e58d7f</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a4efe1902171236814aa99abc3eabba06</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ae01684d85f0d80219f395f6e557c2795</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a3438fc3359e06d2ffccd6880f9889172</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a9e84ec888411d0ea990bce1e5c9c7bcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a6b51835b26e06bb87cbb4d7831099f25</anchor>
      <arglist>(int num_rows, int row) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adaf8778450667852de226e5a83901b57</anchor>
      <arglist>(int num_rows, int row)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double &amp;</type>
      <name>getScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a83ae9780fa79605e4a071542474dcf3d</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a04f1564042dd564211919e1bb8d72fad</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a360da88535145fcd5014cc1a48b9f831</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::Extended::Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a59f40ae84f17306f493d296db4f4365a</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>af0280548b5090eb080ba9a7a51aed065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumMultiVectors</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a9c6779cbe9bda67951730612f76cd27d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a0e1cb8f3ff30ce26e792771d699c546a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nColumns, int nVectorRows, int nScalarRows)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ad1ce09dd09ac6b34af9ba4eb65ab4619</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMultiVectorPtr</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adbc179b02655419377d3f2228b2a3c70</anchor>
      <arglist>(int i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; v)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkDimensions</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>af6660c1159649a5076b1a007c2283666</anchor>
      <arglist>(const std::string &amp;callingFunction, const LOCA::Extended::MultiVector &amp;a) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a323263620909c945a499b86bcb9a5cb1</anchor>
      <arglist>(const std::string &amp;callingFunction, int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkVectorRowIndex</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a357d05270a7d70e4a7ae78edffabd245</anchor>
      <arglist>(const std::string &amp;callingFunction, int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a23dbf874eb58167c9f68389727e2598c</anchor>
      <arglist>(const std::string &amp;callingFunction, int i, int j) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a4869b293d0145780b6e5ee88a19f54c6</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>abbdfb285cb58d4104f2eb1017a95e186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numColumns</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a02287799af3a19a07baae0d07aba97e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numMultiVecRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a74e01cd9788aeaa7f056a4d402272393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aa7239db734639dd3907ac580d296d7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; &gt;</type>
      <name>multiVectorPtrs</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>abc028b878a5e2fb850cdb899991d9d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>scalarsPtr</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a162685a0416743bb642c6f1986cecab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; LOCA::Extended::Vector &gt; &gt;</type>
      <name>extendedVectorPtrs</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aabfe9289addf6c1f695f344d792986b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isView</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a1c67940f0e67fba87e077fd5f581161e</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Vector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a8d31999cf2d1c149956d35c1c01b3186</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a5ff3f65fd180ac05c00bb40739231e29</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>random</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ab225d2d8ff0c70a963c1e88b4a7fd15d</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a68553528c20fa60119d7cd1d5227d05f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ac73683bfcf9771a5eaea70c5c4792f4a</anchor>
      <arglist>(const MultiVector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>setBlock</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a63512a8c2b01e9eac965b2fc9e0bc29e</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>augment</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ac27d6371d6c4fe1cbb381453c0d21426</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a6a4a79cb2a0087d13b82e40e83658df7</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adfa7d76cd5e10cb4f3dc32687e9fbc5c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>scale</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ac0392ef17383ff061c5d46436aee5823</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>afc9468c3082abc71937523e28ebcf901</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a455563f66d6c2f35e76c04b8a5c39882</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;a, double beta, const NOX::Abstract::MultiVector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::MultiVector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a88e133035fd138e8be462cb97918fa09</anchor>
      <arglist>(Teuchos::ETransp transb, double alpha, const NOX::Abstract::MultiVector &amp;a, const NOX::Abstract::MultiVector::DenseMatrix &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aa7e88d91cd1ea91ecc6a25dbf38b555f</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a73907f4535130b8740a83da04f9467d7</anchor>
      <arglist>(int numvecs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subCopy</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a8366d5cabe6fd4ddc5208fca63d32f15</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>subView</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>aacdc136af9bb702ab6109044b0fb1109</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>norm</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ab07a8e8a4287ca2318fb7fa55bc88cf8</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;result, NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adbd67c32ce21489d640d54f2ab2e819a</anchor>
      <arglist>(double alpha, const NOX::Abstract::MultiVector &amp;y, NOX::Abstract::MultiVector::DenseMatrix &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a9474ebb975342026480d6d743f28ee83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numVectors</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a301c6c5068af3cb907c2f2eb5a52ac4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a4c99fc15f1866414d44a590ff1e58d7f</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>getMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a4efe1902171236814aa99abc3eabba06</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>getMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ae01684d85f0d80219f395f6e557c2795</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a3438fc3359e06d2ffccd6880f9889172</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a9e84ec888411d0ea990bce1e5c9c7bcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a6b51835b26e06bb87cbb4d7831099f25</anchor>
      <arglist>(int num_rows, int row) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adaf8778450667852de226e5a83901b57</anchor>
      <arglist>(int num_rows, int row)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double &amp;</type>
      <name>getScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a83ae9780fa79605e4a071542474dcf3d</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a04f1564042dd564211919e1bb8d72fad</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a360da88535145fcd5014cc1a48b9f831</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::Extended::Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a59f40ae84f17306f493d296db4f4365a</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumScalarRows</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>af0280548b5090eb080ba9a7a51aed065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumMultiVectors</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a9c6779cbe9bda67951730612f76cd27d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::Vector &gt;</type>
      <name>generateVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>ad1ce09dd09ac6b34af9ba4eb65ab4619</anchor>
      <arglist>(int nVecs, int nScalarRows) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMultiVectorPtr</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>adbc179b02655419377d3f2228b2a3c70</anchor>
      <arglist>(int i, Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt; v)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkDimensions</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>af6660c1159649a5076b1a007c2283666</anchor>
      <arglist>(const std::string &amp;callingFunction, const LOCA::Extended::MultiVector &amp;a) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a323263620909c945a499b86bcb9a5cb1</anchor>
      <arglist>(const std::string &amp;callingFunction, int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkVectorRowIndex</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a357d05270a7d70e4a7ae78edffabd245</anchor>
      <arglist>(const std::string &amp;callingFunction, int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a23dbf874eb58167c9f68389727e2598c</anchor>
      <arglist>(const std::string &amp;callingFunction, int i, int j) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isContiguous</name>
      <anchorfile>classLOCA_1_1Extended_1_1MultiVector.html</anchorfile>
      <anchor>a4869b293d0145780b6e5ee88a19f54c6</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;index) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::MultiVectorBase</name>
    <filename>classThyra_1_1MultiVectorBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Anasazi::MultiVecTraits&lt; double, NOX::Abstract::MultiVector &gt;</name>
    <filename>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>ScalarType</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a6dafaaa26214b0cf5c4e554b7f31758a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>NOX::Abstract::MultiVector</type>
      <name>MV</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a3fa0ace5ed79f937678540c3cb5d9876</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>Clone</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a451a04d7ceca754c112290a4bbcc80f9</anchor>
      <arglist>(const MV &amp;mv, const int numvecs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a0cec963caddafbacc9d5aa37310c3bf2</anchor>
      <arglist>(const MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a3965fedb7ec7e87da6b1be3c7f4dbc87</anchor>
      <arglist>(const MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneViewNonConst</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>acf40b30878f06ce497dfed283e71251b</anchor>
      <arglist>(MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const MV &gt;</type>
      <name>CloneView</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a917d69246c1c162b76e947b31414156b</anchor>
      <arglist>(const MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ptrdiff_t</type>
      <name>GetGlobalLength</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>ade7fc979c1c0f564f1421277b7f944f8</anchor>
      <arglist>(const MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetNumberVecs</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>ac46e597b3f855f204a94894eb6eb1db6</anchor>
      <arglist>(const MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvTimesMatAddMv</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a086ad6dafdb6aee41e76d60904306cbe</anchor>
      <arglist>(const ScalarType alpha, const MV &amp;A, const Teuchos::SerialDenseMatrix&lt; int, ScalarType &gt; &amp;B, const ScalarType beta, MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvAddMv</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>aa0dc20b4c8ef5b5e94945261a6e0728d</anchor>
      <arglist>(const ScalarType alpha, const MV &amp;A, const ScalarType beta, const MV &amp;B, MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvTransMv</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>afbddfb848722e26df9ca3944aeefc053</anchor>
      <arglist>(const ScalarType alpha, const MV &amp;A, const MV &amp;mv, Teuchos::SerialDenseMatrix&lt; int, ScalarType &gt; &amp;B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvDot</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a163eeb081f725b4e8bc0d939cad4aa15</anchor>
      <arglist>(const MV &amp;mv, const MV &amp;A, std::vector&lt; ScalarType &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvScale</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>ac0a0fecd9472639b255f2f86dcce3121</anchor>
      <arglist>(MV &amp;mv, const ScalarType alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvScale</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a67c548829107e5e472c11a4be520be28</anchor>
      <arglist>(MV &amp;mv, const std::vector&lt; ScalarType &gt; &amp;alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvNorm</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a16061300208046498d253484d4ad8f94</anchor>
      <arglist>(const MV &amp;mv, std::vector&lt; double &gt; &amp;normvec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetBlock</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a8522d0964901ed462a8aab1fff6dc99b</anchor>
      <arglist>(const MV &amp;A, const std::vector&lt; int &gt; &amp;index, MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvRandom</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a5c04003a517323a68a2cc62f6efada87</anchor>
      <arglist>(MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvInit</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a54b353ea036b7efdcccf31c137eb4f86</anchor>
      <arglist>(MV &amp;mv, const ScalarType alpha=0.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvPrint</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a6884bf065f278b3cc5bb32709bbb64ef</anchor>
      <arglist>(const MV &amp;mv, std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>Clone</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a451a04d7ceca754c112290a4bbcc80f9</anchor>
      <arglist>(const MV &amp;mv, const int numvecs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a0cec963caddafbacc9d5aa37310c3bf2</anchor>
      <arglist>(const MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a3965fedb7ec7e87da6b1be3c7f4dbc87</anchor>
      <arglist>(const MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneViewNonConst</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>acf40b30878f06ce497dfed283e71251b</anchor>
      <arglist>(MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const MV &gt;</type>
      <name>CloneView</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a917d69246c1c162b76e947b31414156b</anchor>
      <arglist>(const MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ptrdiff_t</type>
      <name>GetGlobalLength</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>ade7fc979c1c0f564f1421277b7f944f8</anchor>
      <arglist>(const MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetNumberVecs</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>ac46e597b3f855f204a94894eb6eb1db6</anchor>
      <arglist>(const MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvTimesMatAddMv</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a086ad6dafdb6aee41e76d60904306cbe</anchor>
      <arglist>(const ScalarType alpha, const MV &amp;A, const Teuchos::SerialDenseMatrix&lt; int, ScalarType &gt; &amp;B, const ScalarType beta, MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvAddMv</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>aa0dc20b4c8ef5b5e94945261a6e0728d</anchor>
      <arglist>(const ScalarType alpha, const MV &amp;A, const ScalarType beta, const MV &amp;B, MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvTransMv</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>afbddfb848722e26df9ca3944aeefc053</anchor>
      <arglist>(const ScalarType alpha, const MV &amp;A, const MV &amp;mv, Teuchos::SerialDenseMatrix&lt; int, ScalarType &gt; &amp;B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvDot</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a163eeb081f725b4e8bc0d939cad4aa15</anchor>
      <arglist>(const MV &amp;mv, const MV &amp;A, std::vector&lt; ScalarType &gt; &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvScale</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>ac0a0fecd9472639b255f2f86dcce3121</anchor>
      <arglist>(MV &amp;mv, const ScalarType alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvScale</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a67c548829107e5e472c11a4be520be28</anchor>
      <arglist>(MV &amp;mv, const std::vector&lt; ScalarType &gt; &amp;alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvNorm</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a16061300208046498d253484d4ad8f94</anchor>
      <arglist>(const MV &amp;mv, std::vector&lt; double &gt; &amp;normvec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetBlock</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a8522d0964901ed462a8aab1fff6dc99b</anchor>
      <arglist>(const MV &amp;A, const std::vector&lt; int &gt; &amp;index, MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvRandom</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a5c04003a517323a68a2cc62f6efada87</anchor>
      <arglist>(MV &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvInit</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a54b353ea036b7efdcccf31c137eb4f86</anchor>
      <arglist>(MV &amp;mv, const ScalarType alpha=0.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvPrint</name>
      <anchorfile>classAnasazi_1_1MultiVecTraits_3_01double_00_01NOX_1_1Abstract_1_1MultiVector_01_4.html</anchorfile>
      <anchor>a6884bf065f278b3cc5bb32709bbb64ef</anchor>
      <arglist>(const MV &amp;mv, std::ostream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::NaturalConstraint</name>
    <filename>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</filename>
    <base>LOCA::MultiContinuation::ConstraintInterfaceMVDX</base>
    <member kind="function">
      <type></type>
      <name>NaturalConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>ae13ab976e88ad354aaecca3a1b862efa</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::NaturalGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NaturalConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>afc4c14227885fc3f69547bf0e0b8d4c4</anchor>
      <arglist>(const NaturalConstraint &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NaturalConstraint</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a036422e5d935bed3bd164d3423fde8b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNaturalGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>adb668ee6b55788f9e9d914b27448b20b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::NaturalGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a2ea3d6cfb3adebb8d3ce0cb969eec039</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a1feddbb7fde55791a185553c251fd778</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a857aa1308f80f14190ee484c5bec2f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a9a6b1db6c19cb39809ced9057ea56fdd</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a562f2d8a5a5dd40e2201c98dbcbddb8f</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>aa641f61b7ebf156df6a87c2f253a3cb7</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a31c9511e1c239b4fd9f866d104b25235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a62f436fcdbc4c1179b214557acc92f76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a84b02dd08393d27f15ffd090602b837a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>ac4261f2fafbe060dc177038abef9f19d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a0b46f8ccd0aba856389d5e759649c141</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a616dfb9a0f7654941b8519f38fe2ce14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a81fe965b5c33608958d6e76547c002a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a3d1c5792772ef4679f3b47269fd117a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a0906ec761636d53a3f0a7441fa49488e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::NaturalGroup &gt;</type>
      <name>naturalGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>ac0e88e6068ba44862e3ae18f0f8a9738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Abstract::MultiVector::DenseMatrix</type>
      <name>constraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>ae7b2014657574b29f014ec653123de03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isValidConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a2335af1e34b449930e9c09be09c4265d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDs</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>ac4ddf924fa32af66fc48e182c19ebb14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a2ea3d6cfb3adebb8d3ce0cb969eec039</anchor>
      <arglist>(const ConstraintInterface &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiContinuation::ConstraintInterface &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a1feddbb7fde55791a185553c251fd778</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a857aa1308f80f14190ee484c5bec2f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a9a6b1db6c19cb39809ced9057ea56fdd</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParam</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a562f2d8a5a5dd40e2201c98dbcbddb8f</anchor>
      <arglist>(int paramID, double val)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParams</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>aa641f61b7ebf156df6a87c2f253a3cb7</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, const NOX::Abstract::MultiVector::DenseMatrix &amp;vals)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a31c9511e1c239b4fd9f866d104b25235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a62f436fcdbc4c1179b214557acc92f76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeDP</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a84b02dd08393d27f15ffd090602b837a</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;paramIDs, NOX::Abstract::MultiVector::DenseMatrix &amp;dgdp, bool isValidG)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>ac4261f2fafbe060dc177038abef9f19d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a0b46f8ccd0aba856389d5e759649c141</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector::DenseMatrix &amp;</type>
      <name>getConstraints</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a616dfb9a0f7654941b8519f38fe2ce14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::MultiVector *</type>
      <name>getDX</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a81fe965b5c33608958d6e76547c002a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDXZero</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalConstraint.html</anchorfile>
      <anchor>a3d1c5792772ef4679f3b47269fd117a2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiContinuation::NaturalGroup</name>
    <filename>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</filename>
    <base virtualness="virtual">LOCA::MultiContinuation::ExtendedGroup</base>
    <member kind="function">
      <type></type>
      <name>NaturalGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a174afa82a605d373286e1ba896c3d14f</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;continuationParams, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp, const Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt; &amp;pred, const std::vector&lt; int &gt; &amp;paramIDs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NaturalGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a1c3bb200775c2703e2f4e4be3cea80e0</anchor>
      <arglist>(const NaturalGroup &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NaturalGroup</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a56aa65012284d5d4e746ae3542b19529</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a6952c8797646c21978c9a13a93a1bb61</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a31089cedc15a2fc78fe3521eca9fd939</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a3770ad064bd7e75e435367fc7d22f821</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a6952c8797646c21978c9a13a93a1bb61</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a31089cedc15a2fc78fe3521eca9fd939</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classLOCA_1_1MultiContinuation_1_1NaturalGroup.html</anchorfile>
      <anchor>a3770ad064bd7e75e435367fc7d22f821</anchor>
      <arglist>(const NOX::Abstract::Group &amp;source)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::Nested</name>
    <filename>classLOCA_1_1BorderedSolver_1_1Nested.html</filename>
    <base>LOCA::BorderedSolver::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Nested</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>af3160c0c6249c055eedce26320b896f9</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Nested</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>ac3f7708db7fe2e7cd5c92afc768afa68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMatrixBlocks</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>ac999a431ca42c7b3f2a53b8d407938fe</anchor>
      <arglist>(const Teuchos::RCP&lt; const LOCA::BorderedSolver::AbstractOperator &gt; &amp;op, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;blockA, const Teuchos::RCP&lt; const LOCA::MultiContinuation::ConstraintInterface &gt; &amp;blockB, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt; &amp;blockC)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a012afa341a7cc193761c841d8c8985bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>initForTransposeSolve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a688734d6c2a699e2c1fe9fa8664e1c72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a1e63bb0566d2331f72911ce085c7918a</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a4edf5b3135fe4467710c89085a4dce6f</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;X, const NOX::Abstract::MultiVector::DenseMatrix &amp;Y, NOX::Abstract::MultiVector &amp;U, NOX::Abstract::MultiVector::DenseMatrix &amp;V) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverse</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a0cf39f65bbfcc057ff9d4f2b7bd9da45</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyInverseTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>aa5a5c26576ac9623f551e9230eb455eb</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>ab5a082be4304fe9c99b0034ef5ddbc1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a583ae33d61cc5443d2832204c01816ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>solver</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>aded35b2a53005a7cd75cb2901a6323ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::BorderedSystem::AbstractGroup &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>af883eede6cf876a9da82f2b2b17b2b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>unbordered_grp</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a575dff812d0e9dca3e3ed3cfefa8e260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myWidth</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a5bab251ebd378b777e24ed87f8ce8760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>underlyingWidth</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>a12cd9ab1529e96c20269f304319867bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numConstraints</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1Nested.html</anchorfile>
      <anchor>ac3f9df7b15970b997e409efc4d35c2c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::Newton</name>
    <filename>classNOX_1_1Direction_1_1Newton.html</filename>
    <base>NOX::Direction::Generic</base>
    <member kind="function">
      <type></type>
      <name>Newton</name>
      <anchorfile>classNOX_1_1Direction_1_1Newton.html</anchorfile>
      <anchor>ae05c5a1a4ef35496ae514e36eff46b40</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Newton</name>
      <anchorfile>classNOX_1_1Direction_1_1Newton.html</anchorfile>
      <anchor>a10819546be56c47e0dd2f53eda422200</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1Newton.html</anchorfile>
      <anchor>a7b064bf6af11aab523f91e6f3c48f55c</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1Newton.html</anchorfile>
      <anchor>a7e38b5c7d012c5b239830115ab3f2ea3</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1Newton.html</anchorfile>
      <anchor>af3feb0bd960baa53429866cf68e66635</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::LineSearchBased &amp;solver)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>resetForcingTerm</name>
      <anchorfile>classNOX_1_1Direction_1_1Newton.html</anchorfile>
      <anchor>aa2abcd5664983e1755e32a20c0a37135</anchor>
      <arglist>(const NOX::Abstract::Group &amp;soln, const NOX::Abstract::Group &amp;oldSoln, int niter, const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SingularJacobianSolve::Nic</name>
    <filename>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</filename>
    <base>LOCA::SingularJacobianSolve::Generic</base>
    <member kind="function">
      <type></type>
      <name>Nic</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a60a251ddad7da533151931a51d527fa1</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Nic</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a236551add6a6cf275f2372a39dbc54a8</anchor>
      <arglist>(const Nic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Nic</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a422b41e4c3e11a02a0ecfe5218ad7e63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a9547b67e4d9f1b741835c3a8cbddefaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>afa204709eec2d36487346d1a3d6ce38e</anchor>
      <arglist>(const LOCA::SingularJacobianSolve::Generic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Nic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a1a425ccd85dcf6d5108e17a82531e004</anchor>
      <arglist>(const Nic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a652ce206dae0919f330977a16d669ebb</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>afdf8925e67d113b6d0f473d32d5de40b</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;input, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeMulti</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1Nic.html</anchorfile>
      <anchor>a9e5c45b663aeecf031eab6d1c34fce91</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector *const *inputs, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector **results, int nVecs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::SingularJacobianSolve::NicDay</name>
    <filename>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</filename>
    <base>LOCA::SingularJacobianSolve::Generic</base>
    <member kind="function">
      <type></type>
      <name>NicDay</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a0f660a701603ae98e91d5db238eb8f76</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NicDay</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a0303fe74a4ffb5fb69c75bb3acdbc86e</anchor>
      <arglist>(const NicDay &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NicDay</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a8ccb6a8b5b6191713ad16a9a80b81484</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a3fcb2b0a528d5d5e780c7c1f08339d5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::SingularJacobianSolve::Generic &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>ae2d86cc5ea502d8b710115d8d1bb3288</anchor>
      <arglist>(const LOCA::SingularJacobianSolve::Generic &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NicDay &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a10961a3f7802a55df91b63e0c56dbb6c</anchor>
      <arglist>(const NicDay &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>aa3fdf7e5d19d030906333e4749d5c869</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a5d4592abafe0289604e3463e1895b338</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector &amp;input, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeMulti</name>
      <anchorfile>classLOCA_1_1SingularJacobianSolve_1_1NicDay.html</anchorfile>
      <anchor>a494b9549d969ffde63f49e461089d50f</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, LOCA::Continuation::AbstractGroup &amp;grp, const NOX::Abstract::Vector *const *inputs, const NOX::Abstract::Vector &amp;approxNullVec, const NOX::Abstract::Vector &amp;jacApproxNullVec, NOX::Abstract::Vector **results, int nVecs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::NonlinearCG</name>
    <filename>classNOX_1_1Direction_1_1NonlinearCG.html</filename>
    <base>NOX::Direction::Generic</base>
    <member kind="function">
      <type></type>
      <name>NonlinearCG</name>
      <anchorfile>classNOX_1_1Direction_1_1NonlinearCG.html</anchorfile>
      <anchor>aca9c595a0045dad9423adf5a318a33a9</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NonlinearCG</name>
      <anchorfile>classNOX_1_1Direction_1_1NonlinearCG.html</anchorfile>
      <anchor>a54b8297f2195f80482ffa2ddc1bf8580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1NonlinearCG.html</anchorfile>
      <anchor>adcf4b944b54dd42b53d5a3c513638071</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1NonlinearCG.html</anchorfile>
      <anchor>a8388ebc51368ac8f8d5c2a960a479af7</anchor>
      <arglist>(Abstract::Vector &amp;dir, Abstract::Group &amp;grp, const Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1NonlinearCG.html</anchorfile>
      <anchor>a56753a5070e5909a4f6ab21da5286e24</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::LineSearchBased &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::NonlinearCG</name>
    <filename>classNOX_1_1LineSearch_1_1NonlinearCG.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>NonlinearCG</name>
      <anchorfile>classNOX_1_1LineSearch_1_1NonlinearCG.html</anchorfile>
      <anchor>aed8bc9cb168e5c3ac38d5b3b89fb7c52</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NonlinearCG</name>
      <anchorfile>classNOX_1_1LineSearch_1_1NonlinearCG.html</anchorfile>
      <anchor>a73d4b6059c848a506ad821867e648c29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1NonlinearCG.html</anchorfile>
      <anchor>ad3bbf15eee115577dded97f6cc1befbf</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::NormF</name>
    <filename>classNOX_1_1StatusTest_1_1NormF.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="enumeration">
      <type></type>
      <name>ScaleType</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ac48931c140d11bcb58a95dbad3ad8cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unscaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ac48931c140d11bcb58a95dbad3ad8cdcaad7a17ef99e785be6ea480c942b355cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ac48931c140d11bcb58a95dbad3ad8cdca419d2bdfc6580ca3773535fc6fc19ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ToleranceType</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a854aa699d2dc22c104c6c523ab2c3976</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Relative</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a854aa699d2dc22c104c6c523ab2c3976af8220a3ec1f0d774ad127b70b7aad740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Absolute</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a854aa699d2dc22c104c6c523ab2c3976a87d8df1a07c2a305e67ad0ecdeb278a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unscaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ac48931c140d11bcb58a95dbad3ad8cdcaad7a17ef99e785be6ea480c942b355cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ac48931c140d11bcb58a95dbad3ad8cdca419d2bdfc6580ca3773535fc6fc19ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Relative</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a854aa699d2dc22c104c6c523ab2c3976af8220a3ec1f0d774ad127b70b7aad740</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Absolute</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a854aa699d2dc22c104c6c523ab2c3976a87d8df1a07c2a305e67ad0ecdeb278a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a5000e79c2dedb841ff0f95560fd584a8</anchor>
      <arglist>(double tolerance, NOX::Abstract::Vector::NormType ntype, ScaleType stype=Scaled, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>abf1b3ab763b75c54aeef4be837bc82ee</anchor>
      <arglist>(double tolerance, ScaleType stype=Scaled, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ab155bd01135c792a32f29e9b09866318</anchor>
      <arglist>(NOX::Abstract::Group &amp;initialGuess, double tolerance, NOX::Abstract::Vector::NormType ntype, ScaleType stype=Scaled, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a84f5bd226169e04e30066a292255148d</anchor>
      <arglist>(NOX::Abstract::Group &amp;initialGuess, double tolerance, ScaleType stype=Scaled, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a2695bf1acc445cc64e91dbb7d3b7ae92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>aa16bed5586c2720908832d2b0b6db31e</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a911450057b0e4ba1819d90a493c541a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>ae86ebf31230aa40ce8b155e0a8c931ce</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a4e48b8d7543db1502e09f16fca099487</anchor>
      <arglist>(double tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a5fa63985c51d1f679e97a1a8c2dace36</anchor>
      <arglist>(NOX::Abstract::Group &amp;initialGuess, double tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a415e9364215ced5dca85585c20fa0f52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTrueTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a7273a3ce0364d338c78a6652a4381cd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpecifiedTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>aed62ab428f5547603e2bce77ef917f95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getInitialTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a479c7830162eb9a00a6c47ae4f643726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a4e48b8d7543db1502e09f16fca099487</anchor>
      <arglist>(double tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a5fa63985c51d1f679e97a1a8c2dace36</anchor>
      <arglist>(NOX::Abstract::Group &amp;initialGuess, double tolerance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormF</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a415e9364215ced5dca85585c20fa0f52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTrueTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a7273a3ce0364d338c78a6652a4381cd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getSpecifiedTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>aed62ab428f5547603e2bce77ef917f95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getInitialTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormF.html</anchorfile>
      <anchor>a479c7830162eb9a00a6c47ae4f643726</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::NormUpdate</name>
    <filename>classNOX_1_1StatusTest_1_1NormUpdate.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="enumeration">
      <type></type>
      <name>ScaleType</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>ae1ca7d1e542b68c736290017b992bc96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unscaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>ae1ca7d1e542b68c736290017b992bc96ab20a6e3af863acf023a741ab91563c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>ae1ca7d1e542b68c736290017b992bc96ae384ce8889f9a85fc8e542083d381b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unscaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>ae1ca7d1e542b68c736290017b992bc96ab20a6e3af863acf023a741ab91563c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Scaled</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>ae1ca7d1e542b68c736290017b992bc96ae384ce8889f9a85fc8e542083d381b10</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormUpdate</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>aa965ac8fa3d0db7cade296c81caeaa0b</anchor>
      <arglist>(double tolerance, NOX::Abstract::Vector::NormType ntype, ScaleType stype=Scaled)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormUpdate</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>afea35c26839826decefb9159ec1a3f59</anchor>
      <arglist>(double tolerance, ScaleType stype=Scaled)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NormUpdate</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>ad9778d6829742190be7e3ae89ec2c713</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>a71c4fab9dd093c7520ffa87f43a9a418</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>a9275d7f00402cbc33353760a4ea5089c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>a2613ee72d63a9e7bd8927170a2c6c4d9</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormUpdate</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>abfc9c61850260446cace9f3a8c0be2c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>a526ca6b028bf73c4d97142f79f5c879b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormUpdate</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>abfc9c61850260446cace9f3a8c0be2c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormUpdate.html</anchorfile>
      <anchor>a526ca6b028bf73c4d97142f79f5c879b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::NormWRMS</name>
    <filename>classNOX_1_1StatusTest_1_1NormWRMS.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>NormWRMS</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a930163e27ba67d7f5a531e1f33b5eb31</anchor>
      <arglist>(double rtol, double atol, double BDFMultiplier=1.0, double tolerance=1.0, double alpha=1.0, double beta=0.5, bool disable_implicit_weighting=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NormWRMS</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>afcc009ab0bbd7401b92d7d0c2acd5ba0</anchor>
      <arglist>(double rtol, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;atol, double BDFMultiplier=1.0, double tolerance=1.0, double alpha=1.0, double beta=0.5, bool disable_implicit_weighting=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NormWRMS</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a0ffc920cd20997fe44bf610b70c3f204</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a4bf2346e96f032740930b6defeaea31e</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a73d7ee4739699e9ed88f3a807b6fc3c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>af89a64c6de8b11246b8cae0c1b16d983</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormWRMS</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>ac442abc09f5724016594b7fee0ba240d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>aaddf29a2742a3e5a16ccac2c5f39b72c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRTOL</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>ada6a0e9f7fcfe0e4ad57bb5954f9bd56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getATOL</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a09150e9f9dd7fdab469b4acfb7a7e933</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBDFMultiplier</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a653eb02a6936c7bce7ddd87d24fefacb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getAlpha</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>aa8bfacf0f12d9e0271e899b67a74510f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBeta</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a2acceca063b4bffd10d9a7e500c39ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getDisableImplicitWeighting</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>aa2ca0091e7d768930eface0112071a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getNormWRMS</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>ac442abc09f5724016594b7fee0ba240d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>aaddf29a2742a3e5a16ccac2c5f39b72c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getRTOL</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>ada6a0e9f7fcfe0e4ad57bb5954f9bd56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getATOL</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a09150e9f9dd7fdab469b4acfb7a7e933</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBDFMultiplier</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a653eb02a6936c7bce7ddd87d24fefacb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getAlpha</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>aa8bfacf0f12d9e0271e899b67a74510f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getBeta</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>a2acceca063b4bffd10d9a7e500c39ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getDisableImplicitWeighting</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NormWRMS.html</anchorfile>
      <anchor>aa2ca0091e7d768930eface0112071a19</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::NOXNonlinearSolver</name>
    <filename>classThyra_1_1NOXNonlinearSolver.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setBasePoint</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a7b69f0f6939cbfe04fc456362245e7a5</anchor>
      <arglist>(const ModelEvaluatorBase::InArgs&lt; double &gt; &amp;modelInArgs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSolver</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a4331a84e79ed6e7cf3dcf19aba6d9167</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a0f232a9161f1a29283c40f45e5aedf28</anchor>
      <arglist>(RCP&lt; Teuchos::ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a6a91de9c1d270e1eea20d04296bf5eea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a54f67b934442812c0a44092890bbbbba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a24f1b74410bb63ea2f1ad967704d6fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>af041a5edff96b2ff1a76ac6c69970926</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>af58eaae28a14b429f1b92db67d11d402</anchor>
      <arglist>(const RCP&lt; const ModelEvaluator&lt; double &gt; &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ModelEvaluator&lt; double &gt; &gt;</type>
      <name>getModel</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>acc80ff2114e73bfcdff329c25dc04b78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SolveStatus&lt; double &gt;</type>
      <name>solve</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a9270592a747175e395fa7505eabcdfcb</anchor>
      <arglist>(VectorBase&lt; double &gt; *x, const SolveCriteria&lt; double &gt; *solveCriteria, VectorBase&lt; double &gt; *delta)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const VectorBase&lt; double &gt; &gt;</type>
      <name>get_current_x</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a21592950eead173dfbf760f79883c0aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_W_current</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>ad7ba45735f70ab07a0235cd27e5c7ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; LinearOpWithSolveBase&lt; double &gt; &gt;</type>
      <name>get_nonconst_W</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a851e635fb77e85637d60bb29ac2406bf</anchor>
      <arglist>(const bool forceUpToDate)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const LinearOpWithSolveBase&lt; double &gt; &gt;</type>
      <name>get_W</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a6bc93ccc95ae44f818b0926d1cf926b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const LinearOpBase&lt; double &gt; &gt;</type>
      <name>get_W_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a32d39b406fc7febaacf549b599025090</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; LinearOpBase&lt; double &gt; &gt;</type>
      <name>get_nonconst_W_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>ae0b2570f8333ca5d9a03aaa5140e959e</anchor>
      <arglist>(const bool forceUpToDate)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const PreconditionerBase&lt; double &gt; &gt;</type>
      <name>get_prec_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a227431c22d9299563502ae43983e9e97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; PreconditionerBase&lt; double &gt; &gt;</type>
      <name>get_nonconst_prec_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>afbabb1ffe64f591fdd8112519d0a8f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a0f232a9161f1a29283c40f45e5aedf28</anchor>
      <arglist>(RCP&lt; Teuchos::ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a6a91de9c1d270e1eea20d04296bf5eea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a54f67b934442812c0a44092890bbbbba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a24f1b74410bb63ea2f1ad967704d6fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>af041a5edff96b2ff1a76ac6c69970926</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setModel</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>af58eaae28a14b429f1b92db67d11d402</anchor>
      <arglist>(const RCP&lt; const ModelEvaluator&lt; double &gt; &gt; &amp;model)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ModelEvaluator&lt; double &gt; &gt;</type>
      <name>getModel</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>acc80ff2114e73bfcdff329c25dc04b78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SolveStatus&lt; double &gt;</type>
      <name>solve</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a9270592a747175e395fa7505eabcdfcb</anchor>
      <arglist>(VectorBase&lt; double &gt; *x, const SolveCriteria&lt; double &gt; *solveCriteria, VectorBase&lt; double &gt; *delta)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const VectorBase&lt; double &gt; &gt;</type>
      <name>get_current_x</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a21592950eead173dfbf760f79883c0aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_W_current</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>ad7ba45735f70ab07a0235cd27e5c7ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; LinearOpWithSolveBase&lt; double &gt; &gt;</type>
      <name>get_nonconst_W</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a851e635fb77e85637d60bb29ac2406bf</anchor>
      <arglist>(const bool forceUpToDate)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const LinearOpWithSolveBase&lt; double &gt; &gt;</type>
      <name>get_W</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a6bc93ccc95ae44f818b0926d1cf926b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const LinearOpBase&lt; double &gt; &gt;</type>
      <name>get_W_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a32d39b406fc7febaacf549b599025090</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; LinearOpBase&lt; double &gt; &gt;</type>
      <name>get_nonconst_W_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>ae0b2570f8333ca5d9a03aaa5140e959e</anchor>
      <arglist>(const bool forceUpToDate)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const PreconditionerBase&lt; double &gt; &gt;</type>
      <name>get_prec_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>a227431c22d9299563502ae43983e9e97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; PreconditionerBase&lt; double &gt; &gt;</type>
      <name>get_nonconst_prec_op</name>
      <anchorfile>classThyra_1_1NOXNonlinearSolver.html</anchorfile>
      <anchor>afbabb1ffe64f591fdd8112519d0a8f01</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::NStep</name>
    <filename>classNOX_1_1StatusTest_1_1NStep.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>NStep</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NStep.html</anchorfile>
      <anchor>a2178e856f37b4fad054d1f630b10f048</anchor>
      <arglist>(int numberOfStepsForConvergence, int numberOfNonlinearSolvesInRampingPhase=0, int rampingPhaseNumberOfStepsForConvergence=10, const NOX::Utils *u=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NStep.html</anchorfile>
      <anchor>a2dbfb82e33ec7189d7f1c0de311a5cf0</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NStep.html</anchorfile>
      <anchor>a99e257de2b6a9f686bf963136985da5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1NStep.html</anchorfile>
      <anchor>abbb41953967beda964c2bf7c6218819a</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Bifurcation::PitchforkBord::StatusTest::NullVectorNormWRMS</name>
    <filename>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>NullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ad7eab5ceeaf7a8bf0194612c1a1cede0</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a9b36152ddf51b824f6ebc333365805d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a564024d5939e596eceadeaee3eaa31a4</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>aea8b735bd804d1300e5bde4901e29740</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ae6f33ee7fd95a70c723b2eebedfe9a71</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ace6828786261ddb8329b43ce4a79237f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a010457745177375a1ee1133d907df19c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a88c3ca7eeaeda98ce2b63d125aa3758a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a6d480d73dc4533d9b09699c50e5ca3b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>af8dd797201e56231d08b19d53a9b770b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ae3534d15a0819c48c3a3c0f57bbcc494</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>acbb1b24e0a829b496061f253b20497d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>normWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a65b2b7456c95e5ea88a8abbc2e40310c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a5a21dfe9e8e89cf0220669813767fe3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ace6828786261ddb8329b43ce4a79237f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a010457745177375a1ee1133d907df19c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a88c3ca7eeaeda98ce2b63d125aa3758a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a6d480d73dc4533d9b09699c50e5ca3b4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Bifurcation::TPBord::StatusTest::NullVectorNormWRMS</name>
    <filename>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>NullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a8ca883d8acc5c2aa7f5d18e82a06f891</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a74a8f8025a669f6870a366c33d8d8a10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a5633d7def7e973045c9ef75d5592f219</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a28eb6fb766845aaf7dc73fbe8adf7c46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a9907296fa35d6d1d987d8e503d90475d</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a9546ad7498b7c924f0c499c55d9429c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a285b6349e48164d1a015222000724a1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ab1cc68627195bf43d51ed2da43a634b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a0e8a03b565cfc6c8b1d874bf33648d4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>adb0088837256393c9654c7b3aaf4cc73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a9a3852e34c5967ef905a8c2172b67907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a0d7273aecf7f26935f88d59236266d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>normWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a7bf70c72dad8a768e96790ce714685c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a98fc93c77a513c9105b207458e8dafba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNullVectorNormWRMS</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a9546ad7498b7c924f0c499c55d9429c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a285b6349e48164d1a015222000724a1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>ab1cc68627195bf43d51ed2da43a634b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1NullVectorNormWRMS.html</anchorfile>
      <anchor>a0e8a03b565cfc6c8b1d874bf33648d4f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Observer</name>
    <filename>classNOX_1_1Epetra_1_1Observer.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>observeSolution</name>
      <anchorfile>classNOX_1_1Epetra_1_1Observer.html</anchorfile>
      <anchor>acd4c1a428b8857c7b2de056d46e9f65c</anchor>
      <arglist>(const Epetra_Vector &amp;soln)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>observeSolution</name>
      <anchorfile>classNOX_1_1Epetra_1_1Observer.html</anchorfile>
      <anchor>aacafc21f732e155bcc0a75a321abb52a</anchor>
      <arglist>(const Epetra_Vector &amp;soln, double time_or_param_val)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Anasazi::OperatorTraits&lt; double,                                                                                                   NOX::Abstract::MultiVector,                                                                                                   LOCA::AnasaziOperator::AbstractStrategy &gt;</name>
    <filename>classAnasazi_1_1OperatorTraits_3_01double_00_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_50a8c50273ab11e1854fdf94f7e70321.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>ScalarType</name>
      <anchorfile>classAnasazi_1_1OperatorTraits_3_01double_00_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_50a8c50273ab11e1854fdf94f7e70321.html</anchorfile>
      <anchor>af2dfe6de52314d41ecc0c7a2d5c1db0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>NOX::Abstract::MultiVector</type>
      <name>MV</name>
      <anchorfile>classAnasazi_1_1OperatorTraits_3_01double_00_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_50a8c50273ab11e1854fdf94f7e70321.html</anchorfile>
      <anchor>ad42451b84130f63789f022f2367780f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LOCA::AnasaziOperator::AbstractStrategy</type>
      <name>OP</name>
      <anchorfile>classAnasazi_1_1OperatorTraits_3_01double_00_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_50a8c50273ab11e1854fdf94f7e70321.html</anchorfile>
      <anchor>abb3f7bf183798596bb241adf07f8d0c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Apply</name>
      <anchorfile>classAnasazi_1_1OperatorTraits_3_01double_00_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_50a8c50273ab11e1854fdf94f7e70321.html</anchorfile>
      <anchor>a209335e8aca08403f79cdf1735c594b8</anchor>
      <arglist>(const OP &amp;Op, const MV &amp;x, MV &amp;y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Apply</name>
      <anchorfile>classAnasazi_1_1OperatorTraits_3_01double_00_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_50a8c50273ab11e1854fdf94f7e70321.html</anchorfile>
      <anchor>a209335e8aca08403f79cdf1735c594b8</anchor>
      <arglist>(const OP &amp;Op, const MV &amp;x, MV &amp;y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Petsc::Options</name>
    <filename>classNOX_1_1Petsc_1_1Options.html</filename>
    <member kind="function">
      <type></type>
      <name>Options</name>
      <anchorfile>classNOX_1_1Petsc_1_1Options.html</anchorfile>
      <anchor>ab72fb640172a6109e34c8a5366563753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Options</name>
      <anchorfile>classNOX_1_1Petsc_1_1Options.html</anchorfile>
      <anchor>aa68bff929951172437d119964617dd40</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, int rank=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Options</name>
      <anchorfile>classNOX_1_1Petsc_1_1Options.html</anchorfile>
      <anchor>a86ddb85b183f8b58af5481f30a42fa92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setOptions</name>
      <anchorfile>classNOX_1_1Petsc_1_1Options.html</anchorfile>
      <anchor>a49616808e3674c742e3ae447021ecfc8</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Combo &gt; &amp;</type>
      <name>getStatusTest</name>
      <anchorfile>classNOX_1_1Petsc_1_1Options.html</anchorfile>
      <anchor>a35386785a2c7384b2c28c047c56a4343</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ParamData</name>
    <filename>structParamData.html</filename>
  </compound>
  <compound kind="class">
    <name>LOCA::Continuation::StatusTest::ParameterResidualNorm</name>
    <filename>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>ParameterResidualNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a396519c282009e5fe524fb49d594aeaa</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterResidualNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>ad65e82d300fb19490f795eb1ebf277be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a1204c5356a730912a22e446b4a594852</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>abb1df16e4cba40307844ac2ada1964a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>aafc65012a3b427a402008c0f66741193</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getResidualNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a7646a740b54b7bb1129ebb7a9d001ad0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a089fb9aef447bcb64d9b5cf42eace1cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a77c868d7bc86b518a07bf04034917e4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a5242a07af8d85e4cff2abc276c0b496f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a6216cb6646e1fa1c04851d3dc25c1a5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a9cd1a1476da02ad282f3b6186b3e8c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>af8132249fa47d88cbff987a6b9f3e4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>paramResidualNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a6d30d09ef747f9ad03456495492bf6c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a93c54cf558bf0155c4dc185d634bfc96</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getResidualNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a7646a740b54b7bb1129ebb7a9d001ad0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a089fb9aef447bcb64d9b5cf42eace1cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a77c868d7bc86b518a07bf04034917e4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterResidualNorm.html</anchorfile>
      <anchor>a5242a07af8d85e4cff2abc276c0b496f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Bifurcation::TPBord::StatusTest::ParameterUpdateNorm</name>
    <filename>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>ParameterUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a30dbf9762dd975ffb1c8260379c7d0be</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a06d6d1422b05123e976387fe78d97030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a9898facd92516281f261cf9c6860fcdb</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ae8c666c6b8b12a335649adc1f9a5271e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a838a0408f00c600293bcdee92a85463f</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ae951cf9a255e65bb23267c95c286dea0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a5a214936cdcf821bf9536439ec6ee920</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a47f809c81dbd7a905d2cea6296600f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a2fc28e48b0ab442c9a21804685698c4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a56296285e4678f66591997e6e97854de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ab79b42e1e98ff5f85c6b7d079b0e901b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ab8474b2c3d6d47a6eb9dc69c3c848e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>paramUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a4d44693e2b5c7ab5c66d3b967d793c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a8efb4a6a521f353afea2269eab18a7c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ae951cf9a255e65bb23267c95c286dea0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a5a214936cdcf821bf9536439ec6ee920</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a47f809c81dbd7a905d2cea6296600f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a2fc28e48b0ab442c9a21804685698c4d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Continuation::StatusTest::ParameterUpdateNorm</name>
    <filename>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>ParameterUpdateNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a839cbe020d35d1773fbfcf46d0de5fc7</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterUpdateNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a6659a20ac38ef29a7bffacbb985b9689</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a3b2d33b32d1622fd5e4233dc3ba86d08</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a747a47d6bff5c01ca7fb1ae34012e430</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a0a306caef3b20cb06e664f2a4571373c</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUpdateNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a3f461029d2b48278acb1cbb782b04ddb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a14a9ccbc070eb5fce718d309e35bf4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>aa43335cb09be6fc520d009cab386b0db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a4957848879eac282432c8270aab0a7ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ada245582dcc08c756448b0b77fe87611</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a5efa0b0a1e5ec45515021e66e804d84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>af1aad4fe7d8c8f11b3357bbff17cd914</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>paramUpdateNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a079697cf6666c25ec19a298110449ce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ae5fedc9e8d50bbcb5d31b6f8b50fe4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUpdateNorm</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a3f461029d2b48278acb1cbb782b04ddb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a14a9ccbc070eb5fce718d309e35bf4b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>aa43335cb09be6fc520d009cab386b0db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Continuation_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a4957848879eac282432c8270aab0a7ea</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Bifurcation::PitchforkBord::StatusTest::ParameterUpdateNorm</name>
    <filename>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>ParameterUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>aa748000eef96c1d890c525dbce7a8aca</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a489d02cf75552df81c1ffd0875f2f155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a7571871e695da4cafd4177f081e60e92</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>aea9ff245a94abced0f8a07d6bf63beee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ab742bee75c4e3fcdd0d2ebe275cea59c</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ad425ccd6d03e91d1f331eb73e022df17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>afffdc5d4bdb4f671266d81156167b3a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a290b7cba28c3d5a75c2baf31560d0b06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a87acd5c24c9c6e403ae561dde00f9454</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a76d746e07e9481b155dcf6b33b1cff47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a6262bfd13c3ece35f1e054ce8a05c525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a78240f19d8f606270b46dbe4f0077187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>paramUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>af1dc6fc8686ed61cd05a55499f76a5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ae08d95c4395b0aba8763f75d7dc51ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>ad425ccd6d03e91d1f331eb73e022df17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>afffdc5d4bdb4f671266d81156167b3a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a290b7cba28c3d5a75c2baf31560d0b06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1ParameterUpdateNorm.html</anchorfile>
      <anchor>a87acd5c24c9c6e403ae561dde00f9454</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::ParameterVector</name>
    <filename>classLOCA_1_1ParameterVector.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterVector</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a3d4bcf86c40de88d1c26ae60561f6ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterVector</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>aae8b740adad4c2c27ee062aca004a798</anchor>
      <arglist>(const ParameterVector &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>ParameterVector *</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>ad5dbf4398258390514aac1fabbff6a8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ParameterVector</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a7658c477d9b8ac995495d40e04d1e262</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addParameter</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>aaaf4c959bc4140abe294151a8802b6f0</anchor>
      <arglist>(std::string label, double value=0.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a96e76f6e4bac60490b6b568bdd7757aa</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scale</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a4d7b56d8c4222ce529bd2bcfaa4b8fc7</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>scale</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a6dac263a58101e915c717b474db7b3cc</anchor>
      <arglist>(const ParameterVector &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>af42d52c74dcdfd6838c22e78c34db090</anchor>
      <arglist>(double alpha, const ParameterVector &amp;alphaVector, double b)</arglist>
    </member>
    <member kind="function">
      <type>ParameterVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>afc4d93c7ed1b226ca0a86ab63db38c05</anchor>
      <arglist>(const ParameterVector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>ae95bb468f06093e191d22e03c9742037</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator[]</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a2d3016e8946a0269a6fd18606b0d5e7d</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>ad6c1ed06873887e4d580d5bd22a11a7d</anchor>
      <arglist>(unsigned int i, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>af542b3654239a8398b6595ae3971d5fb</anchor>
      <arglist>(std::string label, double value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValue</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a4501ad1961dd729bb2fb6eae6a2bf7ef</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValue</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a867b3decbe8b571d8a5ecdca485b171d</anchor>
      <arglist>(std::string label) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a6c5d33c817b1d6f0c8efa1e6698d5112</anchor>
      <arglist>(std::string label) const </arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>getDoubleArrayPointer</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a32916baca7f89ead13bdd8ebc659cae3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameter</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a7a91ede011e8d8f5cd6365a086c81147</anchor>
      <arglist>(std::string label) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLabel</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>aedb030409640e176c5320645da485517</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a72a436cc23ceaac05eaddd7de5430e31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>aaf659fb256057ea329fff7f66629ecda</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; double &gt; &amp;</type>
      <name>getValuesVector</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>aa81fec69ea43c1636bdcd0f88e5a24c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getNamesVector</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a9c29391949573816a9e91f8e781ee532</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>x</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a843eae32870eb1054402801f5f8b5dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>l</name>
      <anchorfile>classLOCA_1_1ParameterVector.html</anchorfile>
      <anchor>a82214880f17a1a7e0dafdf9d6c888c7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::PhippsBordering</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</filename>
    <base>LOCA::Pitchfork::MooreSpence::SolverStrategy</base>
    <member kind="function">
      <type></type>
      <name>PhippsBordering</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a088494ac2e90a0b19d7466b3e3e0abe2</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PhippsBordering</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>afd471f351b9c42aaeceeb25413cf3f97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a86a73cb61fdfcce3dfca4d17b49f2a65</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedGroup &gt; &amp;pfGroup, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;asymMultiVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;nullVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;JnVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dJndp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>aa15f32c806117dadc72dc7a8e2679f1b</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &amp;input, LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguous</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>af16be9742a6c634af8e8e9fcd9be8191</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_null, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_slack, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_param, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_null, NOX::Abstract::MultiVector::DenseMatrix &amp;result_slack, NOX::Abstract::MultiVector::DenseMatrix &amp;result_param) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a108be294f14aed1c525bdd862eb64720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>afe1e923c8b0d348af2a2504cde46c360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt;</type>
      <name>group</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a134b0c04738ce7ef1895e4a2bad9738e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedGroup &gt;</type>
      <name>pfGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a642bd851094b1836c4062232e55e0cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>asymMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>ac6f340795132d93c22463bce523c77a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>asymVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>af6d305d6954ea084ac2766f1950a7635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>nullVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>aefded68d80ea389e77b2e66b6b8f30c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>JnVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a2e0b1573b1d6fd0d92db230422fe75ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dfdp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a43886985f6975f89a684dff1952e23e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dJndp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a356d599d57a3fb55b14c4d2fba28e76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a117733ac2e0ce2d61a6440b5489cee45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>nullMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>aa63f74d13556e14d4b46e9c1072716a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>JnMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a3fb6ec3d3be7afac8b0272896a316a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sigma</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>af2e7e9d25e49c67253561bee0a077a50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::PhippsBordering</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</filename>
    <base>LOCA::TurningPoint::MooreSpence::SolverStrategy</base>
    <member kind="function">
      <type></type>
      <name>PhippsBordering</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>ae493d3aca53bfb8a37a94e57727a4184</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PhippsBordering</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>aff1a78ceb46b31d576f180ba21802336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>aff2b4b5e47fc0fdadb3f37765d021ecf</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedGroup &gt; &amp;tpGroup, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;nullVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;JnVector, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dJndp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>ad772ffc7bae71f33fb560212b0394597</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;input, LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>af1274ebc69b7d74237c189ac3aa7d87d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;input, LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguous</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a6d0e21625805d1be6a5d2164526f642a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_null, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_param, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_null, NOX::Abstract::MultiVector::DenseMatrix &amp;result_param) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveTransposeContiguous</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a327ac524d60b9400cffe5ae507f06365</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_null, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_param, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_null, NOX::Abstract::MultiVector::DenseMatrix &amp;result_param) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a39e3dfb6b96ba551de95534253090dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a3b63e29fd16c79d1f79f5f2ea4ad97a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt;</type>
      <name>group</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a2a950294c2f4c57d0625a16ebd83fe7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedGroup &gt;</type>
      <name>tpGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>ae31b8060fd08dc404c6356fa2feae521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>nullVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a4f96bb43deb6d466b8602853b75ea954</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>JnVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a5cf8f4f98002d797d522cbe0accc8eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>dfdp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a255f1aae2896c9ee3b4650a843151616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>dJndp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a8f475743d118f8c4a747f58a00b7ccb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>borderedSolver</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a4f044b2e0da9db4761a6b642353f2ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::BorderedSolver::AbstractStrategy &gt;</type>
      <name>transposeBorderedSolver</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a9e6086a8cba426a432391d08310dd455</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>nullMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>aed8a96b42c6b01f4e125e42282f9f3b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>JnMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a9e40c8fcb545aa576b6e9f17eddf582a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>uVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a42ef104a0ffb00a007b387e6a213a934</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>uMultiVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>a92cd2a4590c13c3f3ff02a77c8c97601</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>s</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>ac367622ecddaf26680e4c8c993ea9dd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>st</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1PhippsBordering.html</anchorfile>
      <anchor>adffb0a2051c5fae783ad17ee93f5e7a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Polynomial</name>
    <filename>classNOX_1_1LineSearch_1_1Polynomial.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>Polynomial</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a18e6abb0adda800b86e572cf2b0f9f7f</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Polynomial</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a3a0241b062bbcb9feb3abc0b3f1d22a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ad3f6fa84b3350d7d4b72f75883561c36</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>SufficientDecreaseType</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ArmijoGoldstein</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284ae2694ed8c0408c0ba2a7c7b7344fea70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>AredPred</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284ac6600eaabc653a2fafb5a511ede2e1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>None</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284a3f941db8dc2d61570dca29bfcee8049f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>InterpolationType</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Quadratic</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611aa378a1b76b44e921f8ad179050d3a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Cubic</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611aeae1ae16abb4f941f210f0f1439d4aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Quadratic3</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611a339126c90cca0db69f2e979b96a984eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>RecoveryStepType</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a0a72a3b21362e7134cb3536c5caa7e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Constant</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a0a72a3b21362e7134cb3536c5caa7e95a967aa4ec560b46e5f330431517e2cdae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>LastComputedStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a0a72a3b21362e7134cb3536c5caa7e95acbc416be01095dcdafb4e863e600b875</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ArmijoGoldstein</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284ae2694ed8c0408c0ba2a7c7b7344fea70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>AredPred</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284ac6600eaabc653a2fafb5a511ede2e1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>None</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a15232872888ec56366c5c50aec62a284a3f941db8dc2d61570dca29bfcee8049f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Quadratic</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611aa378a1b76b44e921f8ad179050d3a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Cubic</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611aeae1ae16abb4f941f210f0f1439d4aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Quadratic3</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aee14b043087f6a3c5a5bbd0607e14611a339126c90cca0db69f2e979b96a984eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Constant</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a0a72a3b21362e7134cb3536c5caa7e95a967aa4ec560b46e5f330431517e2cdae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>LastComputedStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a0a72a3b21362e7134cb3536c5caa7e95acbc416be01095dcdafb4e863e600b875</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkConvergence</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ac7194055baa961a22a2152c05b513209</anchor>
      <arglist>(double newValue, double oldValue, double oldSlope, double step, double eta, int nIters, int nNonlinearIters) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>updateGrp</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ab47e1d4e5477f18cfa02b8a5859553d1</anchor>
      <arglist>(NOX::Abstract::Group &amp;newGrp, const NOX::Abstract::Group &amp;oldGrp, const NOX::Abstract::Vector &amp;dir, double step) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>computeValue</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a44427bd8239b6ad6a6986dcf8c4fb348</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, double phi)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printOpeningRemarks</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>af2efc461196da23017fd48b9c293a792</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printBadSlopeWarning</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a87e9665b06e20a6c3fa13254d48670ff</anchor>
      <arglist>(double slope) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SufficientDecreaseType</type>
      <name>suffDecrCond</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>abf789778243eb78b1a02a09937fca51a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>InterpolationType</type>
      <name>interpolationType</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ab54c525ea7bebbe2930cc7b64bbb6db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RecoveryStepType</type>
      <name>recoveryStepType</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>addddc3adda6a332469c96c3219114a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ae24b48e56e17dcb78580aabcf05211f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>defaultStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a241d8febddab9f096380b062aab8e69a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>recoveryStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a03d19760399ac1f0cbf063bdd024fd80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxIters</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ac87ffe348e41b159b0a0221f79fc0883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aabed65b76b302dfb523a246aff6beb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minBoundFactor</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a681d6bfea0708905e77e4414f3d31c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxBoundFactor</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a4a564f6905b108692c767ebfd399750c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doForceInterpolation</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ad3681f860548cdac3ba281ee8dc0d490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxIncreaseIter</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a0cfed33fd0b546020699382049b8999c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doAllowIncrease</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a1f6a6808026350ac7b56bf798c3cbd51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxRelativeIncrease</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a267030419f87ff5894e82fa28025cc53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useCounter</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ac2052d64f10d5a63d8111b4502047e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ae73e54f2b57dae8a5258a875b2f436e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList *</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a9a8a2d7a2068f379f61ba422c6f0e70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LineSearch::Utils::Printing</type>
      <name>print</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>aec00e4d1f99548f4364153fe1f7d0315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LineSearch::Utils::Counters</type>
      <name>counter</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a3d4540421fd114986f31127df0fed9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LineSearch::Utils::Slope</type>
      <name>slopeUtil</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>a9ae54aac1602542ffe783429d003bed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::MeritFunction::Generic &gt;</type>
      <name>meritFuncPtr</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Polynomial.html</anchorfile>
      <anchor>ac2e38e6a22e7c229be0079d7e49b1006</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classNOX_1_1LineSearch_1_1Polynomial">outputparameters</docanchor>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Interface::Preconditioner</name>
    <filename>classNOX_1_1Epetra_1_1Interface_1_1Preconditioner.html</filename>
    <member kind="function">
      <type></type>
      <name>Preconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Preconditioner.html</anchorfile>
      <anchor>aefb0748de15607c3fc614956c415db1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Preconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Preconditioner.html</anchorfile>
      <anchor>a3ab36604e1018103380c3701440856bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computePreconditioner</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Preconditioner.html</anchorfile>
      <anchor>aed9050224528c21561517f261afa643f</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;M, Teuchos::ParameterList *precParams=0)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::PreconditionerBase</name>
    <filename>classThyra_1_1PreconditionerBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Thyra::PreconditionerFactoryBase</name>
    <filename>classThyra_1_1PreconditionerFactoryBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::PrePostOperator</name>
    <filename>classNOX_1_1Solver_1_1PrePostOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>PrePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>aaa86c71dd2b7241b64891a67ebb96b3d</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Utils &gt; &amp;utils, Teuchos::ParameterList &amp;solverOptionsSubList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>adf6945c009bf35d388a61312a943ebde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>a3c4c021725149740ae7e763dba407e34</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Utils &gt; &amp;utils, Teuchos::ParameterList &amp;solverOptionsSublist)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPreIterate</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>afb0d0b9ee0b4c01623f7226c2300369b</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPostIterate</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>aa161930527947814715675ce6f63b588</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPreSolve</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>aff7daed732a9ed3f1265903c3e791ef3</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPostSolve</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>a91db3009e21afa66353a0e836c1bc74e</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>havePrePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>a4b6a90b4a9efc38a6d25ab7303078cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::PrePostOperator &gt;</type>
      <name>prePostOperatorPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PrePostOperator.html</anchorfile>
      <anchor>ac1a3367b67ce63da598782c95bbd62fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Abstract::PrePostOperator</name>
    <filename>classNOX_1_1Abstract_1_1PrePostOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>PrePostOperator</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>a01a0fe538c7b3ef1b6f92521df3243b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PrePostOperator</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>ab691ae544da25c78fea01ce3736a9273</anchor>
      <arglist>(const NOX::Abstract::PrePostOperator &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PrePostOperator</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>aadb6c62419922113d971fcb51d604f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPreIterate</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>ac042cad578515888577153e55f5ad22e</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPostIterate</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>a471585a651048766ccc493b78965ffe8</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPreSolve</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>abb0a6677284f8af72d201dbfa103227a</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>runPostSolve</name>
      <anchorfile>classNOX_1_1Abstract_1_1PrePostOperator.html</anchorfile>
      <anchor>a257ad3a4f0b74e37424320860d6000ce</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::PrePostOperatorVector</name>
    <filename>classNOX_1_1PrePostOperatorVector.html</filename>
    <base>NOX::Abstract::PrePostOperator</base>
    <member kind="function">
      <type>void</type>
      <name>runPreIterate</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>a5ec2adcd48e06262fa671f1656fd22ce</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runPostIterate</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>aace0afee76e0d0fcf4cf68f9e3e40241</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runPreSolve</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>a33fea4de8db4fa0130cddfeebc0bc1f4</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runPostSolve</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>abef814334277e34015c114e60fadb65f</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushBack</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>afc921b4d003fa6ee2e01e95c04db6b80</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::PrePostOperator &gt; &amp;ppop)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popBack</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>a94219eab68c458e995e3ae43f33dda5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classNOX_1_1PrePostOperatorVector.html</anchorfile>
      <anchor>aececa60bb722f2a51c3f931599adec57</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Utils::Printing</name>
    <filename>classNOX_1_1LineSearch_1_1Utils_1_1Printing.html</filename>
    <base>NOX::Utils</base>
    <member kind="function">
      <type></type>
      <name>Printing</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Printing.html</anchorfile>
      <anchor>ad7f758fa97087eebd872c352842c0af0</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Utils &gt; &amp;u)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Printing</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Printing.html</anchorfile>
      <anchor>acecc47c0ac90a8e5f4e75dbecf97f140</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printOpeningRemarks</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Printing.html</anchorfile>
      <anchor>ade7b4880d5a6614d22c5c930989510fe</anchor>
      <arglist>(const std::string &amp;lineSearchName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Printing.html</anchorfile>
      <anchor>a85a7e86ff6232f66edb0fa854f7d315e</anchor>
      <arglist>(int n, double step, double oldf, double newf, const std::string s=&quot;&quot;, bool unscaleF=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProblemLOCAPrototype</name>
    <filename>classProblemLOCAPrototype.html</filename>
    <base>ProblemNOXPrototype</base>
  </compound>
  <compound kind="class">
    <name>ProblemNOXPrototype</name>
    <filename>classProblemNOXPrototype.html</filename>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::PseudoTransient</name>
    <filename>classNOX_1_1Solver_1_1PseudoTransient.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>aa8ed676ac7fdcc31d8ea98f2d2d7b62a</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a45de11e8d3fb45c4abeef0ae2f137976</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function">
      <type>NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a27a3770285b45d89ef34dac173558064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a77087d89f01ea1a920e1428b19e2fd37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a23e6b1ae9d5df4f5e877fd27fd926b99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>ae02d162d8690b6b70e64bafd88d21af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a1d85e73fa0dc56e35cbaff0a55ca8be8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a11783ecfe2cab4da43f7584fec96ee88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a6b8d69587cf89ed8162fe927d924a468</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>ae642102e563c4b59158cdb5e63e1bc80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>ab322a3fe3c1c3ef6c4d45aa4d298ecea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>aef5e2720cfd502a2a3fe7d196e650c51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a92e90e424a5c85869dbcaa70c77db24f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utilsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a43faa5930d55912c9a9a6074b301b557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a5e37089b1c3a63305c3ca485df7f0df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>oldSolnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a1eae7bb1b147a01804906767b9581311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>transientResidualGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a284b386454879a568bdfdbcf888ef9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>dirPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a148f01254164f4b239a03883c444f732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>add3ce149b1b0056a1755bd73affede18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>lineSearchPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>ad3ba58baa8e1b140a01c766129636f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>directionPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a276d2c7ba3e88bf22890ae2e0de884bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a39ebb6432ca1f7c9d46a3aba7418b88c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>aef25a76d1e6801cc4d8fb051ff6df9b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>aa68b00b8853f7ec8cf8e77e6c0455514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>ac0eb29c793486a2f9605454b8c895127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a786775aa90f418d4a0fadc9f7977e390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Group &gt;</type>
      <name>thyraSolnGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a5e040308388d66748eded8336f21ecd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Group &gt;</type>
      <name>thyraOldSolnGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a2927bf33346ccdc3d8799e299c10468e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Thyra::Group &gt;</type>
      <name>thyraTransientResidualGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a870775ee092256eeb037809932efb148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>delta</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a847a3f67e942ab59a26d37d61d75633f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>inv_delta</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>ae7c95dc27ad39e19bb6bd44dea129059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>deltaInit</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a45085e05e99822eaf0d8cd8aed215ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>deltaMax</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a5abc0d6f06521f3e375678e93c1c8f2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>deltaMin</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a230470b73d38a8573bc803e2bcecd95b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>deltaOld</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>aad4b17615bd38890f5c38ba2d9f5a02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>time</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a16d9810eed6faf17f58dc85e0dbe4053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>x_dot</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a3986b3992fee9347afcc347bf584af02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_transient_residual</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a7269d45fe45852320760e4f7038e51f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>max_pseudo_transient_iterations</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a15281b0c1029b7e64fed5ec31c8c9e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>validParameters</name>
      <anchorfile>classNOX_1_1Solver_1_1PseudoTransient.html</anchorfile>
      <anchor>a4ac31a05314b6130990a78d624a8a558</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::Random</name>
    <filename>classLOCA_1_1MultiPredictor_1_1Random.html</filename>
    <base>LOCA::MultiPredictor::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Random</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>aa4ff26aae7628763282df1dbd8dfceab</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Random</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a8e905646614ddc7fbfcd958092efc2cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Random</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a3fe07d24defece669fad1696e7ae542a</anchor>
      <arglist>(const Random &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::MultiPredictor::AbstractStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a744581156001cd3018bc24e8a35d09c7</anchor>
      <arglist>(const LOCA::MultiPredictor::AbstractStrategy &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>af728093011dd3c1033db30e62c59a239</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a54711bd1b059e6385a3fa474f282d519</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>evaluate</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>aa5ecae3ee7e5660220a1add42ef8a6a7</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeTangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a7b862f08bbb84c4ae4f8ff9c5d13a4ff</anchor>
      <arglist>(LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTangentScalable</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a6b85ac4c95fdda4e412eb46ab983c422</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a6764523b33dc8e68474398a5ef616ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a2e630372a54d8bc699200d1c63c779a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>aa7249af6a894ca45fa24452bb497be97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a4338f1fdb85a2ba22bc0d6070112fc77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>epsilon</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Random.html</anchorfile>
      <anchor>a04d05cf1d8888349e8d08ae32a4d0919</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Random</name>
    <filename>classNOX_1_1Random.html</filename>
    <member kind="function">
      <type></type>
      <name>Random</name>
      <anchorfile>classNOX_1_1Random.html</anchorfile>
      <anchor>a347e63ea93bef94fc741a7ae377b0c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Random</name>
      <anchorfile>classNOX_1_1Random.html</anchorfile>
      <anchor>ac785ae74380153254098a464f99f5df7</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setSeed</name>
      <anchorfile>classNOX_1_1Random.html</anchorfile>
      <anchor>a67e42459c53dd70c1bb4a526ae104dd4</anchor>
      <arglist>(int s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>number</name>
      <anchorfile>classNOX_1_1Random.html</anchorfile>
      <anchor>a88c8f808f10947f6d8a06d6c0d019764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>checkSeed</name>
      <anchorfile>classNOX_1_1Random.html</anchorfile>
      <anchor>a7dd9cfdb20824dfcaee3aaedbbfd63c3</anchor>
      <arglist>(const std::string &amp;func, int s)</arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static double</type>
      <name>seed</name>
      <anchorfile>classNOX_1_1Random.html</anchorfile>
      <anchor>a0f991b4dedddd69670704c0bbdb87460</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::RelativeNormF</name>
    <filename>classNOX_1_1StatusTest_1_1RelativeNormF.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1RelativeNormF.html</anchorfile>
      <anchor>a570ea0814df99a5de444e80b0d7705d4</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1RelativeNormF.html</anchorfile>
      <anchor>a3c5405c58b6858ae46e61f879dee5831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1RelativeNormF.html</anchorfile>
      <anchor>a3e4ac0e87420fe90f78655449d9166ab</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::BroydenOperator::ReplacementInterface</name>
    <filename>classNOX_1_1Epetra_1_1BroydenOperator_1_1ReplacementInterface.html</filename>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Interface::Required</name>
    <filename>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</filename>
    <base virtualness="virtual">NOX::Epetra::Interface::Required</base>
    <member kind="function">
      <type></type>
      <name>Required</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a9a348bdf749d0905e48c7e8314a5aa10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Required</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ad60c2b64721117a31085900699fdaac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a06ab445d24f6e10630873bae695d50da</anchor>
      <arglist>(const ParameterVector &amp;p)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a61cd41e31aa61c47e9c52437beae875e</anchor>
      <arglist>(const Epetra_Vector &amp;x_, double conParam)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>dataForPrintSolution</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a73a2c09cd5a2a46cb75f5e6456f7bef5</anchor>
      <arglist>(const int conStep, const int timeStep, const int totalTimeSteps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMultiPointParameter</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a5752cf4130d293d62936bca871fd26b3</anchor>
      <arglist>(const int stepNum)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a4c273c5721c3f8d4882e35a71bb0d449</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus, LOCA::Epetra::Group &amp;group)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ad9b53348838358a6d1a44ef7d32d6bd9</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus, LOCA::Epetra::Group &amp;group)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a0adf286d892d4ea7bf7530710b7d9524</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ace805fecfdc86da9c49aa923f88c307e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Interface::Required</name>
    <filename>classNOX_1_1Epetra_1_1Interface_1_1Required.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>FillType</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Residual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0dad0eabcb24fe8529b1836be69ad65e156</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Jac</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da49ab65cab0e4ed7c19678394eef9e04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Prec</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da9c5681b885c1cbb0d9f119053d823925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FD_Res</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0dae647e525bec39c820b23c1f91988d557</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MF_Res</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da3025c5141630b3776d3073ec72ea3c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MF_Jac</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da9b5cdde4e001d072ea03ddeb565235dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>User</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da73381a1bf8275632e49b4964eac0ec87</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Residual</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0dad0eabcb24fe8529b1836be69ad65e156</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Jac</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da49ab65cab0e4ed7c19678394eef9e04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Prec</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da9c5681b885c1cbb0d9f119053d823925</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FD_Res</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0dae647e525bec39c820b23c1f91988d557</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MF_Res</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da3025c5141630b3776d3073ec72ea3c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MF_Jac</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da9b5cdde4e001d072ea03ddeb565235dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>User</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>ac80d341073c0df754fb80179f6a2ae0da73381a1bf8275632e49b4964eac0ec87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Required</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>a41696a317ebc81c53ec9a4111911c178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Required</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>aea5ae4f6e6930f9ee5d445e5d0b7511f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeF</name>
      <anchorfile>classNOX_1_1Epetra_1_1Interface_1_1Required.html</anchorfile>
      <anchor>adf0ebed7ed031071e3a1022b0a8f0da5</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Vector &amp;F, const FillType fillFlag)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::Restart</name>
    <filename>classLOCA_1_1MultiPredictor_1_1Restart.html</filename>
    <base>LOCA::MultiPredictor::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Restart</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a407e23f3cf9406b8f4ec69a490ae10d5</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Restart</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a2a25a89a9d7ce1e90a4895c0156a046b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Restart</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>abf6cd2ef427c0ffe72ff7ffd598dc8b4</anchor>
      <arglist>(const Restart &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::MultiPredictor::AbstractStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a3558536119e5998f4fe5333d3e830a85</anchor>
      <arglist>(const LOCA::MultiPredictor::AbstractStrategy &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>ac6f0522c6accc93fcf9647f39cce4ce3</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a91c15a787d2871ae29cbf2ae64ef4828</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>evaluate</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a54b647c891b6db967c13ddf51e4e4b12</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeTangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>ad86733b3f2e7ec5d855e5a0e5eaf7093</anchor>
      <arglist>(LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTangentScalable</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a96e9b8b0b97f3c05651545a774fe041b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a81e29bb95502009c57fcb6ab879bf99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Restart.html</anchorfile>
      <anchor>a11b872c006808ed1b8d8c1999a2b2150</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::RowSumScaling</name>
    <filename>classNOX_1_1RowSumScaling.html</filename>
    <base>NOX::Abstract::PrePostOperator</base>
    <member kind="function">
      <type></type>
      <name>RowSumScaling</name>
      <anchorfile>classNOX_1_1RowSumScaling.html</anchorfile>
      <anchor>a7fed654e766ea2f7038b932f5bcd4d27</anchor>
      <arglist>(const Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt; &amp;inv_row_sum_vec, ENOX_WhenToUpdateScaling s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runPreIterate</name>
      <anchorfile>classNOX_1_1RowSumScaling.html</anchorfile>
      <anchor>a5cee9701b9fe0d9d4ab3d204ca393ab4</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>runPreSolve</name>
      <anchorfile>classNOX_1_1RowSumScaling.html</anchorfile>
      <anchor>ab01f16ae1e2afb14418c3d8bfc917e77</anchor>
      <arglist>(const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::SafeguardedDirection</name>
    <filename>classNOX_1_1LineSearch_1_1SafeguardedDirection.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>SafeguardedDirection</name>
      <anchorfile>classNOX_1_1LineSearch_1_1SafeguardedDirection.html</anchorfile>
      <anchor>a64a969edb75356dea96e618e93d84b91</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1SafeguardedDirection.html</anchorfile>
      <anchor>a6ae670af859521e2d69dafbc3a06925d</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::SafeguardedStep</name>
    <filename>classNOX_1_1LineSearch_1_1SafeguardedStep.html</filename>
    <base>NOX::LineSearch::Generic</base>
    <member kind="function">
      <type></type>
      <name>SafeguardedStep</name>
      <anchorfile>classNOX_1_1LineSearch_1_1SafeguardedStep.html</anchorfile>
      <anchor>a2f5706a3f7175f789dff0dffbc2f0e38</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1LineSearch_1_1SafeguardedStep.html</anchorfile>
      <anchor>a7acabf575643c3f544234e858147cc95</anchor>
      <arglist>(NOX::Abstract::Group &amp;newgrp, double &amp;step, const NOX::Abstract::Vector &amp;dir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::SalingerBordering</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</filename>
    <base>LOCA::TurningPoint::MooreSpence::SolverStrategy</base>
    <member kind="function">
      <type></type>
      <name>SalingerBordering</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a5753dd0dacd6c057be9cc6d6ce38c5f0</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SalingerBordering</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>aa7c3f609cb520eb7694ef64dbcccf3a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>acb105d81bf459e27832e8f198ec4d429</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedGroup &gt; &amp;tpGroup, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;nullVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;JnVector, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dJndp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a07e5451fa433d2baf468cebb98f3f421</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;input, LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a8d8d8be737e4acf9f7b23d808d39b650</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;input, LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguous</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a991a85bc6efbdeed1c0d4324d97d1092</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_null, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_param, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_null, NOX::Abstract::MultiVector::DenseMatrix &amp;result_param) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveTransposeContiguous</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a5862bb2e61fd10702626a305935e4ff9</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_null, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_param, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_null, NOX::Abstract::MultiVector::DenseMatrix &amp;result_param) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ad715143d0653911611e55a5711080098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ad8de2127ba69aa5abe0fe6bada451dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt;</type>
      <name>group</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ae3bcc8818aaa3c2f01a9d9a504e5eadf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedGroup &gt;</type>
      <name>tpGroup</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a3a1ffc48d378bd1e29979ec62bb2dffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>nullVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>aa76b877c79519a0a6fc40a041c5188a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>JnVector</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a10d899e19695d091018dbe30acc3cc3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>dfdp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a486603a93eb3b312f3c48302f71f3c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>dJndp</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a9b75e2210ae8791bd088e719c23f331a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::SalingerBordering</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</filename>
    <base>LOCA::Hopf::MooreSpence::SolverStrategy</base>
    <member kind="function">
      <type></type>
      <name>SalingerBordering</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a64eaced84c5f19d1f3b6d32f1cf4fd7c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SalingerBordering</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>af3e8016cbca44e21c94deb05efb0a1f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a88b9ee1e5a04ab42251fbd184127fdfb</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedGroup &gt; &amp;hopfGroup, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;yVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;zVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;CeRealVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;CeImagVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dCedpReal, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dCedpImag, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;ByVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;mBzVector, double w)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a4d73553afcb715fcaf8f066c2c96d02a</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::Hopf::MooreSpence::ExtendedMultiVector &amp;input, LOCA::Hopf::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguous</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a1e9914980d2035a2316b6a761ce47028</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_y, const NOX::Abstract::MultiVector &amp;input_z, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_w, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_p, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_y, NOX::Abstract::MultiVector &amp;result_z, NOX::Abstract::MultiVector::DenseMatrix &amp;result_w, NOX::Abstract::MultiVector::DenseMatrix &amp;result_p) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>af16f6a2e01841d299150fae67b05ba83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a87c97d145a4d0a461a1f5b702ccb1aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::AbstractGroup &gt;</type>
      <name>group</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ab50217e1b9ca8d3a6b93a8419f7e1354</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedGroup &gt;</type>
      <name>hopfGroup</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a0dae01b28b1ad2ace4049e1a276d2230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>yVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a9764d9b65e9b6c77ee39b3e8b5fda8c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>zVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a5e82a223a9ca02538f23c8281b289539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>CeRealVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a4695f9fa6abfbfdc7bb525e2908b91e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>CeImagVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>af9e50153266683894dce7e7ac6f6165a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dfdp</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a85246413f6b538c87ea6d7fe3e98cce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dCedpReal</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a9de567caa8576718a753fe4d96b9e5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dCedpImag</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a656d7896084b5dd60a34a2dbac4d42df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>ByVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ad073b3fe3e78e0396ca809ca9bc9f581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>minusBzVector</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a78d137e94c16d5de77b0586c1acce99a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>w</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ae8db708a85905b4c73ba6dc1437dbc90</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::SalingerBordering</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</filename>
    <base>LOCA::Pitchfork::MooreSpence::SolverStrategy</base>
    <member kind="function">
      <type></type>
      <name>SalingerBordering</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ab296b7ba01232d6ecd17987c828c8c24</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SalingerBordering</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a07b217286580da87a4070147b25fc16c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>aaf4b2aedd71393c5c6c533595cc0511c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedGroup &gt; &amp;pfGroup, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;asymMultiVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;nullVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;JnVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dJndp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a17b5e997671b3b634df8850d01fed90f</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &amp;input, LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveContiguous</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>afae313b02a2b0c8aab9d7b1398ab4c96</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input_x, const NOX::Abstract::MultiVector &amp;input_null, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_slack, const NOX::Abstract::MultiVector::DenseMatrix &amp;input_param, NOX::Abstract::MultiVector &amp;result_x, NOX::Abstract::MultiVector &amp;result_null, NOX::Abstract::MultiVector::DenseMatrix &amp;result_slack, NOX::Abstract::MultiVector::DenseMatrix &amp;result_param) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a4c536fbe72e9adb2a9afcee138a373a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a7ba4e9b8dd38ee295e808e9b2dc93ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt;</type>
      <name>group</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a9edec7bf4e93680d5bfb7359ea36c196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedGroup &gt;</type>
      <name>pfGroup</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>aadc20efceaff46810e18f10ca66e0605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt;</type>
      <name>asymMultiVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>a11da5777a1842c541f40ca6dfc60e831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>asymVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>aa7110d78a73d9f4d0d8a78226e9d9448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>nullVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>af080cffd574901f32525eef40f2d01bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>JnVector</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>aac300309c88c9d729e4f1100d19fad06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dfdp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ab88b499698175e3427d98defb5d1b980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>dJndp</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SalingerBordering.html</anchorfile>
      <anchor>ab58274976f80a6fc752a33ff62511c7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Thyra::SaveDataStrategy</name>
    <filename>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>SaveDataStrategy</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>aafd28b9a2130b345f8727e59e2041834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SaveDataStrategy</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>a97a5312bc4116153a99b97da5f1786db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>saveSolution</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>aa133ffde4fa126de2e51e7c882dbf0ad</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>ac4179794cad11d3327e3ccffdcd706ac</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postProcessContinuationStep</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>a334b54036f692cd028c0527b445fe250</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>projectToDraw</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>a67fdd6254bf65e5af2781a8088c191b0</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;x, double *px) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>projectToDrawDimension</name>
      <anchorfile>classLOCA_1_1Thyra_1_1SaveDataStrategy.html</anchorfile>
      <anchor>a74a70118031598de6a17eca85e862e18</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Scaling</name>
    <filename>classNOX_1_1Epetra_1_1Scaling.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>SourceType</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>ae6a5acadb4cefec90e852603a4f12e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ScaleType</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a7837dba2b1717414324c5ae78166c8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Scaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a14af3e8b51639dc5acb3485292144d12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Scaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a9f020cd4e836a25c5e68fae23efde496</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addUserScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>aaea3eff0a9241ed881aeab20b42fd41f</anchor>
      <arglist>(ScaleType type, const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;D)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addRowSumScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a27ae9216ba968d658b649b3277787663</anchor>
      <arglist>(ScaleType type, const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;D)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addColSumScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a14cc1e23cbd382f755595dca04814b62</anchor>
      <arglist>(ScaleType type, const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;D)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a5bf0bd9fa512f2eac2a172f30025120b</anchor>
      <arglist>(const Epetra_LinearProblem &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scaleLinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a695edadce3953a57640a99ec832b77bb</anchor>
      <arglist>(Epetra_LinearProblem &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unscaleLinearSystem</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a0d9b0204e5bf658edf064af3e491497a</anchor>
      <arglist>(Epetra_LinearProblem &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyRightScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>abd99e983c99f4d7bee5165b414f076d2</anchor>
      <arglist>(const Epetra_Vector &amp;input, Epetra_Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyLeftScaling</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a0044f3d979e03dabba40978c7b2f6f96</anchor>
      <arglist>(const Epetra_Vector &amp;input, Epetra_Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Epetra_1_1Scaling.html</anchorfile>
      <anchor>a22b2715c448b7648f3f02ec9138d4dfa</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Utils::Sci</name>
    <filename>classNOX_1_1Utils_1_1Sci.html</filename>
    <member kind="function">
      <type></type>
      <name>Sci</name>
      <anchorfile>classNOX_1_1Utils_1_1Sci.html</anchorfile>
      <anchor>a998823155bae5ebdb9eb87389a036c0f</anchor>
      <arglist>(double val, int precision=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Sci</name>
      <anchorfile>classNOX_1_1Utils_1_1Sci.html</anchorfile>
      <anchor>aa8eed8ac7f5d591521d242e25932bb2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>d</name>
      <anchorfile>classNOX_1_1Utils_1_1Sci.html</anchorfile>
      <anchor>ae1ba88ad98c3a1a24099226faa0fba72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>p</name>
      <anchorfile>classNOX_1_1Utils_1_1Sci.html</anchorfile>
      <anchor>a1277e98079875843402d85eaa339c8c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::Secant</name>
    <filename>classLOCA_1_1MultiPredictor_1_1Secant.html</filename>
    <base>LOCA::MultiPredictor::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>ac8a6239a9f342250146221aedaa50e4a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a005bd808326342db9c694b315bca36fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>ad56c09689ebf2226ac8421f764f0814a</anchor>
      <arglist>(const Secant &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::MultiPredictor::AbstractStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a0258b5f933dda33f61d72c1f80e9e1f7</anchor>
      <arglist>(const LOCA::MultiPredictor::AbstractStrategy &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a37e51e41197249af02c7b56efcbb8d50</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>ae178f70ed5013ca66b264865a385c63d</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>evaluate</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>aafc89e1995e41320f0d3773d4441ea8b</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeTangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>aab82cd519268a55e72ced91ce6489c7e</anchor>
      <arglist>(LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTangentScalable</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>aee57e695b854b9df0e1e6b4e1f61da57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a65f75871c17e5fa3069dfd382237eb6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>firstStepPredictor</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a03725feb279b8b2c969e796adfca9e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isFirstStep</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a5bc1ae54bbc2337c5460c75a0cff3226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isFirstStepComputed</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a239b1a445207d20cbcdcae40d9a1d75f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>ad631c9e2d392a22ab050f0a3d6a7b840</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a0034555d461c323f5c979fc17c67012d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Secant.html</anchorfile>
      <anchor>a54520353a9f48e01e4b7ed72dbd62256</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Petsc::SharedJacobian</name>
    <filename>classNOX_1_1Petsc_1_1SharedJacobian.html</filename>
    <member kind="function">
      <type></type>
      <name>SharedJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>ae4f59810dad173198838f4cda91a26a5</anchor>
      <arglist>(Mat &amp;j)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SharedJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>aa9a4a092dbbd68184a792dbd29530865</anchor>
      <arglist>(Mat &amp;j, Mat &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SharedJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>a1b0dd17cc41a60b103284da1e91be65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>getJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>aae78c846badb6d22d0a51a5f67e3df59</anchor>
      <arglist>(const Group *newowner)</arglist>
    </member>
    <member kind="function">
      <type>const Mat &amp;</type>
      <name>getJacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>a3140515096efc5059f309640ae9d593c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOwner</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>aab3fb56416ed04999853607d1fd11b6c</anchor>
      <arglist>(const Group *grp) const </arglist>
    </member>
    <member kind="function">
      <type>Mat &amp;</type>
      <name>getPrec</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>a57ac98702f99ef661946380e9ab22ae4</anchor>
      <arglist>(const Group *newowner)</arglist>
    </member>
    <member kind="function">
      <type>const Mat &amp;</type>
      <name>getPrec</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>a50cd80613339f9e720834d19327e5e5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Mat *</type>
      <name>jacobian</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>a4e636cf9ebd25895af31c105b6da0f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Mat *</type>
      <name>prec</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>abc50d2cfd185cc17e79fb1536e7a2f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Group *</type>
      <name>owner</name>
      <anchorfile>classNOX_1_1Petsc_1_1SharedJacobian.html</anchorfile>
      <anchor>a314a8f0bc97497093e114635e62a52c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::SharedObject</name>
    <filename>classNOX_1_1SharedObject.html</filename>
    <templarg>Object</templarg>
    <templarg>Owner</templarg>
    <member kind="function">
      <type></type>
      <name>SharedObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a9bb46b6e3a151c42a6ce97281a7eca77</anchor>
      <arglist>(const Teuchos::RCP&lt; Object &gt; &amp;newObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SharedObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a4a641439394111445794957c2fa9a084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Object &gt;</type>
      <name>getObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a08fd9d7747a57b681e5e79a8ae54cfa3</anchor>
      <arglist>(const Owner *newOwner)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Object &gt;</type>
      <name>getObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a06f374953e97c3e6ebfdbe3c54b685c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOwner</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a2496671f86ee92d190c801efd3bca796</anchor>
      <arglist>(const Owner *checkOwner) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Object &gt;</type>
      <name>object</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a30d0d6348d1a6da971a4f4369c74e941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Owner *</type>
      <name>owner</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>abe57ec410bf05efaedfecbecccf9cc6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SharedObject&lt; NOX::Epetra::NOX::Epetra::LinearSystem, NOX::Epetra::NOX::Epetra::Group &gt;</name>
    <filename>classNOX_1_1SharedObject.html</filename>
    <member kind="function">
      <type></type>
      <name>SharedObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a9bb46b6e3a151c42a6ce97281a7eca77</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Epetra::NOX::Epetra::LinearSystem &gt; &amp;newObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SharedObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a4a641439394111445794957c2fa9a084</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Epetra::NOX::Epetra::LinearSystem &gt;</type>
      <name>getObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a08fd9d7747a57b681e5e79a8ae54cfa3</anchor>
      <arglist>(const NOX::Epetra::NOX::Epetra::Group *newOwner)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Epetra::NOX::Epetra::LinearSystem &gt;</type>
      <name>getObject</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a06f374953e97c3e6ebfdbe3c54b685c7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOwner</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a2496671f86ee92d190c801efd3bca796</anchor>
      <arglist>(const NOX::Epetra::NOX::Epetra::Group *checkOwner) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::NOX::Epetra::LinearSystem &gt;</type>
      <name>object</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>a30d0d6348d1a6da971a4f4369c74e941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const NOX::Epetra::NOX::Epetra::Group *</type>
      <name>owner</name>
      <anchorfile>classNOX_1_1SharedObject.html</anchorfile>
      <anchor>abe57ec410bf05efaedfecbecccf9cc6f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::ShiftInvert</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</filename>
    <base>LOCA::AnasaziOperator::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>ShiftInvert</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a6d80350132e00dadc3129714557a3070</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShiftInvert</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a655259d7b58fa2fecfa7f81255981fb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a219d0db296d153d574976651d4814f37</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>ab4c80645af25ef4b62665f3b52110181</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a68e01dda3e3588e2b6aff06e38efa832</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a7e0144370f1ffc57791f9c70c05338b7</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a4374a0da53237c2890d9e70d12b23f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLabel</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a0f295975d45dc0f84054a1f71132a06b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a1ca83f48d3fd04ae55c505db7ce232d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a419714d65f9567ff02cc7b38e574d8c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>ab3a77dea10e2891d8e2e12a395a24d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_r</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>ab469b3234d37fbbfed3d6f78745cc582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_i</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>afee3773fd62fdf6add6cb86929369559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>shift</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert.html</anchorfile>
      <anchor>a68dafb79f3544fe3a4d5c573f7980f3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::AnasaziOperator::ShiftInvert2Matrix</name>
    <filename>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</filename>
    <base>LOCA::AnasaziOperator::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>ShiftInvert2Matrix</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a9b17d5a223e2dd656e7771d68bc941c4</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShiftInvert2Matrix</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a763132c8c44ee538ddaa205c72dbd0f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>label</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a27dea054ee42b8d3f6994ab12f6888f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>apply</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a914e3ce821e407bae8edf55f200f44a6</anchor>
      <arglist>(const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginPostProcessing</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a0eff9adc7d1f3e276c313a1dc163990b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformEigenvalue</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a5bfd184a1ad729af100e461dcb674386</anchor>
      <arglist>(double &amp;ev_r, double &amp;ev_i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>rayleighQuotient</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a1012dbab3464d59649ba474f6bbedf86</anchor>
      <arglist>(NOX::Abstract::Vector &amp;evec_r, NOX::Abstract::Vector &amp;evec_i, double &amp;rq_r, double &amp;rq_i) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>acdba4ee548c34b76a00fff525f7cb288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>myLabel</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>ae001c5068fb8572274386b261cc38a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>eigenParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a9612ad194f39efb7f6349584c319121b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>solverParams</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>aae320d624c7e2a049fc5951fc2af48b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::TimeDependent::AbstractGroup &gt;</type>
      <name>grp</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>ab2fb888e221a5e558ddf12b92003344e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_r</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a30a946fc01553eb5e68e7eae25f21e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>tmp_i</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>a08ec455a5eead6b8efc7890c3f4d80ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>shift</name>
      <anchorfile>classLOCA_1_1AnasaziOperator_1_1ShiftInvert2Matrix.html</anchorfile>
      <anchor>adafc6330f1640f3b703d9837f3fd608d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::ShiftInvertInterface</name>
    <filename>classLOCA_1_1Epetra_1_1ShiftInvertInterface.html</filename>
    <base>NOX::Epetra::Interface::Jacobian</base>
    <member kind="function">
      <type></type>
      <name>ShiftInvertInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertInterface.html</anchorfile>
      <anchor>a97c7b375a4289514abe3701f6da3e93a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShiftInvertInterface</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertInterface.html</anchorfile>
      <anchor>affc27744bc5fe8a43ec7d8e2fda1ebb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertInterface.html</anchorfile>
      <anchor>af5f9d81b9fa51c0838fc428cb5fbc3c5</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Jac)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::ShiftInvertOperator</name>
    <filename>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</filename>
    <base>Epetra_Operator</base>
    <member kind="function">
      <type></type>
      <name>ShiftInvertOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>ac0b04e2eca46418dcecbbe7887ffa19b</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::Epetra::Group &gt; &amp;grp, const Teuchos::RCP&lt; const Epetra_Operator &gt; &amp;jac, double shift)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShiftInvertOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>aa0b5b098c4d04d0b9eb7fdce0fe80f52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a32f900238528c97ebc5b8f5f888dee20</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a04d6182cc4f5277c356ef825391468d6</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a8ef678d12febd5430a96a92659968ef8</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a689e21525bf32b16447e330e2e2faf0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>ae155d62612e4d5ff03784a3ef71d0798</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>aeb875cef1d647e4a462eb18311ffc1b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a81a6c3c7623d3726c738d373224e0c83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a4480a62dc89bfd4b6d52e049af7575ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a9033d7454c48ca35327ecc3ac8e02c72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>abb968dd5a5d385e3f9dd27b8cec09538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a3027032a994827c7c71df61e314208b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const LOCA::Epetra::Group &gt;</type>
      <name>locagrp</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a7b292d428f6fd26eb6c10269915886e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>jacOper</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a1f39cbbfb2f2129457b5bb2227ab1036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>shift_</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a6e3fecc40289e5a569d492a1adc080f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const char *</type>
      <name>Label_</name>
      <anchorfile>classLOCA_1_1Epetra_1_1ShiftInvertOperator.html</anchorfile>
      <anchor>a519796bd710ec67744d84a604cc88a21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Bifurcation::PitchforkBord::StatusTest::SlackUpdateNorm</name>
    <filename>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>SlackUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>ad665023d9c4c9fbc30a55a7ab3737748</anchor>
      <arglist>(double rtol, double atol, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SlackUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a43e2de7e16cb99a3d62876c422b9200b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>ab859531aece99937c711ba4175f7812b</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>ad49393ccd8d5009e8c87352287492227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>ad40ea81145d512609b3cc83e0c476c79</anchor>
      <arglist>(ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSlackUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a1792a6a026b9c132475815dd21f99096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a578bc4b1b58818018459acb58a1dbb17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>acca5a8d7812f4bcbf957f00fdcffe5ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a3d93052d5872a3408c5a86ad85cfe0ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a7eddc65d7ab215b988d7831318e50f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>atol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a0f9b17afb1e66d14b4b5048e9a624447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tol</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a794c5678c5cab5913fb301e40cad23c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>slackUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a392fc2c9f9c6e5750cf03203d7920821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>ace685d1d98a2c9680c616370e1c84eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getSlackUpdateNorm</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a1792a6a026b9c132475815dd21f99096</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a578bc4b1b58818018459acb58a1dbb17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getATOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>acca5a8d7812f4bcbf957f00fdcffe5ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTOL</name>
      <anchorfile>classLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest_1_1SlackUpdateNorm.html</anchorfile>
      <anchor>a3d93052d5872a3408c5a86ad85cfe0ca</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::Utils::Slope</name>
    <filename>classNOX_1_1LineSearch_1_1Utils_1_1Slope.html</filename>
    <member kind="function">
      <type></type>
      <name>Slope</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Slope.html</anchorfile>
      <anchor>aae66c688add67b953e0223c00bbad8b8</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Slope</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Slope.html</anchorfile>
      <anchor>a0eba81e2c6d3d920a1dab502023d9d50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Slope.html</anchorfile>
      <anchor>a31d75f495d75584ed07837e73b02abda</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeSlope</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Slope.html</anchorfile>
      <anchor>ac954136a131f45b0d6b9913bdd652825</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;grp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeSlopeWithOutJac</name>
      <anchorfile>classNOX_1_1LineSearch_1_1Utils_1_1Slope.html</anchorfile>
      <anchor>a0206ce56c279c53c4519812fa130a554</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;grp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::SmallestImaginary</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1SmallestImaginary.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>SmallestImaginary</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestImaginary.html</anchorfile>
      <anchor>a8505cb0fae69f0e466ea3669378fb320</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SmallestImaginary</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestImaginary.html</anchorfile>
      <anchor>a3ddfcc03a5a5e77aea05bd42e3347469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestImaginary.html</anchorfile>
      <anchor>a99b1c45f58a936c6e9732132e49ea778</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestImaginary.html</anchorfile>
      <anchor>afb847688f87705f77cf58b569b151c7d</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::SmallestMagnitude</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1SmallestMagnitude.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>SmallestMagnitude</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestMagnitude.html</anchorfile>
      <anchor>a72a50585b521b16d457de8435370a749</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SmallestMagnitude</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestMagnitude.html</anchorfile>
      <anchor>a7050b443107869058458090855d6dec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestMagnitude.html</anchorfile>
      <anchor>a650eb2e7c1f159704344ed01ccf2178b</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestMagnitude.html</anchorfile>
      <anchor>a6bfe55e647c8b9fe76f878ef5fb03af8</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::EigenvalueSort::SmallestReal</name>
    <filename>classLOCA_1_1EigenvalueSort_1_1SmallestReal.html</filename>
    <base>LOCA::EigenvalueSort::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>SmallestReal</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestReal.html</anchorfile>
      <anchor>ab59e4d08fa4d96a66490b087395705d9</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;eigenParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SmallestReal</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestReal.html</anchorfile>
      <anchor>a61fb048f36daecf7ebaedf6774de5f73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestReal.html</anchorfile>
      <anchor>aaef0dd5725ad46e261a2b362c8f2a0d5</anchor>
      <arglist>(int n, double *evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>sort</name>
      <anchorfile>classLOCA_1_1EigenvalueSort_1_1SmallestReal.html</anchorfile>
      <anchor>a1c1de1a015c6d97355601cfdc6676d7e</anchor>
      <arglist>(int n, double *r_evals, double *i_evals, std::vector&lt; int &gt; *perm=NULL) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::SolverFactory</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>SolverFactory</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>adee37411132b329d66d9d8cd594d4178</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverFactory</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a5957e2bf30fcf6eadb003e7f4c551961</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::SolverStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>ae304757deff05b02ec13ea6291157bfd</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a445e0253501937fa1508d9dbbc9feb08</anchor>
      <arglist>(Teuchos::ParameterList &amp;solverParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>af72db6e3ced1afadc49de36a13197bd8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::SolverFactory</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>SolverFactory</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a95019fa2a15bcdd0db871d8f9e9dd450</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverFactory</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a766d95620a38ff2aa8740e19696a5aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::SolverStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a533ad15114b8c7eefad74da761131bdb</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>ac16683147dd0ef460a469f70b9698689</anchor>
      <arglist>(Teuchos::ParameterList &amp;solverParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>ac9fb92ae52e44f27bdb9eff2aaea0b91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::SolverFactory</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>SolverFactory</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a0ead7a13ff661aaa5ae2b2b590f46b0a</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverFactory</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>ad9dac4d8c695c233e5e2d68ac154d324</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::SolverStrategy &gt;</type>
      <name>create</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>ad8edc55234fa07da283b52aff91c76c3</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt; &amp;topParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>strategyName</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a819ee6c648f4bf7dc9eb709aba499932</anchor>
      <arglist>(Teuchos::ParameterList &amp;solverParams) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverFactory.html</anchorfile>
      <anchor>a75480eb21b78a09f2ae84289e3c6d765</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Pitchfork::MooreSpence::SolverStrategy</name>
    <filename>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>SolverStrategy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a9f7cb494ba948465cf7db3dc59df72c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverStrategy</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a9338205783c457fb167872b6192c889b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>ad36f5f665b883f934ac5bd8e97b20e35</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::Pitchfork::MooreSpence::ExtendedGroup &gt; &amp;pfGroup, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;asymMultiVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;nullVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;JnVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dJndp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1Pitchfork_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a9926314463078c1f5d0bb52167cc0aec</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &amp;input, LOCA::Pitchfork::MooreSpence::ExtendedMultiVector &amp;result) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Hopf::MooreSpence::SolverStrategy</name>
    <filename>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>SolverStrategy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>ac6cd09efe53cd021092e59162d0851d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverStrategy</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a8a8c0fec5b33a78d6142abb3715f1a6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a44264561a5064468e37a115534b6cea6</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::Hopf::MooreSpence::ExtendedGroup &gt; &amp;hopfGroup, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;yVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;zVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;CeRealVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;CeImagVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dCedpReal, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;dCedpImag, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;ByVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;mBzVector, double w)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1Hopf_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a05cc1a37b268113427e5232fa81ecc42</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::Hopf::MooreSpence::ExtendedMultiVector &amp;input, LOCA::Hopf::MooreSpence::ExtendedMultiVector &amp;result) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::TurningPoint::MooreSpence::SolverStrategy</name>
    <filename>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>SolverStrategy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>aebcc666657a40be1350164b5c7f28707</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverStrategy</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>ae2eaf02f22a4ad11bc3480704d930d26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBlocks</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a18a801674a9978a10a0f7981d04963f9</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::AbstractGroup &gt; &amp;group, const Teuchos::RCP&lt; LOCA::TurningPoint::MooreSpence::ExtendedGroup &gt; &amp;tpGroup, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;nullVector, const Teuchos::RCP&lt; const NOX::Abstract::Vector &gt; &amp;JnVector, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dfdp, const Teuchos::RCP&lt; const NOX::Abstract::MultiVector &gt; &amp;dJndp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>a3e6bd6956ae72dd9a77dc7bed3f25c1e</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;input, LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1TurningPoint_1_1MooreSpence_1_1SolverStrategy.html</anchorfile>
      <anchor>ad298209831f7fc164dc1f895fab5930d</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;input, LOCA::TurningPoint::MooreSpence::ExtendedMultiVector &amp;result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::StatusTest::Stagnation</name>
    <filename>classNOX_1_1StatusTest_1_1Stagnation.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>Stagnation</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a5d73dcd6b2796fcab9b15036ed32bae9</anchor>
      <arglist>(int n=50, double tol=1.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Stagnation</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>ad9b027d12725a9aea173ac2309ba22a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a83580d781ac8fd4417501082d39a37e6</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a56d4a2cf76844017dd87e1b54bc1c726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a79e35b297240e786f667c528d2d7ad64</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getMaxNumSteps</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>ab6079d18cb5ffdd8182d3a44a5e2436c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getCurrentNumSteps</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a41b61c94346f4fb5e90cfa3d8e7b3c52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getTolerance</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a3254467dc9bea676ea99d0bb1f5ae4d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getConvRate</name>
      <anchorfile>classNOX_1_1StatusTest_1_1Stagnation.html</anchorfile>
      <anchor>a0848e3a4571711b9eef28dd7ecfbc48e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Parameter::StandardEntry</name>
    <filename>classLOCA_1_1Parameter_1_1StandardEntry.html</filename>
    <templarg>FunctorType</templarg>
    <templarg>ValueType</templarg>
    <base>LOCA::Parameter::Entry</base>
    <member kind="function">
      <type></type>
      <name>StandardEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>ab9d8e8f3f47b7e56ebee3f445fb95aa2</anchor>
      <arglist>(FunctorType *fctr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardEntry</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>a7483f885f0528e58cc6526c1e9c9fc01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setValue</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>af71f5adb80c238d180e531a37d90bf00</anchor>
      <arglist>(const ValueType &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ValueType</type>
      <name>getValue</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>a19a6597da100907f672b495fb036a644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setIsInLibrary</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>afec54651c55aacb61ae35ecd29526952</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>deleteFctr</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>aa7addf8cdf937bbe7a7b21d56419fe7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FunctorType *</type>
      <name>func</name>
      <anchorfile>classLOCA_1_1Parameter_1_1StandardEntry.html</anchorfile>
      <anchor>a94a27bb61ab9328ca661f38eadbd5a3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::SteepestDescent</name>
    <filename>classNOX_1_1Direction_1_1SteepestDescent.html</filename>
    <base>NOX::Direction::Generic</base>
    <member kind="enumeration">
      <type></type>
      <name>ScalingType</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TwoNorm</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583a722f2f063f8c9600a810e45436c8e577</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QuadMin</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583ad8ac5f7b30ad49d14dee36f0406eb04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FunctionTwoNorm</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583a5bfbf8544217713d24df24b5d40f5466</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583a81ed32c8f23798d52432868011878843</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TwoNorm</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583a722f2f063f8c9600a810e45436c8e577</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>QuadMin</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583ad8ac5f7b30ad49d14dee36f0406eb04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FunctionTwoNorm</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583a5bfbf8544217713d24df24b5d40f5466</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4b2e53fe7769478bb6726469b3d0c583a81ed32c8f23798d52432868011878843</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SteepestDescent</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a643f9e873cd3761bd6038b613b3579a2</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SteepestDescent</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a4fedb545d802bd77dda79384a1de8612</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a177898622c10fe032c1a5b0b3eb3ee39</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>a42764f9b59e0bae17d17f335efbdd2e6</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>compute</name>
      <anchorfile>classNOX_1_1Direction_1_1SteepestDescent.html</anchorfile>
      <anchor>ad92c07a30fa8aa797b9eff09ae6dd1bc</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, NOX::Abstract::Group &amp;grp, const NOX::Solver::LineSearchBased &amp;solver)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Stepper</name>
    <filename>classLOCA_1_1Stepper.html</filename>
    <base>LOCA::Abstract::Iterator</base>
    <member kind="function">
      <type></type>
      <name>Stepper</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a7bd208f3c175f45be26645b65293c1c6</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;initialGuess, const Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt; &amp;lt, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;nt, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Stepper</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a4b46c42962a5da7f2fcc80fc7a4438dd</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;nt, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Stepper</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aa79cfcf6c814ddad5183a461cac9942f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a49a700e85a06c5965d1dac0b0810283c</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;initialGuess, const Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt; &amp;lt, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;nt, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a22008acf7aa06cfb150c40024e25045e</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;nt, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>eigensolverReset</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a087288d098e1f3c52e4e516ac515ee2b</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;newEigensolverList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a986891d38803e1d98a589633ea1ab365</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>getBifurcationGroup</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ad474d82fd0ed684908c0978824378c25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getList</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a05b8978c185b79bf605a0303ac1f12ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Solver::Generic &gt;</type>
      <name>getSolver</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ae25917d30d6720689ba7bae50154bb57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getContinuationParameter</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a5dcf4573ebaa91b7250e67b19bd9c4ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>start</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aad22af8db9844d05df6a897902dcf761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>finish</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>af1220e4f8c4a01ea2fe234032d01d563</anchor>
      <arglist>(LOCA::Abstract::Iterator::IteratorStatus iteratorStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>preprocess</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a7d4d8ae76c3137748ffca4405caa001e</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ab55ff5099e06d0e178b446a133a083d7</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::StepStatus</type>
      <name>postprocess</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ac689e53b6a6c698d9665f5eb477f07bc</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>stop</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aa1cb5ba2498538776e6d3bbc827faa04</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>stopLocaStatus</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a9a8b45e8a85ed99e8667c3e8f2c0fd05</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::IteratorStatus</type>
      <name>stopDeprecated</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a4db5926f30be2a5a2fc1e12a99cfdbe3</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>buildConstrainedGroup</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a618aa4c61a07bcc3d0f2158b8ef31931</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt; &amp;grp)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LOCA::Abstract::Iterator::StepStatus</type>
      <name>computeStepSize</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a1b2a13222b57d89932426f26d574ca71</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus, double &amp;stepSize)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printInitializationInfo</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a96d04658739977c883f1baf20b9b8118</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printStartStep</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a359e2fc6937949421b9e1160d359162b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printEndStep</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a7cb3273ecdf79e1cc495c7b8c4e217db</anchor>
      <arglist>(LOCA::Abstract::Iterator::StepStatus stepStatus)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printEndInfo</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a1132f864e6de1b32459745fe571d4e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>withinThreshold</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a973e5279d95021b6753200af7cfd3525</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aca485d2b4d6720436eb56cce36085011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Parameter::SublistParser &gt;</type>
      <name>parsedParams</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a049b5542f0dff42256263db633c64db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>predictor</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a8ffadea61b02d5b7eed5897617a2eb1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>curGroupPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ab1026809a7f1cdfd4d4fe386824b8c18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractStrategy &gt;</type>
      <name>prevGroupPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aba42e690e3e291888996819434e53397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::Eigensolver::AbstractStrategy &gt;</type>
      <name>eigensolver</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ad2fd540cada70936fd377d98f4874b46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::SaveEigenData::AbstractStrategy &gt;</type>
      <name>saveEigenData</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>adf8a7bdd1636b50332da6ee8f4c6592f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::AbstractGroup &gt;</type>
      <name>bifGroupPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a52393d55c46076363df46bfac3faace0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>noxStatusTestPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>acb8241e22e3df7dde645ab255e607a1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::StatusTest::Abstract &gt;</type>
      <name>locaStatusTestPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a4281dba76bf91c8f6d64b567be36bd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramListPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a0bb4c4224f9cf57b96d09a8507785ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>stepperList</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a9cdf30c35c56d45b2aa8ec1ede40c1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>solverPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>afc2da2c8025df85471f7dc59533fc7eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>curPredictorPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>af4b6e4f8bf00dc60b991206592eb82e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>prevPredictorPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a4b086b79ac669bbc8c2cc532641569e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::StepSize::AbstractStrategy &gt;</type>
      <name>stepSizeStrategyPtr</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ad4f72b8ed485eaf77ba11f747a9da1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>conParamName</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aaea7d59f1254b8fbb318d314696c1291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>conParamIDs</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ae7de4e904609919edbec11dc14c856a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>startValue</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a0852e36756d86d27fd4eeca6b62df06b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxValue</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a870d5e901e4262367635179be0a268cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minValue</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>aeb930a65b885715d23b72f2218b55e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a9eddf4c55a70ae2908aeb90289b92e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxNonlinearSteps</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ac767b7043fe5cf94b631aff15f4721c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>targetValue</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ad86dfbb2fff64d0543f1feb2714ec97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isTargetStep</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a86257394ce24ed1ceb74cf40be7cb4bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doTangentFactorScaling</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ae0a856b3e69650de9f7b3363c865bac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tangentFactor</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>a1c01bba06ee5c6bc93021ca530558b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minTangentFactor</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ad95363232fdf6026d11bee1515ed5270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>tangentFactorExponent</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>abb8aca2fb2b9241048c5fc38bf5e2326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>calcEigenvalues</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ab24e0c1f8e10608e1752f03049331548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>return_failed_on_max_steps</name>
      <anchorfile>classLOCA_1_1Stepper.html</anchorfile>
      <anchor>ac9c17e87114be71e9260c6aa151f7a36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Parameter::SublistParser</name>
    <filename>classLOCA_1_1Parameter_1_1SublistParser.html</filename>
    <member kind="function">
      <type></type>
      <name>SublistParser</name>
      <anchorfile>classLOCA_1_1Parameter_1_1SublistParser.html</anchorfile>
      <anchor>aa91e03aa13bc146e11b3697575b5f4ca</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SublistParser</name>
      <anchorfile>classLOCA_1_1Parameter_1_1SublistParser.html</anchorfile>
      <anchor>a3eb046ff409a9e534637f360ac9191cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parseSublists</name>
      <anchorfile>classLOCA_1_1Parameter_1_1SublistParser.html</anchorfile>
      <anchor>ae07f8da98a1c3af2735a748705517495</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;topLevelParams)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getSublist</name>
      <anchorfile>classLOCA_1_1Parameter_1_1SublistParser.html</anchorfile>
      <anchor>a2b9c71552eada6d2f58f9a88c703a4ae</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Parameter_1_1SublistParser.html</anchorfile>
      <anchor>a0c744994d3e545b0f34afa80cf6d6c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SublistMap</type>
      <name>sublistMap</name>
      <anchorfile>classLOCA_1_1Parameter_1_1SublistParser.html</anchorfile>
      <anchor>a6d8bfaf5ba81eb386b1811fd369be9cb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::MeritFunction::SumOfSquares</name>
    <filename>classNOX_1_1MeritFunction_1_1SumOfSquares.html</filename>
    <base virtualness="virtual">NOX::MeritFunction::Generic</base>
    <member kind="function">
      <type></type>
      <name>SumOfSquares</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>a452dd51228785bd551f2d0b9d588f899</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Utils &gt; &amp;u)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SumOfSquares</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>a2e27de513c09a642e3d699a75b41d5b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computef</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>a9ac6d00e17e2a8083dc800740afaa97a</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>ab5359ee634b5f9f5181dc47d1402ebb2</anchor>
      <arglist>(const NOX::Abstract::Group &amp;group, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeSlope</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>abd2284ff616617d1e5607149671dbe90</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;grp) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeQuadraticModel</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>a8ca50dd0682fa094b02e0a69170ad841</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;grp) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeQuadraticMinimizer</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>a405c3cdf3a304a05ec39770e574e928a</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classNOX_1_1MeritFunction_1_1SumOfSquares.html</anchorfile>
      <anchor>ad5fbdcda7e6518181388e01fbb1754e5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>swig_const_info</name>
    <filename>structswig__const__info.html</filename>
  </compound>
  <compound kind="struct">
    <name>swig_globalvar</name>
    <filename>structswig__globalvar.html</filename>
  </compound>
  <compound kind="struct">
    <name>swig_type_info</name>
    <filename>structswig__type__info.html</filename>
  </compound>
  <compound kind="struct">
    <name>swig_varlinkobject</name>
    <filename>structswig__varlinkobject.html</filename>
  </compound>
  <compound kind="class">
    <name>LOCA::MultiPredictor::Tangent</name>
    <filename>classLOCA_1_1MultiPredictor_1_1Tangent.html</filename>
    <base>LOCA::MultiPredictor::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>Tangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a34c61d6d012f5119f1fddaf772f13463</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;predParams, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Tangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a9edc4ebea7e44e869790705954f7f13b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>afbf98ad4ffa5ea64c044e8ad9521a638</anchor>
      <arglist>(const Tangent &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LOCA::MultiPredictor::AbstractStrategy &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a083c81c1c829388f3a680bfba34a6694</anchor>
      <arglist>(const LOCA::MultiPredictor::AbstractStrategy &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::MultiPredictor::AbstractStrategy &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>af46595c00f3f79092c1d9e5462b9e905</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>compute</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>abba1c5246261b6cae0784bc9252acea2</anchor>
      <arglist>(bool baseOnSecant, const std::vector&lt; double &gt; &amp;stepSize, LOCA::MultiContinuation::ExtendedGroup &amp;grp, const LOCA::MultiContinuation::ExtendedVector &amp;prevXVec, const LOCA::MultiContinuation::ExtendedVector &amp;xVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>evaluate</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>afb31bfc275888f7879fb9f0e1c3faf97</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;stepSize, const LOCA::MultiContinuation::ExtendedVector &amp;xVec, LOCA::MultiContinuation::ExtendedMultiVector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>computeTangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a7b41aa19e42e232668f25c029c877417</anchor>
      <arglist>(LOCA::MultiContinuation::ExtendedMultiVector &amp;tangent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isTangentScalable</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a06a05ec18d178ac196dd1931becf9286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>adc694c9f70901d6109edd3fe5e1023bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>linSolverParams</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a52aa61a36b52a2645cb339df21c1c222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>fdfdp</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a2a8baf834fcde4ba3052024acbd4d007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedMultiVector &gt;</type>
      <name>tangent</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>adbeaf84693455798bbb6f6709efafbe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::MultiContinuation::ExtendedVector &gt;</type>
      <name>secant</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a5f242d1c844c6c60f1ff69312fa845b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>initialized</name>
      <anchorfile>classLOCA_1_1MultiPredictor_1_1Tangent.html</anchorfile>
      <anchor>a3d1182950662c4f6094f9b447fb5f3a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::TensorBased</name>
    <filename>classNOX_1_1Solver_1_1TensorBased.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>TensorBased</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a93d6f1bcb33a864bc8ed8b5d8d080149</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TensorBased</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ae0ac379c775348fc904fabeae8014427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a2621923422a202726775db85ec1db099</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a10f12ba868d57e95ae7243e8dad497a8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a1af2b0c4cd102ff208a45d14b1c666b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a3b16bac1e5e29484a45467d7a7d43db0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ad26fcc610951e8f7b02a0bb0cddba04b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ac264f76ff205394fa05497d4af1a510a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a44fadde47bce225a5468e7c9b8587873</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a7e8561f260d522c05c016e08e17668ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a780590b64e434796b0eea55569dd36ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a25ebad164b7d4f3f116764242117af7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a284eb88777a704cabb149f8acfa6cd75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a4a6b3d43d0633d665e43329b225d072d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>StepType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a4b864006847ca6def9258efc5a2ea869</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>LineSearchType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a617a8d7c7626151ce27cd999789737e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>ConvergenceCriteriaType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ArmijoGoldstein</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4eab5caadbf8ee3441dc083fde626dad97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>AredPred</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4ea72dea816b1efac958291f8dc51f4150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>None</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4ea33baf171fb232c97f1dba90d54c599b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>LambdaSelectionType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a13fb315f5b89b509472bec44da8d74c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>RecoveryStepType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a685b806a955375816a437fe5d4c862e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Constant</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a685b806a955375816a437fe5d4c862e6a3f2f892e0f8b9956f1b2a4ea3b1708d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>LastComputedStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a685b806a955375816a437fe5d4c862e6add4ae3df27eab8fe137fe7448ea1e1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>ArmijoGoldstein</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4eab5caadbf8ee3441dc083fde626dad97d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>AredPred</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4ea72dea816b1efac958291f8dc51f4150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>None</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a519d4177b6796550477b0ed8479cae4ea33baf171fb232c97f1dba90d54c599b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Constant</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a685b806a955375816a437fe5d4c862e6a3f2f892e0f8b9956f1b2a4ea3b1708d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>LastComputedStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a685b806a955375816a437fe5d4c862e6add4ae3df27eab8fe137fe7448ea1e1e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a21fb7cb25d27668bc564a88a0329e9fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printUpdate</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>af7a83590ec46ce3885fcce488e78772a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a91b8fed68cf8d89558db447a7555b97b</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>computeTensorDirection</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a5e4d1d17cdebc62b939dae07e56b7291</anchor>
      <arglist>(NOX::Abstract::Group &amp;soln, const NOX::Solver::Generic &amp;solver)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>calculateBeta</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>afa9999152378d754781cf839ad2cd474</anchor>
      <arglist>(double qa, double qb, double qc, double &amp;qval, double &amp;lambdaBar, double lambda=1.0) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>computeCurvilinearStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a59e00c3040336e33ce03f50386112c2a</anchor>
      <arglist>(NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;soln, const NOX::Solver::Generic &amp;s, double &amp;lambda)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>implementGlobalStrategy</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>af8f52d5546723254c2e425c5522af77f</anchor>
      <arglist>(NOX::Abstract::Group &amp;newGrp, double &amp;step, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>performLinesearch</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a129c5760122ca9b7537a6392f575edbe</anchor>
      <arglist>(NOX::Abstract::Group &amp;newsoln, double &amp;step, const NOX::Abstract::Vector &amp;lsDir, const NOX::Solver::Generic &amp;s)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getNormModelResidual</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a63a73918d036a229028dda48490d0405</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;soln, bool isTensorModel) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printDirectionInfo</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a3da87e1be70d5e772f6825e1cd5c81c3</anchor>
      <arglist>(std::string dirName, const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;soln, bool isTensorModel) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getDirectionalDerivative</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>aab897569a9796496c7e9703ea900eda6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;soln) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>selectLambda</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a433e962a4565c2f0c0e2b9b0a1c348a4</anchor>
      <arglist>(double newf, double oldf, double oldfprime, double lambda)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>throwError</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a77aecc1a095ecbbcc66338ed235de4e2</anchor>
      <arglist>(const std::string &amp;functionName, const std::string &amp;errorMsg) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a8490d9e34a6353f85db4456414f4a167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utilsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a713740e15a82ae792bc630c44b159578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a89974fa89ba141486c150224ef9fd40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>oldSolnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ab7379e96a61ec825f03df64c4f45df5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>newtonVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a6a2fb371697eda82a4de42e2a7838e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>tensorVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a510dd92031d455b09c2b417770aebe33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>aVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>aecca726ea0c027132eabdb81c64b28a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>sVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>af6caedc0ee1f4b3ed62043049bcec469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>tmpVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ae315e93a1dd095b150eaeff3aeb232f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>residualVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a5fccd21c629ddf8f28a591d7fa374681</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a5e657876719e3c4870b72c577c4c5b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ad3bfb30d6d77eea8f9a4d900c44174b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a4bf3b53f6676bfc698dd29e092cb5755</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList *</type>
      <name>linearParamsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a89ff70640bd12f480b5d00c5b8115d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>stepSize</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a6467e091e22684c0a402bedfef332961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>beta</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a254f375c3ac4bdac080493f727cff8f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a041480b014de601ebaf996ae6db0f801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a76d41f8d88e05fd3d039e5d21146edb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepType</type>
      <name>requestedBaseStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a744f0355df8d93a681f052bd62448d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LineSearchType</type>
      <name>lsType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ae639b7e28e96cf04131bb6b2f30dbc61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConvergenceCriteriaType</type>
      <name>convCriteria</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>adf686351043eb7be623819682a08c7da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LambdaSelectionType</type>
      <name>lambdaSelection</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a4b5dbc8dfd300afc61567c318cf28073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RecoveryStepType</type>
      <name>recoveryStepType</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ac2db6310aabfad79d412c0855bd4142d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useModifiedMethod</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a7effe59ce57ee4d4a902ba5c372161ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isNewtonDirection</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a165f299a644e9d240637e8c3b49e32ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doRescue</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a1d3504b288aeb0266d4abdafcd9a0afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a33f87aab4def8e49337efc33b9ebb95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>defaultStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ae7d6887b539c0a18fd4222d653c815b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>recoveryStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a34690428c253b4f95d70a2a54090084d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxIters</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>adf06f6a80ec7968ab1efd07c6dca9b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a8ea56f7270ac15b5924823ed065885e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sTinvJF</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a46a181a11d010da30825077952c1d28a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sTinvJa</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a0c3789c6935c3996504ec5161fc93a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LineSearch::Utils::Printing</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a850ab5de50ea2bf38bb8e24bfaad1f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LineSearch::Utils::Counters</type>
      <name>counter</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a8d0bc560e882c24d4a85eb0f82568641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::LineSearch::Utils::Slope</type>
      <name>slopeObj</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>acdd3c9eb633e17382415ad4564bf4dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numJvMults</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a02c7bad30a01395e3a659a863cbc08ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numJ2vMults</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>a711fd0f7ac748d8411ccecd52a2651f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1TensorBased.html</anchorfile>
      <anchor>ae7fb7e25e11a18001255ceeb068d55b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Interface::TimeDependent</name>
    <filename>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependent.html</filename>
    <base virtualness="virtual">LOCA::Epetra::Interface::Required</base>
    <member kind="function">
      <type></type>
      <name>TimeDependent</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependent.html</anchorfile>
      <anchor>aefca95a4ce028a9c87bca367ac918008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeDependent</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependent.html</anchorfile>
      <anchor>a425e5647b2bc9f33ec248f75309259a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>computeShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependent.html</anchorfile>
      <anchor>a18148097f8d62f5207ae6a0f7b2cbc43</anchor>
      <arglist>(double alpha, double beta, const Epetra_Vector &amp;x, Epetra_Operator &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setXdot</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependent.html</anchorfile>
      <anchor>a6788ef08564ff268b3c14f685c9e57eb</anchor>
      <arglist>(const Epetra_Vector &amp;xdot, const double time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::Interface::TimeDependentMatrixFree</name>
    <filename>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependentMatrixFree.html</filename>
    <base virtualness="virtual">LOCA::Epetra::Interface::Required</base>
    <member kind="function">
      <type></type>
      <name>TimeDependentMatrixFree</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependentMatrixFree.html</anchorfile>
      <anchor>a482c3406a615776f0091774906dd3021</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeDependentMatrixFree</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependentMatrixFree.html</anchorfile>
      <anchor>aaf98fc5bd467959db042a41a6260469a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyShiftedMatrix</name>
      <anchorfile>classLOCA_1_1Epetra_1_1Interface_1_1TimeDependentMatrixFree.html</anchorfile>
      <anchor>aec346b93f216d05613cf1f754d6851d0</anchor>
      <arglist>(double alpha, double beta, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RTOpPack::TOpEleWiseMinSwap</name>
    <filename>classRTOpPack_1_1TOpEleWiseMinSwap.html</filename>
    <templarg>Scalar</templarg>
    <member kind="function">
      <type></type>
      <name>TOpEleWiseMinSwap</name>
      <anchorfile>classRTOpPack_1_1TOpEleWiseMinSwap.html</anchorfile>
      <anchor>a642c7b14230cdba07bc183297f0af6e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RTOpPack::TOpEleWiseMinSwapEleWiseTransformation</name>
    <filename>classRTOpPack_1_1TOpEleWiseMinSwapEleWiseTransformation.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Thyra::TransAdaptiveState</name>
    <filename>classThyra_1_1TransAdaptiveState.html</filename>
    <base>Thyra::AdaptiveStateBase</base>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::TransposeLinearSystem::TransposePreconditioner</name>
    <filename>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</filename>
    <base virtualness="virtual">LOCA::Epetra::TransposeLinearSystem::AbstractStrategy</base>
    <member kind="function">
      <type></type>
      <name>TransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a9a983c5a45d9175a2a617e34bf174223</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;solverParams, const Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt; &amp;linsys)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a033cf60fdb9995c6d65fbe0d27103009</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a2809afdca4aa085a05042733bb1aa529</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Epetra::Vector &amp;input, NOX::Epetra::Vector &amp;result)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createJacobianTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>aaee12f77ff3a84d28fb8960313345fe8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>createTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a39b13a907e1abd1f829f27bc14031f39</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;x, Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a49f0621b52c178ab4d68223f87caa40e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a3b6aa5e9d22f5598689110c07309a32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setJacobianTransposeOperator</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a9f6e7b9ae98a10b69c71c190a15dc1c1</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_jac_trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransposePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a592e2a69af66b78cbd6e0b9b3042680d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;new_prec_trans)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a9f0a9430e6f396913498f0e92b113dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::LinearSystem &gt;</type>
      <name>linsys</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>aa7d0f8135bf0013201af5be794c7a55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>jac</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a4a8b2cc593d53073e878728291990af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>prec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>a971316d0a7bcd04b1d4149ee5efd0ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Scaling &gt;</type>
      <name>scaling_trans</name>
      <anchorfile>classLOCA_1_1Epetra_1_1TransposeLinearSystem_1_1TransposePreconditioner.html</anchorfile>
      <anchor>af80f798fd1eba9eb85f3b14923ad6d35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Abstract::TransposeSolveGroup</name>
    <filename>classLOCA_1_1Abstract_1_1TransposeSolveGroup.html</filename>
    <base virtualness="virtual">NOX::Abstract::Group</base>
    <member kind="function">
      <type></type>
      <name>TransposeSolveGroup</name>
      <anchorfile>classLOCA_1_1Abstract_1_1TransposeSolveGroup.html</anchorfile>
      <anchor>a7e7e75be787dad9aa96bdc905c5d1fee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TransposeSolveGroup</name>
      <anchorfile>classLOCA_1_1Abstract_1_1TransposeSolveGroup.html</anchorfile>
      <anchor>a9db93bfa475ae76cdf80796262333a08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverse</name>
      <anchorfile>classLOCA_1_1Abstract_1_1TransposeSolveGroup.html</anchorfile>
      <anchor>a036792a112a607d5d65a7e8992c6c70b</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::Vector &amp;input, NOX::Abstract::Vector &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Group::ReturnType</type>
      <name>applyJacobianTransposeInverseMultiVector</name>
      <anchorfile>classLOCA_1_1Abstract_1_1TransposeSolveGroup.html</anchorfile>
      <anchor>ad4c5912f4e0b2c4e1fbf114aefed4036</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const NOX::Abstract::MultiVector &amp;input, NOX::Abstract::MultiVector &amp;result) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Solver::TrustRegionBased</name>
    <filename>classNOX_1_1Solver_1_1TrustRegionBased.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>TrustRegionBased</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>add85e0bb99c3655f53a8e3ad5ff2eb17</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Abstract::Group &gt; &amp;grp, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TrustRegionBased</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a67b4a4aa35bb712ad87aad4bbbe881eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a03b31b68f4d9ddf02a0199331dbc0eaa</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>ab275a30c8fa89d2f4cac4a1922a53253</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0ecd6c18aae661da7baad588c4853bef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a7d5c042854b038a9737a19b57609b4c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>ada204b4f660d900d8fe624c64b5b2fff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a4ceb1cedf4c4251383df76d79e6d9e66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a6aa5292626c955963a1b60077013ed89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumIterations</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a53cb9d4fb7649b44c9f19cf3ef5794de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a05db741099384b50df3dbeb24298cc12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>aa086729895675a5ef46dcf9b06b61b97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a9263c37fc7b625bb6275c2e73dab92bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a8773a806789d38e3cb74c60c7636cc93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration" protection="protected">
      <type></type>
      <name>StepType</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Newton</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372acc8ef0c5345ee7b9c39bcb39918394f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Cauchy</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372a19049e25a8621a001ecc4cf00942f07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Dogleg</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372a82414b6898973984d1c6cae0542e9d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Newton</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372acc8ef0c5345ee7b9c39bcb39918394f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Cauchy</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372a19049e25a8621a001ecc4cf00942f07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="protected">
      <name>Dogleg</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a0e980322483da05341764b51a1160372a82414b6898973984d1c6cae0542e9d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a18f7c51681136136cc9848e6c0257e4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>invalid</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a2da078278d221ba41d599d3e12651114</anchor>
      <arglist>(const std::string &amp;param, double value) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>printUpdate</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a93df245bbe35ec9c9d1b3671d5fb5903</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::GlobalData &gt;</type>
      <name>globalDataPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a3bb94afe4cfb4b95b2bd01f664461792</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Utils &gt;</type>
      <name>utilsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a49aec5f22c20c0fbc0396726831aae04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>solnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a1695f9de5a406ed8f5617ba660c98fde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Group &gt;</type>
      <name>oldSolnPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a6773bc725139ed80d423ee50d942d2eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>newtonVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a5b9f8661ef73ea4e8357544997c0d4a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>cauchyVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a1b136a39e77cb41511002e98641d1a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>aVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>adc196fdb19dd13981a2db0d46af634ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>bVecPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a33e756a576009d52c29c97f102a362b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>testPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a2bbfa1756d3cb37c1a1ae6879125d83b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::CheckType</type>
      <name>checkType</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a8034e0bae7175972437b411134f66369</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramsPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a32c78f989ab3461633f36c89ccb7d5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>newtonPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a00afe82c75e280329ef1874009ef07e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>cauchyPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>af53fdd1a01116b92ec595787d91b3932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>radius</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a4121f062942303ac59ed5661d0402012</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>adefd1a179aca3f18eb3225fbf0f399cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>initRadius</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>af0c4558927fdf303cdbf13be84727e9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>minRadius</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a03e1d3ada3db516e3cf3483dda4e0a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>maxRadius</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>aebd3cfab19f2531d9514a7ff9fbad165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>contractTriggerRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a1c0d90fcd18f619345a4034a719ffe45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>expandTriggerRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a111d0ecb11233ede6f7ec9cf8384885c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>expandFactor</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a1542c62b7e73da285b7e0e8bb5327d9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>contractFactor</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a2cd2c122774b173ec6bada0962858945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>recoveryStep</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>ad7a8c5de41869b7f6b040e54a34fb132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>newF</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a479fb92990a1064bb427c04cbdefbb63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>oldF</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a212ce8c66f2c250594a8e84c62a32a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>dx</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a1345851219a7bb4c95721b316a05cd08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nIter</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a6b26513c9ade5e43cc0703e53efe3c1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::StatusTest::StatusType</type>
      <name>status</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a3b9e633382832aa950f9967136375757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>StepType</type>
      <name>stepType</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>aa23a1437fbe6b2d0a038bd4efd3ed4d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::MeritFunction::Generic &gt;</type>
      <name>meritFuncPtr</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>aaad48fa30b4f9240f209020ea53625f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useAredPredRatio</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>a742617a3f07b64ed95ca4c20aef42869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Solver::PrePostOperator</type>
      <name>prePostOperator</name>
      <anchorfile>classNOX_1_1Solver_1_1TrustRegionBased.html</anchorfile>
      <anchor>ab25563cff0dbc5823f822f70e302dd79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::BorderedSolver::UpperTriangularBlockElimination</name>
    <filename>classLOCA_1_1BorderedSolver_1_1UpperTriangularBlockElimination.html</filename>
    <member kind="function">
      <type></type>
      <name>UpperTriangularBlockElimination</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1UpperTriangularBlockElimination.html</anchorfile>
      <anchor>a49119338045e815276d27a396c90dd38</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UpperTriangularBlockElimination</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1UpperTriangularBlockElimination.html</anchorfile>
      <anchor>a22dc6b019e70aab6a2edc0f45e7b04e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1UpperTriangularBlockElimination.html</anchorfile>
      <anchor>ac8c3598460b75c358701508d7cd900f1</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::BorderedSolver::AbstractOperator &amp;op, const NOX::Abstract::MultiVector *A, const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Group::ReturnType</type>
      <name>solveTranspose</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1UpperTriangularBlockElimination.html</anchorfile>
      <anchor>a257af9858bf51d4019def7fd303d3042</anchor>
      <arglist>(Teuchos::ParameterList &amp;params, const LOCA::BorderedSolver::AbstractOperator &amp;op, const NOX::Abstract::MultiVector *A, const NOX::Abstract::MultiVector::DenseMatrix &amp;C, const NOX::Abstract::MultiVector *F, const NOX::Abstract::MultiVector::DenseMatrix *G, NOX::Abstract::MultiVector &amp;X, NOX::Abstract::MultiVector::DenseMatrix &amp;Y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1BorderedSolver_1_1UpperTriangularBlockElimination.html</anchorfile>
      <anchor>aaf9470d957d715c3d0dc835041db5278</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::UserDefinedFactory</name>
    <filename>classNOX_1_1Direction_1_1UserDefinedFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>UserDefinedFactory</name>
      <anchorfile>classNOX_1_1Direction_1_1UserDefinedFactory.html</anchorfile>
      <anchor>ae8362460ab58366a4c0a531c0baaa325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserDefinedFactory</name>
      <anchorfile>classNOX_1_1Direction_1_1UserDefinedFactory.html</anchorfile>
      <anchor>af7327862e62b3794c2ec53664b2e44e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>buildDirection</name>
      <anchorfile>classNOX_1_1Direction_1_1UserDefinedFactory.html</anchorfile>
      <anchor>a44fabc66dba8dd01bde2685635d5f37b</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::UserDefinedFactory</name>
    <filename>classNOX_1_1LineSearch_1_1UserDefinedFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>UserDefinedFactory</name>
      <anchorfile>classNOX_1_1LineSearch_1_1UserDefinedFactory.html</anchorfile>
      <anchor>a97f382d3a04d058dd4ccd3f182f78b09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserDefinedFactory</name>
      <anchorfile>classNOX_1_1LineSearch_1_1UserDefinedFactory.html</anchorfile>
      <anchor>a2b0be4e713f358b6be88bc7a80753227</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>buildLineSearch</name>
      <anchorfile>classNOX_1_1LineSearch_1_1UserDefinedFactory.html</anchorfile>
      <anchor>ab1f726b50d0ab32dc61a531ee1186e77</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LineSearch::UserDefinedFactoryT</name>
    <filename>classNOX_1_1LineSearch_1_1UserDefinedFactoryT.html</filename>
    <templarg></templarg>
    <base>NOX::LineSearch::UserDefinedFactory</base>
    <member kind="function">
      <type></type>
      <name>UserDefinedFactoryT</name>
      <anchorfile>classNOX_1_1LineSearch_1_1UserDefinedFactoryT.html</anchorfile>
      <anchor>ad528cf4fae372754bf5184bae9c66b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UserDefinedFactoryT</name>
      <anchorfile>classNOX_1_1LineSearch_1_1UserDefinedFactoryT.html</anchorfile>
      <anchor>af4a9f509251eb047664e55b01cd7c698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::LineSearch::Generic &gt;</type>
      <name>buildLineSearch</name>
      <anchorfile>classNOX_1_1LineSearch_1_1UserDefinedFactoryT.html</anchorfile>
      <anchor>a7b5e1e6f559a2c3513cdc7201d79620c</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Direction::UserDefinedFactoryT</name>
    <filename>classNOX_1_1Direction_1_1UserDefinedFactoryT.html</filename>
    <templarg></templarg>
    <base>NOX::Direction::UserDefinedFactory</base>
    <member kind="function">
      <type></type>
      <name>UserDefinedFactoryT</name>
      <anchorfile>classNOX_1_1Direction_1_1UserDefinedFactoryT.html</anchorfile>
      <anchor>a5777504418d6b922bb8b850442217af1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~UserDefinedFactoryT</name>
      <anchorfile>classNOX_1_1Direction_1_1UserDefinedFactoryT.html</anchorfile>
      <anchor>a0f9f2a82b34d415da60be1d733a0055b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Direction::Generic &gt;</type>
      <name>buildDirection</name>
      <anchorfile>classNOX_1_1Direction_1_1UserDefinedFactoryT.html</anchorfile>
      <anchor>aa3cc62c5629d710942cab711aee21799</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::GlobalData &gt; &amp;gd, Teuchos::ParameterList &amp;params) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Utils</name>
    <filename>classNOX_1_1Utils.html</filename>
    <class kind="class">NOX::Utils::Fill</class>
    <class kind="class">NOX::Utils::Sci</class>
    <member kind="enumeration">
      <type></type>
      <name>MsgType</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Error</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a70f12508894f21ce2816873de343bb1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warning</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a460d575464fc6e5c6fd43abd62bc7cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OuterIteration</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a25b135dc9f7c5b6fc0b9ce8171643e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InnerIteration</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a119da0cce22656f16f1aac7400bd3b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a692c04bea8f81df684acfd207ff5feda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Details</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856aee8024a0699f0981c126dd5a2619959b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OuterIterationStatusTest</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856adcc5226edb211cfed7b7e79de7c578a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LinearSolverDetails</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a2cccd5434d2ee60fe6149d4828091477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TestDetails</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856abc545e5a9aa8c2b5d28f0a180d0b3213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StepperIteration</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a57a33282b420afc58263ea967ed94c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StepperDetails</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a46712ed982b14d26ceb21e71423e47d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StepperParameters</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856ad53caa32bfaa4cf4aa31b21dceac7ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Debug</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856ad7aa2fe60425576ca404b100c64795fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Error</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a70f12508894f21ce2816873de343bb1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warning</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a460d575464fc6e5c6fd43abd62bc7cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OuterIteration</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a25b135dc9f7c5b6fc0b9ce8171643e8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>InnerIteration</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a119da0cce22656f16f1aac7400bd3b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a692c04bea8f81df684acfd207ff5feda</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Details</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856aee8024a0699f0981c126dd5a2619959b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OuterIterationStatusTest</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856adcc5226edb211cfed7b7e79de7c578a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LinearSolverDetails</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a2cccd5434d2ee60fe6149d4828091477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TestDetails</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856abc545e5a9aa8c2b5d28f0a180d0b3213</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StepperIteration</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a57a33282b420afc58263ea967ed94c9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StepperDetails</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856a46712ed982b14d26ceb21e71423e47d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>StepperParameters</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856ad53caa32bfaa4cf4aa31b21dceac7ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Debug</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ab30f60438649426b2490e4646754c856ad7aa2fe60425576ca404b100c64795fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Utils</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>aa5feedb3df4a2085cb04587b676fcd97</anchor>
      <arglist>(int outputInformation=0xf, int MyPID=0, int outputProcess=0, int outputPrecision=3, const Teuchos::RCP&lt; std::ostream &gt; &amp;outputStream=Teuchos::null, const Teuchos::RCP&lt; std::ostream &gt; &amp;errorStream=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Utils</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ac59dcb0e2002846165e013b00bb719d5</anchor>
      <arglist>(Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Utils</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ac5b6df95ebd3338854d1bdaa4e4d48ec</anchor>
      <arglist>(const NOX::Utils &amp;u)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Utils</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>afa5e70facffc286607498e7edb639b8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::Utils &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>a77191f3ba1ded600c31c0bb8b6078638</anchor>
      <arglist>(const NOX::Utils &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>a30531bdc9983b86474999bb0ad19608f</anchor>
      <arglist>(Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPrintType</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>af88197999e84d2d0f94a72ec85d05e33</anchor>
      <arglist>(NOX::Utils::MsgType type) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>a47fd79f047e301102d175a45cdd0452d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>adf68843176ed41db859c1d21e381e605</anchor>
      <arglist>(NOX::Utils::MsgType type) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>pout</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>abdb493dd18318d9dfc5ea9d6a20c84bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>pout</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>a9ed5da513a171a4ac1a471cee7a5b843</anchor>
      <arglist>(NOX::Utils::MsgType type) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>err</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>a081c117064542681fcfcbb969a15aa24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>perr</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>adcb5c4b7596bb90372706a31813ca36b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>acb2e7b047415ef60a577b7b04a6cf1b5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Sci</type>
      <name>sciformat</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>a53889b745f46f405c8ba88e4834a1443</anchor>
      <arglist>(double dval) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Fill</type>
      <name>fill</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>ae4ef217dfe6b8576882c5e461640518a</anchor>
      <arglist>(int filln, char fillc= &apos;*&apos;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Sci</type>
      <name>sciformat</name>
      <anchorfile>classNOX_1_1Utils.html</anchorfile>
      <anchor>aa79c98c8eb4f3367f79319291dadf1f0</anchor>
      <arglist>(double dval, int prec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Utils</name>
    <filename>classUtils.html</filename>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::Vector</name>
    <filename>classNOX_1_1Epetra_1_1Vector.html</filename>
    <base virtualness="virtual">NOX::Abstract::Vector</base>
    <member kind="enumeration">
      <type></type>
      <name>MemoryType</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ac730e39819e3cfcb5e71d835ccbc4177</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateView</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ac730e39819e3cfcb5e71d835ccbc4177a0d4f8ab43f33e41813e4d79cb788f878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ac730e39819e3cfcb5e71d835ccbc4177ad43c66a585974b9e9e9ffde3e8ee7e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateView</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ac730e39819e3cfcb5e71d835ccbc4177a0d4f8ab43f33e41813e4d79cb788f878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CreateCopy</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ac730e39819e3cfcb5e71d835ccbc4177ad43c66a585974b9e9e9ffde3e8ee7e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a5dde75d482d461e5d6e9bf2d34fe20d3</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;source, NOX::Epetra::Vector::MemoryType memoryType=NOX::Epetra::Vector::CreateCopy, NOX::CopyType type=NOX::DeepCopy, Teuchos::RCP&lt; NOX::Epetra::VectorSpace &gt; vs=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a27bc9633c111a81752690d792b7c8a3a</anchor>
      <arglist>(const Epetra_Vector &amp;source, NOX::CopyType type=NOX::DeepCopy, Teuchos::RCP&lt; NOX::Epetra::VectorSpace &gt; vs=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a041e9c675ac76e31ee8efe819b7fbe7e</anchor>
      <arglist>(const NOX::Epetra::Vector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a90b2282707f61361d9a633a22dc0d270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aa168e259752bc651cbba5128f8549bbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a09f5abc40e7616fba3dc314ba7023aff</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Epetra::VectorSpace &gt;</type>
      <name>getVectorSpace</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a9070b61cd963b56f44a671663252c706</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Epetra_Vector &amp;</type>
      <name>getEpetraVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>acd76cacb729373d1934d7c42469a71c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Vector &amp;</type>
      <name>getEpetraVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ad185aca7be3af1db61996d5dc7d96ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a7f81a9671cfe5a8439119a03024b9f6c</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>af5fd7ae77016ef1b3ef317ac87f61af1</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a17acb1019507903919b56446d6d26633</anchor>
      <arglist>(const Epetra_Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aa29828a4ac93f53bfa06e193f5e34eb8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ae9ec165787db3eee727f217989514ea3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aed6eaec573ecca9ddc1c0649d49bd321</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a2c4de1d927c961e5574be51533c7f568</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a3ad893a6b5008bdf59f66667ed22603e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aadc7b4610c84b055158be3137139d346</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>af38cbf7bc7902a483564ce38ee1bb6fb</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ab9ae3f25b7a5f7538047abfb36deb2fb</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a673ab93b9ab78e1ebe554b4bebb2a736</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a4d0f3a5097b50c1673d2fe39b9de4fba</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a7a34df5e75631486f34973ab515721c8</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>afea43cbef101eeb86b243b1480d46aea</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a7f631486b933f55c845f7fadef7bad8e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>epetraVec</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a05d6f5dec01f65c5c8f6745450205a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::VectorSpace &gt;</type>
      <name>vectorSpace</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a3934e2d91019a4567e64e86c50df4a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Epetra_Vector &amp;</type>
      <name>getEpetraVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>acd76cacb729373d1934d7c42469a71c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Vector &amp;</type>
      <name>getEpetraVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ad185aca7be3af1db61996d5dc7d96ea5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a7f81a9671cfe5a8439119a03024b9f6c</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>af5fd7ae77016ef1b3ef317ac87f61af1</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a17acb1019507903919b56446d6d26633</anchor>
      <arglist>(const Epetra_Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aa29828a4ac93f53bfa06e193f5e34eb8</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ae9ec165787db3eee727f217989514ea3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aed6eaec573ecca9ddc1c0649d49bd321</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a2c4de1d927c961e5574be51533c7f568</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a3ad893a6b5008bdf59f66667ed22603e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>aadc7b4610c84b055158be3137139d346</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>af38cbf7bc7902a483564ce38ee1bb6fb</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>ab9ae3f25b7a5f7538047abfb36deb2fb</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a673ab93b9ab78e1ebe554b4bebb2a736</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a4d0f3a5097b50c1673d2fe39b9de4fba</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a7a34df5e75631486f34973ab515721c8</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>afea43cbef101eeb86b243b1480d46aea</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Epetra_1_1Vector.html</anchorfile>
      <anchor>a7f631486b933f55c845f7fadef7bad8e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::LAPACK::Vector</name>
    <filename>classNOX_1_1LAPACK_1_1Vector.html</filename>
    <base>NOX::Abstract::Vector</base>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aaecaf3550eea6a7588921c935ab7100e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a696c0b8dd37d3c1b9cd884714608ffe4</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>acbf0bcaf8d98aee8da4a478ce4a62baf</anchor>
      <arglist>(int n, double *v)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a960de36a6e4e609b0506ae031a5b5ddc</anchor>
      <arglist>(const NOX::LAPACK::Vector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vector</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a077be178a91478d14d77ea72cf1c0354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ab3d7f7fa3295361182ba73477560e89b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad32045eb72003d32f9f7dcb9dfa8e6fd</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const double &amp;</type>
      <name>operator()</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a4e90e419b4461d2b7f422a98bd4459ad</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>leftshift</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ae98c8f7d5a6b5eaaa52d07661f071acb</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ab19d7505ff390419d33abe09aad84dd5</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a9629975209a8765fc4b1aa81b817fd6a</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>abc1a1e35eb1a619cc19ef1fa9debef7b</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>af939c266a0ace461cde2b43e76fc04e9</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a31a0b90dfab1e72c3687abffe45c1ac3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a5d3b6353a847b8a8fe86e81ae4ffe683</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a7c5ffbfb3268c2d4f5fdaf6e9ea03543</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aa86d83cafc72f05b4bfa870549e2cbc9</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad016c7e7b93d68773d2c7e4b06acbdc9</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad5ec7c613c54f8cc364c6e60b58ce202</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a88fc5555cf73675bdc44e407e6deb4c2</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aa942956f976de8c9f9717fdc0283dbdf</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad3873c4723bc49429a7d74f2a752a09a</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aa431fa23b83e84cee2e1e8de45df5af4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a703c04f213a22efcc9d8810e43fc3f99</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a9629975209a8765fc4b1aa81b817fd6a</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>abc1a1e35eb1a619cc19ef1fa9debef7b</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>af939c266a0ace461cde2b43e76fc04e9</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a31a0b90dfab1e72c3687abffe45c1ac3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a5d3b6353a847b8a8fe86e81ae4ffe683</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a7c5ffbfb3268c2d4f5fdaf6e9ea03543</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aa86d83cafc72f05b4bfa870549e2cbc9</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad016c7e7b93d68773d2c7e4b06acbdc9</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad5ec7c613c54f8cc364c6e60b58ce202</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a88fc5555cf73675bdc44e407e6deb4c2</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aa942956f976de8c9f9717fdc0283dbdf</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>ad3873c4723bc49429a7d74f2a752a09a</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>aa431fa23b83e84cee2e1e8de45df5af4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1LAPACK_1_1Vector.html</anchorfile>
      <anchor>a703c04f213a22efcc9d8810e43fc3f99</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Abstract::Vector</name>
    <filename>classNOX_1_1Abstract_1_1Vector.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>NormType</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TwoNorm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434a632ecc2f7a32032ad5eef6f7aa2db9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OneNorm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434ab23aca3ac6deae7848cb08ff14715ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxNorm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434a5b08a88267c9a9d75a49adc22c626e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TwoNorm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434a632ecc2f7a32032ad5eef6f7aa2db9c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OneNorm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434ab23aca3ac6deae7848cb08ff14715ec7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MaxNorm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>ad11f2453f994356b6626e16315b79434a5b08a88267c9a9d75a49adc22c626e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a46683c76f014b545068f6ea8f1a14286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a33adb0edccc6e23284d26dd96cd112ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a4aac962ea9c84a84d25bc0a207e95700</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a421a206997e83a6f05258cce13b07e60</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a24c3d89aad582da0c34d1a4851ab0364</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a169c736324671b0527a60b257402a084</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a7d55e87487c0bf58a5f4e64aeeb6ac70</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a22e769a6f90fe49fbd6298277e0c42ae</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a8cb34063f6e76b365b45323add4c9a27</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a485a3bd349248d5526029aa6f9f414db</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a5418c88288fbfb8c74cf2873f69d77d6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>adc5c508ece7bdc36872335dd24e80bc2</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a4de01f007e98faf017b208a0e5f19e25</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>aeb82e6f7f899a9a028f8cbe06841ba00</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a33810bd61610f1b740564764dc7e1425</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a068bc2385b90a8569a635f8ffd6653ee</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a5ac16aff15cad104ba11fdecfb2917ec</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a0cc24ca245748aaa0c6d60ec08a4d821</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>aa0edbe157fc2dac864e6eb45b309eb26</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a24c3d89aad582da0c34d1a4851ab0364</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a169c736324671b0527a60b257402a084</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a7d55e87487c0bf58a5f4e64aeeb6ac70</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a22e769a6f90fe49fbd6298277e0c42ae</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a8cb34063f6e76b365b45323add4c9a27</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a485a3bd349248d5526029aa6f9f414db</anchor>
      <arglist>(double gamma)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a5418c88288fbfb8c74cf2873f69d77d6</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>adc5c508ece7bdc36872335dd24e80bc2</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a4de01f007e98faf017b208a0e5f19e25</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>aeb82e6f7f899a9a028f8cbe06841ba00</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a33810bd61610f1b740564764dc7e1425</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a068bc2385b90a8569a635f8ffd6653ee</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a5ac16aff15cad104ba11fdecfb2917ec</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>a0cc24ca245748aaa0c6d60ec08a4d821</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Abstract_1_1Vector.html</anchorfile>
      <anchor>aa0edbe157fc2dac864e6eb45b309eb26</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Thyra::Vector</name>
    <filename>classNOX_1_1Thyra_1_1Vector.html</filename>
    <base>NOX::Abstract::Vector</base>
    <base>NOX::Abstract::ImplicitWeighting</base>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a27a508b2e6c828094904ce7290bd5d43</anchor>
      <arglist>(const Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a65f3cd7deb0e2802c888f3dc9786683a</anchor>
      <arglist>(const ::Thyra::VectorBase&lt; double &gt; &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a55d4b5a7a2655803d28666916fe64eac</anchor>
      <arglist>(const NOX::Thyra::Vector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a50270e2b8f1bfaff6dd169c0a17a414b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ab2956897670590d9b485451d75b8b3a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a3609226ca7780181f6aabcda5fb3c03e</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWeightVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>af36b06e6a2c6200ebb4e1f4af6f9fe8b</anchor>
      <arglist>(const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; &amp;weightVec)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getWeightVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a68b8c23a37280f92719d382a1473338b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>virtual ::Thyra::VectorBase&lt; double &gt; &amp;</type>
      <name>getThyraVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad3502bac31e11f04c4a943f6a3ef45f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ::Thyra::VectorBase&lt; double &gt; &amp;</type>
      <name>getThyraVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ab1c4c1bcf2b9f11ed1ce6527d958f898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getThyraRCPVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad85f932a79d8b6fac8d53c46fbbb32a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getThyraRCPVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a8b81d942479dba280af785c44c36b7c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a2c23c52677c0d5838b65be795d4126ff</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ae9f6d721103faf41ab59687978a3be1b</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a8eb6e0ba54d767ed7a7a37d34f27edc3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>af41629668d871ece1c59ddc8e0d41fa2</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ae728fbc368f74ab6ea9c414b55ad2f77</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a82675a5be8ea12fbe8488572ebd3a48f</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a64a31c757623bc5ac1104b7258d4cd18</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a26e3c47f0818983b59bd6c5069ea895e</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad964e4eee35fc66e9140963705dcf8a2</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a2c9a714ef31283164db7c0cdeb03a3a3</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>af73f6714926182338ef63f682513cdde</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ac708efd721c7a618b279b6c1ddef6b4d</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>abce53776b503fddb82aedef9c8312b2a</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a31dbf27064999662ff3eb0cc4c957e43</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a9eb2aa1e2f9ccf071279354e956ce565</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>aa8daa947f9e5ab1b75459a2b5281783e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>afc11b458ab1bebf838e256b57f22cbe6</anchor>
      <arglist>(bool do_implicit_weighting)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>thyraVec</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a7a112227c3d5f4ce8456c6db0dcf9696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>weightVec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>aae7e8170670a39d6ff6797ca48c754c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>tmpVec_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad25e9d95b6826df7de9bb8c354b30bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>do_implicit_weighting_</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>af544c8b815f753f340fdb53282f71b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>virtual ::Thyra::VectorBase&lt; double &gt; &amp;</type>
      <name>getThyraVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad3502bac31e11f04c4a943f6a3ef45f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const ::Thyra::VectorBase&lt; double &gt; &amp;</type>
      <name>getThyraVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ab1c4c1bcf2b9f11ed1ce6527d958f898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getThyraRCPVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad85f932a79d8b6fac8d53c46fbbb32a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getThyraRCPVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a8b81d942479dba280af785c44c36b7c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a2c23c52677c0d5838b65be795d4126ff</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ae9f6d721103faf41ab59687978a3be1b</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a8eb6e0ba54d767ed7a7a37d34f27edc3</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>af41629668d871ece1c59ddc8e0d41fa2</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ae728fbc368f74ab6ea9c414b55ad2f77</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a82675a5be8ea12fbe8488572ebd3a48f</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a64a31c757623bc5ac1104b7258d4cd18</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a26e3c47f0818983b59bd6c5069ea895e</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ad964e4eee35fc66e9140963705dcf8a2</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a2c9a714ef31283164db7c0cdeb03a3a3</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>af73f6714926182338ef63f682513cdde</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>ac708efd721c7a618b279b6c1ddef6b4d</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>abce53776b503fddb82aedef9c8312b2a</anchor>
      <arglist>(NOX::Abstract::Vector::NormType type=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a31dbf27064999662ff3eb0cc4c957e43</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>a9eb2aa1e2f9ccf071279354e956ce565</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>aa8daa947f9e5ab1b75459a2b5281783e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setImplicitWeighting</name>
      <anchorfile>classNOX_1_1Thyra_1_1Vector.html</anchorfile>
      <anchor>afc11b458ab1bebf838e256b57f22cbe6</anchor>
      <arglist>(bool do_implicit_weighting)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Extended::Vector</name>
    <filename>classLOCA_1_1Extended_1_1Vector.html</filename>
    <base>NOX::Abstract::Vector</base>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a3e9cbd57181e95ac8b2440ff17eede96</anchor>
      <arglist>(const Vector &amp;source, NOX::CopyType type=NOX::DeepCopy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Vector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a721fe7bf10ab3d8b0109b2f96b0ce70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>af5128d9ddf983de313f6132926ffaf8b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a1cd29ca54230fad602042a3f2256c59a</anchor>
      <arglist>(const Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a36f632c21060f70e0f50c97f4fc17a29</anchor>
      <arglist>(NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a77e3ae24c0336f93f581e1d692c2eb5a</anchor>
      <arglist>(const NOX::Abstract::Vector *const *vecs, int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector &gt;</type>
      <name>createMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a854278e946feace0d50e831168280d28</anchor>
      <arglist>(int numVecs, NOX::CopyType type=NOX::DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a4bfe421d63b34a8d01c0e71b4bcbd01a</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>random</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a2a8e377a7a6353a7ac4e4d33cd13b35a</anchor>
      <arglist>(bool useSeed=false, int seed=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a9fd6d4f1c24cabf6987e4e91e6a960cc</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>af510c14d584237a27c99916e2026181e</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a3b3a1e46a8bd4c37db48e825c58ff7f2</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a25043a5d513253f6303585e537c0f70b</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>ad454329313e13c87035049df914c39c1</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>ace7086eddfcbfe122bb017f22dab609a</anchor>
      <arglist>(double alpha, const NOX::Abstract::Vector &amp;a, double beta, const NOX::Abstract::Vector &amp;b, double gamma=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>afe3702239e35115853698d3231a19cad</anchor>
      <arglist>(NormType type=TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a469b21a14a2e34e4177271ec6dedfbec</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a403f5d91b8e2b65b192419b046a87a65</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a3ce729dd06ae4460bafc3b329e8d965f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>aba0d5eebb0fbc0065fafdc468de5f8d6</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a7572753ce49a06e5e7558709f2be1f49</anchor>
      <arglist>(int i, const NOX::Abstract::Vector &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setVectorView</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>ac1b0d77e2ad4ace060e3d4a6d1bdce75</anchor>
      <arglist>(int i, const Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a754edf3064b80cc8e8d7e852a8cc12d8</anchor>
      <arglist>(int i, double s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScalarArray</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a1d28bea8f31596507b3144b8aa92b21f</anchor>
      <arglist>(double *sv)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>ab24f518559a27682f14b34d36a53265b</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>getVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a94c8d12fa632e6739a625f282cd5652c</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a53729a56f7929a5b0594b55c119c6468</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double &amp;</type>
      <name>getScalar</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a2321d6dd2e1a06610e1e42cfe90b11ee</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a0ec78cb7bf8978c806c002de39c9ca95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>getScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a456dadd80698a4c412ebd93acdb13071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>adbd13c8ef33312a1eb5d5c887f076afe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumVectors</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a42bb34ec0eac2d7fe3b08f300a456686</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Vector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a719d279c971a198938f26abcbaa53b3e</anchor>
      <arglist>(const Teuchos::RCP&lt; LOCA::GlobalData &gt; &amp;global_data, int nvecs, int nscalars)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LOCA::Extended::MultiVector &gt;</type>
      <name>generateMultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a502c0ae964f0080b4f799da922f2bed4</anchor>
      <arglist>(int nColumns, int nVectorRows, int nScalarRows) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LOCA::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>ade6891b4d16fb57d6afbff04aa45fb64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; NOX::Abstract::Vector &gt; &gt;</type>
      <name>vectorPtrs</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a466884f22d2b02e50cd9572691cd2dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>isView</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>a0995c79d3f399654136211f2a66b15e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numScalars</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>ab5b4b0bd44aaa79989ae41de1464c4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Abstract::MultiVector::DenseMatrix &gt;</type>
      <name>scalarsPtr</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>afed1ff608ff061670b713b2506638bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>LOCA::Extended::MultiVector</name>
      <anchorfile>classLOCA_1_1Extended_1_1Vector.html</anchorfile>
      <anchor>abe72ab1bcd83455e65d428fb7baad1bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Petsc::Vector</name>
    <filename>classNOX_1_1Petsc_1_1Vector.html</filename>
    <base>NOX::Abstract::Vector</base>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a217ac8f05459fa7bf0deadec4f658c00</anchor>
      <arglist>(const Vec &amp;source, CopyType type=DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a4a0534466ea96d1c67f27617af13f086</anchor>
      <arglist>(const Vec &amp;source, std::string name=&quot;Unnamed&quot;, CopyType type=DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Vector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a6b8f5a1727cb52952a01e2417500328b</anchor>
      <arglist>(const Vector &amp;source, CopyType type=DeepCopy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Vector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a2eb3c49587a4f12cade7895ccb73f6a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::size_type</type>
      <name>length</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a613c1788ba0f19d436ff34ed1c2f8310</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vec &amp;</type>
      <name>getPetscVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a2489569fe6d86fd29c76438d2aca904f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Vec &amp;</type>
      <name>getPetscVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>aa74b7e48aec2654ad833c4afdb06e9ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a9b7196ce58f8e627eb7608fa9c09838f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>af5e152fdbb3d47242ce6ae31a2d583ec</anchor>
      <arglist>(const Vec &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a0d2ca6293ea5cdc0d48ad88807bff5ca</anchor>
      <arglist>(const Abstract::Vector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>afbb0939046564226f44ef88112f7a1ea</anchor>
      <arglist>(const Abstract::Vector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a9a3716281b5cca5f4a0083c3b421b050</anchor>
      <arglist>(const Abstract::Vector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a454edff44a2c8ef5a4af4e4da7cee93a</anchor>
      <arglist>(double gammaval)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a1c39997de3acc0275e0ee6cb35fe1d38</anchor>
      <arglist>(const Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>aac76fecd0ab039458f81dee7660b1389</anchor>
      <arglist>(double alpha, const Abstract::Vector &amp;a, double gammaval=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>ac8b7b45e2f2971f132422e8a2d25ca94</anchor>
      <arglist>(double alpha, const Abstract::Vector &amp;a, double beta, const Abstract::Vector &amp;b, double gammaval=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a130a1bb2832b6d9e6e00d4a26038f2b1</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a71c5cbde86bd399a0ff1c121fe65aa2c</anchor>
      <arglist>(Abstract::Vector::NormType type=TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a7b6144139cd097c89c38280700283f1c</anchor>
      <arglist>(const Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a98b8b0f43e7687d8591b4d77a2cef4ed</anchor>
      <arglist>(const Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vec &amp;</type>
      <name>getPetscVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a2489569fe6d86fd29c76438d2aca904f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Vec &amp;</type>
      <name>getPetscVector</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>aa74b7e48aec2654ad833c4afdb06e9ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>init</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a9b7196ce58f8e627eb7608fa9c09838f</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>af5e152fdbb3d47242ce6ae31a2d583ec</anchor>
      <arglist>(const Vec &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a0d2ca6293ea5cdc0d48ad88807bff5ca</anchor>
      <arglist>(const Abstract::Vector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>abs</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>afbb0939046564226f44ef88112f7a1ea</anchor>
      <arglist>(const Abstract::Vector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>reciprocal</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a9a3716281b5cca5f4a0083c3b421b050</anchor>
      <arglist>(const Abstract::Vector &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a454edff44a2c8ef5a4af4e4da7cee93a</anchor>
      <arglist>(double gammaval)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>scale</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a1c39997de3acc0275e0ee6cb35fe1d38</anchor>
      <arglist>(const Abstract::Vector &amp;a)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>aac76fecd0ab039458f81dee7660b1389</anchor>
      <arglist>(double alpha, const Abstract::Vector &amp;a, double gammaval=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Abstract::Vector &amp;</type>
      <name>update</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>ac8b7b45e2f2971f132422e8a2d25ca94</anchor>
      <arglist>(double alpha, const Abstract::Vector &amp;a, double beta, const Abstract::Vector &amp;b, double gammaval=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::Vector &gt;</type>
      <name>clone</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a130a1bb2832b6d9e6e00d4a26038f2b1</anchor>
      <arglist>(CopyType type=DeepCopy) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a71c5cbde86bd399a0ff1c121fe65aa2c</anchor>
      <arglist>(Abstract::Vector::NormType type=TwoNorm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a7b6144139cd097c89c38280700283f1c</anchor>
      <arglist>(const Abstract::Vector &amp;weights) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a98b8b0f43e7687d8591b4d77a2cef4ed</anchor>
      <arglist>(const Abstract::Vector &amp;y) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Vec</type>
      <name>petscVec</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>abb15bad5bccdd3f0a584b22e8ea21ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isAlloc</name>
      <anchorfile>classNOX_1_1Petsc_1_1Vector.html</anchorfile>
      <anchor>a2b3a0b935b45ed659ed5cac3f7a64df9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::VectorBase</name>
    <filename>classThyra_1_1VectorBase.html</filename>
    <templarg>Scalar</templarg>
    <member kind="function">
      <type>void</type>
      <name>ele_wise_min_swap</name>
      <anchorfile>classThyra_1_1VectorBase.html</anchorfile>
      <anchor>a8e1e88c55e4512a60d58bda477af667f</anchor>
      <arglist>(const ::Thyra::VectorBase&lt; Scalar &gt; &amp;x, const Teuchos::Ptr&lt;::Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;y)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::VectorSpace</name>
    <filename>classNOX_1_1Epetra_1_1VectorSpace.html</filename>
    <member kind="function">
      <type></type>
      <name>VectorSpace</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpace.html</anchorfile>
      <anchor>a471ad65e9b5d389d448739728cc6e8e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorSpace</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpace.html</anchorfile>
      <anchor>ac544ea60480aec13ead950d695bbedf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpace.html</anchorfile>
      <anchor>a7f95744aa607f4d4e6551603054a4591</anchor>
      <arglist>(const Epetra_Vector &amp;a, const Epetra_Vector &amp;b) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpace.html</anchorfile>
      <anchor>aa8865003ff11d76cc6617eb0cedc48f0</anchor>
      <arglist>(const Epetra_Vector &amp;a, NOX::Abstract::Vector::NormType=NOX::Abstract::Vector::TwoNorm) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::VectorSpaceL2</name>
    <filename>classNOX_1_1Epetra_1_1VectorSpaceL2.html</filename>
    <base>NOX::Epetra::VectorSpace</base>
    <member kind="function">
      <type></type>
      <name>VectorSpaceL2</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceL2.html</anchorfile>
      <anchor>a72b2290a41555d1344adda3b0aa9aa6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorSpaceL2</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceL2.html</anchorfile>
      <anchor>afa5e62f8b65b4cfff33a1096633dbf17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceL2.html</anchorfile>
      <anchor>ab20f143e1c29f110932c23417e0dc7de</anchor>
      <arglist>(const Epetra_Vector &amp;a, const Epetra_Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceL2.html</anchorfile>
      <anchor>a0c00dc6cf28951685265d2f9ad19ce53</anchor>
      <arglist>(const Epetra_Vector &amp;a, NOX::Abstract::Vector::NormType=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Epetra::VectorSpaceScaledL2</name>
    <filename>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</filename>
    <base>NOX::Epetra::VectorSpace</base>
    <member kind="function">
      <type></type>
      <name>VectorSpaceScaledL2</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>a8af9c0916f33e182960502ba062df11f</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Epetra::Scaling &gt; &amp;s, NOX::Epetra::Scaling::ScaleType st=NOX::Epetra::Scaling::Left)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorSpaceScaledL2</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>a9e7aaa7a958f793330f87e79477e203f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>innerProduct</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>ae6658f06892fcb7abb3f7ae6afb9668a</anchor>
      <arglist>(const Epetra_Vector &amp;a, const Epetra_Vector &amp;b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>norm</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>a3494781e750a5e6a1524ebbcb8d652a2</anchor>
      <arglist>(const Epetra_Vector &amp;a, NOX::Abstract::Vector::NormType=NOX::Abstract::Vector::TwoNorm) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Epetra::Scaling &gt;</type>
      <name>scalingPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>a943dc714ba0b16ada7fcdeea53226c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>NOX::Epetra::Scaling::ScaleType</type>
      <name>scaleType</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>a03cfbdc95d4f9361095bf0b0752cc96f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>tmpVectorPtr</name>
      <anchorfile>classNOX_1_1Epetra_1_1VectorSpaceScaledL2.html</anchorfile>
      <anchor>aa62640acedcc68821bd505914dc4ad81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>NOX::Thyra::WeightedMeritFunction</name>
    <filename>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</filename>
    <base>NOX::MeritFunction::Generic</base>
    <member kind="function">
      <type></type>
      <name>WeightedMeritFunction</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>ab278c1559fb79ee3f09c7da721806074</anchor>
      <arglist>(const Teuchos::RCP&lt; const ::Thyra::VectorBase&lt; double &gt; &gt; weights, bool optimizeSlopeCalc=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WeightedMeritFunction</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>aacb5d05145e46be25c4ffaae33496696</anchor>
      <arglist>(const WeightedMeritFunction &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WeightedMeritFunction</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>a2cf96561422059a264f07995dee8949b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>aed14293152eb195b6b747597f687b28c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computef</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>a9e71fb82a4dd4186ccaafb8d36045ef5</anchor>
      <arglist>(const NOX::Abstract::Group &amp;group) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeGradient</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>afe0875fd417d6c1a27041e57cb4fd78e</anchor>
      <arglist>(const NOX::Abstract::Group &amp;group, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeSlope</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>a25ec333d338682c6e81bd596653dce35</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;group) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeQuadraticModel</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>a30ee6757d63cc68f4a2cb27619008bf4</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;dir, const NOX::Abstract::Group &amp;group) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeQuadraticMinimizer</name>
      <anchorfile>classNOX_1_1Thyra_1_1WeightedMeritFunction.html</anchorfile>
      <anchor>abfa792b2b27cbaad11c594dbc58f9265</anchor>
      <arglist>(const NOX::Abstract::Group &amp;grp, NOX::Abstract::Vector &amp;result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Solver::Wrapper</name>
    <filename>classLOCA_1_1Solver_1_1Wrapper.html</filename>
    <base>NOX::Solver::Generic</base>
    <member kind="function">
      <type></type>
      <name>Wrapper</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a0dc2f9d1ccdfd26eb34b01161b0c13a0</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::Solver::Generic &gt; &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Wrapper</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a568985d042d0f10ffa3aa078751e9a89</anchor>
      <arglist>(const Teuchos::RCP&lt; const NOX::Solver::Generic &gt; &amp;solver)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Wrapper</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>ac33b17c3540b52961c7c75c5dd967449</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a8ced3dab93e588417d036ab3009d7b45</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a602bb6297c3f7bde065b0557fa2afd08</anchor>
      <arglist>(const NOX::Abstract::Vector &amp;initialGuess, const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;tests)</arglist>
    </member>
    <member kind="function">
      <type>NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a616618efbede534b59bcfcb2ace9057c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::StatusTest::StatusType</type>
      <name>step</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>ada4bab266daacd209981c95430c68220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NOX::StatusTest::StatusType</type>
      <name>solve</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a36dfc2f3907f81e1e3a15e7b42ff8eee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Group &amp;</type>
      <name>getSolutionGroup</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a6881f215aab797a3b18f4fd4d04d052a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NOX::Abstract::Group &amp;</type>
      <name>getPreviousSolutionGroup</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a20861698e38299f4528a1e652ad7ac27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumIterations</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a499d392a5a5fe548fdfa63d5025e1862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>getList</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a5e51da978446c1b44ae0616c985e858e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getSolutionGroupPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>ac3a3a04127c565e8acc42a90717549f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>getPreviousSolutionGroupPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>add717f924d1af5f1518f0a68974fd40b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getListPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a6e0ceaaef7f1eaaf5724e723feed5435</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetWrapper</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a3ab07c828eed845901ee14438db86e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::Solver::Generic &gt;</type>
      <name>solverPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a232d768fe4f83fb0b733d7c07251e34a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Solver::Generic &gt;</type>
      <name>constSolverPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a554593b8d35951de9f3a77eb50eb195c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>solnGrpPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>a0613cdb1a100abd05abb6b85e65c6e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const NOX::Abstract::Group &gt;</type>
      <name>oldSolnGrpPtr</name>
      <anchorfile>classLOCA_1_1Solver_1_1Wrapper.html</anchorfile>
      <anchor>ae0e8c8a8ac862e28e2fcb2e64f9364fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::StatusTest::Wrapper</name>
    <filename>classLOCA_1_1StatusTest_1_1Wrapper.html</filename>
    <base>NOX::StatusTest::Generic</base>
    <member kind="function">
      <type></type>
      <name>Wrapper</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>aff2d75a5feb726f8b030f457ba96c6b9</anchor>
      <arglist>(const Teuchos::RCP&lt; NOX::StatusTest::Generic &gt; &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Wrapper</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>aec837efffc87f8dfaa884ab43eb0b406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>a5d5a5c96f61550082a1883ee62327d38</anchor>
      <arglist>(const NOX::Solver::Generic &amp;problem, NOX::StatusTest::CheckType checkType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual NOX::StatusTest::StatusType</type>
      <name>getStatus</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>aee3916d4264c3faffb9434e37727f014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>a87041fec10dcc0548b82a5ad68f046cc</anchor>
      <arglist>(std::ostream &amp;stream, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>getUnderlyingStatusTest</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>abb4094cebeed258515e742113dc60699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const NOX::StatusTest::Generic &gt;</type>
      <name>getUnderlyingStatusTest</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>abee19b70dc9f42c3e406815d4e7529de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; NOX::StatusTest::Generic &gt;</type>
      <name>statusTestPtr</name>
      <anchorfile>classLOCA_1_1StatusTest_1_1Wrapper.html</anchorfile>
      <anchor>a7b31fe7b05d59dd20230b8aa29e41e46</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LOCA::Epetra::xyztPrec</name>
    <filename>classLOCA_1_1Epetra_1_1xyztPrec.html</filename>
    <base>Epetra_Operator</base>
    <base>NOX::Epetra::Interface::Required</base>
    <base>NOX::Epetra::Interface::Jacobian</base>
    <base>NOX::Epetra::Interface::Preconditioner</base>
    <member kind="function">
      <type></type>
      <name>xyztPrec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a0be06bb80e357a73ca7602cf11ca3741</anchor>
      <arglist>(EpetraExt::BlockCrsMatrix &amp;jacobian, Epetra_CrsMatrix &amp;splitJac, EpetraExt::BlockVector &amp;solution, EpetraExt::BlockVector &amp;solutionOverlap, Epetra_Import &amp;overlapImporter, Teuchos::ParameterList &amp;precPrintParams, Teuchos::ParameterList &amp;precLSParams, const Teuchos::RCP&lt; EpetraExt::MultiComm &gt; globalComm_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~xyztPrec</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>adde22d6611bdd60eff07a959ae98c2fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a4856e9699257b2f76cc9a8b7daed298a</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>afe8d3aeca4d966df259425feae8469af</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a68683cdad5766c1af3c55cc105aa9948</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>acb2131dc73d3b6a73df19c2091f43664</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a9d8771f0320765c8be3d2dadc6d74d40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a159dfc5a6a987b1eba0a205769c0cb26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a0b3eb967f6554d24ba62c92a9ad74237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a353d9c2412b77d670d84f117d57e4f75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>ad6805232c0d4ce27f3f638a1c75bfffe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a2ed6d4a77e2c42a08ec881c2589ebe09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeF</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a5d33766445172b8f10925e4b72de25d1</anchor>
      <arglist>(const Epetra_Vector &amp;, Epetra_Vector &amp;, const NOX::Epetra::Interface::Required::FillType)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeJacobian</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a9a2d2356755542518f86f3f237eda9e5</anchor>
      <arglist>(const Epetra_Vector &amp;, Epetra_Operator &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>computePreconditioner</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a9e1d21d189d9647c9d9039847fff7315</anchor>
      <arglist>(const Epetra_Vector &amp;x, Epetra_Operator &amp;Prec, Teuchos::ParameterList *p=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>throwError</name>
      <anchorfile>classLOCA_1_1Epetra_1_1xyztPrec.html</anchorfile>
      <anchor>a25a0145905a767cc6c7125c13d01ef28</anchor>
      <arglist>(const std::string &amp;functionName, const std::string &amp;errorMsg) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Abstract</name>
    <filename>namespaceLOCA_1_1Abstract.html</filename>
    <class kind="class">LOCA::Abstract::Factory</class>
    <class kind="class">LOCA::Abstract::Group</class>
    <class kind="class">LOCA::Abstract::Iterator</class>
    <class kind="class">LOCA::Abstract::TransposeSolveGroup</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::AnasaziOperator</name>
    <filename>namespaceLOCA_1_1AnasaziOperator.html</filename>
    <class kind="class">LOCA::AnasaziOperator::AbstractStrategy</class>
    <class kind="class">LOCA::AnasaziOperator::Cayley</class>
    <class kind="class">LOCA::AnasaziOperator::Cayley2Matrix</class>
    <class kind="class">LOCA::AnasaziOperator::Factory</class>
    <class kind="class">LOCA::AnasaziOperator::JacobianInverse</class>
    <class kind="class">LOCA::AnasaziOperator::ShiftInvert</class>
    <class kind="class">LOCA::AnasaziOperator::ShiftInvert2Matrix</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Bifurcation::PitchforkBord::StatusTest</name>
    <filename>namespaceLOCA_1_1Bifurcation_1_1PitchforkBord_1_1StatusTest.html</filename>
    <class kind="class">LOCA::Bifurcation::PitchforkBord::StatusTest::NullVectorNormWRMS</class>
    <class kind="class">LOCA::Bifurcation::PitchforkBord::StatusTest::ParameterUpdateNorm</class>
    <class kind="class">LOCA::Bifurcation::PitchforkBord::StatusTest::SlackUpdateNorm</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Bifurcation::TPBord::StatusTest</name>
    <filename>namespaceLOCA_1_1Bifurcation_1_1TPBord_1_1StatusTest.html</filename>
    <class kind="class">LOCA::Bifurcation::TPBord::StatusTest::NullVectorNormWRMS</class>
    <class kind="class">LOCA::Bifurcation::TPBord::StatusTest::ParameterUpdateNorm</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::BorderedSolver</name>
    <filename>namespaceLOCA_1_1BorderedSolver.html</filename>
    <class kind="class">LOCA::BorderedSolver::AbstractOperator</class>
    <class kind="class">LOCA::BorderedSolver::AbstractStrategy</class>
    <class kind="class">LOCA::BorderedSolver::BorderedOperator</class>
    <class kind="class">LOCA::BorderedSolver::Bordering</class>
    <class kind="class">LOCA::BorderedSolver::ComplexOperator</class>
    <class kind="class">LOCA::BorderedSolver::EpetraAugmented</class>
    <class kind="class">LOCA::BorderedSolver::EpetraHouseholder</class>
    <class kind="class">LOCA::BorderedSolver::Factory</class>
    <class kind="class">LOCA::BorderedSolver::HouseholderQR</class>
    <class kind="class">LOCA::BorderedSolver::JacobianOperator</class>
    <class kind="class">LOCA::BorderedSolver::LAPACKDirectSolve</class>
    <class kind="class">LOCA::BorderedSolver::LowerTriangularBlockElimination</class>
    <class kind="class">LOCA::BorderedSolver::Nested</class>
    <class kind="class">LOCA::BorderedSolver::UpperTriangularBlockElimination</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Continuation::StatusTest</name>
    <filename>namespaceLOCA_1_1Continuation_1_1StatusTest.html</filename>
    <class kind="class">LOCA::Continuation::StatusTest::ParameterResidualNorm</class>
    <class kind="class">LOCA::Continuation::StatusTest::ParameterUpdateNorm</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Eigensolver</name>
    <filename>namespaceLOCA_1_1Eigensolver.html</filename>
    <class kind="class">LOCA::Eigensolver::AbstractStrategy</class>
    <class kind="class">LOCA::Eigensolver::AnasaziStrategy</class>
    <class kind="class">LOCA::Eigensolver::DefaultStrategy</class>
    <class kind="class">LOCA::Eigensolver::DGGEVStrategy</class>
    <class kind="class">LOCA::Eigensolver::Factory</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::EigenvalueSort</name>
    <filename>namespaceLOCA_1_1EigenvalueSort.html</filename>
    <class kind="class">LOCA::EigenvalueSort::AbstractStrategy</class>
    <class kind="class">LOCA::EigenvalueSort::Factory</class>
    <class kind="class">LOCA::EigenvalueSort::LargestImaginary</class>
    <class kind="class">LOCA::EigenvalueSort::LargestMagnitude</class>
    <class kind="class">LOCA::EigenvalueSort::LargestReal</class>
    <class kind="class">LOCA::EigenvalueSort::LargestRealInverseCayley</class>
    <class kind="class">LOCA::EigenvalueSort::SmallestImaginary</class>
    <class kind="class">LOCA::EigenvalueSort::SmallestMagnitude</class>
    <class kind="class">LOCA::EigenvalueSort::SmallestReal</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Epetra</name>
    <filename>namespaceLOCA_1_1Epetra.html</filename>
    <namespace>LOCA::Epetra::Interface</namespace>
    <namespace>LOCA::Epetra::TransposeLinearSystem</namespace>
    <class kind="class">LOCA::Epetra::AdaptiveSolutionManager</class>
    <class kind="class">LOCA::Epetra::AdaptiveStepper</class>
    <class kind="class">LOCA::Epetra::AugmentedOp</class>
    <class kind="class">LOCA::Epetra::CompactWYOp</class>
    <class kind="class">LOCA::Epetra::Factory</class>
    <class kind="class">LOCA::Epetra::Group</class>
    <class kind="class">LOCA::Epetra::IdentityOp</class>
    <class kind="class">LOCA::Epetra::LeftPreconditionedOp</class>
    <class kind="class">LOCA::Epetra::LowRankUpdateOp</class>
    <class kind="class">LOCA::Epetra::LowRankUpdateRowMatrix</class>
    <class kind="class">LOCA::Epetra::ModelEvaluatorInterface</class>
    <class kind="class">LOCA::Epetra::ShiftInvertInterface</class>
    <class kind="class">LOCA::Epetra::ShiftInvertOperator</class>
    <class kind="class">LOCA::Epetra::xyztPrec</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Epetra::Interface</name>
    <filename>namespaceLOCA_1_1Epetra_1_1Interface.html</filename>
    <class kind="class">LOCA::Epetra::Interface::FreeEnergy</class>
    <class kind="class">LOCA::Epetra::Interface::MassMatrix</class>
    <class kind="class">LOCA::Epetra::Interface::Required</class>
    <class kind="class">LOCA::Epetra::Interface::TimeDependent</class>
    <class kind="class">LOCA::Epetra::Interface::TimeDependentMatrixFree</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Epetra::TransposeLinearSystem</name>
    <filename>namespaceLOCA_1_1Epetra_1_1TransposeLinearSystem.html</filename>
    <class kind="class">LOCA::Epetra::TransposeLinearSystem::AbstractStrategy</class>
    <class kind="class">LOCA::Epetra::TransposeLinearSystem::ExplicitTranspose</class>
    <class kind="class">LOCA::Epetra::TransposeLinearSystem::Factory</class>
    <class kind="class">LOCA::Epetra::TransposeLinearSystem::LeftPreconditioning</class>
    <class kind="class">LOCA::Epetra::TransposeLinearSystem::TransposePreconditioner</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Extended</name>
    <filename>namespaceLOCA_1_1Extended.html</filename>
    <class kind="class">LOCA::Extended::MultiAbstractGroup</class>
    <class kind="class">LOCA::Extended::MultiVector</class>
    <class kind="class">LOCA::Extended::Vector</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Hopf</name>
    <filename>namespaceLOCA_1_1Hopf.html</filename>
    <namespace>LOCA::Hopf::MinimallyAugmented</namespace>
    <namespace>LOCA::Hopf::MooreSpence</namespace>
    <class kind="class">LOCA::Hopf::ComplexMultiVector</class>
    <class kind="class">LOCA::Hopf::ComplexVector</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Hopf::MinimallyAugmented</name>
    <filename>namespaceLOCA_1_1Hopf_1_1MinimallyAugmented.html</filename>
    <class kind="class">LOCA::Hopf::MinimallyAugmented::AbstractGroup</class>
    <class kind="class">LOCA::Hopf::MinimallyAugmented::Constraint</class>
    <class kind="class">LOCA::Hopf::MinimallyAugmented::ExtendedGroup</class>
    <class kind="class">LOCA::Hopf::MinimallyAugmented::FiniteDifferenceGroup</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Hopf::MooreSpence</name>
    <filename>namespaceLOCA_1_1Hopf_1_1MooreSpence.html</filename>
    <class kind="class">LOCA::Hopf::MooreSpence::AbstractGroup</class>
    <class kind="class">LOCA::Hopf::MooreSpence::ExtendedGroup</class>
    <class kind="class">LOCA::Hopf::MooreSpence::ExtendedMultiVector</class>
    <class kind="class">LOCA::Hopf::MooreSpence::ExtendedVector</class>
    <class kind="class">LOCA::Hopf::MooreSpence::FiniteDifferenceGroup</class>
    <class kind="class">LOCA::Hopf::MooreSpence::SalingerBordering</class>
    <class kind="class">LOCA::Hopf::MooreSpence::SolverFactory</class>
    <class kind="class">LOCA::Hopf::MooreSpence::SolverStrategy</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::LAPACK</name>
    <filename>namespaceLOCA_1_1LAPACK.html</filename>
    <class kind="class">LOCA::LAPACK::Factory</class>
    <class kind="class">LOCA::LAPACK::Group</class>
    <class kind="class">LOCA::LAPACK::Interface</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::MultiContinuation</name>
    <filename>namespaceLOCA_1_1MultiContinuation.html</filename>
    <class kind="class">LOCA::MultiContinuation::AbstractGroup</class>
    <class kind="class">LOCA::MultiContinuation::AbstractStrategy</class>
    <class kind="class">LOCA::MultiContinuation::ArcLengthConstraint</class>
    <class kind="class">LOCA::MultiContinuation::ArcLengthGroup</class>
    <class kind="class">LOCA::MultiContinuation::CompositeConstraint</class>
    <class kind="class">LOCA::MultiContinuation::CompositeConstraintMVDX</class>
    <class kind="class">LOCA::MultiContinuation::ConstrainedGroup</class>
    <class kind="class">LOCA::MultiContinuation::ConstraintInterface</class>
    <class kind="class">LOCA::MultiContinuation::ConstraintInterfaceMVDX</class>
    <class kind="class">LOCA::MultiContinuation::ExtendedGroup</class>
    <class kind="class">LOCA::MultiContinuation::ExtendedMultiVector</class>
    <class kind="class">LOCA::MultiContinuation::ExtendedVector</class>
    <class kind="class">LOCA::MultiContinuation::Factory</class>
    <class kind="class">LOCA::MultiContinuation::FiniteDifferenceGroup</class>
    <class kind="class">LOCA::MultiContinuation::MultiVecConstraint</class>
    <class kind="class">LOCA::MultiContinuation::NaturalConstraint</class>
    <class kind="class">LOCA::MultiContinuation::NaturalGroup</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::MultiPredictor</name>
    <filename>namespaceLOCA_1_1MultiPredictor.html</filename>
    <class kind="class">LOCA::MultiPredictor::AbstractStrategy</class>
    <class kind="class">LOCA::MultiPredictor::Constant</class>
    <class kind="class">LOCA::MultiPredictor::Factory</class>
    <class kind="class">LOCA::MultiPredictor::Random</class>
    <class kind="class">LOCA::MultiPredictor::Restart</class>
    <class kind="class">LOCA::MultiPredictor::Secant</class>
    <class kind="class">LOCA::MultiPredictor::Tangent</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::PhaseTransition</name>
    <filename>namespaceLOCA_1_1PhaseTransition.html</filename>
    <class kind="class">LOCA::PhaseTransition::AbstractGroup</class>
    <class kind="class">LOCA::PhaseTransition::ExtendedGroup</class>
    <class kind="class">LOCA::PhaseTransition::ExtendedMultiVector</class>
    <class kind="class">LOCA::PhaseTransition::ExtendedVector</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Pitchfork</name>
    <filename>namespaceLOCA_1_1Pitchfork.html</filename>
    <namespace>LOCA::Pitchfork::MinimallyAugmented</namespace>
    <namespace>LOCA::Pitchfork::MooreSpence</namespace>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Pitchfork::MinimallyAugmented</name>
    <filename>namespaceLOCA_1_1Pitchfork_1_1MinimallyAugmented.html</filename>
    <class kind="class">LOCA::Pitchfork::MinimallyAugmented::AbstractGroup</class>
    <class kind="class">LOCA::Pitchfork::MinimallyAugmented::Constraint</class>
    <class kind="class">LOCA::Pitchfork::MinimallyAugmented::ExtendedGroup</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Pitchfork::MooreSpence</name>
    <filename>namespaceLOCA_1_1Pitchfork_1_1MooreSpence.html</filename>
    <class kind="class">LOCA::Pitchfork::MooreSpence::AbstractGroup</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::ExtendedGroup</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::ExtendedMultiVector</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::ExtendedVector</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::PhippsBordering</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::SalingerBordering</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::SolverFactory</class>
    <class kind="class">LOCA::Pitchfork::MooreSpence::SolverStrategy</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::SaveEigenData</name>
    <filename>namespaceLOCA_1_1SaveEigenData.html</filename>
    <class kind="class">LOCA::SaveEigenData::AbstractStrategy</class>
    <class kind="class">LOCA::SaveEigenData::DefaultStrategy</class>
    <class kind="class">LOCA::SaveEigenData::Factory</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::SingularJacobianSolve</name>
    <filename>namespaceLOCA_1_1SingularJacobianSolve.html</filename>
    <class kind="class">LOCA::SingularJacobianSolve::Default</class>
    <class kind="class">LOCA::SingularJacobianSolve::Generic</class>
    <class kind="class">LOCA::SingularJacobianSolve::ItRef</class>
    <class kind="class">LOCA::SingularJacobianSolve::Manager</class>
    <class kind="class">LOCA::SingularJacobianSolve::Nic</class>
    <class kind="class">LOCA::SingularJacobianSolve::NicDay</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Solver</name>
    <filename>namespaceLOCA_1_1Solver.html</filename>
    <class kind="class">LOCA::Solver::Wrapper</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::StatusTest</name>
    <filename>namespaceLOCA_1_1StatusTest.html</filename>
    <class kind="class">LOCA::StatusTest::Abstract</class>
    <class kind="class">LOCA::StatusTest::Combo</class>
    <class kind="class">LOCA::StatusTest::Factory</class>
    <class kind="class">LOCA::StatusTest::MaxIters</class>
    <class kind="class">LOCA::StatusTest::Wrapper</class>
    <member kind="enumeration">
      <type></type>
      <name>StatusType</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>adc7438be1497d6caf1b698fba7bbe4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Finished</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>adc7438be1497d6caf1b698fba7bbe4fdafdcc18da996ff065ab3ad7bffbd3609a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Failed</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>adc7438be1497d6caf1b698fba7bbe4fda415abe0ca52b038700bec6e918456b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotFinished</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>adc7438be1497d6caf1b698fba7bbe4fda7d81424b2c6c44d2cbef621af595ed82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unevaluated</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>adc7438be1497d6caf1b698fba7bbe4fda28367a27bf70f548acd011787b99f81d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CheckType</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>a2e989cc4f698eda74ea14b3589150ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Complete</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>a2e989cc4f698eda74ea14b3589150ce8a5b104891908e6e01b06a8c5bbd82f4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minimal</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>a2e989cc4f698eda74ea14b3589150ce8ad435d0bae4f5f299187837975be530dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>namespaceLOCA_1_1StatusTest.html</anchorfile>
      <anchor>a2e989cc4f698eda74ea14b3589150ce8a59d1106c6ef15f27da9bd9522994919b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>LOCA::StepSize</name>
    <filename>namespaceLOCA_1_1StepSize.html</filename>
    <class kind="class">LOCA::StepSize::AbstractStrategy</class>
    <class kind="class">LOCA::StepSize::Adaptive</class>
    <class kind="class">LOCA::StepSize::Constant</class>
    <class kind="class">LOCA::StepSize::Factory</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::Thyra</name>
    <filename>namespaceLOCA_1_1Thyra.html</filename>
    <class kind="class">LOCA::Thyra::Group</class>
    <class kind="class">LOCA::Thyra::GroupWrapper</class>
    <class kind="class">LOCA::Thyra::SaveDataStrategy</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::TurningPoint</name>
    <filename>namespaceLOCA_1_1TurningPoint.html</filename>
    <namespace>LOCA::TurningPoint::MinimallyAugmented</namespace>
    <namespace>LOCA::TurningPoint::MooreSpence</namespace>
  </compound>
  <compound kind="namespace">
    <name>LOCA::TurningPoint::MinimallyAugmented</name>
    <filename>namespaceLOCA_1_1TurningPoint_1_1MinimallyAugmented.html</filename>
    <class kind="class">LOCA::TurningPoint::MinimallyAugmented::AbstractGroup</class>
    <class kind="class">LOCA::TurningPoint::MinimallyAugmented::Constraint</class>
    <class kind="class">LOCA::TurningPoint::MinimallyAugmented::ExtendedGroup</class>
    <class kind="class">LOCA::TurningPoint::MinimallyAugmented::FiniteDifferenceGroup</class>
    <class kind="class">LOCA::TurningPoint::MinimallyAugmented::ModifiedConstraint</class>
  </compound>
  <compound kind="namespace">
    <name>LOCA::TurningPoint::MooreSpence</name>
    <filename>namespaceLOCA_1_1TurningPoint_1_1MooreSpence.html</filename>
    <class kind="class">LOCA::TurningPoint::MooreSpence::AbstractGroup</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::ExtendedGroup</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::ExtendedMultiVector</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::ExtendedVector</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::FiniteDifferenceGroup</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::PhippsBordering</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::SalingerBordering</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::SolverFactory</class>
    <class kind="class">LOCA::TurningPoint::MooreSpence::SolverStrategy</class>
  </compound>
  <compound kind="namespace">
    <name>NOX</name>
    <filename>namespaceNOX.html</filename>
    <namespace>NOX::Abstract</namespace>
    <namespace>NOX::Direction</namespace>
    <namespace>NOX::Epetra</namespace>
    <namespace>NOX::LAPACK</namespace>
    <namespace>NOX::LineSearch</namespace>
    <namespace>NOX::Petsc</namespace>
    <namespace>NOX::Solver</namespace>
    <namespace>NOX::StatusTest</namespace>
    <namespace>NOX::Thyra</namespace>
    <class kind="class">NOX::GlobalData</class>
    <class kind="class">NOX::MatrixFreeModelEvaluatorDecorator</class>
    <class kind="class">NOX::MultiVector</class>
    <class kind="class">NOX::PrePostOperatorVector</class>
    <class kind="class">NOX::Random</class>
    <class kind="class">NOX::RowSumScaling</class>
    <class kind="class">NOX::SharedObject</class>
    <class kind="class">NOX::Utils</class>
    <member kind="enumeration">
      <type></type>
      <name>CopyType</name>
      <anchorfile>namespaceNOX.html</anchorfile>
      <anchor>a053a1ab5b2b3bd9546883b949142c592</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DeepCopy</name>
      <anchorfile>namespaceNOX.html</anchorfile>
      <anchor>a053a1ab5b2b3bd9546883b949142c592af22ab6417594618436dfab3f95f98261</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShapeCopy</name>
      <anchorfile>namespaceNOX.html</anchorfile>
      <anchor>a053a1ab5b2b3bd9546883b949142c592a9e3ccd93557182819f2dbc8d7f5c7dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespaceNOX.html</anchorfile>
      <anchor>a17bdb814abc14d0cd12944d4633d4e19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NOX::Abstract</name>
    <filename>namespaceNOX_1_1Abstract.html</filename>
    <class kind="class">NOX::Abstract::Group</class>
    <class kind="class">NOX::Abstract::ImplicitWeighting</class>
    <class kind="class">NOX::Abstract::MultiVector</class>
    <class kind="class">NOX::Abstract::PrePostOperator</class>
    <class kind="class">NOX::Abstract::Vector</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::Direction</name>
    <filename>namespaceNOX_1_1Direction.html</filename>
    <class kind="class">NOX::Direction::Broyden</class>
    <class kind="class">NOX::Direction::Factory</class>
    <class kind="class">NOX::Direction::Generic</class>
    <class kind="class">NOX::Direction::Newton</class>
    <class kind="class">NOX::Direction::NonlinearCG</class>
    <class kind="class">NOX::Direction::SteepestDescent</class>
    <class kind="class">NOX::Direction::UserDefinedFactory</class>
    <class kind="class">NOX::Direction::UserDefinedFactoryT</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::Epetra</name>
    <filename>namespaceNOX_1_1Epetra.html</filename>
    <namespace>NOX::Epetra::Interface</namespace>
    <class kind="class">NOX::Epetra::AdaptiveSolutionManager</class>
    <class kind="class">NOX::Epetra::AdaptManager</class>
    <class kind="class">NOX::Epetra::BroydenOperator</class>
    <class kind="class">NOX::Epetra::FiniteDifference</class>
    <class kind="class">NOX::Epetra::FiniteDifferenceColoring</class>
    <class kind="class">NOX::Epetra::FiniteDifferenceColoringWithUpdate</class>
    <class kind="class">NOX::Epetra::Group</class>
    <class kind="class">NOX::Epetra::LinearSystem</class>
    <class kind="class">NOX::Epetra::LinearSystemAztecOO</class>
    <class kind="class">NOX::Epetra::MatrixFree</class>
    <class kind="class">NOX::Epetra::MultiVector</class>
    <class kind="class">NOX::Epetra::Observer</class>
    <class kind="class">NOX::Epetra::Scaling</class>
    <class kind="class">NOX::Epetra::Vector</class>
    <class kind="class">NOX::Epetra::VectorSpace</class>
    <class kind="class">NOX::Epetra::VectorSpaceL2</class>
    <class kind="class">NOX::Epetra::VectorSpaceScaledL2</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::Epetra::Interface</name>
    <filename>namespaceNOX_1_1Epetra_1_1Interface.html</filename>
    <class kind="class">NOX::Epetra::Interface::Jacobian</class>
    <class kind="class">NOX::Epetra::Interface::Preconditioner</class>
    <class kind="class">NOX::Epetra::Interface::Required</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::LAPACK</name>
    <filename>namespaceNOX_1_1LAPACK.html</filename>
    <class kind="class">NOX::LAPACK::Group</class>
    <class kind="class">NOX::LAPACK::Interface</class>
    <class kind="class">NOX::LAPACK::LinearSolver</class>
    <class kind="class">NOX::LAPACK::Matrix</class>
    <class kind="class">NOX::LAPACK::Vector</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>ac33430b8de098dbbce9350ab0dc77a41</anchor>
      <arglist>(std::ostream &amp;stream, const NOX::LAPACK::Vector &amp;v)</arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>d_one</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>aa17b71d4be397db0fb9d801b281f2e27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>d_mone</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>a4336464be8a5ac63349defa1f985337f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>d_zero</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>a9c8382d0e26e5d6465446984716ade33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>i_one</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>ac5201e598de33614b441b8aaed346361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>i_zero</name>
      <anchorfile>namespaceNOX_1_1LAPACK.html</anchorfile>
      <anchor>a7c00ffa91e1268638a467f3558540e87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NOX::LineSearch</name>
    <filename>namespaceNOX_1_1LineSearch.html</filename>
    <namespace>NOX::LineSearch::Utils</namespace>
    <class kind="class">NOX::LineSearch::Backtrack</class>
    <class kind="class">NOX::LineSearch::Factory</class>
    <class kind="class">NOX::LineSearch::FullStep</class>
    <class kind="class">NOX::LineSearch::Generic</class>
    <class kind="class">NOX::LineSearch::MoreThuente</class>
    <class kind="class">NOX::LineSearch::NonlinearCG</class>
    <class kind="class">NOX::LineSearch::Polynomial</class>
    <class kind="class">NOX::LineSearch::SafeguardedDirection</class>
    <class kind="class">NOX::LineSearch::SafeguardedStep</class>
    <class kind="class">NOX::LineSearch::UserDefinedFactory</class>
    <class kind="class">NOX::LineSearch::UserDefinedFactoryT</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::LineSearch::Utils</name>
    <filename>namespaceNOX_1_1LineSearch_1_1Utils.html</filename>
    <class kind="class">NOX::LineSearch::Utils::Counters</class>
    <class kind="class">NOX::LineSearch::Utils::Printing</class>
    <class kind="class">NOX::LineSearch::Utils::Slope</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::Multiphysics::Solver</name>
    <filename>namespaceNOX_1_1Multiphysics_1_1Solver.html</filename>
    <class kind="class">NOX::Multiphysics::Solver::FixedPointBased</class>
    <class kind="class">NOX::Multiphysics::Solver::Generic</class>
    <class kind="class">NOX::Multiphysics::Solver::Manager</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::Petsc</name>
    <filename>namespaceNOX_1_1Petsc.html</filename>
    <class kind="class">NOX::Petsc::Group</class>
    <class kind="class">NOX::Petsc::Interface</class>
    <class kind="class">NOX::Petsc::Options</class>
    <class kind="class">NOX::Petsc::SharedJacobian</class>
    <class kind="class">NOX::Petsc::Vector</class>
  </compound>
  <compound kind="namespace">
    <name>NOX::Solver</name>
    <filename>namespaceNOX_1_1Solver.html</filename>
    <class kind="class">NOX::Solver::AndersonAcceleration</class>
    <class kind="class">NOX::Solver::Factory</class>
    <class kind="class">NOX::Solver::Generic</class>
    <class kind="class">NOX::Solver::InexactTrustRegionBased</class>
    <class kind="class">NOX::Solver::LineSearchBased</class>
    <class kind="class">NOX::Solver::PrePostOperator</class>
    <class kind="class">NOX::Solver::PseudoTransient</class>
    <class kind="class">NOX::Solver::TensorBased</class>
    <class kind="class">NOX::Solver::TrustRegionBased</class>
    <member kind="function">
      <type>NOX::StatusTest::CheckType</type>
      <name>parseStatusTestCheckType</name>
      <anchorfile>namespaceNOX_1_1Solver.html</anchorfile>
      <anchor>a19581f78a832a9d41f9cb05d2f6db8c0</anchor>
      <arglist>(Teuchos::ParameterList &amp;solver_options_list)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NOX::StatusTest</name>
    <filename>namespaceNOX_1_1StatusTest.html</filename>
    <class kind="class">NOX::StatusTest::Combo</class>
    <class kind="class">NOX::StatusTest::Divergence</class>
    <class kind="class">NOX::StatusTest::Factory</class>
    <class kind="class">NOX::StatusTest::FiniteValue</class>
    <class kind="class">NOX::StatusTest::Generic</class>
    <class kind="class">NOX::StatusTest::MaxIters</class>
    <class kind="class">NOX::StatusTest::NormF</class>
    <class kind="class">NOX::StatusTest::NormUpdate</class>
    <class kind="class">NOX::StatusTest::NormWRMS</class>
    <class kind="class">NOX::StatusTest::NStep</class>
    <class kind="class">NOX::StatusTest::RelativeNormF</class>
    <class kind="class">NOX::StatusTest::Stagnation</class>
    <member kind="enumeration">
      <type></type>
      <name>StatusType</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>aa46b1f439192e784b8434b16a99665e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unevaluated</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>aa46b1f439192e784b8434b16a99665e1a6ac71a5f55d9004791b6b2f73504f62c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unconverged</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>aa46b1f439192e784b8434b16a99665e1aa2321c082108023645f6ea11162ade37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Converged</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>aa46b1f439192e784b8434b16a99665e1a941d61554b145352c9e8b2066e7e4172</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Failed</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>aa46b1f439192e784b8434b16a99665e1a55694826ff6ae1040df75058ed659211</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CheckType</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>a7c9d9087fff0cfe208e9edc1603ab14e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Complete</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>a7c9d9087fff0cfe208e9edc1603ab14ea83970a3e0659ad53f7fea353e46e0878</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Minimal</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>a7c9d9087fff0cfe208e9edc1603ab14eabced0035fd47247ae26d0827efab8c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>namespaceNOX_1_1StatusTest.html</anchorfile>
      <anchor>a7c9d9087fff0cfe208e9edc1603ab14ea59885c781130165ed442637e2438b4c1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NOX::Thyra</name>
    <filename>namespaceNOX_1_1Thyra.html</filename>
    <class kind="class">NOX::Thyra::Group</class>
    <class kind="class">NOX::Thyra::MatrixFreeJacobianOperator</class>
    <class kind="class">NOX::Thyra::MultiVector</class>
    <class kind="class">NOX::Thyra::Vector</class>
    <class kind="class">NOX::Thyra::WeightedMeritFunction</class>
  </compound>
  <compound kind="page">
    <name>nox_user_information</name>
    <title>NOX User Information</title>
    <filename>nox_user_information</filename>
    <docanchor file="nox_user_information" title="Overview">overview</docanchor>
    <docanchor file="nox_user_information" title="Generating Documentation">documentation</docanchor>
    <docanchor file="nox_user_information">Quicklinks</docanchor>
  </compound>
  <compound kind="page">
    <name>step1</name>
    <title>Step 1: Download, Configure, Compile, and Install NOX</title>
    <filename>step1</filename>
    <docanchor file="step1" title="Downloading and Unpacking NOX">step1_download</docanchor>
    <docanchor file="step1" title="If you have problems...">step1_problems</docanchor>
    <docanchor file="step1" title="Moving on...">step1_moving_on</docanchor>
  </compound>
  <compound kind="page">
    <name>step2</name>
    <title>Step 2: Create concrete implementations of the NOX::Abstract classes</title>
    <filename>step2</filename>
    <docanchor file="step2" title="NOX abstract classes">step2_abstract</docanchor>
    <docanchor file="step2" title="Writing your own instantiation">step2_writing</docanchor>
    <docanchor file="step2" title="Instantiations provided with NOX">step2_instantiations</docanchor>
    <docanchor file="step2" title="If you have problems...">step2_problems</docanchor>
    <docanchor file="step2" title="Moving on...">step2_moving_on</docanchor>
  </compound>
  <compound kind="page">
    <name>step3</name>
    <title>Step 3: Call NOX from your code</title>
    <filename>step3</filename>
    <docanchor file="step3" title="Step A: Instantiate a Group object containing the initial guess.">step3_stepa</docanchor>
    <docanchor file="step3" title="Step B: Construct the status tests">step3_stepb</docanchor>
    <docanchor file="step3" title="Step C: Set the solver parameters">step3_stepc</docanchor>
    <docanchor file="step3" title="Step D: Construct the solver and solve">step3_stepd</docanchor>
    <docanchor file="step3" title="If you have problems...">step3_problems</docanchor>
    <docanchor file="step3" title="Moving on...">step3_moving_on</docanchor>
  </compound>
  <compound kind="page">
    <name>step4</name>
    <title>Step 4: Link your code to NOX</title>
    <filename>step4</filename>
    <docanchor file="step4" title="Using the Export Makefile System">step4_export_makefiles</docanchor>
    <docanchor file="step4" title="Compiling Without using Export Makefiles">step4_basics</docanchor>
    <docanchor file="step4" title="If you have problems...">step4_problems</docanchor>
  </compound>
  <compound kind="page">
    <name>nox_developer_information</name>
    <title>NOX Developer Information</title>
    <filename>nox_developer_information</filename>
  </compound>
  <compound kind="page">
    <name>nox_release_information</name>
    <title>NOX and LOCA Release Information (Last updated March 1st 2010)</title>
    <filename>nox_release_information</filename>
  </compound>
  <compound kind="page">
    <name>nox_configuration_options</name>
    <title>NOX Configuration Options</title>
    <filename>nox_configuration_options</filename>
    <docanchor file="nox_configuration_options" title="Basic Options">basic_config</docanchor>
    <docanchor file="nox_configuration_options" title="LAPACK-Related Options">lapack_options</docanchor>
    <docanchor file="nox_configuration_options" title="Epetra-Related Options">epetra_options</docanchor>
    <docanchor file="nox_configuration_options" title="Thyra-Related Options">thyra_options</docanchor>
    <docanchor file="nox_configuration_options" title="PETSc-Related Options">petsc_options</docanchor>
    <docanchor file="nox_configuration_options" title="LOCA-Related Options">loca_config</docanchor>
    <docanchor file="nox_configuration_options" title="Developer-Related Options">developer_config</docanchor>
  </compound>
  <compound kind="page">
    <name>prerelease</name>
    <title>NOX Developer&apos;s Guide to Prerelease Code</title>
    <filename>prerelease</filename>
  </compound>
  <compound kind="page">
    <name>cvsrepos</name>
    <title>NOX Developer&apos;s Guide to the Git Repository for NOX</title>
    <filename>cvsrepos</filename>
  </compound>
  <compound kind="page">
    <name>coding</name>
    <title>NOX Developer&apos;s Coding Guidelines</title>
    <filename>coding</filename>
  </compound>
  <compound kind="page">
    <name>nox_class_overview</name>
    <title>NOX Class Overview</title>
    <filename>nox_class_overview</filename>
  </compound>
  <compound kind="page">
    <name>parameters</name>
    <title>NOX Parameter Reference Page</title>
    <filename>parameters</filename>
  </compound>
  <compound kind="page">
    <name>epetra_interface</name>
    <title>The Epetra Interface</title>
    <filename>epetra_interface</filename>
    <docanchor file="epetra_interface" title="Implementing the Interfaces">epetra_interface_derived</docanchor>
    <docanchor file="epetra_interface" title="Optional Operators">epetra_interface_operators</docanchor>
    <docanchor file="epetra_interface" title="Notes on NOX/Epetra:">epetra_interface_notes</docanchor>
    <docanchor file="epetra_interface" title="Special Epetra Features">epetra_features</docanchor>
    <docanchor file="epetra_interface" title="NOX Epetra Tutorial">nox_tutorial_link</docanchor>
  </compound>
  <compound kind="page">
    <name>thyra_interface</name>
    <title>The Thyra Interface</title>
    <filename>thyra_interface</filename>
    <docanchor file="thyra_interface" title="Implementing the Interfaces">thyra_interface_derived</docanchor>
  </compound>
  <compound kind="page">
    <name>petsc_interface</name>
    <title>The PETSc Interface</title>
    <filename>petsc_interface</filename>
    <docanchor file="petsc_interface" title="Building the Library">build_nox_petsc_library</docanchor>
    <docanchor file="petsc_interface" title="Building the Examples">build_nox_petsc_examples</docanchor>
    <docanchor file="petsc_interface" title="Additional Information">additional_nox_petsc_build_information</docanchor>
  </compound>
  <compound kind="page">
    <name>nox_epetra_tutorial</name>
    <title>NOX Epetra Tutorial</title>
    <filename>nox_epetra_tutorial</filename>
  </compound>
  <compound kind="page">
    <name>portability_issues</name>
    <title>Portability Issues</title>
    <filename>portability_issues</filename>
  </compound>
  <compound kind="page">
    <name>loca_overview</name>
    <title>LOCA Overview</title>
    <filename>loca_overview</filename>
    <docanchor file="loca_overview" title="Introduction">loca_intro</docanchor>
    <docanchor file="loca_overview" title="LOCA User Information">loca_user</docanchor>
    <docanchor file="loca_overview" title="Class Overview">loca_classes</docanchor>
    <docanchor file="loca_overview" title="Parameter Specifications">loca_params</docanchor>
    <docanchor file="loca_overview" title="Tutorials">loca_tutorials</docanchor>
  </compound>
  <compound kind="page">
    <name>loca_class_overview</name>
    <title>LOCA Class Overview</title>
    <filename>loca_class_overview</filename>
    <docanchor file="loca_class_overview" title="Continuation Classes">continuation</docanchor>
    <docanchor file="loca_class_overview" title="Bifurcation Classes">bifurcation</docanchor>
    <docanchor file="loca_class_overview" title="Parameter Stepping Classes">stepping</docanchor>
  </compound>
  <compound kind="page">
    <name>loca_parameters</name>
    <title>LOCA Parameter Reference Page</title>
    <filename>loca_parameters</filename>
    <docanchor file="loca_parameters" title="Stepper Parameters">stepper_params</docanchor>
    <docanchor file="loca_parameters" title="User-Defined Strategies Through Parameter Lists">user_defined_list</docanchor>
    <docanchor file="loca_parameters" title="User-Defined Strategies Through Factories">user_defined_factory</docanchor>
    <docanchor file="loca_parameters" title="Epetra Factory">epetra_factory</docanchor>
    <docanchor file="loca_parameters" title="LAPACK Factory">lapack_factory</docanchor>
  </compound>
  <compound kind="page">
    <name>loca_user_info</name>
    <title>LOCA User Information</title>
    <filename>loca_user_info</filename>
    <docanchor file="loca_user_info" title="Overview">loca_user_info_overview</docanchor>
    <docanchor file="loca_user_info" title="Step 1: Download, Configure, Compile, and Install LOCA">loca_user_info_step_1</docanchor>
    <docanchor file="loca_user_info" title="Step 2: Create concrete implementations of the LOCA AbstractGroup classes">loca_user_info_step_2</docanchor>
    <docanchor file="loca_user_info" title="Writing your own implementation">loca_user_info_step_2_writing_implementation</docanchor>
    <docanchor file="loca_user_info" title="Implementations provided with LOCA">loca_user_info_step_2_loca_implementations</docanchor>
    <docanchor file="loca_user_info" title="Step 3: Call LOCA from your code">loca_user_info_step_3</docanchor>
    <docanchor file="loca_user_info" title="Step 4: Link your code to LOCA">loca_user_info_step_4</docanchor>
    <docanchor file="loca_user_info" title="If you have problems...">loca_user_info_problems</docanchor>
  </compound>
  <compound kind="page">
    <name>loca_continuation_tutorial</name>
    <title>LOCA Continuation Tutorial</title>
    <filename>loca_continuation_tutorial</filename>
    <docanchor file="loca_continuation_tutorial" title="Overview">loca_continuation_tutorial_overview</docanchor>
    <docanchor file="loca_continuation_tutorial" title="ChanContinuation.C Line by Line">loca_continuation_tutorial_code</docanchor>
  </compound>
  <compound kind="page">
    <name>loca_tp_continuation_tutorial</name>
    <title>LOCA Turning Point Continuation Tutorial</title>
    <filename>loca_tp_continuation_tutorial</filename>
    <docanchor file="loca_tp_continuation_tutorial" title="Overview">loca_tp_continuation_tutorial_overview</docanchor>
    <docanchor file="loca_tp_continuation_tutorial" title="ChanTPContinuation.C">loca_tp_continuation_tutorial_code</docanchor>
  </compound>
  <compound kind="page">
    <name>new_loca_framework</name>
    <title>New LOCA Framework</title>
    <filename>new_loca_framework</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>NOX &amp; LOCA: Object-Oriented Nonlinear Solver and Continuation Packages</title>
    <filename>index</filename>
    <docanchor file="index" title="Introduction">introduction</docanchor>
    <docanchor file="index" title="Announcements">announcements</docanchor>
    <docanchor file="index" title="Technical Information">technical_information</docanchor>
    <docanchor file="index" title="License">license</docanchor>
    <docanchor file="index" title="Downloads">downloads</docanchor>
    <docanchor file="index" title="Reporting Bugs and Making Enhancement Requests">bugs</docanchor>
    <docanchor file="index" title="Mailing Lists">email</docanchor>
    <docanchor file="index" title="NOX &amp; LOCA Contributors">contributors</docanchor>
    <docanchor file="index" title="For All Other Questions and Comments...">questions</docanchor>
    <docanchor file="index" title="Outline">Epetra_outline</docanchor>
    <docanchor file="index" title="Introduction">Epetra_intro</docanchor>
    <docanchor file="index" title="Overview of Epetra.">Epetra_startup</docanchor>
    <docanchor file="index" title="Epetra Classes">Epetra_formulations</docanchor>
    <docanchor file="index" title="Fortran and C Support">Epetra_wrappers</docanchor>
    <docanchor file="index" title="Trilinos and Epetra">Epetra_trilinos</docanchor>
    <docanchor file="index" title="Transition support for current Aztec users">Epetra_aztec2trilinos</docanchor>
    <docanchor file="index" title="Extending Epetra functionality">Epetra_extending</docanchor>
    <docanchor file="index" title="Why not abstract multivector and vector classes?">why_not_abstract_vector</docanchor>
    <docanchor file="index" title="Tutorial lessons">Epetra_example</docanchor>
    <docanchor file="index" title="Epetra adapters for Thyra and PyTrilinos">Epetra_adapters</docanchor>
    <docanchor file="index" title="Browse all of Epetra as a single doxygen collection">Epetra_browser</docanchor>
  </compound>
</tagfile>
