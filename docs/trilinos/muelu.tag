<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>Belos.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>Belos_8txt</filename>
  </compound>
  <compound kind="file">
    <name>BelosMueLu.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosMueLu_8txt</filename>
  </compound>
  <compound kind="file">
    <name>BelosMueLuAdapter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosMueLuAdapter_8hpp</filename>
    <includes id="BelosOperatorT_8hpp" name="BelosOperatorT.hpp" local="no" imported="no">BelosOperatorT.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">Belos::MueLuOpFailure</class>
    <class kind="class">Belos::MueLuOp</class>
    <namespace>Belos</namespace>
  </compound>
  <compound kind="file">
    <name>BelosOperatorT.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosOperatorT_8hpp</filename>
    <class kind="class">Belos::OperatorT</class>
    <class kind="class">Belos::OperatorTraits&lt; ScalarType, MV, OperatorT&lt; MV &gt; &gt;</class>
    <namespace>Belos</namespace>
  </compound>
  <compound kind="file">
    <name>BelosXpetraAdapter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosXpetraAdapter_8hpp</filename>
    <includes id="BelosXpetraAdapterOperator_8hpp" name="BelosXpetraAdapterOperator.hpp" local="no" imported="no">BelosXpetraAdapterOperator.hpp</includes>
    <includes id="BelosXpetraAdapterMultiVector_8hpp" name="BelosXpetraAdapterMultiVector.hpp" local="no" imported="no">BelosXpetraAdapterMultiVector.hpp</includes>
  </compound>
  <compound kind="file">
    <name>BelosXpetraAdapterMultiVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosXpetraAdapterMultiVector_8hpp</filename>
    <class kind="class">Belos::MultiVecTraits&lt; Scalar, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</class>
    <namespace>Belos</namespace>
  </compound>
  <compound kind="file">
    <name>BelosXpetraAdapterOperator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosXpetraAdapterOperator_8hpp</filename>
    <includes id="BelosOperatorT_8hpp" name="BelosOperatorT.hpp" local="no" imported="no">BelosOperatorT.hpp</includes>
    <class kind="class">Belos::XpetraOpFailure</class>
    <class kind="class">Belos::XpetraOp</class>
    <class kind="class">Belos::XpetraOp&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">Belos::XpetraOp&lt; double, int, long long, Xpetra::EpetraNode &gt;</class>
    <namespace>Belos</namespace>
  </compound>
  <compound kind="file">
    <name>BelosXpetraStatusTestGenResSubNorm.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/belos/</path>
    <filename>BelosXpetraStatusTestGenResSubNorm_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="BelosOperatorT_8hpp" name="BelosOperatorT.hpp" local="no" imported="no">BelosOperatorT.hpp</includes>
    <includes id="BelosXpetraAdapterOperator_8hpp" name="BelosXpetraAdapterOperator.hpp" local="no" imported="no">BelosXpetraAdapterOperator.hpp</includes>
    <class kind="class">Belos::StatusTestGenResSubNorm&lt; Scalar, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;, Belos::OperatorT&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</class>
    <namespace>Belos</namespace>
  </compound>
  <compound kind="file">
    <name>src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/</path>
    <filename>src_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>src_2CMakeLists_8txt.html</anchorfile>
      <anchor>a9c88a4b387e95f9f171d97edbf184372</anchor>
      <arglist>(${PACKAGE_NAME}_ENABLE_Epetra) if($</arglist>
    </member>
    <member kind="function">
      <type>DASHPOS</type>
      <name>string</name>
      <anchorfile>src_2CMakeLists_8txt.html</anchorfile>
      <anchor>a2a29edfad9e8231b153a0c4af2a5b52d</anchor>
      <arglist>(SUBSTRING ${CLASS}0 ${DASHPOS}CLASS_NAME) set(CONDITION_NAME&quot;&quot;) set(CONDITION_NAME_END&quot;&quot;) string(SUBSTRING $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>src/Interface/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>src_2Interface_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>src_2Interface_2CMakeLists_8txt.html</anchorfile>
      <anchor>a27cbbf3765fa142a6a7e8b0840304f0b</anchor>
      <arglist>(${PACKAGE_NAME}_ENABLE_Tpetra) MUELU_PROCESS_ETI_TEMPLATE(&quot;../Utils/ExplicitInstantiation&quot;&quot;$</arglist>
    </member>
    <member kind="function">
      <type>ExplicitInstantiation CLASS_FILE_NAME MueLuInterface_ETI_SC_LO_GO_NO_SRC</type>
      <name>ENDIF</name>
      <anchorfile>src_2Interface_2CMakeLists_8txt.html</anchorfile>
      <anchor>a34d2380a609b128580fc038136ea0fdf</anchor>
      <arglist>() TRIBITS_ADD_LIBRARY(muelu-interface HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adapters/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/</path>
    <filename>adapters_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>APPEND_SET</name>
      <anchorfile>adapters_2CMakeLists_8txt.html</anchorfile>
      <anchor>a3ddb145c5515a00d24d46bfc3bb327c8</anchor>
      <arglist>(HEADERS belos/BelosOperatorT.hpp belos/BelosXpetraAdapter.hpp belos/BelosXpetraAdapterMultiVector.hpp belos/BelosXpetraAdapterOperator.hpp belos/BelosXpetraStatusTestGenResSubNorm.hpp belos/BelosMueLuAdapter.hpp) APPEND_SET(HEADERS epetra/MueLu_EpetraOperator.hpp epetra/MueLu_CreateEpetraPreconditioner.hpp) APPEND_SET(SOURCES epetra/MueLu_EpetraOperator.cpp) APPEND_SET(HEADERS tpetra/MueLu_CreateTpetraPreconditioner.hpp tpetra/MueLu_TpetraOperator_decl.hpp tpetra/MueLu_TpetraOperator_def.hpp) APPEND_SET(HEADERS tpetra/MueLu_RefMaxwell_decl.hpp tpetra/MueLu_RefMaxwell_def.hpp tpetra/MueLu_ShiftedLaplacian_decl.hpp tpetra/MueLu_ShiftedLaplacian_def.hpp tpetra/MueLu_ShiftedLaplacianOperator_decl.hpp tpetra/MueLu_ShiftedLaplacianOperator_def.hpp) APPEND_SET(HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>matlab/src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>matlab_2src_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>if</name>
      <anchorfile>matlab_2src_2CMakeLists_8txt.html</anchorfile>
      <anchor>a1058b1d955940748b989724b038b1549</anchor>
      <arglist>(TPL_ENABLE_MATLAB) TRIBITS_ADD_LIBRARY(muelu-matlab HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mac.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/</path>
    <filename>mac_8cpp</filename>
    <member kind="function">
      <type>void</type>
      <name>libmuelu_adapters</name>
      <anchorfile>mac_8cpp.html</anchorfile>
      <anchor>ab6aff5b2499164e9afd7bf842c0bfc73</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ML_Linker.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>ML__Linker_8hpp</filename>
    <member kind="function">
      <type>MueLu_Graph *</type>
      <name>MueLu_BuildGraph</name>
      <anchorfile>ML__Linker_8hpp.html</anchorfile>
      <anchor>adc353c99cc302e26706eada851dca2dd</anchor>
      <arglist>(ML_Matrix *Amatrix, char *name)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>MueLu_DestroyGraph</name>
      <anchorfile>ML__Linker_8hpp.html</anchorfile>
      <anchor>a4ec473e0cd1278ce81eb922714396a3c</anchor>
      <arglist>(MueLu_Graph *graph)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ML_Aggregate_CoarsenUncoupled</name>
      <anchorfile>ML__Linker_8hpp.html</anchorfile>
      <anchor>ac7388338fc3ddb17dbd615f505a9702d</anchor>
      <arglist>(ML_Aggregate *mlAggregates, ML_Matrix *Amatrix, ML_Matrix **Pmatrix, ML_Comm *comm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AdaptiveSaMLParameterListInterpreter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__AdaptiveSaMLParameterListInterpreter_8cpp</filename>
    <includes id="MueLu__AdaptiveSaMLParameterListInterpreter__def_8hpp" name="MueLu_AdaptiveSaMLParameterListInterpreter_def.hpp" local="yes" imported="no">MueLu_AdaptiveSaMLParameterListInterpreter_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__AdaptiveSaMLParameterListInterpreter_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AdaptiveSaMLParameterListInterpreter_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__AdaptiveSaMLParameterListInterpreter__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__HierarchyManager_8hpp" name="MueLu_HierarchyManager.hpp" local="yes" imported="no">MueLu_HierarchyManager.hpp</includes>
    <includes id="MueLu__AdaptiveSaMLParameterListInterpreter__fwd_8hpp" name="MueLu_AdaptiveSaMLParameterListInterpreter_fwd.hpp" local="yes" imported="no">MueLu_AdaptiveSaMLParameterListInterpreter_fwd.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__SaPFactory__fwd_8hpp" name="MueLu_SaPFactory_fwd.hpp" local="yes" imported="no">MueLu_SaPFactory_fwd.hpp</includes>
    <includes id="MueLu__PgPFactory__fwd_8hpp" name="MueLu_PgPFactory_fwd.hpp" local="yes" imported="no">MueLu_PgPFactory_fwd.hpp</includes>
    <includes id="MueLu__TransPFactory__fwd_8hpp" name="MueLu_TransPFactory_fwd.hpp" local="yes" imported="no">MueLu_TransPFactory_fwd.hpp</includes>
    <includes id="MueLu__GenericRFactory__fwd_8hpp" name="MueLu_GenericRFactory_fwd.hpp" local="yes" imported="no">MueLu_GenericRFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__TrilinosSmoother__fwd_8hpp" name="MueLu_TrilinosSmoother_fwd.hpp" local="yes" imported="no">MueLu_TrilinosSmoother_fwd.hpp</includes>
    <includes id="MueLu__IfpackSmoother__fwd_8hpp" name="MueLu_IfpackSmoother_fwd.hpp" local="yes" imported="no">MueLu_IfpackSmoother_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__HierarchyUtils__fwd_8hpp" name="MueLu_HierarchyUtils_fwd.hpp" local="yes" imported="no">MueLu_HierarchyUtils_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__CoalesceDropFactory__fwd_8hpp" name="MueLu_CoalesceDropFactory_fwd.hpp" local="yes" imported="no">MueLu_CoalesceDropFactory_fwd.hpp</includes>
    <includes id="MueLu__CoupledAggregationFactory__fwd_8hpp" name="MueLu_CoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_CoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__UncoupledAggregationFactory__fwd_8hpp" name="MueLu_UncoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_UncoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__NullspaceFactory__fwd_8hpp" name="MueLu_NullspaceFactory_fwd.hpp" local="yes" imported="no">MueLu_NullspaceFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__MLParameterListInterpreter__fwd_8hpp" name="MueLu_MLParameterListInterpreter_fwd.hpp" local="yes" imported="no">MueLu_MLParameterListInterpreter_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::AdaptiveSaMLParameterListInterpreter</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ADAPTIVESAMLPARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__AdaptiveSaMLParameterListInterpreter__decl_8hpp.html</anchorfile>
      <anchor>a7ed250388f6219477d825c558655b55e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AdaptiveSaMLParameterListInterpreter_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__AdaptiveSaMLParameterListInterpreter__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AdaptiveSaMLParameterListInterpreter__decl_8hpp" name="MueLu_AdaptiveSaMLParameterListInterpreter_decl.hpp" local="yes" imported="no">MueLu_AdaptiveSaMLParameterListInterpreter_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__IfpackSmoother_8hpp" name="MueLu_IfpackSmoother.hpp" local="yes" imported="no">MueLu_IfpackSmoother.hpp</includes>
    <includes id="MueLu__ParameterListUtils_8hpp" name="MueLu_ParameterListUtils.hpp" local="yes" imported="no">MueLu_ParameterListUtils.hpp</includes>
    <includes id="MueLu__DisableMultipleCallCheck_8hpp" name="MueLu_DisableMultipleCallCheck.hpp" local="yes" imported="no">MueLu_DisableMultipleCallCheck.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_READ_PARAM</name>
      <anchorfile>MueLu__AdaptiveSaMLParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a849750e0fee4f4fa73c1f6634ba55cc6</anchor>
      <arglist>(paramList, paramStr, varType, defaultValue, varName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COPY_PARAM</name>
      <anchorfile>MueLu__AdaptiveSaMLParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a51d9c125786b5ccb8b144d61369e8a89</anchor>
      <arglist>(paramList, paramStr, varType, defaultValue, outParamList, outParamStr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AdaptiveSaMLParameterListInterpreter_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AdaptiveSaMLParameterListInterpreter__fwd_8hpp</filename>
    <class kind="class">MueLu::AdaptiveSaMLParameterListInterpreter</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ADAPTIVESAMLPARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__AdaptiveSaMLParameterListInterpreter__fwd_8hpp.html</anchorfile>
      <anchor>a7ed250388f6219477d825c558655b55e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AdvSmootherPrototype.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__AdvSmootherPrototype_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::AdvSmootherPrototype</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ADVSMOOTHERPROTOTYPE_SHORT</name>
      <anchorfile>MueLu__AdvSmootherPrototype_8hpp.html</anchorfile>
      <anchor>a8e2761b3765701a504b3eeeb5f11b8f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Aggregates_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__Aggregates__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::Aggregates</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UNAGGREGATED</name>
      <anchorfile>MueLu__Aggregates__decl_8hpp.html</anchorfile>
      <anchor>ab370ea1efe96fcf1adf079ace6c2112c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UNASSIGNED</name>
      <anchorfile>MueLu__Aggregates__decl_8hpp.html</anchorfile>
      <anchor>aed6d1b1a707d08d001fff8890b141d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATES_SHORT</name>
      <anchorfile>MueLu__Aggregates__decl_8hpp.html</anchorfile>
      <anchor>aafb7b24c09fb52966643f1fc0e84c050</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Aggregates_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__Aggregates__def_8hpp</filename>
    <includes id="MueLu__Aggregates__decl_8hpp" name="MueLu_Aggregates_decl.hpp" local="yes" imported="no">MueLu_Aggregates_decl.hpp</includes>
    <includes id="MueLu__Utilities__decl_8hpp" name="MueLu_Utilities_decl.hpp" local="yes" imported="no">MueLu_Utilities_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Aggregates_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Aggregates__fwd_8hpp</filename>
    <class kind="class">MueLu::Aggregates</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATES_SHORT</name>
      <anchorfile>MueLu__Aggregates__fwd_8hpp.html</anchorfile>
      <anchor>aafb7b24c09fb52966643f1fc0e84c050</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Aggregates_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__Aggregates__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATES_KOKKOS_SHORT</name>
      <anchorfile>MueLu__Aggregates__kokkos__decl_8hpp.html</anchorfile>
      <anchor>a5c7b70f719741f2c0605607d08a4a545</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Aggregates_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__Aggregates__kokkos__def_8hpp</filename>
    <includes id="MueLu__Utilities__kokkos__decl_8hpp" name="MueLu_Utilities_kokkos_decl.hpp" local="yes" imported="no">MueLu_Utilities_kokkos_decl.hpp</includes>
    <includes id="MueLu__Aggregates__kokkos__decl_8hpp" name="MueLu_Aggregates_kokkos_decl.hpp" local="yes" imported="no">MueLu_Aggregates_kokkos_decl.hpp</includes>
    <class kind="class">MueLu::ComputeAggregateSizesFunctor</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Aggregates_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Aggregates__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationAlgorithmBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationAlgorithmBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::AggregationAlgorithmBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONALGORITHMBASE_SHORT</name>
      <anchorfile>MueLu__AggregationAlgorithmBase_8hpp.html</anchorfile>
      <anchor>a1c0b9cd7ef19f78ad2643ea54a66542b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationAlgorithmBase_kokkos.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationAlgorithmBase__kokkos_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationExportFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__AggregationExportFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__AggregationExportFactory__fwd_8hpp" name="MueLu_AggregationExportFactory_fwd.hpp" local="yes" imported="no">MueLu_AggregationExportFactory_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::AggregationExportFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONEXPORTFACTORY_SHORT</name>
      <anchorfile>MueLu__AggregationExportFactory__decl_8hpp.html</anchorfile>
      <anchor>a85a18a5bb137be678075c148c4ed1675</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationExportFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__AggregationExportFactory__def_8hpp</filename>
    <includes id="MueLu__AggregationExportFactory__decl_8hpp" name="MueLu_AggregationExportFactory_decl.hpp" local="yes" imported="no">MueLu_AggregationExportFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationExportFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationExportFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::AggregationExportFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONEXPORTFACTORY_SHORT</name>
      <anchorfile>MueLu__AggregationExportFactory__fwd_8hpp.html</anchorfile>
      <anchor>a85a18a5bb137be678075c148c4ed1675</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase1Algorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase1Algorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__AggregationPhase1Algorithm__fwd_8hpp" name="MueLu_AggregationPhase1Algorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase1Algorithm_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::AggregationPhase1Algorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE1ALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase1Algorithm__decl_8hpp.html</anchorfile>
      <anchor>aaceaad5f16ec19ceb4719ec69472e15c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase1Algorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase1Algorithm__def_8hpp</filename>
    <includes id="MueLu__AggregationPhase1Algorithm__decl_8hpp" name="MueLu_AggregationPhase1Algorithm_decl.hpp" local="yes" imported="no">MueLu_AggregationPhase1Algorithm_decl.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase1Algorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase1Algorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::AggregationPhase1Algorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE1ALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase1Algorithm__fwd_8hpp.html</anchorfile>
      <anchor>aaceaad5f16ec19ceb4719ec69472e15c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase1Algorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase1Algorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase1Algorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase1Algorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase1Algorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase1Algorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2aAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2aAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__AggregationPhase2aAlgorithm__fwd_8hpp" name="MueLu_AggregationPhase2aAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase2aAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::AggregationPhase2aAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE2AALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase2aAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>a7fd9e6a202737023c7134e9b1ca2f8a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2aAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2aAlgorithm__def_8hpp</filename>
    <includes id="MueLu__AggregationPhase2aAlgorithm__decl_8hpp" name="MueLu_AggregationPhase2aAlgorithm_decl.hpp" local="yes" imported="no">MueLu_AggregationPhase2aAlgorithm_decl.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2aAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase2aAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::AggregationPhase2aAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE2AALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase2aAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>a7fd9e6a202737023c7134e9b1ca2f8a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2aAlgorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2aAlgorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2aAlgorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2aAlgorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2aAlgorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase2aAlgorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2bAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2bAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__AggregationPhase2bAlgorithm__fwd_8hpp" name="MueLu_AggregationPhase2bAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase2bAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::AggregationPhase2bAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE2BALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase2bAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>a627f2006919550f2b22f16116069eec4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2bAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2bAlgorithm__def_8hpp</filename>
    <includes id="MueLu__AggregationPhase2bAlgorithm__decl_8hpp" name="MueLu_AggregationPhase2bAlgorithm_decl.hpp" local="yes" imported="no">MueLu_AggregationPhase2bAlgorithm_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2bAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase2bAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::AggregationPhase2bAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE2BALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase2bAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>a627f2006919550f2b22f16116069eec4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2bAlgorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2bAlgorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2bAlgorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase2bAlgorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase2bAlgorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase2bAlgorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase3Algorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase3Algorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__AggregationPhase3Algorithm__fwd_8hpp" name="MueLu_AggregationPhase3Algorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase3Algorithm_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::AggregationPhase3Algorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE3ALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase3Algorithm__decl_8hpp.html</anchorfile>
      <anchor>a7a90d84b2dc707714a610e5f35542c9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase3Algorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase3Algorithm__def_8hpp</filename>
    <includes id="MueLu__AggregationPhase3Algorithm__decl_8hpp" name="MueLu_AggregationPhase3Algorithm_decl.hpp" local="yes" imported="no">MueLu_AggregationPhase3Algorithm_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase3Algorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase3Algorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::AggregationPhase3Algorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AGGREGATIONPHASE3ALGORITHM_SHORT</name>
      <anchorfile>MueLu__AggregationPhase3Algorithm__fwd_8hpp.html</anchorfile>
      <anchor>a7a90d84b2dc707714a610e5f35542c9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase3Algorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase3Algorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase3Algorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__AggregationPhase3Algorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_AggregationPhase3Algorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AggregationPhase3Algorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_AlgebraicPermutationStrategy_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__AlgebraicPermutationStrategy__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="struct">MueLu::CompPairs</class>
    <class kind="class">MueLu::AlgebraicPermutationStrategy</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ALGEBRAICPERMUTATIONSTRATEGY_SHORT</name>
      <anchorfile>MueLu__AlgebraicPermutationStrategy__decl_8hpp.html</anchorfile>
      <anchor>af9e22e5bcf76e9a8bf7324e1dfdf70ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>CompPairs&lt; Scalar, LocalOrdinal &gt;</type>
      <name>CreateCmpPairs</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a29de57801d9d4b1ff5ef3e61c7a61da4</anchor>
      <arglist>(const std::vector&lt; Scalar &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortingPermutation</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6b36bdc743a37b311107a0b7687159f9</anchor>
      <arglist>(const std::vector&lt; Scalar &gt; &amp;values, std::vector&lt; LocalOrdinal &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AlgebraicPermutationStrategy_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__AlgebraicPermutationStrategy__def_8hpp</filename>
    <includes id="MueLu__AlgebraicPermutationStrategy__decl_8hpp" name="MueLu_AlgebraicPermutationStrategy_decl.hpp" local="yes" imported="no">MueLu_AlgebraicPermutationStrategy_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AlgebraicPermutationStrategy_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AlgebraicPermutationStrategy__fwd_8hpp</filename>
    <class kind="class">MueLu::AlgebraicPermutationStrategy</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ALGEBRAICPERMUTATIONSTRATEGY_SHORT</name>
      <anchorfile>MueLu__AlgebraicPermutationStrategy__fwd_8hpp.html</anchorfile>
      <anchor>af9e22e5bcf76e9a8bf7324e1dfdf70ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AmalgamationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__AmalgamationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::AmalgamationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMALGAMATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__AmalgamationFactory__decl_8hpp.html</anchorfile>
      <anchor>a0bfa3bb6664492c6f013b631317e0d91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AmalgamationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__AmalgamationFactory__def_8hpp</filename>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AmalgamationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AmalgamationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::AmalgamationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMALGAMATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__AmalgamationFactory__fwd_8hpp.html</anchorfile>
      <anchor>a0bfa3bb6664492c6f013b631317e0d91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AmalgamationInfo_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__AmalgamationInfo__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::AmalgamationInfo</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMALGAMATIONINFO_SHORT</name>
      <anchorfile>MueLu__AmalgamationInfo__decl_8hpp.html</anchorfile>
      <anchor>a9be0b2018f7cdf926fe8338a9a38ebc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AmalgamationInfo_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__AmalgamationInfo__def_8hpp</filename>
    <includes id="MueLu__AmalgamationInfo__decl_8hpp" name="MueLu_AmalgamationInfo_decl.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AmalgamationInfo_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AmalgamationInfo__fwd_8hpp</filename>
    <class kind="class">MueLu::AmalgamationInfo</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMALGAMATIONINFO_SHORT</name>
      <anchorfile>MueLu__AmalgamationInfo__fwd_8hpp.html</anchorfile>
      <anchor>a9be0b2018f7cdf926fe8338a9a38ebc4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Amesos2Smoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__Amesos2Smoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Amesos2Smoother__fwd_8hpp" name="MueLu_Amesos2Smoother_fwd.hpp" local="yes" imported="no">MueLu_Amesos2Smoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">Amesos2::Solver</class>
    <class kind="class">MueLu::Amesos2Smoother</class>
    <class kind="class">MueLu::Amesos2Smoother&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <namespace>Amesos2</namespace>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMESOS2SMOOTHER_SHORT</name>
      <anchorfile>MueLu__Amesos2Smoother__decl_8hpp.html</anchorfile>
      <anchor>aadede6a949021b62f2dab880c8ac7408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Amesos2Smoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__Amesos2Smoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Amesos2Smoother__decl_8hpp" name="MueLu_Amesos2Smoother_decl.hpp" local="yes" imported="no">MueLu_Amesos2Smoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Amesos2Smoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Amesos2Smoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::Amesos2Smoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMESOS2SMOOTHER_SHORT</name>
      <anchorfile>MueLu__Amesos2Smoother__fwd_8hpp.html</anchorfile>
      <anchor>aadede6a949021b62f2dab880c8ac7408</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AmesosSmoother.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__AmesosSmoother_8cpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AmesosSmoother_8hpp" name="MueLu_AmesosSmoother.hpp" local="yes" imported="no">MueLu_AmesosSmoother.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AmesosSmoother.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__AmesosSmoother_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::AmesosSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMESOSSMOOTHER_SHORT</name>
      <anchorfile>MueLu__AmesosSmoother_8hpp.html</anchorfile>
      <anchor>a384bf1bfa50a7f9a03fd97b9ef5ee5c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::SmootherPrototype&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetAmesosSmoother</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad2ea072d4515c442f99efbe8a18b0a26</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AmesosSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AmesosSmoother__fwd_8hpp</filename>
    <class kind="class">MueLu::AmesosSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMESOSSMOOTHER_SHORT</name>
      <anchorfile>MueLu__AmesosSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a384bf1bfa50a7f9a03fd97b9ef5ee5c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AMGXOperator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/amgx/</path>
    <filename>MueLu__AMGXOperator__decl_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__TimeMonitor_8hpp" name="MueLu_TimeMonitor.hpp" local="yes" imported="no">MueLu_TimeMonitor.hpp</includes>
    <includes id="MueLu__VerboseObject_8hpp" name="MueLu_VerboseObject.hpp" local="yes" imported="no">MueLu_VerboseObject.hpp</includes>
    <class kind="class">MueLu::AMGXOperator</class>
    <class kind="class">MueLu::AMGXOperator&lt; double, int, int, Node &gt;</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NEW_COMM</name>
      <anchorfile>MueLu__AMGXOperator__decl_8hpp.html</anchorfile>
      <anchor>ab58ebf24e0239143378ea5587af75d41</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_AMGXOperator_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/amgx/</path>
    <filename>MueLu__AMGXOperator__def_8hpp</filename>
    <includes id="MueLu__AMGXOperator__decl_8hpp" name="MueLu_AMGXOperator_decl.hpp" local="yes" imported="no">MueLu_AMGXOperator_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_AMGXOperator_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__AMGXOperator__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::AMGXOperator</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_AMGXOPERATOR_SHORT</name>
      <anchorfile>MueLu__AMGXOperator__fwd_8hpp.html</anchorfile>
      <anchor>abb2f0b0f811b4926ec7be6d50e71e195</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BaseClass.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__BaseClass_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__VerboseObject_8hpp" name="MueLu_VerboseObject.hpp" local="yes" imported="no">MueLu_VerboseObject.hpp</includes>
    <includes id="MueLu__Describable_8hpp" name="MueLu_Describable.hpp" local="yes" imported="no">MueLu_Describable.hpp</includes>
    <class kind="class">MueLu::BaseClass</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DESCRIBE</name>
      <anchorfile>MueLu__BaseClass_8hpp.html</anchorfile>
      <anchor>a4c782d5f601f0e715831a411095ef99f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BASECLASS_SHORT</name>
      <anchorfile>MueLu__BaseClass_8hpp.html</anchorfile>
      <anchor>ae97c04278eef679ca3d2487b6e441835</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedCoarseMapFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__BlockedCoarseMapFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BlockedCoarseMapFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDCOARSEMAPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedCoarseMapFactory__decl_8hpp.html</anchorfile>
      <anchor>a332893dd93bf1f1c865e0501dfb80393</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedCoarseMapFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__BlockedCoarseMapFactory__def_8hpp</filename>
    <includes id="MueLu__BlockedCoarseMapFactory__decl_8hpp" name="MueLu_BlockedCoarseMapFactory_decl.hpp" local="yes" imported="no">MueLu_BlockedCoarseMapFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__Factory_8hpp" name="MueLu_Factory.hpp" local="yes" imported="no">MueLu_Factory.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedCoarseMapFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BlockedCoarseMapFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::BlockedCoarseMapFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDCOARSEMAPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedCoarseMapFactory__fwd_8hpp.html</anchorfile>
      <anchor>a332893dd93bf1f1c865e0501dfb80393</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedDirectSolver_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__BlockedDirectSolver__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BlockedDirectSolver__fwd_8hpp" name="MueLu_BlockedDirectSolver_fwd.hpp" local="yes" imported="no">MueLu_BlockedDirectSolver_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__MergedBlockedMatrixFactory__fwd_8hpp" name="MueLu_MergedBlockedMatrixFactory_fwd.hpp" local="yes" imported="no">MueLu_MergedBlockedMatrixFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BlockedDirectSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDDIRECTSOLVER_SHORT</name>
      <anchorfile>MueLu__BlockedDirectSolver__decl_8hpp.html</anchorfile>
      <anchor>ab79becaecd27ef0ffdb9944a6dfb72fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedDirectSolver_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__BlockedDirectSolver__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedDirectSolver_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BlockedDirectSolver__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::BlockedDirectSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDDIRECTSOLVER_SHORT</name>
      <anchorfile>MueLu__BlockedDirectSolver__fwd_8hpp.html</anchorfile>
      <anchor>ab79becaecd27ef0ffdb9944a6dfb72fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedGaussSeidelSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__BlockedGaussSeidelSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BlockedGaussSeidelSmoother__fwd_8hpp" name="MueLu_BlockedGaussSeidelSmoother_fwd.hpp" local="yes" imported="no">MueLu_BlockedGaussSeidelSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BlockedGaussSeidelSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDGAUSSSEIDELSMOOTHER_SHORT</name>
      <anchorfile>MueLu__BlockedGaussSeidelSmoother__decl_8hpp.html</anchorfile>
      <anchor>a83d67ddf3dc1259cd49a73d00f1d832f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedGaussSeidelSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__BlockedGaussSeidelSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BlockedGaussSeidelSmoother__decl_8hpp" name="MueLu_BlockedGaussSeidelSmoother_decl.hpp" local="yes" imported="no">MueLu_BlockedGaussSeidelSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedGaussSeidelSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BlockedGaussSeidelSmoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::BlockedGaussSeidelSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDGAUSSSEIDELSMOOTHER_SHORT</name>
      <anchorfile>MueLu__BlockedGaussSeidelSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a83d67ddf3dc1259cd49a73d00f1d832f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__BlockedPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase__fwd_8hpp" name="MueLu_SingleLevelFactoryBase_fwd.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BlockedPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedPFactory__decl_8hpp.html</anchorfile>
      <anchor>a7848e0055eee3d8316b26ab563551751</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__BlockedPFactory__def_8hpp</filename>
    <includes id="MueLu__BlockedPFactory__decl_8hpp" name="MueLu_BlockedPFactory_decl.hpp" local="yes" imported="no">MueLu_BlockedPFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BlockedPFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::BlockedPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedPFactory__fwd_8hpp.html</anchorfile>
      <anchor>a7848e0055eee3d8316b26ab563551751</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedRAPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__BlockedRAPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BlockedRAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedRAPFactory__decl_8hpp.html</anchorfile>
      <anchor>a49642850a7b49d314788a0f9fa01e3ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedRAPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__BlockedRAPFactory__def_8hpp</filename>
    <includes id="MueLu__BlockedRAPFactory__decl_8hpp" name="MueLu_BlockedRAPFactory_decl.hpp" local="yes" imported="no">MueLu_BlockedRAPFactory_decl.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__RAPFactory__decl_8hpp" name="MueLu_RAPFactory_decl.hpp" local="yes" imported="no">MueLu_RAPFactory_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__BlockedRAPFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedRAPFactory__def_8hpp.html</anchorfile>
      <anchor>a49642850a7b49d314788a0f9fa01e3ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BlockedRAPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BlockedRAPFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::BlockedRAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BLOCKEDRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__BlockedRAPFactory__fwd_8hpp.html</anchorfile>
      <anchor>a49642850a7b49d314788a0f9fa01e3ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BoostGraphviz.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__BoostGraphviz_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_BraessSarazinSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__BraessSarazinSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BraessSarazinSmoother__fwd_8hpp" name="MueLu_BraessSarazinSmoother_fwd.hpp" local="yes" imported="no">MueLu_BraessSarazinSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__SchurComplementFactory__fwd_8hpp" name="MueLu_SchurComplementFactory_fwd.hpp" local="yes" imported="no">MueLu_SchurComplementFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BraessSarazinSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BRAESSSARAZINSMOOTHER_SHORT</name>
      <anchorfile>MueLu__BraessSarazinSmoother__decl_8hpp.html</anchorfile>
      <anchor>a1769a51f5d4e8ffe2652a7ef3a06dba6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BraessSarazinSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__BraessSarazinSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BraessSarazinSmoother__decl_8hpp" name="MueLu_BraessSarazinSmoother_decl.hpp" local="yes" imported="no">MueLu_BraessSarazinSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_BraessSarazinSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BraessSarazinSmoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::BraessSarazinSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BRAESSSARAZINSMOOTHER_SHORT</name>
      <anchorfile>MueLu__BraessSarazinSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a1769a51f5d4e8ffe2652a7ef3a06dba6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BrickAggregationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/BrickAggregation/</path>
    <filename>MueLu__BrickAggregationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__BrickAggregationFactory__fwd_8hpp" name="MueLu_BrickAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_BrickAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::BrickAggregationFactory</class>
    <class kind="class">MueLu::BrickAggregationFactory::compare</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BRICKAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__BrickAggregationFactory__decl_8hpp.html</anchorfile>
      <anchor>a9e2d7d55e5877e4e9c8cbb2b27116271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BrickAggregationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/BrickAggregation/</path>
    <filename>MueLu__BrickAggregationFactory__def_8hpp</filename>
    <includes id="MueLu__BrickAggregationFactory__decl_8hpp" name="MueLu_BrickAggregationFactory_decl.hpp" local="yes" imported="no">MueLu_BrickAggregationFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__BrickAggregationFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_BrickAggregationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__BrickAggregationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::BrickAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_BRICKAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__BrickAggregationFactory__fwd_8hpp.html</anchorfile>
      <anchor>a9e2d7d55e5877e4e9c8cbb2b27116271</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CGSolver_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__CGSolver__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SolverBase_8hpp" name="MueLu_SolverBase.hpp" local="yes" imported="no">MueLu_SolverBase.hpp</includes>
    <includes id="MueLu__Constraint__fwd_8hpp" name="MueLu_Constraint_fwd.hpp" local="yes" imported="no">MueLu_Constraint_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CGSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CGSOLVER_SHORT</name>
      <anchorfile>MueLu__CGSolver__decl_8hpp.html</anchorfile>
      <anchor>a8230f960b824930dbbd4761ccd5430d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CGSolver_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__CGSolver__def_8hpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CGSolver_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CGSolver__fwd_8hpp</filename>
    <class kind="class">MueLu::CGSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CGSOLVER_SHORT</name>
      <anchorfile>MueLu__CGSolver__fwd_8hpp.html</anchorfile>
      <anchor>a8230f960b824930dbbd4761ccd5430d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CloneRepartitionInterface_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__CloneRepartitionInterface__decl_8hpp</filename>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CloneRepartitionInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CLONEREPARTITIONINTERFACE_SHORT</name>
      <anchorfile>MueLu__CloneRepartitionInterface__decl_8hpp.html</anchorfile>
      <anchor>a587fcdb2428903e0a46bb4acae7d2d0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CloneRepartitionInterface_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__CloneRepartitionInterface__def_8hpp</filename>
    <includes id="MueLu__CloneRepartitionInterface__decl_8hpp" name="MueLu_CloneRepartitionInterface_decl.hpp" local="yes" imported="no">MueLu_CloneRepartitionInterface_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CloneRepartitionInterface_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CloneRepartitionInterface__fwd_8hpp</filename>
    <class kind="class">MueLu::CloneRepartitionInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CLONEREPARTITIONINTERFACE_SHORT</name>
      <anchorfile>MueLu__CloneRepartitionInterface__fwd_8hpp.html</anchorfile>
      <anchor>a587fcdb2428903e0a46bb4acae7d2d0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoalesceDropFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoalesceDropFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__CoalesceDropFactory__fwd_8hpp" name="MueLu_CoalesceDropFactory_fwd.hpp" local="yes" imported="no">MueLu_CoalesceDropFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__LWGraph__fwd_8hpp" name="MueLu_LWGraph_fwd.hpp" local="yes" imported="no">MueLu_LWGraph_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__PreDropFunctionBaseClass__fwd_8hpp" name="MueLu_PreDropFunctionBaseClass_fwd.hpp" local="yes" imported="no">MueLu_PreDropFunctionBaseClass_fwd.hpp</includes>
    <includes id="MueLu__PreDropFunctionConstVal__fwd_8hpp" name="MueLu_PreDropFunctionConstVal_fwd.hpp" local="yes" imported="no">MueLu_PreDropFunctionConstVal_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CoalesceDropFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COALESCEDROPFACTORY_SHORT</name>
      <anchorfile>MueLu__CoalesceDropFactory__decl_8hpp.html</anchorfile>
      <anchor>aa45e1d47fa7b4f4ee39dfa23c1b999ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoalesceDropFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoalesceDropFactory__def_8hpp</filename>
    <includes id="MueLu__CoalesceDropFactory__decl_8hpp" name="MueLu_CoalesceDropFactory_decl.hpp" local="yes" imported="no">MueLu_CoalesceDropFactory_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__CoalesceDropFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoalesceDropFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoalesceDropFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::CoalesceDropFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COALESCEDROPFACTORY_SHORT</name>
      <anchorfile>MueLu__CoalesceDropFactory__fwd_8hpp.html</anchorfile>
      <anchor>aa45e1d47fa7b4f4ee39dfa23c1b999ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoalesceDropFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoalesceDropFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_CoalesceDropFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoalesceDropFactory__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_CoalesceDropFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoalesceDropFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseMapFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__CoarseMapFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__CoarseMapFactory__fwd_8hpp" name="MueLu_CoarseMapFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CoarseMapFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COARSEMAPFACTORY_SHORT</name>
      <anchorfile>MueLu__CoarseMapFactory__decl_8hpp.html</anchorfile>
      <anchor>ad01c06f49f4e7bd3dad76ab1007f45f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseMapFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__CoarseMapFactory__def_8hpp</filename>
    <includes id="MueLu__CoarseMapFactory__decl_8hpp" name="MueLu_CoarseMapFactory_decl.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseMapFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoarseMapFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::CoarseMapFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COARSEMAPFACTORY_SHORT</name>
      <anchorfile>MueLu__CoarseMapFactory__fwd_8hpp.html</anchorfile>
      <anchor>ad01c06f49f4e7bd3dad76ab1007f45f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseMapFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__CoarseMapFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseMapFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__CoarseMapFactory__kokkos__def_8hpp</filename>
    <includes id="MueLu__CoarseMapFactory__kokkos__decl_8hpp" name="MueLu_CoarseMapFactory_kokkos_decl.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_kokkos_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseMapFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoarseMapFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseningVisualizationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__CoarseningVisualizationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__CoarseningVisualizationFactory__fwd_8hpp" name="MueLu_CoarseningVisualizationFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseningVisualizationFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CoarseningVisualizationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COARSENINGVISUALIZATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__CoarseningVisualizationFactory__decl_8hpp.html</anchorfile>
      <anchor>a9988846f0116861f02d13bc1ee454307</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseningVisualizationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__CoarseningVisualizationFactory__def_8hpp</filename>
    <includes id="MueLu__CoarseningVisualizationFactory__decl_8hpp" name="MueLu_CoarseningVisualizationFactory_decl.hpp" local="yes" imported="no">MueLu_CoarseningVisualizationFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoarseningVisualizationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoarseningVisualizationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::CoarseningVisualizationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COARSENINGVISUALIZATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__CoarseningVisualizationFactory__fwd_8hpp.html</anchorfile>
      <anchor>a9988846f0116861f02d13bc1ee454307</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__ConfigDefs_8hpp</filename>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Constraint_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__Constraint__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::Constraint</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CONSTRAINT_SHORT</name>
      <anchorfile>MueLu__Constraint__decl_8hpp.html</anchorfile>
      <anchor>a21d9dbedc1789abe0ee8603703ac8a9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Constraint_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__Constraint__def_8hpp</filename>
    <includes id="MueLu__Constraint__decl_8hpp" name="MueLu_Constraint_decl.hpp" local="yes" imported="no">MueLu_Constraint_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Constraint_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Constraint__fwd_8hpp</filename>
    <class kind="class">MueLu::Constraint</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CONSTRAINT_SHORT</name>
      <anchorfile>MueLu__Constraint__fwd_8hpp.html</anchorfile>
      <anchor>a21d9dbedc1789abe0ee8603703ac8a9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ConstraintFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__ConstraintFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Constraint__fwd_8hpp" name="MueLu_Constraint_fwd.hpp" local="yes" imported="no">MueLu_Constraint_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ConstraintFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CONSTRAINTFACTORY_SHORT</name>
      <anchorfile>MueLu__ConstraintFactory__decl_8hpp.html</anchorfile>
      <anchor>adde9e6430a19830126a5570255dae560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ConstraintFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__ConstraintFactory__def_8hpp</filename>
    <includes id="MueLu__ConstraintFactory__decl_8hpp" name="MueLu_ConstraintFactory_decl.hpp" local="yes" imported="no">MueLu_ConstraintFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ConstraintFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ConstraintFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::ConstraintFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_CONSTRAINTFACTORY_SHORT</name>
      <anchorfile>MueLu__ConstraintFactory__fwd_8hpp.html</anchorfile>
      <anchor>adde9e6430a19830126a5570255dae560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoordinatesTransferFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__CoordinatesTransferFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__CoarseMapFactory__fwd_8hpp" name="MueLu_CoarseMapFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_fwd.hpp</includes>
    <includes id="MueLu__CoordinatesTransferFactory__fwd_8hpp" name="MueLu_CoordinatesTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_CoordinatesTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CoordinatesTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COORDINATESTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__CoordinatesTransferFactory__decl_8hpp.html</anchorfile>
      <anchor>a36cbdd32adc37cc1a48d9f3b43d598fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoordinatesTransferFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__CoordinatesTransferFactory__def_8hpp</filename>
    <includes id="MueLu__CoordinatesTransferFactory__decl_8hpp" name="MueLu_CoordinatesTransferFactory_decl.hpp" local="yes" imported="no">MueLu_CoordinatesTransferFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoordinatesTransferFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoordinatesTransferFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::CoordinatesTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COORDINATESTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__CoordinatesTransferFactory__fwd_8hpp.html</anchorfile>
      <anchor>a36cbdd32adc37cc1a48d9f3b43d598fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoordinatesTransferFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__CoordinatesTransferFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_CoordinatesTransferFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__CoordinatesTransferFactory__kokkos__def_8hpp</filename>
    <includes id="MueLu__CoordinatesTransferFactory__kokkos__decl_8hpp" name="MueLu_CoordinatesTransferFactory_kokkos_decl.hpp" local="yes" imported="no">MueLu_CoordinatesTransferFactory_kokkos_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoordinatesTransferFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoordinatesTransferFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledAggregationCommHelper_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoupledAggregationCommHelper__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__CoupledAggregationCommHelper__fwd_8hpp" name="MueLu_CoupledAggregationCommHelper_fwd.hpp" local="yes" imported="no">MueLu_CoupledAggregationCommHelper_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CoupledAggregationCommHelper</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDAGGREGATIONCOMMHELPER_SHORT</name>
      <anchorfile>MueLu__CoupledAggregationCommHelper__decl_8hpp.html</anchorfile>
      <anchor>a36c4853127fb14298b3a6af7ff008a1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledAggregationCommHelper_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoupledAggregationCommHelper__def_8hpp</filename>
    <includes id="MueLu__CoupledAggregationCommHelper__decl_8hpp" name="MueLu_CoupledAggregationCommHelper_decl.hpp" local="yes" imported="no">MueLu_CoupledAggregationCommHelper_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledAggregationCommHelper_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoupledAggregationCommHelper__fwd_8hpp</filename>
    <class kind="class">MueLu::CoupledAggregationCommHelper</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDAGGREGATIONCOMMHELPER_SHORT</name>
      <anchorfile>MueLu__CoupledAggregationCommHelper__fwd_8hpp.html</anchorfile>
      <anchor>a36c4853127fb14298b3a6af7ff008a1a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledAggregationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoupledAggregationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__CoupledAggregationFactory__fwd_8hpp" name="MueLu_CoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_CoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::CoupledAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__CoupledAggregationFactory__decl_8hpp.html</anchorfile>
      <anchor>aefde51f390d78f39e452e2f36c2b9b81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledAggregationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__CoupledAggregationFactory__def_8hpp</filename>
    <includes id="MueLu__CoupledAggregationFactory__decl_8hpp" name="MueLu_CoupledAggregationFactory_decl.hpp" local="yes" imported="no">MueLu_CoupledAggregationFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledAggregationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoupledAggregationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::CoupledAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__CoupledAggregationFactory__fwd_8hpp.html</anchorfile>
      <anchor>aefde51f390d78f39e452e2f36c2b9b81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledRBMFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__CoupledRBMFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__CoupledRBMFactory__fwd_8hpp" name="MueLu_CoupledRBMFactory_fwd.hpp" local="yes" imported="no">MueLu_CoupledRBMFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::CoupledRBMFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDRBMFACTORY_SHORT</name>
      <anchorfile>MueLu__CoupledRBMFactory__decl_8hpp.html</anchorfile>
      <anchor>aa0bdfe132858302f945a5ed0250efa13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledRBMFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__CoupledRBMFactory__def_8hpp</filename>
    <includes id="MueLu__CoupledRBMFactory__decl_8hpp" name="MueLu_CoupledRBMFactory_decl.hpp" local="yes" imported="no">MueLu_CoupledRBMFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDRBMFACTORY_SHORT</name>
      <anchorfile>MueLu__CoupledRBMFactory__def_8hpp.html</anchorfile>
      <anchor>aa0bdfe132858302f945a5ed0250efa13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CoupledRBMFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__CoupledRBMFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::CoupledRBMFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COUPLEDRBMFACTORY_SHORT</name>
      <anchorfile>MueLu__CoupledRBMFactory__fwd_8hpp.html</anchorfile>
      <anchor>aa0bdfe132858302f945a5ed0250efa13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CreateEpetraPreconditioner.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/epetra/</path>
    <filename>MueLu__CreateEpetraPreconditioner_8hpp</filename>
    <includes id="MueLu_8hpp" name="MueLu.hpp" local="no" imported="no">MueLu.hpp</includes>
    <includes id="MueLu__EpetraOperator_8hpp" name="MueLu_EpetraOperator.hpp" local="no" imported="no">MueLu_EpetraOperator.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="no" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__CreateXpetraPreconditioner_8hpp" name="MueLu_CreateXpetraPreconditioner.hpp" local="no" imported="no">MueLu_CreateXpetraPreconditioner.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="no" imported="no">MueLu_MasterList.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::EpetraOperator &gt;</type>
      <name>CreateEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3cfde35a1b1bc70086a84b267ec2bd7d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;inA, Teuchos::ParameterList &amp;paramListIn, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::EpetraOperator &gt;</type>
      <name>CreateEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a97d184eb3165220f7290b09ee8944ec3</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;inA, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::EpetraOperator &gt;</type>
      <name>CreateEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad175d92344a0733289d13cbdf11bf684</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;A, const std::string &amp;xmlFileName, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReuseEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a44cc2b8d64e3c8f1dace0bfa7875da31</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;inA, MueLu::EpetraOperator &amp;Op)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CreateTpetraPreconditioner.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__CreateTpetraPreconditioner_8hpp</filename>
    <includes id="MueLu_8hpp" name="MueLu.hpp" local="no" imported="no">MueLu.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="no" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="no" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__CreateXpetraPreconditioner_8hpp" name="MueLu_CreateXpetraPreconditioner.hpp" local="no" imported="no">MueLu_CreateXpetraPreconditioner.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa91980cf02bc9f78890859902e9687d7</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, Teuchos::ParameterList &amp;inParamList, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>MUELU_DEPRECATED Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a067377ee3d4b9274780fb70f682483c3</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, Teuchos::ParameterList &amp;inParamList, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>MUELU_DEPRECATED Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5027d71ffd62265a309e1ab62ad50122</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>MUELU_DEPRECATED Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0b0ac4064a971513fbc565dab1837de1</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const std::string &amp;xmlFileName, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a305ddcd4133d7d9a731f892e20db7a74</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af8fcf9d564b636835f4ba60a835cc68f</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const std::string &amp;xmlFileName, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReuseTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7437b4b04f90580b704de49cb9a10fee</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_CreateXpetraPreconditioner.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/xpetra/</path>
    <filename>MueLu__CreateXpetraPreconditioner_8hpp</filename>
    <includes id="MueLu_8hpp" name="MueLu.hpp" local="no" imported="no">MueLu.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="no" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="no" imported="no">MueLu_MasterList.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateXpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a611a7ff9294409496c7a15d5d67704a2</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; op, const Teuchos::ParameterList &amp;inParamList, Teuchos::RCP&lt; Xpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; coords=Teuchos::null, Teuchos::RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; nullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReuseXpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa7e58c84b80e5ea38419cfc2033f7106</anchor>
      <arglist>(const Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;A, Teuchos::RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;H)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DemoFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__DemoFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__DemoFactory__fwd_8hpp" name="MueLu_DemoFactory_fwd.hpp" local="yes" imported="no">MueLu_DemoFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::DemoFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DEMOFACTORY_SHORT</name>
      <anchorfile>MueLu__DemoFactory__decl_8hpp.html</anchorfile>
      <anchor>a91697e59ff1a77272301dab026d5d5a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DemoFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__DemoFactory__def_8hpp</filename>
    <includes id="MueLu__DemoFactory__decl_8hpp" name="MueLu_DemoFactory_decl.hpp" local="yes" imported="no">MueLu_DemoFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DEMOFACTORY_SHORT</name>
      <anchorfile>MueLu__DemoFactory__def_8hpp.html</anchorfile>
      <anchor>a91697e59ff1a77272301dab026d5d5a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DemoFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__DemoFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::DemoFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DEMOFACTORY_SHORT</name>
      <anchorfile>MueLu__DemoFactory__fwd_8hpp.html</anchorfile>
      <anchor>a91697e59ff1a77272301dab026d5d5a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Describable.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Describable_8cpp</filename>
    <includes id="MueLu__Describable_8hpp" name="MueLu_Describable.hpp" local="yes" imported="no">MueLu_Describable.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DESCRIBABLE_HPP</name>
      <anchorfile>MueLu__Describable_8cpp.html</anchorfile>
      <anchor>adad4aed9399712df0ccc1f7e829c5725</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DESCRIBABLE_SHORT</name>
      <anchorfile>MueLu__Describable_8cpp.html</anchorfile>
      <anchor>ac27b2ab2373314486a4a7d0b6765d624</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Describable.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Describable_8hpp</filename>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <class kind="class">MueLu::Describable</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DESCRIBABLE_SHORT</name>
      <anchorfile>MueLu__Describable_8hpp.html</anchorfile>
      <anchor>ac27b2ab2373314486a4a7d0b6765d624</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Details_LinearSolverFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/linear_solver_factory/</path>
    <filename>MueLu__Details__LinearSolverFactory_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_Details_LinearSolverFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/linear_solver_factory/</path>
    <filename>MueLu__Details__LinearSolverFactory_8hpp</filename>
    <includes id="MueLu__Details__LinearSolverFactory__decl_8hpp" name="MueLu_Details_LinearSolverFactory_decl.hpp" local="yes" imported="no">MueLu_Details_LinearSolverFactory_decl.hpp</includes>
    <includes id="MueLu__Details__LinearSolverFactory__def_8hpp" name="MueLu_Details_LinearSolverFactory_def.hpp" local="yes" imported="no">MueLu_Details_LinearSolverFactory_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_Details_LinearSolverFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/linear_solver_factory/</path>
    <filename>MueLu__Details__LinearSolverFactory__decl_8hpp</filename>
    <class kind="class">MueLu::Details::LinearSolverFactory</class>
    <namespace>MueLu</namespace>
    <namespace>MueLu::Details</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Details_LinearSolverFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/linear_solver_factory/</path>
    <filename>MueLu__Details__LinearSolverFactory__def_8hpp</filename>
    <includes id="MueLu__CreateEpetraPreconditioner_8hpp" name="MueLu_CreateEpetraPreconditioner.hpp" local="yes" imported="no">MueLu_CreateEpetraPreconditioner.hpp</includes>
    <includes id="MueLu__CreateTpetraPreconditioner_8hpp" name="MueLu_CreateTpetraPreconditioner.hpp" local="yes" imported="no">MueLu_CreateTpetraPreconditioner.hpp</includes>
    <class kind="class">MueLu::Details::LinearSolver</class>
    <class kind="class">MueLu::Details::LinearSolver&lt; Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt;,                                                                                                                                                                                                                                                                                   Tpetra::Operator&lt; Scalar, LO, GO, Node &gt;,                                                                                                                                                                                                                                                                   typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt;</class>
    <namespace>MueLu</namespace>
    <namespace>MueLu::Details</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DETAILS_LINEARSOLVERFACTORY_INSTANT</name>
      <anchorfile>MueLu__Details__LinearSolverFactory__def_8hpp.html</anchorfile>
      <anchor>aa970e8ee7bff14fd935e6ceb7386619d</anchor>
      <arglist>(SC, LO, GO, NT)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Details_registerLinearSolverFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/linear_solver_factory/</path>
    <filename>MueLu__Details__registerLinearSolverFactory_8cpp</filename>
    <includes id="MueLu__Details__registerLinearSolverFactory_8hpp" name="MueLu_Details_registerLinearSolverFactory.hpp" local="yes" imported="no">MueLu_Details_registerLinearSolverFactory.hpp</includes>
    <includes id="MueLu__Details__LinearSolverFactory_8hpp" name="MueLu_Details_LinearSolverFactory.hpp" local="yes" imported="no">MueLu_Details_LinearSolverFactory.hpp</includes>
    <namespace>MueLu</namespace>
    <namespace>MueLu::Details</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LCL_CALL</name>
      <anchorfile>MueLu__Details__registerLinearSolverFactory_8cpp.html</anchorfile>
      <anchor>ae68184dd81e87eb2340f090c4ba624fa</anchor>
      <arglist>(SC, LO, GO, NT)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>namespaceMueLu_1_1Details.html</anchorfile>
      <anchor>aa0557065da82040695a4468c554e76f7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Details_registerLinearSolverFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/linear_solver_factory/</path>
    <filename>MueLu__Details__registerLinearSolverFactory_8hpp</filename>
    <namespace>MueLu</namespace>
    <namespace>MueLu::Details</namespace>
    <member kind="function">
      <type>void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>namespaceMueLu_1_1Details.html</anchorfile>
      <anchor>aa0557065da82040695a4468c554e76f7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DirectSolver_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__DirectSolver__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Amesos2Smoother__fwd_8hpp" name="MueLu_Amesos2Smoother_fwd.hpp" local="yes" imported="no">MueLu_Amesos2Smoother_fwd.hpp</includes>
    <includes id="MueLu__AmesosSmoother__fwd_8hpp" name="MueLu_AmesosSmoother_fwd.hpp" local="yes" imported="no">MueLu_AmesosSmoother_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::DirectSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DIRECTSOLVER_SHORT</name>
      <anchorfile>MueLu__DirectSolver__decl_8hpp.html</anchorfile>
      <anchor>a1338cb4e6ace01aeb2e27af3c5d71ef2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DirectSolver_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__DirectSolver__def_8hpp</filename>
    <includes id="MueLu__DirectSolver__decl_8hpp" name="MueLu_DirectSolver_decl.hpp" local="yes" imported="no">MueLu_DirectSolver_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__AmesosSmoother_8hpp" name="MueLu_AmesosSmoother.hpp" local="yes" imported="no">MueLu_AmesosSmoother.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_DirectSolver_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__DirectSolver__fwd_8hpp</filename>
    <class kind="class">MueLu::DirectSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DIRECTSOLVER_SHORT</name>
      <anchorfile>MueLu__DirectSolver__fwd_8hpp.html</anchorfile>
      <anchor>a1338cb4e6ace01aeb2e27af3c5d71ef2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DisableMultipleCallCheck.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__DisableMultipleCallCheck_8hpp</filename>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <class kind="class">MueLu::DisableMultipleCallCheck</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_DoxygenDocumentation.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/doc/</path>
    <filename>MueLu__DoxygenDocumentation_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_DropNegativeEntriesFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__DropNegativeEntriesFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__DropNegativeEntriesFactory__fwd_8hpp" name="MueLu_DropNegativeEntriesFactory_fwd.hpp" local="yes" imported="no">MueLu_DropNegativeEntriesFactory_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::DropNegativeEntriesFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DROPNEGATIVEENTRIESFACTORY_SHORT</name>
      <anchorfile>MueLu__DropNegativeEntriesFactory__decl_8hpp.html</anchorfile>
      <anchor>aaa40c7a4e7bd2ab60785ab7df4b9f077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DropNegativeEntriesFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__DropNegativeEntriesFactory__def_8hpp</filename>
    <includes id="MueLu__DropNegativeEntriesFactory__decl_8hpp" name="MueLu_DropNegativeEntriesFactory_decl.hpp" local="yes" imported="no">MueLu_DropNegativeEntriesFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__DropNegativeEntriesFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_DropNegativeEntriesFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__DropNegativeEntriesFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::DropNegativeEntriesFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DROPNEGATIVEENTRIESFACTORY_SHORT</name>
      <anchorfile>MueLu__DropNegativeEntriesFactory__fwd_8hpp.html</anchorfile>
      <anchor>aaa40c7a4e7bd2ab60785ab7df4b9f077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_EminPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__EminPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__EminPFactory__fwd_8hpp" name="MueLu_EminPFactory_fwd.hpp" local="yes" imported="no">MueLu_EminPFactory_fwd.hpp</includes>
    <includes id="MueLu__CGSolver__fwd_8hpp" name="MueLu_CGSolver_fwd.hpp" local="yes" imported="no">MueLu_CGSolver_fwd.hpp</includes>
    <includes id="MueLu__Constraint__fwd_8hpp" name="MueLu_Constraint_fwd.hpp" local="yes" imported="no">MueLu_Constraint_fwd.hpp</includes>
    <includes id="MueLu__GMRESSolver__fwd_8hpp" name="MueLu_GMRESSolver_fwd.hpp" local="yes" imported="no">MueLu_GMRESSolver_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__SolverBase__fwd_8hpp" name="MueLu_SolverBase_fwd.hpp" local="yes" imported="no">MueLu_SolverBase_fwd.hpp</includes>
    <includes id="MueLu__SteepestDescentSolver__fwd_8hpp" name="MueLu_SteepestDescentSolver_fwd.hpp" local="yes" imported="no">MueLu_SteepestDescentSolver_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::EminPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_EMINPFACTORY_SHORT</name>
      <anchorfile>MueLu__EminPFactory__decl_8hpp.html</anchorfile>
      <anchor>a6d69e853d1006c3c5590e108776eccef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_EminPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__EminPFactory__def_8hpp</filename>
    <includes id="MueLu__EminPFactory__decl_8hpp" name="MueLu_EminPFactory_decl.hpp" local="yes" imported="no">MueLu_EminPFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SolverBase_8hpp" name="MueLu_SolverBase.hpp" local="yes" imported="no">MueLu_SolverBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__EminPFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_EminPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__EminPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::EminPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_EMINPFACTORY_SHORT</name>
      <anchorfile>MueLu__EminPFactory__fwd_8hpp.html</anchorfile>
      <anchor>a6d69e853d1006c3c5590e108776eccef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_EpetraOperator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/epetra/</path>
    <filename>MueLu__EpetraOperator_8cpp</filename>
    <includes id="MueLu__EpetraOperator_8hpp" name="MueLu_EpetraOperator.hpp" local="yes" imported="no">MueLu_EpetraOperator.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_EpetraOperator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/epetra/</path>
    <filename>MueLu__EpetraOperator_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_ETI_3arg.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__ETI__3arg_8hpp</filename>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosSerialWrapperNode</type>
      <name>EpetraNode</name>
      <anchorfile>MueLu__ETI__3arg_8hpp.html</anchorfile>
      <anchor>aabbbc44ae28b61beb4d68edf0e6f5121</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ETI_4arg.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__ETI__4arg_8hpp</filename>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosSerialWrapperNode</type>
      <name>EpetraNode</name>
      <anchorfile>MueLu__ETI__4arg_8hpp.html</anchorfile>
      <anchor>aabbbc44ae28b61beb4d68edf0e6f5121</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Exceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Exceptions_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::Exceptions::BadCast</class>
    <class kind="class">MueLu::Exceptions::NotImplemented</class>
    <class kind="class">MueLu::Exceptions::RuntimeError</class>
    <class kind="class">MueLu::Exceptions::Overflow</class>
    <class kind="class">MueLu::Exceptions::Incompatible</class>
    <class kind="class">MueLu::Exceptions::DependencyError</class>
    <class kind="class">MueLu::Exceptions::InvalidArgument</class>
    <namespace>MueLu</namespace>
    <namespace>MueLu::Exceptions</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TPETRA_ETI_EXCEPTION</name>
      <anchorfile>MueLu__Exceptions_8hpp.html</anchorfile>
      <anchor>a647fd2f4f6371cfc39091a810fd8f080</anchor>
      <arglist>(cl, obj, go)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Facade_BGS2x2_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__Facade__BGS2x2__decl_8hpp</filename>
    <includes id="MueLu__FacadeClassBase__decl_8hpp" name="MueLu_FacadeClassBase_decl.hpp" local="yes" imported="no">MueLu_FacadeClassBase_decl.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FacadeBGS2x2</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Facade_BGS2x2_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__Facade__BGS2x2__def_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Facade__BGS2x2__decl_8hpp" name="MueLu_Facade_BGS2x2_decl.hpp" local="yes" imported="no">MueLu_Facade_BGS2x2_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Facade_Simple_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__Facade__Simple__decl_8hpp</filename>
    <includes id="MueLu__FacadeClassBase__decl_8hpp" name="MueLu_FacadeClassBase_decl.hpp" local="yes" imported="no">MueLu_FacadeClassBase_decl.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FacadeSimple</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Facade_Simple_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__Facade__Simple__def_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Facade__Simple__decl_8hpp" name="MueLu_Facade_Simple_decl.hpp" local="yes" imported="no">MueLu_Facade_Simple_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeBGS2x2.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__FacadeBGS2x2_8cpp</filename>
    <includes id="MueLu__Facade__BGS2x2__def_8hpp" name="MueLu_Facade_BGS2x2_def.hpp" local="yes" imported="no">MueLu_Facade_BGS2x2_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__FacadeBGS2x2_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassBase.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__FacadeClassBase_8cpp</filename>
    <includes id="MueLu__FacadeClassBase__def_8hpp" name="MueLu_FacadeClassBase_def.hpp" local="yes" imported="no">MueLu_FacadeClassBase_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__FacadeClassBase_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassBase_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__FacadeClassBase__decl_8hpp</filename>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FacadeClassBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACADECLASSBASE_SHORT</name>
      <anchorfile>MueLu__FacadeClassBase__decl_8hpp.html</anchorfile>
      <anchor>a70fdb430c5befee519716037d2e8539a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassBase_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__FacadeClassBase__def_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__FacadeClassBase__decl_8hpp" name="MueLu_FacadeClassBase_decl.hpp" local="yes" imported="no">MueLu_FacadeClassBase_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__FacadeClassFactory_8cpp</filename>
    <includes id="MueLu__FacadeClassFactory__def_8hpp" name="MueLu_FacadeClassFactory_def.hpp" local="yes" imported="no">MueLu_FacadeClassFactory_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__FacadeClassFactory_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__FacadeClassFactory__decl_8hpp</filename>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FacadeClassFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACADECLASSFACTORY_SHORT</name>
      <anchorfile>MueLu__FacadeClassFactory__decl_8hpp.html</anchorfile>
      <anchor>a9c9e564b6b549cc87158b35e7cb04077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/FacadeClasses/</path>
    <filename>MueLu__FacadeClassFactory__def_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Facade__Simple__def_8hpp" name="MueLu_Facade_Simple_def.hpp" local="yes" imported="no">MueLu_Facade_Simple_def.hpp</includes>
    <includes id="MueLu__Facade__BGS2x2__def_8hpp" name="MueLu_Facade_BGS2x2_def.hpp" local="yes" imported="no">MueLu_Facade_BGS2x2_def.hpp</includes>
    <includes id="MueLu__FacadeClassFactory__decl_8hpp" name="MueLu_FacadeClassFactory_decl.hpp" local="yes" imported="no">MueLu_FacadeClassFactory_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeClassFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FacadeClassFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::FacadeClassFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACADECLASSFACTORY_SHORT</name>
      <anchorfile>MueLu__FacadeClassFactory__fwd_8hpp.html</anchorfile>
      <anchor>a9c9e564b6b549cc87158b35e7cb04077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeSimple.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__FacadeSimple_8cpp</filename>
    <includes id="MueLu__Facade__Simple__def_8hpp" name="MueLu_Facade_Simple_def.hpp" local="yes" imported="no">MueLu_Facade_Simple_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__FacadeSimple_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FacadeSimple_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FacadeSimple__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACADESIMPLE_SHORT</name>
      <anchorfile>MueLu__FacadeSimple__fwd_8hpp.html</anchorfile>
      <anchor>af23034d5c57e8bb950d984258b628485</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Factory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Factory_8cpp</filename>
    <includes id="MueLu__Factory_8hpp" name="MueLu_Factory.hpp" local="yes" imported="no">MueLu_Factory.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Factory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Factory_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <includes id="MueLu__FactoryAcceptor_8hpp" name="MueLu_FactoryAcceptor.hpp" local="yes" imported="no">MueLu_FactoryAcceptor.hpp</includes>
    <includes id="MueLu__ParameterListAcceptor_8hpp" name="MueLu_ParameterListAcceptor.hpp" local="yes" imported="no">MueLu_ParameterListAcceptor.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <class kind="class">MueLu::Factory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORY_SHORT</name>
      <anchorfile>MueLu__Factory_8hpp.html</anchorfile>
      <anchor>ac2bc9fed4c651e058a5b939df34c33e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Factory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Factory__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORY_SHORT</name>
      <anchorfile>MueLu__Factory__fwd_8hpp.html</anchorfile>
      <anchor>ac2bc9fed4c651e058a5b939df34c33e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryAcceptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__FactoryAcceptor_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <class kind="class">MueLu::FactoryAcceptor</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYACCEPTOR_SHORT</name>
      <anchorfile>MueLu__FactoryAcceptor_8hpp.html</anchorfile>
      <anchor>a7bf4f27fae10b2e8c3701561852dc3e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryBase.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__FactoryBase_8cpp</filename>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__FactoryBase_8hpp</filename>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <class kind="class">MueLu::FactoryBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYBASE_SHORT</name>
      <anchorfile>MueLu__FactoryBase_8hpp.html</anchorfile>
      <anchor>acc8e37790f1ea059c9fded2a64b082b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FactoryBase__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYBASE_SHORT</name>
      <anchorfile>MueLu__FactoryBase__fwd_8hpp.html</anchorfile>
      <anchor>acc8e37790f1ea059c9fded2a64b082b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__FactoryFactory_8cpp</filename>
    <includes id="MueLu__FactoryFactory__def_8hpp" name="MueLu_FactoryFactory_def.hpp" local="yes" imported="no">MueLu_FactoryFactory_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__FactoryFactory_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__FactoryFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryFactory__fwd_8hpp" name="MueLu_FactoryFactory_fwd.hpp" local="yes" imported="no">MueLu_FactoryFactory_fwd.hpp</includes>
    <includes id="MueLu__HierarchyFactory_8hpp" name="MueLu_HierarchyFactory.hpp" local="yes" imported="no">MueLu_HierarchyFactory.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FactoryFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>arraysize</name>
      <anchorfile>MueLu__FactoryFactory__decl_8hpp.html</anchorfile>
      <anchor>a76c293b23689c3af4ec5f6b48cbefe65</anchor>
      <arglist>(ar)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYFACTORY_SHORT</name>
      <anchorfile>MueLu__FactoryFactory__decl_8hpp.html</anchorfile>
      <anchor>a4869b49eafd84ae6eedf0ceda8bb66a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__FactoryFactory__def_8hpp</filename>
    <includes id="MueLu__FactoryFactory__decl_8hpp" name="MueLu_FactoryFactory_decl.hpp" local="yes" imported="no">MueLu_FactoryFactory_decl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FactoryFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::FactoryFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYFACTORY_SHORT</name>
      <anchorfile>MueLu__FactoryFactory__fwd_8hpp.html</anchorfile>
      <anchor>a4869b49eafd84ae6eedf0ceda8bb66a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryManager_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__FactoryManager__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__CoalesceDropFactory__fwd_8hpp" name="MueLu_CoalesceDropFactory_fwd.hpp" local="yes" imported="no">MueLu_CoalesceDropFactory_fwd.hpp</includes>
    <includes id="MueLu__CoarseMapFactory__fwd_8hpp" name="MueLu_CoarseMapFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_fwd.hpp</includes>
    <includes id="MueLu__ConstraintFactory__fwd_8hpp" name="MueLu_ConstraintFactory_fwd.hpp" local="yes" imported="no">MueLu_ConstraintFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__LineDetectionFactory__fwd_8hpp" name="MueLu_LineDetectionFactory_fwd.hpp" local="yes" imported="no">MueLu_LineDetectionFactory_fwd.hpp</includes>
    <includes id="MueLu__NullspaceFactory__fwd_8hpp" name="MueLu_NullspaceFactory_fwd.hpp" local="yes" imported="no">MueLu_NullspaceFactory_fwd.hpp</includes>
    <includes id="MueLu__PatternFactory__fwd_8hpp" name="MueLu_PatternFactory_fwd.hpp" local="yes" imported="no">MueLu_PatternFactory_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__RepartitionHeuristicFactory__fwd_8hpp" name="MueLu_RepartitionHeuristicFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionHeuristicFactory_fwd.hpp</includes>
    <includes id="MueLu__RepartitionFactory__fwd_8hpp" name="MueLu_RepartitionFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionFactory_fwd.hpp</includes>
    <includes id="MueLu__SaPFactory__fwd_8hpp" name="MueLu_SaPFactory_fwd.hpp" local="yes" imported="no">MueLu_SaPFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__TransPFactory__fwd_8hpp" name="MueLu_TransPFactory_fwd.hpp" local="yes" imported="no">MueLu_TransPFactory_fwd.hpp</includes>
    <includes id="MueLu__TrilinosSmoother__fwd_8hpp" name="MueLu_TrilinosSmoother_fwd.hpp" local="yes" imported="no">MueLu_TrilinosSmoother_fwd.hpp</includes>
    <includes id="MueLu__UncoupledAggregationFactory__fwd_8hpp" name="MueLu_UncoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_UncoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__ZoltanInterface__fwd_8hpp" name="MueLu_ZoltanInterface_fwd.hpp" local="yes" imported="no">MueLu_ZoltanInterface_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FactoryManager</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYMANAGER_SHORT</name>
      <anchorfile>MueLu__FactoryManager__decl_8hpp.html</anchorfile>
      <anchor>a79c3a50950e893fd29f59d51e465809c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryManager_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__FactoryManager__def_8hpp</filename>
    <includes id="MueLu__FactoryManager__decl_8hpp" name="MueLu_FactoryManager_decl.hpp" local="yes" imported="no">MueLu_FactoryManager_decl.hpp</includes>
    <includes id="MueLu__NoFactory_8hpp" name="MueLu_NoFactory.hpp" local="yes" imported="no">MueLu_NoFactory.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryManager_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FactoryManager__fwd_8hpp</filename>
    <class kind="class">MueLu::FactoryManager</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYMANAGER_SHORT</name>
      <anchorfile>MueLu__FactoryManager__fwd_8hpp.html</anchorfile>
      <anchor>a79c3a50950e893fd29f59d51e465809c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryManagerBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__FactoryManagerBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <class kind="class">MueLu::FactoryManagerBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYMANAGERBASE_SHORT</name>
      <anchorfile>MueLu__FactoryManagerBase_8hpp.html</anchorfile>
      <anchor>a2c8484cdb7c0f5032280c1b257e10d03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FactoryManagerBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FactoryManagerBase__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FACTORYMANAGERBASE_SHORT</name>
      <anchorfile>MueLu__FactoryManagerBase__fwd_8hpp.html</anchorfile>
      <anchor>a2c8484cdb7c0f5032280c1b257e10d03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FakeSmootherPrototype_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FakeSmootherPrototype__fwd_8hpp</filename>
    <class kind="class">MueLu::FakeSmootherPrototype</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FAKESMOOTHERPROTOTYPE_SHORT</name>
      <anchorfile>MueLu__FakeSmootherPrototype__fwd_8hpp.html</anchorfile>
      <anchor>aaca93ab46e2244e2e198f564395b7d36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__FilteredAFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FilteredAFactory__fwd_8hpp" name="MueLu_FilteredAFactory_fwd.hpp" local="yes" imported="no">MueLu_FilteredAFactory_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::FilteredAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FILTEREDAFACTORY_SHORT</name>
      <anchorfile>MueLu__FilteredAFactory__decl_8hpp.html</anchorfile>
      <anchor>a27b2c807827579d90bd9633c14680bc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__FilteredAFactory__def_8hpp</filename>
    <includes id="MueLu__FilteredAFactory__decl_8hpp" name="MueLu_FilteredAFactory_decl.hpp" local="yes" imported="no">MueLu_FilteredAFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__FilteredAFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSUME_DIRECT_ACCESS_TO_ROW</name>
      <anchorfile>MueLu__FilteredAFactory__def_8hpp.html</anchorfile>
      <anchor>a06840c1ed3dc5d88b4485d89bb6bc0a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FilteredAFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::FilteredAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_FILTEREDAFACTORY_SHORT</name>
      <anchorfile>MueLu__FilteredAFactory__fwd_8hpp.html</anchorfile>
      <anchor>a27b2c807827579d90bd9633c14680bc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_kokkos.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__FilteredAFactory__kokkos_8cpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__FilteredAFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__FilteredAFactory__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_FilteredAFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__FilteredAFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_GenericRFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Generic/</path>
    <filename>MueLu__GenericRFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__GenericRFactory__fwd_8hpp" name="MueLu_GenericRFactory_fwd.hpp" local="yes" imported="no">MueLu_GenericRFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PFactory__fwd_8hpp" name="MueLu_PFactory_fwd.hpp" local="yes" imported="no">MueLu_PFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::GenericRFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GENERICRFACTORY_SHORT</name>
      <anchorfile>MueLu__GenericRFactory__decl_8hpp.html</anchorfile>
      <anchor>a468e2ca7fa36e6c434ec1dbcf386041b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GenericRFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Generic/</path>
    <filename>MueLu__GenericRFactory__def_8hpp</filename>
    <includes id="MueLu__GenericRFactory__decl_8hpp" name="MueLu_GenericRFactory_decl.hpp" local="yes" imported="no">MueLu_GenericRFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__DisableMultipleCallCheck_8hpp" name="MueLu_DisableMultipleCallCheck.hpp" local="yes" imported="no">MueLu_DisableMultipleCallCheck.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GENERICRFACTORY_SHORT</name>
      <anchorfile>MueLu__GenericRFactory__def_8hpp.html</anchorfile>
      <anchor>a468e2ca7fa36e6c434ec1dbcf386041b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GenericRFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__GenericRFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::GenericRFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GENERICRFACTORY_SHORT</name>
      <anchorfile>MueLu__GenericRFactory__fwd_8hpp.html</anchorfile>
      <anchor>a468e2ca7fa36e6c434ec1dbcf386041b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GeoInterpFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Geometric-Interpolation/</path>
    <filename>MueLu__GeoInterpFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::GeoInterpFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GEOINTERPFACTORY_SHORT</name>
      <anchorfile>MueLu__GeoInterpFactory__decl_8hpp.html</anchorfile>
      <anchor>a2312b101bc008b5fc2f1b9cca984726f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GeoInterpFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Geometric-Interpolation/</path>
    <filename>MueLu__GeoInterpFactory__def_8hpp</filename>
    <includes id="MueLu__GeoInterpFactory__decl_8hpp" name="MueLu_GeoInterpFactory_decl.hpp" local="yes" imported="no">MueLu_GeoInterpFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="no" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="no" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="no" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GEOINTERPFACTORY_SHORT</name>
      <anchorfile>MueLu__GeoInterpFactory__def_8hpp.html</anchorfile>
      <anchor>a2312b101bc008b5fc2f1b9cca984726f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GMRESSolver_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__GMRESSolver__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SolverBase_8hpp" name="MueLu_SolverBase.hpp" local="yes" imported="no">MueLu_SolverBase.hpp</includes>
    <includes id="MueLu__Constraint__fwd_8hpp" name="MueLu_Constraint_fwd.hpp" local="yes" imported="no">MueLu_Constraint_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::GMRESSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GMRESSOLVER_SHORT</name>
      <anchorfile>MueLu__GMRESSolver__decl_8hpp.html</anchorfile>
      <anchor>a13d484800440cfa454cd513069ddae10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GMRESSolver_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__GMRESSolver__def_8hpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>I</name>
      <anchorfile>MueLu__GMRESSolver__def_8hpp.html</anchorfile>
      <anchor>a03a4ee36405cbb496e147f703a06a260</anchor>
      <arglist>(i, j)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GMRESSolver_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__GMRESSolver__fwd_8hpp</filename>
    <class kind="class">MueLu::GMRESSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GMRESSOLVER_SHORT</name>
      <anchorfile>MueLu__GMRESSolver__fwd_8hpp.html</anchorfile>
      <anchor>a13d484800440cfa454cd513069ddae10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Graph_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__Graph__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::Graph</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GRAPH_SHORT</name>
      <anchorfile>MueLu__Graph__decl_8hpp.html</anchorfile>
      <anchor>aa31fd338885a966a0698cc41ff494163</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Graph_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__Graph__def_8hpp</filename>
    <includes id="MueLu__Graph__decl_8hpp" name="MueLu_Graph_decl.hpp" local="yes" imported="no">MueLu_Graph_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Graph_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Graph__fwd_8hpp</filename>
    <class kind="class">MueLu::Graph</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GRAPH_SHORT</name>
      <anchorfile>MueLu__Graph__fwd_8hpp.html</anchorfile>
      <anchor>aa31fd338885a966a0698cc41ff494163</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GraphBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__GraphBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::GraphBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GRAPHBASE_SHORT</name>
      <anchorfile>MueLu__GraphBase_8hpp.html</anchorfile>
      <anchor>aea7320e135b879d8fce311287ac05a20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_GraphBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__GraphBase__fwd_8hpp</filename>
    <class kind="class">MueLu::GraphBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GRAPHBASE_SHORT</name>
      <anchorfile>MueLu__GraphBase__fwd_8hpp.html</anchorfile>
      <anchor>aea7320e135b879d8fce311287ac05a20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_groups</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/doc/</path>
    <filename>MueLu__groups</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_Hierarchy_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Hierarchy__decl_8hpp</filename>
    <includes id="MueLu__SmootherCloner_8hpp" name="MueLu_SmootherCloner.hpp" local="no" imported="no">MueLu_SmootherCloner.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__HierarchyUtils__fwd_8hpp" name="MueLu_HierarchyUtils_fwd.hpp" local="yes" imported="no">MueLu_HierarchyUtils_fwd.hpp</includes>
    <includes id="MueLu__KeepType_8hpp" name="MueLu_KeepType.hpp" local="yes" imported="no">MueLu_KeepType.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__NoFactory_8hpp" name="MueLu_NoFactory.hpp" local="yes" imported="no">MueLu_NoFactory.hpp</includes>
    <includes id="MueLu__PFactory__fwd_8hpp" name="MueLu_PFactory_fwd.hpp" local="yes" imported="no">MueLu_PFactory_fwd.hpp</includes>
    <includes id="MueLu__RFactory__fwd_8hpp" name="MueLu_RFactory_fwd.hpp" local="yes" imported="no">MueLu_RFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactoryBase__fwd_8hpp" name="MueLu_SmootherFactoryBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactoryBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase__fwd_8hpp" name="MueLu_TwoLevelFactoryBase_fwd.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::Hierarchy</class>
    <class kind="struct">MueLu::Hierarchy::ConvData</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHY_SHORT</name>
      <anchorfile>MueLu__Hierarchy__decl_8hpp.html</anchorfile>
      <anchor>a161a1e3e7e1df84766bc4c9a577b2806</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ReturnType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Converged</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0ab944a3755991891aae5e181bc0b3de93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unconverged</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0aea2dba6b1f1f15bf549f035ffc224d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Undefined</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0a65239f2d049e1df7a64925b1a35c4f93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Hierarchy_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Hierarchy__def_8hpp</filename>
    <includes id="MueLu__Hierarchy__decl_8hpp" name="MueLu_Hierarchy_decl.hpp" local="yes" imported="no">MueLu_Hierarchy_decl.hpp</includes>
    <includes id="MueLu__BoostGraphviz_8hpp" name="MueLu_BoostGraphviz.hpp" local="yes" imported="no">MueLu_BoostGraphviz.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherFactoryBase_8hpp" name="MueLu_SmootherFactoryBase.hpp" local="yes" imported="no">MueLu_SmootherFactoryBase.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Hierarchy_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Hierarchy__fwd_8hpp</filename>
    <class kind="class">MueLu::Hierarchy</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHY_SHORT</name>
      <anchorfile>MueLu__Hierarchy__fwd_8hpp.html</anchorfile>
      <anchor>a161a1e3e7e1df84766bc4c9a577b2806</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__HierarchyFactory_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::HierarchyFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYFACTORY_SHORT</name>
      <anchorfile>MueLu__HierarchyFactory_8hpp.html</anchorfile>
      <anchor>a0f9dec659e324f144470ebc9d70ed218</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__HierarchyFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::HierarchyFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYFACTORY_SHORT</name>
      <anchorfile>MueLu__HierarchyFactory__fwd_8hpp.html</anchorfile>
      <anchor>a0f9dec659e324f144470ebc9d70ed218</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyHelpers_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__HierarchyHelpers__fwd_8hpp</filename>
    <class kind="class">MueLu::TopRAPFactory</class>
    <class kind="class">MueLu::TopSmootherFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYHELPERS_SHORT</name>
      <anchorfile>MueLu__HierarchyHelpers__fwd_8hpp.html</anchorfile>
      <anchor>a8fdf9f9bd1b42949ce0acf3b9bdebb8b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__HierarchyManager_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__HierarchyFactory_8hpp" name="MueLu_HierarchyFactory.hpp" local="yes" imported="no">MueLu_HierarchyFactory.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::HierarchyManager</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYMANAGER_SHORT</name>
      <anchorfile>MueLu__HierarchyManager_8hpp.html</anchorfile>
      <anchor>a52d6338fcf959cdbb40a17ddd5da78dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyManager_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__HierarchyManager__fwd_8hpp</filename>
    <class kind="class">MueLu::HierarchyManager</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYMANAGER_SHORT</name>
      <anchorfile>MueLu__HierarchyManager__fwd_8hpp.html</anchorfile>
      <anchor>a52d6338fcf959cdbb40a17ddd5da78dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyUtils_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__HierarchyUtils__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__HierarchyUtils__fwd_8hpp" name="MueLu_HierarchyUtils_fwd.hpp" local="yes" imported="no">MueLu_HierarchyUtils_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__HierarchyManager__fwd_8hpp" name="MueLu_HierarchyManager_fwd.hpp" local="yes" imported="no">MueLu_HierarchyManager_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SetFactoryManager</class>
    <class kind="class">MueLu::HierarchyUtils</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYUTILS_SHORT</name>
      <anchorfile>MueLu__HierarchyUtils__decl_8hpp.html</anchorfile>
      <anchor>a329fb52fa5e80c00cbea49a1ad660ec6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyUtils_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__HierarchyUtils__def_8hpp</filename>
    <includes id="MueLu__HierarchyUtils__decl_8hpp" name="MueLu_HierarchyUtils_decl.hpp" local="yes" imported="no">MueLu_HierarchyUtils_decl.hpp</includes>
    <includes id="MueLu__HierarchyManager_8hpp" name="MueLu_HierarchyManager.hpp" local="yes" imported="no">MueLu_HierarchyManager.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHY_UTILS_SHORT</name>
      <anchorfile>MueLu__HierarchyUtils__def_8hpp.html</anchorfile>
      <anchor>a6d90e57f3c6222a77dadb5f087ac0e9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_HierarchyUtils_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__HierarchyUtils__fwd_8hpp</filename>
    <class kind="class">MueLu::HierarchyUtils</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_HIERARCHYUTILS_SHORT</name>
      <anchorfile>MueLu__HierarchyUtils__fwd_8hpp.html</anchorfile>
      <anchor>a329fb52fa5e80c00cbea49a1ad660ec6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Ifpack2Smoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__Ifpack2Smoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Ifpack2Smoother__fwd_8hpp" name="MueLu_Ifpack2Smoother_fwd.hpp" local="yes" imported="no">MueLu_Ifpack2Smoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::Ifpack2Smoother</class>
    <class kind="class">MueLu::Ifpack2Smoother&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_IFPACK2SMOOTHER_SHORT</name>
      <anchorfile>MueLu__Ifpack2Smoother__decl_8hpp.html</anchorfile>
      <anchor>a0752be322a9b4fd60c25c136a9547446</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Ifpack2Smoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__Ifpack2Smoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Ifpack2Smoother__decl_8hpp" name="MueLu_Ifpack2Smoother_decl.hpp" local="yes" imported="no">MueLu_Ifpack2Smoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Ifpack2Smoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Ifpack2Smoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::Ifpack2Smoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_IFPACK2SMOOTHER_SHORT</name>
      <anchorfile>MueLu__Ifpack2Smoother__fwd_8hpp.html</anchorfile>
      <anchor>a0752be322a9b4fd60c25c136a9547446</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IfpackSmoother.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__IfpackSmoother_8cpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__IfpackSmoother_8hpp" name="MueLu_IfpackSmoother.hpp" local="yes" imported="no">MueLu_IfpackSmoother.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_IfpackSmoother.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__IfpackSmoother_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::IfpackSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_IFPACKSMOOTHER_SHORT</name>
      <anchorfile>MueLu__IfpackSmoother_8hpp.html</anchorfile>
      <anchor>a6c8986293fcafd1601747002a5d4d832</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::SmootherPrototype&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetIfpackSmoother</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab22f10d5b5f4588a5cc848ca81332876</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList(), const LocalOrdinal &amp;overlap=0)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::SmootherPrototype&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>GetIfpackSmoother&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a738e0b9c5ca3db82c6f26387b23d721f</anchor>
      <arglist>(const std::string &amp;type, const Teuchos::ParameterList &amp;paramList, const int &amp;overlap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IfpackSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__IfpackSmoother__fwd_8hpp</filename>
    <class kind="class">MueLu::IfpackSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_IFPACKSMOOTHER_SHORT</name>
      <anchorfile>MueLu__IfpackSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a6c8986293fcafd1601747002a5d4d832</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IndefBlockedDiagonalSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__IndefBlockedDiagonalSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__IndefBlockedDiagonalSmoother__fwd_8hpp" name="MueLu_IndefBlockedDiagonalSmoother_fwd.hpp" local="yes" imported="no">MueLu_IndefBlockedDiagonalSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SubBlockAFactory__fwd_8hpp" name="MueLu_SubBlockAFactory_fwd.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__SchurComplementFactory__fwd_8hpp" name="MueLu_SchurComplementFactory_fwd.hpp" local="yes" imported="no">MueLu_SchurComplementFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::IndefBlockedDiagonalSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_INDEFBLOCKEDDIAGONALSMOOTHER_SHORT</name>
      <anchorfile>MueLu__IndefBlockedDiagonalSmoother__decl_8hpp.html</anchorfile>
      <anchor>a9b2a0dfa5d3618419ad7a97cdecec67d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IndefBlockedDiagonalSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__IndefBlockedDiagonalSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__IndefBlockedDiagonalSmoother__decl_8hpp" name="MueLu_IndefBlockedDiagonalSmoother_decl.hpp" local="yes" imported="no">MueLu_IndefBlockedDiagonalSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_IndefBlockedDiagonalSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__IndefBlockedDiagonalSmoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::IndefBlockedDiagonalSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_INDEFBLOCKEDDIAGONALSMOOTHER_SHORT</name>
      <anchorfile>MueLu__IndefBlockedDiagonalSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a9b2a0dfa5d3618419ad7a97cdecec67d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IsolatedNodeAggregationAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__IsolatedNodeAggregationAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__IsolatedNodeAggregationAlgorithm__fwd_8hpp" name="MueLu_IsolatedNodeAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_IsolatedNodeAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::IsolatedNodeAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ISOLATEDNODEAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__IsolatedNodeAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>af5cfd2a48dd8963ee76e575083a4925d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IsolatedNodeAggregationAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__IsolatedNodeAggregationAlgorithm__def_8hpp</filename>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_IsolatedNodeAggregationAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__IsolatedNodeAggregationAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::IsolatedNodeAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ISOLATEDNODEAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__IsolatedNodeAggregationAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>af5cfd2a48dd8963ee76e575083a4925d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IsolatedNodeAggregationAlgorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__IsolatedNodeAggregationAlgorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_IsolatedNodeAggregationAlgorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__IsolatedNodeAggregationAlgorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_IsolatedNodeAggregationAlgorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__IsolatedNodeAggregationAlgorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_IsorropiaInterface_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__IsorropiaInterface__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::IsorropiaInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ISORROPIAINTERFACE_SHORT</name>
      <anchorfile>MueLu__IsorropiaInterface__decl_8hpp.html</anchorfile>
      <anchor>a5e9375cae80ed818557c95315453cd4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_IsorropiaInterface_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__IsorropiaInterface__def_8hpp</filename>
    <includes id="MueLu__IsorropiaInterface__decl_8hpp" name="MueLu_IsorropiaInterface_decl.hpp" local="yes" imported="no">MueLu_IsorropiaInterface_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_IsorropiaInterface_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__IsorropiaInterface__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::IsorropiaInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ISORROPIAINTERFACE_SHORT</name>
      <anchorfile>MueLu__IsorropiaInterface__fwd_8hpp.html</anchorfile>
      <anchor>a5e9375cae80ed818557c95315453cd4a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_KeepType.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__KeepType_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="typedef">
      <type>short</type>
      <name>KeepType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a76ac5d9fd642b090d75beb67401d8db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeepEnum</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserData</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbead7a304b24689a836e7fea0ce1c8f6cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Keep</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbea6e9188562d239e004c6f6b23e377fd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Final</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbea6cb56427f81c2b6d8022f820707836e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NextRun</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbeac62ab56b663b722d273c91dd9a4f4927</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>All</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbea674bc15290b86a1b4c3b9e9cc626233a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LeftoverAggregationAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LeftoverAggregationAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__LeftoverAggregationAlgorithm__fwd_8hpp" name="MueLu_LeftoverAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_LeftoverAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__CoupledAggregationCommHelper__fwd_8hpp" name="MueLu_CoupledAggregationCommHelper_fwd.hpp" local="yes" imported="no">MueLu_CoupledAggregationCommHelper_fwd.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::LeftoverAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LEFTOVERAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>aabedb56d1a9eaa5ea1fc73cecb432dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_NOSCORE</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>a6c7ba6330b4207f49c73c770c9d0f129</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_DISTONE_VERTEX_WEIGHT</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>a878e680544ef59cbc594dfa73919f7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INCR_SCALING</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>af22b127ff87f517c8fe5ab72246d9812</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PENALTYFACTOR</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>a9cc1266930e88b40f940397411b90cd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LeftoverAggregationAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LeftoverAggregationAlgorithm__def_8hpp</filename>
    <includes id="MueLu__LeftoverAggregationAlgorithm__decl_8hpp" name="MueLu_LeftoverAggregationAlgorithm_decl.hpp" local="yes" imported="no">MueLu_LeftoverAggregationAlgorithm_decl.hpp</includes>
    <includes id="MueLu__Aggregates__decl_8hpp" name="MueLu_Aggregates_decl.hpp" local="yes" imported="no">MueLu_Aggregates_decl.hpp</includes>
    <includes id="MueLu__Utilities__decl_8hpp" name="MueLu_Utilities_decl.hpp" local="yes" imported="no">MueLu_Utilities_decl.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PHASE4BUCKETS</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__def_8hpp.html</anchorfile>
      <anchor>a7354ca5bcf5c5468d646cb65d6abd478</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LeftoverAggregationAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__LeftoverAggregationAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::LeftoverAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LEFTOVERAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__LeftoverAggregationAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>aabedb56d1a9eaa5ea1fc73cecb432dbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Level.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Level_8cpp</filename>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Level.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__Level_8hpp</filename>
    <includes id="MueLu__BoostGraphviz_8hpp" name="MueLu_BoostGraphviz.hpp" local="yes" imported="no">MueLu_BoostGraphviz.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__KeepType_8hpp" name="MueLu_KeepType.hpp" local="yes" imported="no">MueLu_KeepType.hpp</includes>
    <includes id="MueLu__NoFactory_8hpp" name="MueLu_NoFactory.hpp" local="yes" imported="no">MueLu_NoFactory.hpp</includes>
    <includes id="MueLu__VariableContainer_8hpp" name="MueLu_VariableContainer.hpp" local="yes" imported="no">MueLu_VariableContainer.hpp</includes>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <class kind="class">MueLu::Level</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Level_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Level__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LEVEL_SHORT</name>
      <anchorfile>MueLu__Level__fwd_8hpp.html</anchorfile>
      <anchor>a96d27b8c7fee8f57993659a882ad5316</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LineDetectionFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__LineDetectionFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__LineDetectionFactory__fwd_8hpp" name="MueLu_LineDetectionFactory_fwd.hpp" local="yes" imported="no">MueLu_LineDetectionFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::LineDetectionFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VERTICAL</name>
      <anchorfile>MueLu__LineDetectionFactory__decl_8hpp.html</anchorfile>
      <anchor>a91b21b229126b2c997c247835568107b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HORIZONTAL</name>
      <anchorfile>MueLu__LineDetectionFactory__decl_8hpp.html</anchorfile>
      <anchor>a583cfe7670aa69f02d684bb5c5d3799e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRID_SUPPLIED</name>
      <anchorfile>MueLu__LineDetectionFactory__decl_8hpp.html</anchorfile>
      <anchor>af4be3f48ee8157d6079dcf9a32d9054f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LINEDETECTIONFACTORY_SHORT</name>
      <anchorfile>MueLu__LineDetectionFactory__decl_8hpp.html</anchorfile>
      <anchor>ac137b13c5ab5d2e66e2f9609ed67904b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LineDetectionFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__LineDetectionFactory__def_8hpp</filename>
    <includes id="MueLu__LineDetectionFactory__decl_8hpp" name="MueLu_LineDetectionFactory_decl.hpp" local="yes" imported="no">MueLu_LineDetectionFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__LineDetectionFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LineDetectionFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__LineDetectionFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::LineDetectionFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LINEDETECTIONFACTORY_SHORT</name>
      <anchorfile>MueLu__LineDetectionFactory__fwd_8hpp.html</anchorfile>
      <anchor>ac137b13c5ab5d2e66e2f9609ed67904b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LinkedList.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LinkedList_8cpp</filename>
    <includes id="MueLu__LinkedList_8hpp" name="MueLu_LinkedList.hpp" local="yes" imported="no">MueLu_LinkedList.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_LinkedList.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LinkedList_8hpp</filename>
    <class kind="struct">MueLu::MueLu_Node_Struct</class>
    <class kind="class">MueLu::LinkedList</class>
    <namespace>MueLu</namespace>
    <member kind="typedef">
      <type>struct MueLu::MueLu_Node_Struct</type>
      <name>MueLu_Node</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a67d5c1ec1e04dcdd63ec5e92f5dfdb0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LocalAggregationAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LocalAggregationAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__LocalAggregationAlgorithm__fwd_8hpp" name="MueLu_LocalAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_LocalAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="struct">MueLu::MueLu_SuperNode_Struct</class>
    <class kind="class">MueLu::LocalAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCALAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__LocalAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>acd429d6dd01e7d2685f23215953bd887</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct MueLu::MueLu_SuperNode_Struct</type>
      <name>MueLu_SuperNode</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a83c005c50b4d62384fec5df2948c750c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CANodeState</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA_READY</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3a3e8e18015711f6093173c41df9857262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA_NOTSEL</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3a7c5187a4353692005573735e0c15c3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA_SELECTED</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3afeefe1e8249badc4b9beb15eb843f8dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LocalAggregationAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LocalAggregationAlgorithm__def_8hpp</filename>
    <includes id="MueLu__LocalAggregationAlgorithm__decl_8hpp" name="MueLu_LocalAggregationAlgorithm_decl.hpp" local="yes" imported="no">MueLu_LocalAggregationAlgorithm_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__LinkedList_8hpp" name="MueLu_LinkedList.hpp" local="yes" imported="no">MueLu_LinkedList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_LocalAggregationAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__LocalAggregationAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::LocalAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCALAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__LocalAggregationAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>acd429d6dd01e7d2685f23215953bd887</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LocalPermutationStrategy_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__LocalPermutationStrategy__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::LocalPermutationStrategy</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCALPERMUTATIONSTRATEGY_SHORT</name>
      <anchorfile>MueLu__LocalPermutationStrategy__decl_8hpp.html</anchorfile>
      <anchor>a25ea6d6294a1787b1d98446fbbc1751a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LocalPermutationStrategy_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__LocalPermutationStrategy__def_8hpp</filename>
    <includes id="MueLu__LocalPermutationStrategy__decl_8hpp" name="MueLu_LocalPermutationStrategy_decl.hpp" local="yes" imported="no">MueLu_LocalPermutationStrategy_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_LocalPermutationStrategy_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__LocalPermutationStrategy__fwd_8hpp</filename>
    <class kind="class">MueLu::LocalPermutationStrategy</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCALPERMUTATIONSTRATEGY_SHORT</name>
      <anchorfile>MueLu__LocalPermutationStrategy__fwd_8hpp.html</anchorfile>
      <anchor>a25ea6d6294a1787b1d98446fbbc1751a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LWGraph_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LWGraph__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__LWGraph__fwd_8hpp" name="MueLu_LWGraph_fwd.hpp" local="yes" imported="no">MueLu_LWGraph_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::LWGraph</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LWGRAPH_SHORT</name>
      <anchorfile>MueLu__LWGraph__decl_8hpp.html</anchorfile>
      <anchor>ae6ba7b5dc57aa8252db249b8006b3fef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LWGraph_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LWGraph__def_8hpp</filename>
    <includes id="MueLu__LWGraph__decl_8hpp" name="MueLu_LWGraph_decl.hpp" local="yes" imported="no">MueLu_LWGraph_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_LWGraph_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__LWGraph__fwd_8hpp</filename>
    <class kind="class">MueLu::LWGraph</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LWGRAPH_SHORT</name>
      <anchorfile>MueLu__LWGraph__fwd_8hpp.html</anchorfile>
      <anchor>ae6ba7b5dc57aa8252db249b8006b3fef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LWGraph_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LWGraph__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_LWGraph_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__LWGraph__kokkos__def_8hpp</filename>
    <includes id="MueLu__LWGraph__kokkos__decl_8hpp" name="MueLu_LWGraph_kokkos_decl.hpp" local="yes" imported="no">MueLu_LWGraph_kokkos_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="variable" protection="private">
      <type>RowType</type>
      <name>rowPointers_</name>
      <anchorfile>MueLu__LWGraph__kokkos__def_8hpp.html</anchorfile>
      <anchor>addbae7cfe087276171d70e26fa1a749f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_LWGraph_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__LWGraph__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_MapTransferFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__MapTransferFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MapTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MAPTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__MapTransferFactory__decl_8hpp.html</anchorfile>
      <anchor>a1e36c0df9cc6adc5e8010f53b464b3c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MapTransferFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__MapTransferFactory__def_8hpp</filename>
    <includes id="MueLu__MapTransferFactory__decl_8hpp" name="MueLu_MapTransferFactory_decl.hpp" local="yes" imported="no">MueLu_MapTransferFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MapTransferFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__MapTransferFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::MapTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MAPTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__MapTransferFactory__fwd_8hpp.html</anchorfile>
      <anchor>a1e36c0df9cc6adc5e8010f53b464b3c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MasterList.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__MasterList_8cpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MasterList.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__MasterList_8hpp</filename>
    <class kind="class">MueLu::DefaultProblemStrings</class>
    <class kind="class">MueLu::MasterList</class>
    <class kind="class">MueLu::DefaultProblemStrings</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MatlabSmoother.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__MatlabSmoother_8cpp</filename>
    <includes id="MueLu__MatlabSmoother__def_8hpp" name="MueLu_MatlabSmoother_def.hpp" local="yes" imported="no">MueLu_MatlabSmoother_def.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCAL_INSTANT</name>
      <anchorfile>MueLu__MatlabSmoother_8cpp.html</anchorfile>
      <anchor>a0cf4a2be66b0a7c31a079ddabc3f917e</anchor>
      <arglist>(S, LO, GO, N)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MatlabSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__MatlabSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__MatlabUtils__decl_8hpp" name="MueLu_MatlabUtils_decl.hpp" local="yes" imported="no">MueLu_MatlabUtils_decl.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MatlabSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MATLABSMOOTHER_SHORT</name>
      <anchorfile>MueLu__MatlabSmoother__decl_8hpp.html</anchorfile>
      <anchor>a3528d77cccdf79b5d2de456195c9b689</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MatlabSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__MatlabSmoother__def_8hpp</filename>
    <includes id="MueLu__MatlabSmoother__decl_8hpp" name="MueLu_MatlabSmoother_decl.hpp" local="yes" imported="no">MueLu_MatlabSmoother_decl.hpp</includes>
    <includes id="MueLu__MatlabUtils__decl_8hpp" name="MueLu_MatlabUtils_decl.hpp" local="yes" imported="no">MueLu_MatlabUtils_decl.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MatlabUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__MatlabUtils_8cpp</filename>
    <includes id="MueLu__MatlabUtils__def_8hpp" name="MueLu_MatlabUtils_def.hpp" local="yes" imported="no">MueLu_MatlabUtils_def.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="typedef">
      <type>int</type>
      <name>mwIndex</name>
      <anchorfile>MueLu__MatlabUtils_8cpp.html</anchorfile>
      <anchor>a8fff2fe30d80ab62e27a1dd75985ae47</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>mwIndex_to_int</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7de7a50f215b0f5bd6ad6906ce95ee0c</anchor>
      <arglist>(int N, mwIndex *mwi_array)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a44f5b05792c0f30e5eadfa24c002ca24</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad4bd8ff70647ae6bdc7f68149e5efa18</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a85d1dd0161ea5f885856e832eeaf905c</anchor>
      <arglist>(double *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa2511ccc55e6f51f8a4ccef975a4eae8</anchor>
      <arglist>(complex_t *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callMatlabNoArgs</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adcf56027097169b30abbfaeac9599e29</anchor>
      <arglist>(std::string function)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RCP&lt; MuemexArg &gt; &gt;</type>
      <name>callMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a319407c0face0e5bed293f1b9ab44b89</anchor>
      <arglist>(std::string function, int numOutputs, std::vector&lt; RCP&lt; MuemexArg &gt;&gt; args)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae5f38e40c3a227c222b01e2bf779df57</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab23c8d1d30d3341833a473d038bf3232</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveAmalInfo</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4b23cd7ba867bf30bce9b02156ea0df2</anchor>
      <arglist>(RCP&lt; MAmalInfo &gt; &amp;amalInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidMatlabAggregates</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58a2dd02eab7cf4ac412d819f4fd2b38</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidMatlabGraph</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a120f98f438d2ed34f7fa174c91be7542</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tokenizeList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acf545ae277047b60e2e413b16c586827</anchor>
      <arglist>(const std::string &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getInputParamList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a176b687afc744a6f92781a78f42d8c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MuemexArg &gt;</type>
      <name>convertMatlabVar</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a343e030b3116faf2d8a8f63eb8bf5410</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template bool</type>
      <name>loadDataFromMatlab&lt; bool &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab63c195a1e157659b5bfbaed4b49e2ab</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template int</type>
      <name>loadDataFromMatlab&lt; int &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a968d1ba9ae7174319e2bafbc9aac835b</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>loadDataFromMatlab&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acee660b43d7f54fe26d2ac6ea224d484</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template complex_t</type>
      <name>loadDataFromMatlab&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9a06431d82959130d8b87a317e688306</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template string</type>
      <name>loadDataFromMatlab&lt; string &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6e7c795ff4eb18b0bf0fe4eb7504d805</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_ordinal_vector &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_ordinal_vector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac6977e6ff3351afdbf405be2cf477e5d</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_MultiVector_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1b1715fa34e1831e922e6ad4e927db48</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_MultiVector_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a05ce2ff6518de15755151c7c8ada879e</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_CrsMatrix_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_CrsMatrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4447c10801be5cb7f05bc02d4916b682</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_CrsMatrix_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_CrsMatrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4a83b1e9f88c3bf01fb6298b5a1283d6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_Matrix_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_Matrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae5518ce351587e881bb5421a2d2f6692</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_Matrix_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_Matrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a26e0d8c9dda557b4a800b28763b07ae5</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_MultiVector_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a82ac89ffebe6e8bd72d92d77dccbb4f0</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_MultiVector_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac65e7401084626d9ac1816be3cf4be89</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Epetra_CrsMatrix &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4f9f81dbdadd970a5fc1016f422819ed</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Epetra_MultiVector &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Epetra_MultiVector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17d75aee14deb23e50ec65ad5b7827a6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MAggregates &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MAggregates &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adffe36a91a39dc74a03b820164c6b6c4</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MAmalInfo &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MAmalInfo &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a867a8a4f3cacd1d4756c748f2380335c</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5c56222e4dd0c4d2a5daf8816da1c614</anchor>
      <arglist>(bool &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acace229417c411eb6c868a790aafe984</anchor>
      <arglist>(int &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a19ac2fde745a2500a16c1d7439df9525</anchor>
      <arglist>(double &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ada0ba38e14a1c0e891b9dc634c9a0a54</anchor>
      <arglist>(complex_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa43967b4058d0e5ff79f2e60ff34135d</anchor>
      <arglist>(string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a57d138e579265e5dd8db2bd0d27e24db</anchor>
      <arglist>(RCP&lt; Xpetra_ordinal_vector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af6da111cc64f00a0185aac1f664741c1</anchor>
      <arglist>(RCP&lt; Tpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1e6bf1edfa9343738549949d0445ce52</anchor>
      <arglist>(RCP&lt; Tpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a740da07cd9f72b22fffb9c2aa420640e</anchor>
      <arglist>(RCP&lt; Tpetra_CrsMatrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4423295030114c9b959516d6088fd1cb</anchor>
      <arglist>(RCP&lt; Tpetra_CrsMatrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac3f8ddeb4a1777dfad66ef782c2fd97d</anchor>
      <arglist>(RCP&lt; Xpetra_Matrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0551e5953983c8c3b4393bdd8aa63cbd</anchor>
      <arglist>(RCP&lt; Xpetra_Matrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab4cd16b110f1f5be9bb8d56f6ed60c3c</anchor>
      <arglist>(RCP&lt; Xpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a229b43e8c662c514ba9aab3c64453e06</anchor>
      <arglist>(RCP&lt; Xpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae2d94121db50f7232ea9860a14f5ec0c</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acffd341eec2353cb5e33497fd6f53a57</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2bd659029574a15a24a1f7871496aef5</anchor>
      <arglist>(RCP&lt; MAggregates &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a8fc7e7f7a553ad4d8e90a48b44f0fb3c</anchor>
      <arglist>(RCP&lt; MAmalInfo &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template vector&lt; RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5b19546e7459af6628ef96252d148604</anchor>
      <arglist>(const Factory *factory, string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>template vector&lt; RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad0717b1a03bc216339dc6acd6900ab3d</anchor>
      <arglist>(const Factory *factory, string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>processProvides&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac80c8eac3b631c0f71504883122c2564</anchor>
      <arglist>(vector&lt; RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>processProvides&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a74c476d960ba06724326caa37bde28a2</anchor>
      <arglist>(vector&lt; RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rewrap_ints</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afc0105f44df4ccc289220f3c87b41494</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MatlabUtils_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__MatlabUtils__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Factory_8hpp" name="MueLu_Factory.hpp" local="yes" imported="no">MueLu_Factory.hpp</includes>
    <includes id="MueLu__Hierarchy__decl_8hpp" name="MueLu_Hierarchy_decl.hpp" local="yes" imported="no">MueLu_Hierarchy_decl.hpp</includes>
    <includes id="MueLu__Aggregates__decl_8hpp" name="MueLu_Aggregates_decl.hpp" local="yes" imported="no">MueLu_Aggregates_decl.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__decl_8hpp" name="MueLu_AmalgamationInfo_decl.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_decl.hpp</includes>
    <includes id="MueLu__Utilities__decl_8hpp" name="MueLu_Utilities_decl.hpp" local="yes" imported="no">MueLu_Utilities_decl.hpp</includes>
    <includes id="MueLu__Graph__decl_8hpp" name="MueLu_Graph_decl.hpp" local="yes" imported="no">MueLu_Graph_decl.hpp</includes>
    <class kind="class">MueLu::MuemexArg</class>
    <class kind="class">MueLu::MuemexData</class>
    <namespace>MueLu</namespace>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosDeviceWrapperNode&lt; Kokkos::Serial, Kokkos::HostSpace &gt;</type>
      <name>mm_node_t</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afe3c8592479323ff34e00058640e691d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>mm_LocalOrd</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2c2f209674415901b39d1d2ed5b0e706</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>mm_GlobalOrd</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a851100c269a23851ba8e091f18cb18b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>complex_t</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abae36bab95061a0947692ec7a39503d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map</type>
      <name>muemex_map_type</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa0dbec2a89e828cbe9674cb259c8fc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_CrsMatrix_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0a6cb4dc21b9e82d17cf18683d60ecea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_CrsMatrix_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aca457bdc128f82d7b1ceca7075cd7098</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_MultiVector_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a12c4810d19b136c5e2a4739244b27429</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_MultiVector_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58598a0c4287dc0b4efe2eec5ff591e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Map&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_map</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aadd7e952313dd2bec5addf51a191c67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Vector&lt; mm_LocalOrd, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_ordinal_vector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a14c1f139d43e86e5d952086289e03572</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Matrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_Matrix_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a97cbe293ae62c75cfb2ad22961917966</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Matrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_Matrix_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0e0990ac13abc044997e22a387fd1a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_MultiVector_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a41e14dc27828d6408d6413d5c64780c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_MultiVector_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad0cc9a4e46bc657eb5570977d62cfe83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::Hierarchy&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Hierarchy_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afeaf6f9ed0c190a74b8cc0f619714061</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::Hierarchy&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Hierarchy_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3082b9ef021a3f5dd68418fa263380c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::Aggregates&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>MAggregates</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9e63e08a41e1ba5960ea0e6ae7a3670d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::AmalgamationInfo&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>MAmalInfo</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac05d8213e88fdd623527c382e0c58eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::GraphBase&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>MGraph</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9d0bf6382c072ef39dc76a714fc17544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a526cda6806394f43200c061930f93b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033aa2cf8c8cf92ee3a39fa2eaa6ff7dc43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a202613a707416b5886abda5435ab9859</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a6c937decca5a3aa17323883661534d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ad7734ed3828d75aa025afc234f8aed17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MAP</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a84c9961f006c9f3ece44cc16b4334abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_ORDINAL_VECTOR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a41abce024f776d3534959c81c6762988</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MULTIVECTOR_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033af1cc6dc5817218c0df0de53fcb52e7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MULTIVECTOR_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a996a08d43e4fb1ca7a037a9ab15f32c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MATRIX_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a7526c40cfd575671b0f38d3f3c04aecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MATRIX_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033aa567100c2bcae7a9b3e74e74aa0d1d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MATRIX_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a35fb67e5aa97d001ecc5693fe5c45465</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MATRIX_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a08e917b487e64ab1b0bd1cc22d980024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MULTIVECTOR_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a46976661a8951857960b4d75d4142f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MULTIVECTOR_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a49fc80c0a0ede375950e005fc23b00e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EPETRA_CRSMATRIX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ac8a0c4ea23c3215aaee06e6af161a40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EPETRA_MULTIVECTOR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a3920c16650633a885a1ac8d49c438fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGREGATES</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ad38a56fde076d810fcf4ad208a81e4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AMALGAMATION_INFO</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033aeb12219fdd1205ad9d3684e35721bc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ae60abe8a2ee424cd2d9fe77daaf7addf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3493c98c911b4f6ccc7f640cf692158c</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a073ae207a9e3319ee380db9dec7ec2c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>loadDataFromMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adbf54063fe9749f163d82006f3b67c83</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>affa71e24d5b734a2d911e88ddf07c27d</anchor>
      <arglist>(T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9bba5518d09baeb92c34b2f38e50a8f8</anchor>
      <arglist>(const T &amp;data, std::string &amp;name, Level &amp;lvl, Factory *fact=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>getLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa80760abd8cf70eb123834ba341c7ce4</anchor>
      <arglist>(std::string &amp;name, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a830d70c6aab3d042d26a9d89e326b04a</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2a1a2f29da15d3c1b98cba81ac52d6b1</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad68b716bf5d9b3cf27c0f8cb4d987f9f</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa4cf62e6cb27b8f1f746786225bad463</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab0ce03261b518f5559875cd34582d64f</anchor>
      <arglist>(Scalar *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>mwIndex_to_int</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7de7a50f215b0f5bd6ad6906ce95ee0c</anchor>
      <arglist>(int N, mwIndex *mwi_array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidMatlabAggregates</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58a2dd02eab7cf4ac412d819f4fd2b38</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidMatlabGraph</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a120f98f438d2ed34f7fa174c91be7542</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tokenizeList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acf545ae277047b60e2e413b16c586827</anchor>
      <arglist>(const std::string &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callMatlabNoArgs</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adcf56027097169b30abbfaeac9599e29</anchor>
      <arglist>(std::string function)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>callMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9448f5a887f562b194f507be00616594</anchor>
      <arglist>(std::string function, int numOutputs, std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; args)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getInputParamList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a176b687afc744a6f92781a78f42d8c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MuemexArg &gt;</type>
      <name>convertMatlabVar</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a343e030b3116faf2d8a8f63eb8bf5410</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>ltrim</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac69d742da0989b05a561262ce00b018b</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>rtrim</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac950da14487749288e3a5c945c1736fa</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>trim</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a30fc38686417f3c5da4aed26a8e09cf5</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MatlabUtils_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__MatlabUtils__def_8hpp</filename>
    <includes id="MueLu__MatlabUtils__decl_8hpp" name="MueLu_MatlabUtils_decl.hpp" local="yes" imported="no">MueLu_MatlabUtils_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3493c98c911b4f6ccc7f640cf692158c</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac273a6dd0a1a74e4a8885ac23d17cb09</anchor>
      <arglist>(const int &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; int &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4e7e536e2ab3774529dcd7847644b8bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; bool &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab9a7af3bfb4b88fa0c3a416c13a63cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a37a3ef47f4e21f46c25f6bebb29a0c3c</anchor>
      <arglist>(const double &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2d0434bd4bfb9678026b383abfedbc5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5d0e332a7b1e014abe7166a51690fc01</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; string &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac704514811179f583c312bf621f60ea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0f5ef1d13eb97a478d59a8d1f878280d</anchor>
      <arglist>(const complex_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4397f6e8a495f0ba47b8d345248995b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5e33d94cfcc019be2560f3ac0748a432</anchor>
      <arglist>(const RCP&lt; Xpetra_map &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_map &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a760d3aa71648ba5863a5cabab8185d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>add0a6f4e273d92c20c2e9d889e5d7db6</anchor>
      <arglist>(const RCP&lt; Xpetra_ordinal_vector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_ordinal_vector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a702ca13a1567857ab9f937e64b7e163a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3238fcf96dd886d91cceda72a300dbbd</anchor>
      <arglist>(const RCP&lt; Tpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad46232fbe6fd3f1725210a8dab337006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae859eff3e28c65edfc7815c7c555664d</anchor>
      <arglist>(const RCP&lt; Tpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5e87df08977dac64099b6438af5c19cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae160469cb0e5a43d984b2fd8b08ed74e</anchor>
      <arglist>(const RCP&lt; Tpetra_CrsMatrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_CrsMatrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a642589ad641d4981fbbaf8325aa96bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab44f4a7984a4690dc566fe4b84655f57</anchor>
      <arglist>(const RCP&lt; Tpetra_CrsMatrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_CrsMatrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a190fecaf281b8a7a97831484021c489b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acd9e88cb0b46789668ed7fdd4b46c248</anchor>
      <arglist>(const RCP&lt; Xpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a621ad7212f2f192ccb2e21c55b983419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af1eec6b900da9fa65deb2d15ccc0434f</anchor>
      <arglist>(const RCP&lt; Xpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abc51a1185f6562306e32e79b18c475e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa34d0a6ef844c7fc9e47cdbeba174c7c</anchor>
      <arglist>(const RCP&lt; Xpetra_Matrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_Matrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab137a62828eb4f32993a6e53dbb0aacb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a88e36cac7956ad499cc932a11fc04088</anchor>
      <arglist>(const RCP&lt; Xpetra_Matrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_Matrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac0a66d48b7547396caa6a4a55cfc0535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a62415fbfbcd34b1aae8ce5fcc4cbaac9</anchor>
      <arglist>(const RCP&lt; Epetra_CrsMatrix &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Epetra_CrsMatrix &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a78457ea2b1770a65b6743f64802c2eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17bea840230600de3f1ffcd1b31d66a1</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Epetra_MultiVector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17a2b9583a8296885f9d1c5b4bd2ab10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a22bc39786210b486e8f2466cf6f73ff5</anchor>
      <arglist>(const RCP&lt; MAggregates &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; MAggregates &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a035ad26730e93507d602a12e15dc892f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5dbf2e41011550e7ce91d73421c08646</anchor>
      <arglist>(const RCP&lt; MAmalInfo &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; MAmalInfo &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a107e4ea667c2e01eaa99524f17eb5983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a693cb8fb32520f7725a5cdab1da55921</anchor>
      <arglist>(const RCP&lt; MGraph &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; MGraph &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad43f520f749f242ee6f47611f2214adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a44f5b05792c0f30e5eadfa24c002ca24</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad4bd8ff70647ae6bdc7f68149e5efa18</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae5f38e40c3a227c222b01e2bf779df57</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab23c8d1d30d3341833a473d038bf3232</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a85d1dd0161ea5f885856e832eeaf905c</anchor>
      <arglist>(double *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa2511ccc55e6f51f8a4ccef975a4eae8</anchor>
      <arglist>(complex_t *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab4cd16b110f1f5be9bb8d56f6ed60c3c</anchor>
      <arglist>(RCP&lt; Xpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a229b43e8c662c514ba9aab3c64453e06</anchor>
      <arglist>(RCP&lt; Xpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac3f8ddeb4a1777dfad66ef782c2fd97d</anchor>
      <arglist>(RCP&lt; Xpetra_Matrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0551e5953983c8c3b4393bdd8aa63cbd</anchor>
      <arglist>(RCP&lt; Xpetra_Matrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template int</type>
      <name>loadDataFromMatlab&lt; int &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a968d1ba9ae7174319e2bafbc9aac835b</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template bool</type>
      <name>loadDataFromMatlab&lt; bool &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab63c195a1e157659b5bfbaed4b49e2ab</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>loadDataFromMatlab&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acee660b43d7f54fe26d2ac6ea224d484</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template complex_t</type>
      <name>loadDataFromMatlab&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9a06431d82959130d8b87a317e688306</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template string</type>
      <name>loadDataFromMatlab&lt; string &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6e7c795ff4eb18b0bf0fe4eb7504d805</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra_map &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_map &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6efb543439d94266e0bae1243f6f8fa6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_ordinal_vector &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_ordinal_vector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac6977e6ff3351afdbf405be2cf477e5d</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_MultiVector_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1b1715fa34e1831e922e6ad4e927db48</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_MultiVector_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a05ce2ff6518de15755151c7c8ada879e</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_CrsMatrix_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_CrsMatrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4447c10801be5cb7f05bc02d4916b682</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_CrsMatrix_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_CrsMatrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4a83b1e9f88c3bf01fb6298b5a1283d6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::Matrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6b3c40a65c87a8f864d45a80e3525d3f</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::Matrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a23f51bd5895d26c933cae2ce89b7500e</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6fe01dcee34660f5c7ea46974d40eaa1</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad41020f8fa02bf393bb889b4f8788497</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Epetra_CrsMatrix &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4f9f81dbdadd970a5fc1016f422819ed</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Epetra_MultiVector &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Epetra_MultiVector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17d75aee14deb23e50ec65ad5b7827a6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MAggregates &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MAggregates &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adffe36a91a39dc74a03b820164c6b6c4</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MAmalInfo &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MAmalInfo &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a867a8a4f3cacd1d4756c748f2380335c</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MGraph &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MGraph &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1647a5850ec9276895b801d53c6c6f2c</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acace229417c411eb6c868a790aafe984</anchor>
      <arglist>(int &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5c56222e4dd0c4d2a5daf8816da1c614</anchor>
      <arglist>(bool &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a19ac2fde745a2500a16c1d7439df9525</anchor>
      <arglist>(double &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ada0ba38e14a1c0e891b9dc634c9a0a54</anchor>
      <arglist>(complex_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa43967b4058d0e5ff79f2e60ff34135d</anchor>
      <arglist>(string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0ab38875b42f6846852572a398779f7e</anchor>
      <arglist>(RCP&lt; Xpetra_map &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a57d138e579265e5dd8db2bd0d27e24db</anchor>
      <arglist>(RCP&lt; Xpetra_ordinal_vector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab9452f4954dcaecfcb131da1d7e4295d</anchor>
      <arglist>(RCP&lt; Tpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0a776e18ba89aa6390b38bed63e15610</anchor>
      <arglist>(RCP&lt; Tpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a740da07cd9f72b22fffb9c2aa420640e</anchor>
      <arglist>(RCP&lt; Tpetra_CrsMatrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4423295030114c9b959516d6088fd1cb</anchor>
      <arglist>(RCP&lt; Tpetra_CrsMatrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aaa608aa6f0406b77b75006cba4ad20a0</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6b49aa6e43cfbb701fd02633d8edde41</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae2d94121db50f7232ea9860a14f5ec0c</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acffd341eec2353cb5e33497fd6f53a57</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2bd659029574a15a24a1f7871496aef5</anchor>
      <arglist>(RCP&lt; MAggregates &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a8fc7e7f7a553ad4d8e90a48b44f0fb3c</anchor>
      <arglist>(RCP&lt; MAmalInfo &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac62243148e0eaa5a2cce4b7d04398a54</anchor>
      <arglist>(RCP&lt; MGraph &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a434c3dec0a23616044f49956d000ad2e</anchor>
      <arglist>(const T &amp;data, std::string &amp;name, Level &amp;lvl, const Factory *fact)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>getLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa80760abd8cf70eb123834ba341c7ce4</anchor>
      <arglist>(std::string &amp;name, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a830d70c6aab3d042d26a9d89e326b04a</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2a1a2f29da15d3c1b98cba81ac52d6b1</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; double, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1246ea5c5217260e52189334a60e8986</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; complex_t, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae0ff8da16adcd29bbde587c82b57ed89</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides&lt; double, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3a8a778fd53e6fcd4e9c7f5e2dbc9c4d</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides&lt; complex_t, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac380aa16063d57ad4aec4319139b6a87</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MatrixAnalysisFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__MatrixAnalysisFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MatrixAnalysisFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MATRIXANALYSISFACTORY_SHORT</name>
      <anchorfile>MueLu__MatrixAnalysisFactory__decl_8hpp.html</anchorfile>
      <anchor>a0d9f2d9a28f13443dee1e6942588c903</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MatrixAnalysisFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__MatrixAnalysisFactory__def_8hpp</filename>
    <includes id="MueLu__MatrixAnalysisFactory__decl_8hpp" name="MueLu_MatrixAnalysisFactory_decl.hpp" local="yes" imported="no">MueLu_MatrixAnalysisFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MatrixAnalysisFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__MatrixAnalysisFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::MatrixAnalysisFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MATRIXANALYSISFACTORY_SHORT</name>
      <anchorfile>MueLu__MatrixAnalysisFactory__fwd_8hpp.html</anchorfile>
      <anchor>a0d9f2d9a28f13443dee1e6942588c903</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Memory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Memory_8cpp</filename>
    <includes id="MueLu__Memory_8hpp" name="MueLu_Memory.hpp" local="yes" imported="no">MueLu_Memory.hpp</includes>
    <namespace>MueLu</namespace>
    <namespace>MueLu::MemUtils</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>PrintMemoryUsage</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>a11c27664227aac4e4dd39acfb87bb5af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>PrintMemoryInfo</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>af8e87a10f8546fc4338c78cc7c38cb83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReportTimeAndMemory</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>aa8bc7137204e52950ca852a6fdf8b5b0</anchor>
      <arglist>(Teuchos::Time const &amp;timer, Teuchos::Comm&lt; int &gt; const &amp;Comm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Memory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Memory_8hpp</filename>
    <class kind="class">Teuchos::Comm</class>
    <namespace>Teuchos</namespace>
    <namespace>MueLu</namespace>
    <namespace>MueLu::MemUtils</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>PrintMemoryUsage</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>a11c27664227aac4e4dd39acfb87bb5af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>PrintMemoryInfo</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>af8e87a10f8546fc4338c78cc7c38cb83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReportTimeAndMemory</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>aa8bc7137204e52950ca852a6fdf8b5b0</anchor>
      <arglist>(Teuchos::Time const &amp;timer, Teuchos::Comm&lt; int &gt; const &amp;Comm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MergedBlockedMatrixFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__MergedBlockedMatrixFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MergedBlockedMatrixFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MERGEDBLOCKEDMATRIXFACTORY_SHORT</name>
      <anchorfile>MueLu__MergedBlockedMatrixFactory__decl_8hpp.html</anchorfile>
      <anchor>a90225bee35567391445f585c7295934d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MergedBlockedMatrixFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__MergedBlockedMatrixFactory__def_8hpp</filename>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MergedBlockedMatrixFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__MergedBlockedMatrixFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::MergedBlockedMatrixFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MERGEDBLOCKEDMATRIXFACTORY_SHORT</name>
      <anchorfile>MueLu__MergedBlockedMatrixFactory__fwd_8hpp.html</anchorfile>
      <anchor>a90225bee35567391445f585c7295934d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MergedSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__MergedSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__MergedSmoother__fwd_8hpp" name="MueLu_MergedSmoother_fwd.hpp" local="yes" imported="no">MueLu_MergedSmoother_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MergedSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MERGEDSMOOTHER_SHORT</name>
      <anchorfile>MueLu__MergedSmoother__decl_8hpp.html</anchorfile>
      <anchor>a962ce29ef1541a40009b3a82adeef7ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MergedSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__MergedSmoother__def_8hpp</filename>
    <includes id="MueLu__MergedSmoother__decl_8hpp" name="MueLu_MergedSmoother_decl.hpp" local="yes" imported="no">MueLu_MergedSmoother_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MergedSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__MergedSmoother__fwd_8hpp</filename>
    <class kind="class">MueLu::MergedSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MERGEDSMOOTHER_SHORT</name>
      <anchorfile>MueLu__MergedSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a962ce29ef1541a40009b3a82adeef7ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MHDRAPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Geometric-Interpolation/</path>
    <filename>MueLu__MHDRAPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MHDRAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MHDRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__MHDRAPFactory__decl_8hpp.html</anchorfile>
      <anchor>a9a8d211591ee9189040957fcf83cdd19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MHDRAPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Geometric-Interpolation/</path>
    <filename>MueLu__MHDRAPFactory__def_8hpp</filename>
    <includes id="MueLu__MHDRAPFactory__decl_8hpp" name="MueLu_MHDRAPFactory_decl.hpp" local="yes" imported="no">MueLu_MHDRAPFactory_decl.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MHDRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__MHDRAPFactory__def_8hpp.html</anchorfile>
      <anchor>a9a8d211591ee9189040957fcf83cdd19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ML2MueLuParameterTranslator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__ML2MueLuParameterTranslator_8cpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__ML2MueLuParameterTranslator_8hpp" name="MueLu_ML2MueLuParameterTranslator.hpp" local="no" imported="no">MueLu_ML2MueLuParameterTranslator.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ML2MueLuParameterTranslator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__ML2MueLuParameterTranslator_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="no" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="no" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__ParameterListUtils_8hpp" name="MueLu_ParameterListUtils.hpp" local="no" imported="no">MueLu_ParameterListUtils.hpp</includes>
    <class kind="class">MueLu::ML2MueLuParameterTranslator</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MLParameterListInterpreter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>MueLu__MLParameterListInterpreter_8cpp</filename>
    <includes id="MueLu__MLParameterListInterpreter__def_8hpp" name="MueLu_MLParameterListInterpreter_def.hpp" local="yes" imported="no">MueLu_MLParameterListInterpreter_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>MueLu__MLParameterListInterpreter_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MLParameterListInterpreter_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__MLParameterListInterpreter__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__HierarchyManager_8hpp" name="MueLu_HierarchyManager.hpp" local="yes" imported="no">MueLu_HierarchyManager.hpp</includes>
    <includes id="MueLu__MLParameterListInterpreter__fwd_8hpp" name="MueLu_MLParameterListInterpreter_fwd.hpp" local="yes" imported="no">MueLu_MLParameterListInterpreter_fwd.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__SaPFactory__fwd_8hpp" name="MueLu_SaPFactory_fwd.hpp" local="yes" imported="no">MueLu_SaPFactory_fwd.hpp</includes>
    <includes id="MueLu__PgPFactory__fwd_8hpp" name="MueLu_PgPFactory_fwd.hpp" local="yes" imported="no">MueLu_PgPFactory_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__TransPFactory__fwd_8hpp" name="MueLu_TransPFactory_fwd.hpp" local="yes" imported="no">MueLu_TransPFactory_fwd.hpp</includes>
    <includes id="MueLu__GenericRFactory__fwd_8hpp" name="MueLu_GenericRFactory_fwd.hpp" local="yes" imported="no">MueLu_GenericRFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__TrilinosSmoother__fwd_8hpp" name="MueLu_TrilinosSmoother_fwd.hpp" local="yes" imported="no">MueLu_TrilinosSmoother_fwd.hpp</includes>
    <includes id="MueLu__IfpackSmoother__fwd_8hpp" name="MueLu_IfpackSmoother_fwd.hpp" local="yes" imported="no">MueLu_IfpackSmoother_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__HierarchyUtils__fwd_8hpp" name="MueLu_HierarchyUtils_fwd.hpp" local="yes" imported="no">MueLu_HierarchyUtils_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__CoalesceDropFactory__fwd_8hpp" name="MueLu_CoalesceDropFactory_fwd.hpp" local="yes" imported="no">MueLu_CoalesceDropFactory_fwd.hpp</includes>
    <includes id="MueLu__CoupledAggregationFactory__fwd_8hpp" name="MueLu_CoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_CoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__UncoupledAggregationFactory__fwd_8hpp" name="MueLu_UncoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_UncoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__NullspaceFactory__fwd_8hpp" name="MueLu_NullspaceFactory_fwd.hpp" local="yes" imported="no">MueLu_NullspaceFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__RepartitionHeuristicFactory__fwd_8hpp" name="MueLu_RepartitionHeuristicFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionHeuristicFactory_fwd.hpp</includes>
    <includes id="MueLu__RepartitionFactory__fwd_8hpp" name="MueLu_RepartitionFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionFactory_fwd.hpp</includes>
    <includes id="MueLu__RebalanceTransferFactory__fwd_8hpp" name="MueLu_RebalanceTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__IsorropiaInterface__fwd_8hpp" name="MueLu_IsorropiaInterface_fwd.hpp" local="yes" imported="no">MueLu_IsorropiaInterface_fwd.hpp</includes>
    <includes id="MueLu__RebalanceAcFactory__fwd_8hpp" name="MueLu_RebalanceAcFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceAcFactory_fwd.hpp</includes>
    <includes id="MueLu__RebalanceMapFactory__fwd_8hpp" name="MueLu_RebalanceMapFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceMapFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MLParameterListInterpreter</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MLPARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__MLParameterListInterpreter__decl_8hpp.html</anchorfile>
      <anchor>a579d0be763fcd82abd9950718c82d2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateSublists</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a209823e7ed0fa0a706c8c13627b10f9b</anchor>
      <arglist>(const ParameterList &amp;List, ParameterList &amp;newList)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MLParameterListInterpreter_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__MLParameterListInterpreter__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__MLParameterListInterpreter__decl_8hpp" name="MueLu_MLParameterListInterpreter_decl.hpp" local="yes" imported="no">MueLu_MLParameterListInterpreter_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__IfpackSmoother_8hpp" name="MueLu_IfpackSmoother.hpp" local="yes" imported="no">MueLu_IfpackSmoother.hpp</includes>
    <includes id="MueLu__ParameterListUtils_8hpp" name="MueLu_ParameterListUtils.hpp" local="yes" imported="no">MueLu_ParameterListUtils.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_READ_PARAM</name>
      <anchorfile>MueLu__MLParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a849750e0fee4f4fa73c1f6634ba55cc6</anchor>
      <arglist>(paramList, paramStr, varType, defaultValue, varName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_COPY_PARAM</name>
      <anchorfile>MueLu__MLParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a51d9c125786b5ccb8b144d61369e8a89</anchor>
      <arglist>(paramList, paramStr, varType, defaultValue, outParamList, outParamStr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MLPARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__MLParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a579d0be763fcd82abd9950718c82d2af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MLParameterListInterpreter_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__MLParameterListInterpreter__fwd_8hpp</filename>
    <class kind="class">MueLu::MLParameterListInterpreter</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MLPARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__MLParameterListInterpreter__fwd_8hpp.html</anchorfile>
      <anchor>a579d0be763fcd82abd9950718c82d2af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Monitor.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Monitor_8cpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_Monitor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Monitor_8hpp</filename>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__TimeMonitor_8hpp" name="MueLu_TimeMonitor.hpp" local="yes" imported="no">MueLu_TimeMonitor.hpp</includes>
    <class kind="class">MueLu::PrintMonitor</class>
    <class kind="class">MueLu::Monitor</class>
    <class kind="class">MueLu::SubMonitor</class>
    <class kind="class">MueLu::FactoryMonitor</class>
    <class kind="class">MueLu::SubFactoryMonitor</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TIMER_AS_STRING</name>
      <anchorfile>MueLu__Monitor_8hpp.html</anchorfile>
      <anchor>affd1b97f66d046627c930069300dc913</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MultiVectorTransferFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__MultiVectorTransferFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__MultiVectorTransferFactory__fwd_8hpp" name="MueLu_MultiVectorTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_MultiVectorTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::MultiVectorTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MULTIVECTORTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__MultiVectorTransferFactory__decl_8hpp.html</anchorfile>
      <anchor>afad00026b0a98ef78bb45cd6296643f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MultiVectorTransferFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__MultiVectorTransferFactory__def_8hpp</filename>
    <includes id="MueLu__MultiVectorTransferFactory__decl_8hpp" name="MueLu_MultiVectorTransferFactory_decl.hpp" local="yes" imported="no">MueLu_MultiVectorTransferFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_MultiVectorTransferFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__MultiVectorTransferFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::MultiVectorTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_MULTIVECTORTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__MultiVectorTransferFactory__fwd_8hpp.html</anchorfile>
      <anchor>afad00026b0a98ef78bb45cd6296643f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MutuallyExclusiveTime.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__MutuallyExclusiveTime_8cpp</filename>
    <includes id="MueLu__MutuallyExclusiveTime_8hpp" name="MueLu_MutuallyExclusiveTime.hpp" local="yes" imported="no">MueLu_MutuallyExclusiveTime.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>myParent_</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0017ae57c70f76ace9804f9d22ab21a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_MutuallyExclusiveTime.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__MutuallyExclusiveTime_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <class kind="class">MueLu::MutuallyExclusiveTime</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_NoFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__NoFactory_8cpp</filename>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__NoFactory_8hpp" name="MueLu_NoFactory.hpp" local="yes" imported="no">MueLu_NoFactory.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_NoFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__NoFactory_8hpp</filename>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <class kind="class">MueLu::NoFactory</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspaceFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__NullspaceFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__NullspaceFactory__fwd_8hpp" name="MueLu_NullspaceFactory_fwd.hpp" local="yes" imported="no">MueLu_NullspaceFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::NullspaceFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_NULLSPACEFACTORY_SHORT</name>
      <anchorfile>MueLu__NullspaceFactory__decl_8hpp.html</anchorfile>
      <anchor>a4267b867c21fbcb3ee5a569de721b06b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspaceFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__NullspaceFactory__def_8hpp</filename>
    <includes id="MueLu__NullspaceFactory__decl_8hpp" name="MueLu_NullspaceFactory_decl.hpp" local="yes" imported="no">MueLu_NullspaceFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspaceFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__NullspaceFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::NullspaceFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_NULLSPACEFACTORY_SHORT</name>
      <anchorfile>MueLu__NullspaceFactory__fwd_8hpp.html</anchorfile>
      <anchor>a4267b867c21fbcb3ee5a569de721b06b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspaceFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__NullspaceFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspaceFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__NullspaceFactory__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspaceFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__NullspaceFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspacePresmoothFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__NullspacePresmoothFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::NullspacePresmoothFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_NULLSPACEPRESMOOTHFACTORY_SHORT</name>
      <anchorfile>MueLu__NullspacePresmoothFactory__decl_8hpp.html</anchorfile>
      <anchor>a4dce5655e888163b8c118d50fde38573</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspacePresmoothFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__NullspacePresmoothFactory__def_8hpp</filename>
    <includes id="MueLu__NullspacePresmoothFactory__decl_8hpp" name="MueLu_NullspacePresmoothFactory_decl.hpp" local="yes" imported="no">MueLu_NullspacePresmoothFactory_decl.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_NullspacePresmoothFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__NullspacePresmoothFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::NullspacePresmoothFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_NULLSPACEPRESMOOTHFACTORY_SHORT</name>
      <anchorfile>MueLu__NullspacePresmoothFactory__fwd_8hpp.html</anchorfile>
      <anchor>a4dce5655e888163b8c118d50fde38573</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_OnePtAggregationAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__OnePtAggregationAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__OnePtAggregationAlgorithm__fwd_8hpp" name="MueLu_OnePtAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_OnePtAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::OnePtAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ONEPTAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__OnePtAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>abf78f2f4b601a2b7fb60febb668dd50b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_OnePtAggregationAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__OnePtAggregationAlgorithm__def_8hpp</filename>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_OnePtAggregationAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__OnePtAggregationAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::OnePtAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ONEPTAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__OnePtAggregationAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>abf78f2f4b601a2b7fb60febb668dd50b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_OnePtAggregationAlgorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__OnePtAggregationAlgorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_OnePtAggregationAlgorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__OnePtAggregationAlgorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_OnePtAggregationAlgorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__OnePtAggregationAlgorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_ParameterListAcceptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__ParameterListAcceptor_8hpp</filename>
    <class kind="class">MueLu::ParameterListAcceptor</class>
    <class kind="class">MueLu::ParameterListAcceptorImpl</class>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>void</type>
      <name>printParameterListOptions</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad52ee67b34f0014826bde10e90af6333</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Interface/MueLu_ParameterListInterpreter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>Interface_2MueLu__ParameterListInterpreter_8cpp</filename>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>int</type>
      <name>LevenshteinDistance</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa965228cb767b85ad71cf37aa48134e8</anchor>
      <arglist>(const char *s, size_t len_s, const char *t, size_t len_t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Utils/ExplicitInstantiation/MueLu_ParameterListInterpreter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ExplicitInstantiation/</path>
    <filename>Utils_2ExplicitInstantiation_2MueLu__ParameterListInterpreter_8cpp</filename>
    <includes id="MueLu__ParameterListInterpreter__def_8hpp" name="MueLu_ParameterListInterpreter_def.hpp" local="yes" imported="no">MueLu_ParameterListInterpreter_def.hpp</includes>
    <includes id="MueLu__ETI__4arg_8hpp" name="MueLu_ETI_4arg.hpp" local="yes" imported="no">MueLu_ETI_4arg.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ETI_GROUP</name>
      <anchorfile>Utils_2ExplicitInstantiation_2MueLu__ParameterListInterpreter_8cpp.html</anchorfile>
      <anchor>a0c53a432ef09bf170623701769851fa0</anchor>
      <arglist>(SC, LO, GO, NO)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ParameterListInterpreter_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__ParameterListInterpreter__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__HierarchyManager_8hpp" name="MueLu_HierarchyManager.hpp" local="yes" imported="no">MueLu_HierarchyManager.hpp</includes>
    <includes id="MueLu__AggregationExportFactory__fwd_8hpp" name="MueLu_AggregationExportFactory_fwd.hpp" local="yes" imported="no">MueLu_AggregationExportFactory_fwd.hpp</includes>
    <includes id="MueLu__BrickAggregationFactory__fwd_8hpp" name="MueLu_BrickAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_BrickAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__CoalesceDropFactory__fwd_8hpp" name="MueLu_CoalesceDropFactory_fwd.hpp" local="yes" imported="no">MueLu_CoalesceDropFactory_fwd.hpp</includes>
    <includes id="MueLu__CoarseMapFactory__fwd_8hpp" name="MueLu_CoarseMapFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_fwd.hpp</includes>
    <includes id="MueLu__ConstraintFactory__fwd_8hpp" name="MueLu_ConstraintFactory_fwd.hpp" local="yes" imported="no">MueLu_ConstraintFactory_fwd.hpp</includes>
    <includes id="MueLu__CoordinatesTransferFactory__fwd_8hpp" name="MueLu_CoordinatesTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_CoordinatesTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__CoupledAggregationFactory__fwd_8hpp" name="MueLu_CoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_CoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__EminPFactory__fwd_8hpp" name="MueLu_EminPFactory_fwd.hpp" local="yes" imported="no">MueLu_EminPFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryFactory__fwd_8hpp" name="MueLu_FactoryFactory_fwd.hpp" local="yes" imported="no">MueLu_FactoryFactory_fwd.hpp</includes>
    <includes id="MueLu__FilteredAFactory__fwd_8hpp" name="MueLu_FilteredAFactory_fwd.hpp" local="yes" imported="no">MueLu_FilteredAFactory_fwd.hpp</includes>
    <includes id="MueLu__GenericRFactory__fwd_8hpp" name="MueLu_GenericRFactory_fwd.hpp" local="yes" imported="no">MueLu_GenericRFactory_fwd.hpp</includes>
    <includes id="MueLu__LineDetectionFactory__fwd_8hpp" name="MueLu_LineDetectionFactory_fwd.hpp" local="yes" imported="no">MueLu_LineDetectionFactory_fwd.hpp</includes>
    <includes id="MueLu__NullspaceFactory__fwd_8hpp" name="MueLu_NullspaceFactory_fwd.hpp" local="yes" imported="no">MueLu_NullspaceFactory_fwd.hpp</includes>
    <includes id="MueLu__PatternFactory__fwd_8hpp" name="MueLu_PatternFactory_fwd.hpp" local="yes" imported="no">MueLu_PatternFactory_fwd.hpp</includes>
    <includes id="MueLu__PgPFactory__fwd_8hpp" name="MueLu_PgPFactory_fwd.hpp" local="yes" imported="no">MueLu_PgPFactory_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__RebalanceAcFactory__fwd_8hpp" name="MueLu_RebalanceAcFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceAcFactory_fwd.hpp</includes>
    <includes id="MueLu__RebalanceTransferFactory__fwd_8hpp" name="MueLu_RebalanceTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__RepartitionFactory__fwd_8hpp" name="MueLu_RepartitionFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionFactory_fwd.hpp</includes>
    <includes id="MueLu__SaPFactory__fwd_8hpp" name="MueLu_SaPFactory_fwd.hpp" local="yes" imported="no">MueLu_SaPFactory_fwd.hpp</includes>
    <includes id="MueLu__SemiCoarsenPFactory__fwd_8hpp" name="MueLu_SemiCoarsenPFactory_fwd.hpp" local="yes" imported="no">MueLu_SemiCoarsenPFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__TogglePFactory__fwd_8hpp" name="MueLu_TogglePFactory_fwd.hpp" local="yes" imported="no">MueLu_TogglePFactory_fwd.hpp</includes>
    <includes id="MueLu__ToggleCoordinatesTransferFactory__fwd_8hpp" name="MueLu_ToggleCoordinatesTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_ToggleCoordinatesTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__TransPFactory__fwd_8hpp" name="MueLu_TransPFactory_fwd.hpp" local="yes" imported="no">MueLu_TransPFactory_fwd.hpp</includes>
    <includes id="MueLu__UncoupledAggregationFactory__fwd_8hpp" name="MueLu_UncoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_UncoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__ZoltanInterface__fwd_8hpp" name="MueLu_ZoltanInterface_fwd.hpp" local="yes" imported="no">MueLu_ZoltanInterface_fwd.hpp</includes>
    <includes id="MueLu__Zoltan2Interface__fwd_8hpp" name="MueLu_Zoltan2Interface_fwd.hpp" local="yes" imported="no">MueLu_Zoltan2Interface_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ParameterListInterpreter</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__ParameterListInterpreter__decl_8hpp.html</anchorfile>
      <anchor>a392e106999b01b5aa61b390baf8150fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ParameterListInterpreter_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__ParameterListInterpreter__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__ParameterListInterpreter__decl_8hpp" name="MueLu_ParameterListInterpreter_decl.hpp" local="yes" imported="no">MueLu_ParameterListInterpreter_decl.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SET_VAR_2LIST</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a3fb58cde873121bda68d8842aa1fa8ae</anchor>
      <arglist>(paramList, defaultList, paramName, paramType, varName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TEST_AND_SET_VAR</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a2b88136a964cce710beae3d9d26aa978</anchor>
      <arglist>(paramList, paramName, paramType, varName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TEST_AND_SET_PARAM_2LIST</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>af0ee6176883f10b0394477f5b41da91f</anchor>
      <arglist>(paramList, defaultList, paramName, paramType, listWrite)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TEST_PARAM_2LIST</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a793f17e8a0409ddece07351a64e92695</anchor>
      <arglist>(paramList, defaultList, paramName, paramType, cmpValue)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_KOKKOS_FACTORY</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a935a93a0df0cfbc4a64206e98b4735c2</anchor>
      <arglist>(varName, oldFactory, newFactory)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_KOKKOS_FACTORY_NO_DECL</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a47274b2c835218f1444d3fc394629a9b</anchor>
      <arglist>(varName, oldFactory, newFactory)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_MUTUALLY_EXCLUSIVE</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>aaccdeeb3eed3ebc284b6294b9c116d2a</anchor>
      <arglist>(arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_MUTUALLY_EXCLUSIVE_S</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a46cde630cb933428c4e59bcee218732f</anchor>
      <arglist>(arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__ParameterListInterpreter__def_8hpp.html</anchorfile>
      <anchor>a392e106999b01b5aa61b390baf8150fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areSame</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab5f09969a87478f8802199f3c42757d1</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LevenshteinDistance</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa965228cb767b85ad71cf37aa48134e8</anchor>
      <arglist>(const char *s, size_t len_s, const char *t, size_t len_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compare</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac0d048ce3767f733d13246b65bfdf062</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ParameterListInterpreter_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ParameterListInterpreter__fwd_8hpp</filename>
    <class kind="class">MueLu::ParameterListInterpreter</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PARAMETERLISTINTERPRETER_SHORT</name>
      <anchorfile>MueLu__ParameterListInterpreter__fwd_8hpp.html</anchorfile>
      <anchor>a392e106999b01b5aa61b390baf8150fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ParameterListUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__ParameterListUtils_8cpp</filename>
    <includes id="MueLu__ParameterListUtils_8hpp" name="MueLu_ParameterListUtils.hpp" local="yes" imported="no">MueLu_ParameterListUtils.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>void</type>
      <name>MergeParameterList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a85fa5a5f20e1b6f2f7d3f56737d8c1bd</anchor>
      <arglist>(const Teuchos::ParameterList &amp;source, Teuchos::ParameterList &amp;dest, bool overWrite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateSublists</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a017efb7ec052bca043a548044982d15e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;List, Teuchos::ParameterList &amp;newList)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>GetMLSubList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abde174656d7beadb4519294ffdf44167</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const std::string &amp;type, int levelID)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>ExtractSetOfParameters</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a137542f74b426c9f6c991a818d564177</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAll</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a28cc2d953f9e734910c598332da53b80</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ParameterListUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/</path>
    <filename>MueLu__ParameterListUtils_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>void</type>
      <name>MergeParameterList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a85fa5a5f20e1b6f2f7d3f56737d8c1bd</anchor>
      <arglist>(const Teuchos::ParameterList &amp;source, Teuchos::ParameterList &amp;dest, bool overWrite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateSublists</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a017efb7ec052bca043a548044982d15e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;List, Teuchos::ParameterList &amp;newList)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>GetMLSubList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abde174656d7beadb4519294ffdf44167</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const std::string &amp;type, int levelID)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>ExtractSetOfParameters</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a137542f74b426c9f6c991a818d564177</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAll</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a28cc2d953f9e734910c598332da53b80</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replacePlaceholder</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5df3b1b973676b508aa961cf4a92a445</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;placeholder, Type data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>actionInterpretParameter</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a585a3feef1cd7b2540c49e1153ab8198</anchor>
      <arglist>(Teuchos::ParameterList &amp;mlParams, const std::string &amp;paramName, std::string &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PatternFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__PatternFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PatternFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PATTERNFACTORY_SHORT</name>
      <anchorfile>MueLu__PatternFactory__decl_8hpp.html</anchorfile>
      <anchor>a775702fba5a7ec2937e388e6c1e485f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PatternFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/</path>
    <filename>MueLu__PatternFactory__def_8hpp</filename>
    <includes id="MueLu__PatternFactory__decl_8hpp" name="MueLu_PatternFactory_decl.hpp" local="yes" imported="no">MueLu_PatternFactory_decl.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__PatternFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PatternFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PatternFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::PatternFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PATTERNFACTORY_SHORT</name>
      <anchorfile>MueLu__PatternFactory__fwd_8hpp.html</anchorfile>
      <anchor>a775702fba5a7ec2937e388e6c1e485f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PerfUtils_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__PerfUtils__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PerfUtils</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MueLu_sumAll</name>
      <anchorfile>MueLu__PerfUtils__decl_8hpp.html</anchorfile>
      <anchor>a4637910b75a550b9d9a5711f357d27cc</anchor>
      <arglist>(rcpComm, in, out)                                                                            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MueLu_minAll</name>
      <anchorfile>MueLu__PerfUtils__decl_8hpp.html</anchorfile>
      <anchor>a4736d9fbf84b81fddae5c7637cb1a59d</anchor>
      <arglist>(rcpComm, in, out)                                                                            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MueLu_maxAll</name>
      <anchorfile>MueLu__PerfUtils__decl_8hpp.html</anchorfile>
      <anchor>a45fe81ee7ee9192523d395db40e0937c</anchor>
      <arglist>(rcpComm, in, out)                                                                            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PERFUTILS_SHORT</name>
      <anchorfile>MueLu__PerfUtils__decl_8hpp.html</anchorfile>
      <anchor>a7f385d2be244ca42fd13b2cf518550f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PerfUtils_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__PerfUtils__def_8hpp</filename>
    <includes id="MueLu__PerfUtils__decl_8hpp" name="MueLu_PerfUtils_decl.hpp" local="yes" imported="no">MueLu_PerfUtils_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>void</type>
      <name>calculateStats</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adf0876d7c4d0bc296a7ca25f53b37711</anchor>
      <arglist>(Type &amp;minVal, Type &amp;maxVal, double &amp;avgVal, double &amp;devVal, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stringStats</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a12074b46bd87b5fcd30f0e694a90932d</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Type &amp;v, RCP&lt; ParameterList &gt; paramList=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cmp_less</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a04121b17cfe1f5aa7d2e677fc42db437</anchor>
      <arglist>(typename Map::value_type &amp;v1, typename Map::value_type &amp;v2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PerfUtils_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PerfUtils__fwd_8hpp</filename>
    <class kind="class">MueLu::PerfUtils</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PERFUTILS_SHORT</name>
      <anchorfile>MueLu__PerfUtils__fwd_8hpp.html</anchorfile>
      <anchor>a7f385d2be244ca42fd13b2cf518550f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PermutationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__PermutationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__AlgebraicPermutationStrategy__fwd_8hpp" name="MueLu_AlgebraicPermutationStrategy_fwd.hpp" local="yes" imported="no">MueLu_AlgebraicPermutationStrategy_fwd.hpp</includes>
    <includes id="MueLu__LocalPermutationStrategy__fwd_8hpp" name="MueLu_LocalPermutationStrategy_fwd.hpp" local="yes" imported="no">MueLu_LocalPermutationStrategy_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PermutationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PERMUTATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__PermutationFactory__decl_8hpp.html</anchorfile>
      <anchor>a8ad8960cf553c44c4b12406cdaa301e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PermutationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__PermutationFactory__def_8hpp</filename>
    <includes id="MueLu__PermutationFactory__decl_8hpp" name="MueLu_PermutationFactory_decl.hpp" local="yes" imported="no">MueLu_PermutationFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_PermutationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PermutationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::PermutationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PERMUTATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__PermutationFactory__fwd_8hpp.html</anchorfile>
      <anchor>a8ad8960cf553c44c4b12406cdaa301e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PermutingSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__PermutingSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TrilinosSmoother__fwd_8hpp" name="MueLu_TrilinosSmoother_fwd.hpp" local="yes" imported="no">MueLu_TrilinosSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__PermutationFactory__fwd_8hpp" name="MueLu_PermutationFactory_fwd.hpp" local="yes" imported="no">MueLu_PermutationFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PermutingSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PERMUTINGSMOOTHER_SHORT</name>
      <anchorfile>MueLu__PermutingSmoother__decl_8hpp.html</anchorfile>
      <anchor>a2dd2d6b5a3e3cc95c84d61995db4bc7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PermutingSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__PermutingSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__PermutingSmoother__decl_8hpp" name="MueLu_PermutingSmoother_decl.hpp" local="yes" imported="no">MueLu_PermutingSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__IfpackSmoother_8hpp" name="MueLu_IfpackSmoother.hpp" local="yes" imported="no">MueLu_IfpackSmoother.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_PermutingSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PermutingSmoother__fwd_8hpp</filename>
    <class kind="class">MueLu::PermutingSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PERMUTINGSMOOTHER_SHORT</name>
      <anchorfile>MueLu__PermutingSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a2dd2d6b5a3e3cc95c84d61995db4bc7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BaseClass/</path>
    <filename>MueLu__PFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__PFactory__fwd_8hpp" name="MueLu_PFactory_fwd.hpp" local="yes" imported="no">MueLu_PFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <class kind="class">MueLu::PFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PFACTORY_SHORT</name>
      <anchorfile>MueLu__PFactory__decl_8hpp.html</anchorfile>
      <anchor>acb81c221f4c770360138fcca83e81ffe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BaseClass/</path>
    <filename>MueLu__PFactory__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_PFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PFactory__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PFACTORY_SHORT</name>
      <anchorfile>MueLu__PFactory__fwd_8hpp.html</anchorfile>
      <anchor>acb81c221f4c770360138fcca83e81ffe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PgPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Petrov-Galerkin-SA/</path>
    <filename>MueLu__PgPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase__fwd_8hpp" name="MueLu_SingleLevelFactoryBase_fwd.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PgPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PGPFACTORY_SHORT</name>
      <anchorfile>MueLu__PgPFactory__decl_8hpp.html</anchorfile>
      <anchor>ab448666355741680a3ed0110c6115e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MinimizationNorm</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANORM</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1aca2cd4bf6c50bbbd89c6a5e53cb69684e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>L2NORM</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1aca9c7fad2ecdb94eb17bfb3131acd87200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DINVANORM</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1acabf04f49a5a9beec4cdb2468ed2bb315c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PgPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Petrov-Galerkin-SA/</path>
    <filename>MueLu__PgPFactory__def_8hpp</filename>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__PgPFactory__decl_8hpp" name="MueLu_PgPFactory_decl.hpp" local="yes" imported="no">MueLu_PgPFactory_decl.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_PgPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PgPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::PgPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PGPFACTORY_SHORT</name>
      <anchorfile>MueLu__PgPFactory__fwd_8hpp.html</anchorfile>
      <anchor>ab448666355741680a3ed0110c6115e1f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreDropFunctionBaseClass_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__PreDropFunctionBaseClass__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__PreDropFunctionBaseClass__fwd_8hpp" name="MueLu_PreDropFunctionBaseClass_fwd.hpp" local="yes" imported="no">MueLu_PreDropFunctionBaseClass_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PreDropFunctionBaseClass</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PREDROPFUNCTIONBASECLASS_SHORT</name>
      <anchorfile>MueLu__PreDropFunctionBaseClass__decl_8hpp.html</anchorfile>
      <anchor>a22cd85c26573bf2e8ad500298695911b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreDropFunctionBaseClass_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__PreDropFunctionBaseClass__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_PreDropFunctionBaseClass_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PreDropFunctionBaseClass__fwd_8hpp</filename>
    <class kind="class">MueLu::PreDropFunctionBaseClass</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PREDROPFUNCTIONBASECLASS_SHORT</name>
      <anchorfile>MueLu__PreDropFunctionBaseClass__fwd_8hpp.html</anchorfile>
      <anchor>a22cd85c26573bf2e8ad500298695911b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreDropFunctionConstVal_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__PreDropFunctionConstVal__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__PreDropFunctionConstVal__fwd_8hpp" name="MueLu_PreDropFunctionConstVal_fwd.hpp" local="yes" imported="no">MueLu_PreDropFunctionConstVal_fwd.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::PreDropFunctionConstVal</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PREDROPFUNCTIONCONSTVAL_SHORT</name>
      <anchorfile>MueLu__PreDropFunctionConstVal__decl_8hpp.html</anchorfile>
      <anchor>ac1e3d6f865117a20bbffd2f69382144b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreDropFunctionConstVal_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/</path>
    <filename>MueLu__PreDropFunctionConstVal__def_8hpp</filename>
    <includes id="MueLu__PreDropFunctionConstVal__decl_8hpp" name="MueLu_PreDropFunctionConstVal_decl.hpp" local="yes" imported="no">MueLu_PreDropFunctionConstVal_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PREDROPFUNCTIONCONSTVAL_SHORT</name>
      <anchorfile>MueLu__PreDropFunctionConstVal__def_8hpp.html</anchorfile>
      <anchor>ac1e3d6f865117a20bbffd2f69382144b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreDropFunctionConstVal_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PreDropFunctionConstVal__fwd_8hpp</filename>
    <class kind="class">MueLu::PreDropFunctionConstVal</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PREDROPFUNCTIONCONSTVAL_SHORT</name>
      <anchorfile>MueLu__PreDropFunctionConstVal__fwd_8hpp.html</anchorfile>
      <anchor>ac1e3d6f865117a20bbffd2f69382144b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreserveDirichletAggregationAlgorithm_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__PreserveDirichletAggregationAlgorithm__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__PreserveDirichletAggregationAlgorithm__fwd_8hpp" name="MueLu_PreserveDirichletAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_PreserveDirichletAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::PreserveDirichletAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PRESERVEDIRICHLETAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__PreserveDirichletAggregationAlgorithm__decl_8hpp.html</anchorfile>
      <anchor>a6fff61290ffba2e6426895884b61a705</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreserveDirichletAggregationAlgorithm_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__PreserveDirichletAggregationAlgorithm__def_8hpp</filename>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_PreserveDirichletAggregationAlgorithm_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PreserveDirichletAggregationAlgorithm__fwd_8hpp</filename>
    <class kind="class">MueLu::PreserveDirichletAggregationAlgorithm</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PRESERVEDIRICHLETAGGREGATIONALGORITHM_SHORT</name>
      <anchorfile>MueLu__PreserveDirichletAggregationAlgorithm__fwd_8hpp.html</anchorfile>
      <anchor>a6fff61290ffba2e6426895884b61a705</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_PreserveDirichletAggregationAlgorithm_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__PreserveDirichletAggregationAlgorithm__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_PreserveDirichletAggregationAlgorithm_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__PreserveDirichletAggregationAlgorithm__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_PreserveDirichletAggregationAlgorithm_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PreserveDirichletAggregationAlgorithm__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_PRFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__PRFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::PRFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PRFACTORY_SHORT</name>
      <anchorfile>MueLu__PRFactory__fwd_8hpp.html</anchorfile>
      <anchor>a0ab09fb6454b8a15ac220ebc7bf9c93a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ProjectorSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__ProjectorSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ProjectorSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PROJECTORSMOOTHER_SHORT</name>
      <anchorfile>MueLu__ProjectorSmoother__decl_8hpp.html</anchorfile>
      <anchor>ab91ca9a52fcd70fad4a102993b95f3c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ProjectorSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__ProjectorSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__ProjectorSmoother__decl_8hpp" name="MueLu_ProjectorSmoother_decl.hpp" local="yes" imported="no">MueLu_ProjectorSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ProjectorSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ProjectorSmoother__fwd_8hpp</filename>
    <class kind="class">MueLu::ProjectorSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_PROJECTORSMOOTHER_SHORT</name>
      <anchorfile>MueLu__ProjectorSmoother__fwd_8hpp.html</anchorfile>
      <anchor>ab91ca9a52fcd70fad4a102993b95f3c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Q2Q1Q2CoarseGridFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Geometric-Interpolation/</path>
    <filename>MueLu__Q2Q1Q2CoarseGridFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::Q2Q1Q2CoarseGridFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_Q2Q1Q2COARSEGRIDFACTORY_SHORT</name>
      <anchorfile>MueLu__Q2Q1Q2CoarseGridFactory__decl_8hpp.html</anchorfile>
      <anchor>aa1d725814e4e4f3f8099b38fb6807bf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Q2Q1Q2CoarseGridFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Geometric-Interpolation/</path>
    <filename>MueLu__Q2Q1Q2CoarseGridFactory__def_8hpp</filename>
    <includes id="MueLu__Q2Q1Q2CoarseGridFactory__decl_8hpp" name="MueLu_Q2Q1Q2CoarseGridFactory_decl.hpp" local="yes" imported="no">MueLu_Q2Q1Q2CoarseGridFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="no" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="no" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="no" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_Q2Q1Q2COARSEGRIDFACTORY_SHORT</name>
      <anchorfile>MueLu__Q2Q1Q2CoarseGridFactory__def_8hpp.html</anchorfile>
      <anchor>aa1d725814e4e4f3f8099b38fb6807bf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_QR_InterfaceEx_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__QR__InterfaceEx__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::QR_InterfaceEx</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_QR_INTERFACEEX_SHORT</name>
      <anchorfile>MueLu__QR__InterfaceEx__decl_8hpp.html</anchorfile>
      <anchor>a2dd7e027a09c1ec3d932d0ab02e67e99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LapackQR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a08f1f9610a301f7a8c312618f003aca4</anchor>
      <arglist>(Teuchos::LAPACK&lt; LocalOrdinal, Scalar &gt; &amp;lapack, LocalOrdinal myAggSize, int intFineNSDim, ArrayRCP&lt; Scalar &gt; &amp;localQR, ArrayRCP&lt; Scalar &gt; &amp;tau, ArrayRCP&lt; Scalar &gt; &amp;work, LocalOrdinal &amp;workSize, LocalOrdinal &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LapackQR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af4e2d04c09b90c647486ea29d5f6e2e6</anchor>
      <arglist>(Teuchos::LAPACK&lt; LocalOrdinal, std::complex&lt; double &gt; &gt; &amp;lapack, LocalOrdinal myAggSize, int intFineNSDim, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;localQR, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;tau, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;work, LocalOrdinal &amp;workSize, LocalOrdinal &amp;info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_QR_InterfaceEx_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__QR__InterfaceEx__def_8hpp</filename>
    <includes id="MueLu__QR__InterfaceEx__decl_8hpp" name="MueLu_QR_InterfaceEx_decl.hpp" local="yes" imported="no">MueLu_QR_InterfaceEx_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>void</type>
      <name>LapackQR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a08f1f9610a301f7a8c312618f003aca4</anchor>
      <arglist>(Teuchos::LAPACK&lt; LocalOrdinal, Scalar &gt; &amp;lapack, LocalOrdinal myAggSize, int intFineNSDim, ArrayRCP&lt; Scalar &gt; &amp;localQR, ArrayRCP&lt; Scalar &gt; &amp;tau, ArrayRCP&lt; Scalar &gt; &amp;work, LocalOrdinal &amp;workSize, LocalOrdinal &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LapackQR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af4e2d04c09b90c647486ea29d5f6e2e6</anchor>
      <arglist>(Teuchos::LAPACK&lt; LocalOrdinal, std::complex&lt; double &gt; &gt; &amp;lapack, LocalOrdinal myAggSize, int intFineNSDim, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;localQR, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;tau, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;work, LocalOrdinal &amp;workSize, LocalOrdinal &amp;info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RAPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__RAPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RAPFACTORY_SHORT</name>
      <anchorfile>MueLu__RAPFactory__decl_8hpp.html</anchorfile>
      <anchor>a14978146bed4505f864268b59f6dc19e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RAPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__RAPFactory__def_8hpp</filename>
    <includes id="MueLu__RAPFactory__decl_8hpp" name="MueLu_RAPFactory_decl.hpp" local="yes" imported="no">MueLu_RAPFactory_decl.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RAPFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RAPFACTORY_SHORT</name>
      <anchorfile>MueLu__RAPFactory__def_8hpp.html</anchorfile>
      <anchor>a14978146bed4505f864268b59f6dc19e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RAPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RAPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::RAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RAPFACTORY_SHORT</name>
      <anchorfile>MueLu__RAPFactory__fwd_8hpp.html</anchorfile>
      <anchor>a14978146bed4505f864268b59f6dc19e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RAPShiftFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__RAPShiftFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__RAPShiftFactory__fwd_8hpp" name="MueLu_RAPShiftFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPShiftFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RAPShiftFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RAPSHIFTFACTORY_SHORT</name>
      <anchorfile>MueLu__RAPShiftFactory__decl_8hpp.html</anchorfile>
      <anchor>a95f14e77542fb862f2edf771b5b26bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RAPShiftFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__RAPShiftFactory__def_8hpp</filename>
    <includes id="MueLu__RAPShiftFactory__decl_8hpp" name="MueLu_RAPShiftFactory_decl.hpp" local="yes" imported="no">MueLu_RAPShiftFactory_decl.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RAPSHIFTFACTORY_SHORT</name>
      <anchorfile>MueLu__RAPShiftFactory__def_8hpp.html</anchorfile>
      <anchor>a95f14e77542fb862f2edf771b5b26bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RAPShiftFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RAPShiftFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::RAPShiftFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RAPSHIFTFACTORY_SHORT</name>
      <anchorfile>MueLu__RAPShiftFactory__fwd_8hpp.html</anchorfile>
      <anchor>a95f14e77542fb862f2edf771b5b26bda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceAcFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceAcFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__RebalanceAcFactory__fwd_8hpp" name="MueLu_RebalanceAcFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceAcFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RebalanceAcFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEACFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceAcFactory__decl_8hpp.html</anchorfile>
      <anchor>a8001297a3193725dce313229ae2e7079</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceAcFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceAcFactory__def_8hpp</filename>
    <includes id="MueLu__RebalanceAcFactory__decl_8hpp" name="MueLu_RebalanceAcFactory_decl.hpp" local="yes" imported="no">MueLu_RebalanceAcFactory_decl.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RebalanceAcFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceAcFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RebalanceAcFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::RebalanceAcFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEACFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceAcFactory__fwd_8hpp.html</anchorfile>
      <anchor>a8001297a3193725dce313229ae2e7079</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockAcFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceBlockAcFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__RebalanceBlockAcFactory__fwd_8hpp" name="MueLu_RebalanceBlockAcFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceBlockAcFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RebalanceBlockAcFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEBLOCKACFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceBlockAcFactory__decl_8hpp.html</anchorfile>
      <anchor>afb6274c0040ccfcead98570e8307c75d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockAcFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceBlockAcFactory__def_8hpp</filename>
    <includes id="MueLu__RebalanceBlockAcFactory__decl_8hpp" name="MueLu_RebalanceBlockAcFactory_decl.hpp" local="yes" imported="no">MueLu_RebalanceBlockAcFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RebalanceBlockAcFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockAcFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RebalanceBlockAcFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::RebalanceBlockAcFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEBLOCKACFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceBlockAcFactory__fwd_8hpp.html</anchorfile>
      <anchor>afb6274c0040ccfcead98570e8307c75d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockInterpolationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceBlockInterpolationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__RebalanceBlockInterpolationFactory__fwd_8hpp" name="MueLu_RebalanceBlockInterpolationFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceBlockInterpolationFactory_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RebalanceBlockInterpolationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEBLOCKINTERPOLATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceBlockInterpolationFactory__decl_8hpp.html</anchorfile>
      <anchor>ac1a3802f2d5448908ea86eb2ac246288</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockInterpolationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceBlockInterpolationFactory__def_8hpp</filename>
    <includes id="MueLu__RebalanceBlockInterpolationFactory__decl_8hpp" name="MueLu_RebalanceBlockInterpolationFactory_decl.hpp" local="yes" imported="no">MueLu_RebalanceBlockInterpolationFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RebalanceBlockInterpolationFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockInterpolationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RebalanceBlockInterpolationFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::RebalanceBlockInterpolationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEBLOCKINTERPOLATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceBlockInterpolationFactory__fwd_8hpp.html</anchorfile>
      <anchor>ac1a3802f2d5448908ea86eb2ac246288</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockRestrictionFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceBlockRestrictionFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__RebalanceBlockRestrictionFactory__fwd_8hpp" name="MueLu_RebalanceBlockRestrictionFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceBlockRestrictionFactory_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RebalanceBlockRestrictionFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEBLOCKRESTRICTIONFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceBlockRestrictionFactory__decl_8hpp.html</anchorfile>
      <anchor>a8c76d0e2c74e1db500c92a70df2b4f0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockRestrictionFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceBlockRestrictionFactory__def_8hpp</filename>
    <includes id="MueLu__RebalanceBlockRestrictionFactory__decl_8hpp" name="MueLu_RebalanceBlockRestrictionFactory_decl.hpp" local="yes" imported="no">MueLu_RebalanceBlockRestrictionFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceBlockRestrictionFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RebalanceBlockRestrictionFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::RebalanceBlockRestrictionFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEBLOCKRESTRICTIONFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceBlockRestrictionFactory__fwd_8hpp.html</anchorfile>
      <anchor>a8c76d0e2c74e1db500c92a70df2b4f0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceMapFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceMapFactory__decl_8hpp</filename>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__RebalanceMapFactory__fwd_8hpp" name="MueLu_RebalanceMapFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceMapFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RebalanceMapFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEMAPFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceMapFactory__decl_8hpp.html</anchorfile>
      <anchor>ab691325f4cbf3c129079dc2ba7e6b740</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceMapFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceMapFactory__def_8hpp</filename>
    <includes id="MueLu__RebalanceMapFactory__decl_8hpp" name="MueLu_RebalanceMapFactory_decl.hpp" local="yes" imported="no">MueLu_RebalanceMapFactory_decl.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RebalanceMapFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceMapFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RebalanceMapFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::RebalanceMapFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCEMAPFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceMapFactory__fwd_8hpp.html</anchorfile>
      <anchor>ab691325f4cbf3c129079dc2ba7e6b740</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceTransferFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceTransferFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__RebalanceTransferFactory__fwd_8hpp" name="MueLu_RebalanceTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_RebalanceTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RebalanceTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCETRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceTransferFactory__decl_8hpp.html</anchorfile>
      <anchor>a7f6d187c65d6c80482b00db7efd62252</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceTransferFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RebalanceTransferFactory__def_8hpp</filename>
    <includes id="MueLu__RebalanceTransferFactory__decl_8hpp" name="MueLu_RebalanceTransferFactory_decl.hpp" local="yes" imported="no">MueLu_RebalanceTransferFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RebalanceTransferFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RebalanceTransferFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RebalanceTransferFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::RebalanceTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REBALANCETRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__RebalanceTransferFactory__fwd_8hpp.html</anchorfile>
      <anchor>a7f6d187c65d6c80482b00db7efd62252</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RefMaxwell_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__RefMaxwell__decl_8hpp</filename>
    <includes id="MueLu_8hpp" name="MueLu.hpp" local="yes" imported="no">MueLu.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RefMaxwell</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REFMAXWELL_SHORT</name>
      <anchorfile>MueLu__RefMaxwell__decl_8hpp.html</anchorfile>
      <anchor>af2dc74d381a1f88b47f338a3538c7edf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RefMaxwell_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__RefMaxwell__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__RefMaxwell__decl_8hpp" name="MueLu_RefMaxwell_decl.hpp" local="yes" imported="no">MueLu_RefMaxwell_decl.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__HierarchyManager_8hpp" name="MueLu_HierarchyManager.hpp" local="yes" imported="no">MueLu_HierarchyManager.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REFMAXWELL_SHORT</name>
      <anchorfile>MueLu__RefMaxwell__def_8hpp.html</anchorfile>
      <anchor>af2dc74d381a1f88b47f338a3538c7edf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RefMaxwell_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RefMaxwell__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::RefMaxwell</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REFMAXWELL_SHORT</name>
      <anchorfile>MueLu__RefMaxwell__fwd_8hpp.html</anchorfile>
      <anchor>af2dc74d381a1f88b47f338a3538c7edf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ReorderBlockAFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__ReorderBlockAFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__SubBlockAFactory__fwd_8hpp" name="MueLu_SubBlockAFactory_fwd.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ReorderBlockAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REORDERBLOCKAFACTORY_SHORT</name>
      <anchorfile>MueLu__ReorderBlockAFactory__decl_8hpp.html</anchorfile>
      <anchor>a25e2c60604fcc474c29caa063f731321</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ReorderBlockAFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__ReorderBlockAFactory__def_8hpp</filename>
    <includes id="MueLu__ReorderBlockAFactory__decl_8hpp" name="MueLu_ReorderBlockAFactory_decl.hpp" local="yes" imported="no">MueLu_ReorderBlockAFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ReorderBlockAFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ReorderBlockAFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::ReorderBlockAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REORDERBLOCKAFACTORY_SHORT</name>
      <anchorfile>MueLu__ReorderBlockAFactory__fwd_8hpp.html</anchorfile>
      <anchor>a25e2c60604fcc474c29caa063f731321</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RepartitionFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__RepartitionFactory__fwd_8hpp" name="MueLu_RepartitionFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionFactory_fwd.hpp</includes>
    <includes id="MueLu__CloneRepartitionInterface__fwd_8hpp" name="MueLu_CloneRepartitionInterface_fwd.hpp" local="yes" imported="no">MueLu_CloneRepartitionInterface_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RepartitionFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REPARTITIONFACTORY_SHORT</name>
      <anchorfile>MueLu__RepartitionFactory__decl_8hpp.html</anchorfile>
      <anchor>a2c60fbef696059def48c93799ef86737</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RepartitionFactory__def_8hpp</filename>
    <includes id="MueLu__RepartitionFactory__decl_8hpp" name="MueLu_RepartitionFactory_decl.hpp" local="yes" imported="no">MueLu_RepartitionFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <class kind="class">MueLu::MpiTypeTraits</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; long &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; int &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; short &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; unsigned &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; long long &gt;</class>
    <class kind="struct">MueLu::Triplet</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RepartitionFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compareTriplets</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1e11f0991e08e92080b0db5b4578dbce</anchor>
      <arglist>(const Triplet&lt; T, W &gt; &amp;a, const Triplet&lt; T, W &gt; &amp;b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RepartitionFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::RepartitionFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REPARTITIONFACTORY_SHORT</name>
      <anchorfile>MueLu__RepartitionFactory__fwd_8hpp.html</anchorfile>
      <anchor>a2c60fbef696059def48c93799ef86737</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionHeuristicFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RepartitionHeuristicFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__BlockedRAPFactory__fwd_8hpp" name="MueLu_BlockedRAPFactory_fwd.hpp" local="yes" imported="no">MueLu_BlockedRAPFactory_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="yes" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__SubBlockAFactory__fwd_8hpp" name="MueLu_SubBlockAFactory_fwd.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_fwd.hpp</includes>
    <includes id="MueLu__RepartitionFactory__fwd_8hpp" name="MueLu_RepartitionFactory_fwd.hpp" local="yes" imported="no">MueLu_RepartitionFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RepartitionHeuristicFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REPARTITIONHEURISTICFACTORY_SHORT</name>
      <anchorfile>MueLu__RepartitionHeuristicFactory__decl_8hpp.html</anchorfile>
      <anchor>ac4d6f33b34a428069bfd62bd767640c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionHeuristicFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RepartitionHeuristicFactory__def_8hpp</filename>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__RepartitionHeuristicFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionHeuristicFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RepartitionHeuristicFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::RepartitionHeuristicFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REPARTITIONHEURISTICFACTORY_SHORT</name>
      <anchorfile>MueLu__RepartitionHeuristicFactory__fwd_8hpp.html</anchorfile>
      <anchor>ac4d6f33b34a428069bfd62bd767640c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionInterface_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RepartitionInterface__decl_8hpp</filename>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Graph__fwd_8hpp" name="MueLu_Graph_fwd.hpp" local="yes" imported="no">MueLu_Graph_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RepartitionInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REPARTITIONINTERFACE_SHORT</name>
      <anchorfile>MueLu__RepartitionInterface__decl_8hpp.html</anchorfile>
      <anchor>aa8ccefc7715436deed9bf68d057b7c49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionInterface_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__RepartitionInterface__def_8hpp</filename>
    <includes id="MueLu__RepartitionInterface__decl_8hpp" name="MueLu_RepartitionInterface_decl.hpp" local="yes" imported="no">MueLu_RepartitionInterface_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_RepartitionInterface_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RepartitionInterface__fwd_8hpp</filename>
    <class kind="class">MueLu::RepartitionInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_REPARTITIONINTERFACE_SHORT</name>
      <anchorfile>MueLu__RepartitionInterface__fwd_8hpp.html</anchorfile>
      <anchor>aa8ccefc7715436deed9bf68d057b7c49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RFactory__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RFACTORY_SHORT</name>
      <anchorfile>MueLu__RFactory__fwd_8hpp.html</anchorfile>
      <anchor>a5904ae7065444925c544418ca74ff1d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RigidBodyModeFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__RigidBodyModeFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__RigidBodyModeFactory__fwd_8hpp" name="MueLu_RigidBodyModeFactory_fwd.hpp" local="yes" imported="no">MueLu_RigidBodyModeFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::RigidBodyModeFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RIGIDBODYMODEFACTORY_SHORT</name>
      <anchorfile>MueLu__RigidBodyModeFactory__decl_8hpp.html</anchorfile>
      <anchor>a3531fdbbe4b6792459aa19ed061d3caf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RigidBodyModeFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__RigidBodyModeFactory__def_8hpp</filename>
    <includes id="MueLu__RigidBodyModeFactory__decl_8hpp" name="MueLu_RigidBodyModeFactory_decl.hpp" local="yes" imported="no">MueLu_RigidBodyModeFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RIGIDBODYMODEFACTORY_SHORT</name>
      <anchorfile>MueLu__RigidBodyModeFactory__def_8hpp.html</anchorfile>
      <anchor>a3531fdbbe4b6792459aa19ed061d3caf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_RigidBodyModeFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__RigidBodyModeFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::RigidBodyModeFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_RIGIDBODYMODEFACTORY_SHORT</name>
      <anchorfile>MueLu__RigidBodyModeFactory__fwd_8hpp.html</anchorfile>
      <anchor>a3531fdbbe4b6792459aa19ed061d3caf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SaPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__SaPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SaPFactory__fwd_8hpp" name="MueLu_SaPFactory_fwd.hpp" local="yes" imported="no">MueLu_SaPFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__ParameterListAcceptor_8hpp" name="MueLu_ParameterListAcceptor.hpp" local="yes" imported="no">MueLu_ParameterListAcceptor.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase__fwd_8hpp" name="MueLu_SingleLevelFactoryBase_fwd.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SaPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SAPFACTORY_SHORT</name>
      <anchorfile>MueLu__SaPFactory__decl_8hpp.html</anchorfile>
      <anchor>af8fd576a1617c005fdaa3d2bdb221309</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SaPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__SaPFactory__def_8hpp</filename>
    <includes id="MueLu__SaPFactory__decl_8hpp" name="MueLu_SaPFactory_decl.hpp" local="yes" imported="no">MueLu_SaPFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__SaPFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SaPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SaPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::SaPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SAPFACTORY_SHORT</name>
      <anchorfile>MueLu__SaPFactory__fwd_8hpp.html</anchorfile>
      <anchor>af8fd576a1617c005fdaa3d2bdb221309</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SaPFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__SaPFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_SaPFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__SaPFactory__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_SaPFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SaPFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_SchurComplementFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__SchurComplementFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SchurComplementFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SCHURCOMPLEMENTFACTORY_SHORT</name>
      <anchorfile>MueLu__SchurComplementFactory__decl_8hpp.html</anchorfile>
      <anchor>accf4da070dd5bb56976b71ab5da3ec89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SchurComplementFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__SchurComplementFactory__def_8hpp</filename>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_SchurComplementFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SchurComplementFactory__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::SchurComplementFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SCHURCOMPLEMENTFACTORY_SHORT</name>
      <anchorfile>MueLu__SchurComplementFactory__fwd_8hpp.html</anchorfile>
      <anchor>accf4da070dd5bb56976b71ab5da3ec89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SegregatedAFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__SegregatedAFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SegregatedAFactory__fwd_8hpp" name="MueLu_SegregatedAFactory_fwd.hpp" local="yes" imported="no">MueLu_SegregatedAFactory_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SegregatedAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SEGREGATEDAFACTORY_SHORT</name>
      <anchorfile>MueLu__SegregatedAFactory__decl_8hpp.html</anchorfile>
      <anchor>aa6cbcc8becc59984fc24c56026de7834</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SegregatedAFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__SegregatedAFactory__def_8hpp</filename>
    <includes id="MueLu__SegregatedAFactory__decl_8hpp" name="MueLu_SegregatedAFactory_decl.hpp" local="yes" imported="no">MueLu_SegregatedAFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__SegregatedAFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SegregatedAFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SegregatedAFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::SegregatedAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SEGREGATEDAFACTORY_SHORT</name>
      <anchorfile>MueLu__SegregatedAFactory__fwd_8hpp.html</anchorfile>
      <anchor>aa6cbcc8becc59984fc24c56026de7834</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SemiCoarsenPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/SemiCoarsen/</path>
    <filename>MueLu__SemiCoarsenPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SemiCoarsenPFactory__fwd_8hpp" name="MueLu_SemiCoarsenPFactory_fwd.hpp" local="yes" imported="no">MueLu_SemiCoarsenPFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SemiCoarsenPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>VERTICAL</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__decl_8hpp.html</anchorfile>
      <anchor>a91b21b229126b2c997c247835568107b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HORIZONTAL</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__decl_8hpp.html</anchorfile>
      <anchor>a583cfe7670aa69f02d684bb5c5d3799e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GRID_SUPPLIED</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__decl_8hpp.html</anchorfile>
      <anchor>af4be3f48ee8157d6079dcf9a32d9054f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_ZPTS</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__decl_8hpp.html</anchorfile>
      <anchor>a387450258919ad3f9b3a431927cd7a98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ORIENTATION</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__decl_8hpp.html</anchorfile>
      <anchor>ac815b03ec48abf99301f44140ff0b0a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SEMICOARSENPFACTORY_SHORT</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__decl_8hpp.html</anchorfile>
      <anchor>a0e1c3fcbbc887e3d6ee130f50c326fab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SemiCoarsenPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/SemiCoarsen/</path>
    <filename>MueLu__SemiCoarsenPFactory__def_8hpp</filename>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__SemiCoarsenPFactory__decl_8hpp" name="MueLu_SemiCoarsenPFactory_decl.hpp" local="yes" imported="no">MueLu_SemiCoarsenPFactory_decl.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MaxHorNeighborNodes</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__def_8hpp.html</anchorfile>
      <anchor>ae2bc9f0efc9fa0a2c2f219389d33f6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SEMICOARSENPFACTORY_SHORT</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__def_8hpp.html</anchorfile>
      <anchor>a0e1c3fcbbc887e3d6ee130f50c326fab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SemiCoarsenPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SemiCoarsenPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::SemiCoarsenPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SEMICOARSENPFACTORY_SHORT</name>
      <anchorfile>MueLu__SemiCoarsenPFactory__fwd_8hpp.html</anchorfile>
      <anchor>a0e1c3fcbbc887e3d6ee130f50c326fab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ShiftedLaplacian_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__ShiftedLaplacian__decl_8hpp</filename>
    <includes id="MueLu_8hpp" name="MueLu.hpp" local="yes" imported="no">MueLu.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="no" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__CoalesceDropFactory__fwd_8hpp" name="MueLu_CoalesceDropFactory_fwd.hpp" local="no" imported="no">MueLu_CoalesceDropFactory_fwd.hpp</includes>
    <includes id="MueLu__CoupledAggregationFactory__fwd_8hpp" name="MueLu_CoupledAggregationFactory_fwd.hpp" local="no" imported="no">MueLu_CoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__CoupledRBMFactory__fwd_8hpp" name="MueLu_CoupledRBMFactory_fwd.hpp" local="no" imported="no">MueLu_CoupledRBMFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="no" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__GenericRFactory__fwd_8hpp" name="MueLu_GenericRFactory_fwd.hpp" local="no" imported="no">MueLu_GenericRFactory_fwd.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="no" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__Ifpack2Smoother__fwd_8hpp" name="MueLu_Ifpack2Smoother_fwd.hpp" local="no" imported="no">MueLu_Ifpack2Smoother_fwd.hpp</includes>
    <includes id="MueLu__PFactory__fwd_8hpp" name="MueLu_PFactory_fwd.hpp" local="no" imported="no">MueLu_PFactory_fwd.hpp</includes>
    <includes id="MueLu__PgPFactory__fwd_8hpp" name="MueLu_PgPFactory_fwd.hpp" local="no" imported="no">MueLu_PgPFactory_fwd.hpp</includes>
    <includes id="MueLu__RAPFactory__fwd_8hpp" name="MueLu_RAPFactory_fwd.hpp" local="no" imported="no">MueLu_RAPFactory_fwd.hpp</includes>
    <includes id="MueLu__RAPShiftFactory__fwd_8hpp" name="MueLu_RAPShiftFactory_fwd.hpp" local="no" imported="no">MueLu_RAPShiftFactory_fwd.hpp</includes>
    <includes id="MueLu__SaPFactory__fwd_8hpp" name="MueLu_SaPFactory_fwd.hpp" local="no" imported="no">MueLu_SaPFactory_fwd.hpp</includes>
    <includes id="MueLu__ShiftedLaplacian__fwd_8hpp" name="MueLu_ShiftedLaplacian_fwd.hpp" local="no" imported="no">MueLu_ShiftedLaplacian_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="no" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="no" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="no" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__TransPFactory__fwd_8hpp" name="MueLu_TransPFactory_fwd.hpp" local="no" imported="no">MueLu_TransPFactory_fwd.hpp</includes>
    <includes id="MueLu__UncoupledAggregationFactory__fwd_8hpp" name="MueLu_UncoupledAggregationFactory_fwd.hpp" local="no" imported="no">MueLu_UncoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="no" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ShiftedLaplacian</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SHIFTEDLAPLACIAN_SHORT</name>
      <anchorfile>MueLu__ShiftedLaplacian__decl_8hpp.html</anchorfile>
      <anchor>a3219987c16f3c413d67a013498a9e316</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ShiftedLaplacian_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__ShiftedLaplacian__def_8hpp</filename>
    <includes id="MueLu__ShiftedLaplacian__decl_8hpp" name="MueLu_ShiftedLaplacian_decl.hpp" local="yes" imported="no">MueLu_ShiftedLaplacian_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SHIFTEDLAPLACIAN_SHORT</name>
      <anchorfile>MueLu__ShiftedLaplacian__def_8hpp.html</anchorfile>
      <anchor>a3219987c16f3c413d67a013498a9e316</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ShiftedLaplacian_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ShiftedLaplacian__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_ShiftedLaplacianOperator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__ShiftedLaplacianOperator__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Hierarchy__decl_8hpp" name="MueLu_Hierarchy_decl.hpp" local="yes" imported="no">MueLu_Hierarchy_decl.hpp</includes>
    <class kind="class">MueLu::ShiftedLaplacianOperator</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ShiftedLaplacianOperator_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__ShiftedLaplacianOperator__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__ShiftedLaplacianOperator__decl_8hpp" name="MueLu_ShiftedLaplacianOperator_decl.hpp" local="yes" imported="no">MueLu_ShiftedLaplacianOperator_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ShiftedLaplacianOperator_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ShiftedLaplacianOperator__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_SimpleSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__SimpleSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SimpleSmoother__fwd_8hpp" name="MueLu_SimpleSmoother_fwd.hpp" local="yes" imported="no">MueLu_SimpleSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SubBlockAFactory__fwd_8hpp" name="MueLu_SubBlockAFactory_fwd.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__SchurComplementFactory__fwd_8hpp" name="MueLu_SchurComplementFactory_fwd.hpp" local="yes" imported="no">MueLu_SchurComplementFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SimpleSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SIMPLESMOOTHER_SHORT</name>
      <anchorfile>MueLu__SimpleSmoother__decl_8hpp.html</anchorfile>
      <anchor>acdb1ff92a31b98f9f62ba069003237d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SimpleSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__SimpleSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SimpleSmoother__decl_8hpp" name="MueLu_SimpleSmoother_decl.hpp" local="yes" imported="no">MueLu_SimpleSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_SimpleSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SimpleSmoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::SimpleSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SIMPLESMOOTHER_SHORT</name>
      <anchorfile>MueLu__SimpleSmoother__fwd_8hpp.html</anchorfile>
      <anchor>acdb1ff92a31b98f9f62ba069003237d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SingleLevelFactoryBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__SingleLevelFactoryBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Factory_8hpp" name="MueLu_Factory.hpp" local="yes" imported="no">MueLu_Factory.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__TimeMonitor_8hpp" name="MueLu_TimeMonitor.hpp" local="yes" imported="no">MueLu_TimeMonitor.hpp</includes>
    <class kind="class">MueLu::SingleLevelFactoryBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SINGLELEVELFACTORY_SHORT</name>
      <anchorfile>MueLu__SingleLevelFactoryBase_8hpp.html</anchorfile>
      <anchor>a499a2247ddf618559880e16ca69d35bd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SingleLevelFactoryBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SingleLevelFactoryBase__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SINGLELEVELFACTORYBASE_SHORT</name>
      <anchorfile>MueLu__SingleLevelFactoryBase__fwd_8hpp.html</anchorfile>
      <anchor>a14d04f1099f2fd0fac239386760091d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SingleLevelMatlabFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__SingleLevelMatlabFactory_8cpp</filename>
    <includes id="MueLu__SingleLevelMatlabFactory__def_8hpp" name="MueLu_SingleLevelMatlabFactory_def.hpp" local="yes" imported="no">MueLu_SingleLevelMatlabFactory_def.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCAL_INSTANT</name>
      <anchorfile>MueLu__SingleLevelMatlabFactory_8cpp.html</anchorfile>
      <anchor>a0cf4a2be66b0a7c31a079ddabc3f917e</anchor>
      <arglist>(S, LO, GO, N)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SingleLevelMatlabFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__SingleLevelMatlabFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelMatlabFactory__fwd_8hpp" name="MueLu_SingleLevelMatlabFactory_fwd.hpp" local="yes" imported="no">MueLu_SingleLevelMatlabFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SingleLevelMatlabFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SINGLELEVELMATLABFACTORY_SHORT</name>
      <anchorfile>MueLu__SingleLevelMatlabFactory__decl_8hpp.html</anchorfile>
      <anchor>a52ea71920aae4004a4777730bf13bd0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SingleLevelMatlabFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__SingleLevelMatlabFactory__def_8hpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SingleLevelMatlabFactory__decl_8hpp" name="MueLu_SingleLevelMatlabFactory_decl.hpp" local="yes" imported="no">MueLu_SingleLevelMatlabFactory_decl.hpp</includes>
    <includes id="MueLu__MatlabUtils__decl_8hpp" name="MueLu_MatlabUtils_decl.hpp" local="yes" imported="no">MueLu_MatlabUtils_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SINGLELEVELMATLABFACTORY_SHORT</name>
      <anchorfile>MueLu__SingleLevelMatlabFactory__def_8hpp.html</anchorfile>
      <anchor>a52ea71920aae4004a4777730bf13bd0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SingleLevelMatlabFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SingleLevelMatlabFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::SingleLevelMatlabFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SINGLELEVELMATLABFACTORY_SHORT</name>
      <anchorfile>MueLu__SingleLevelMatlabFactory__fwd_8hpp.html</anchorfile>
      <anchor>a52ea71920aae4004a4777730bf13bd0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Smoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Smoother__fwd_8hpp</filename>
    <class kind="class">MueLu::Smoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHER_SHORT</name>
      <anchorfile>MueLu__Smoother__fwd_8hpp.html</anchorfile>
      <anchor>a581b62a7b7eed20a9ab8d0c0c15430dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SmootherBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERBASE_SHORT</name>
      <anchorfile>MueLu__SmootherBase_8hpp.html</anchorfile>
      <anchor>a96690be3aca3dc11535e4ae8fd729889</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SmootherBase__fwd_8hpp</filename>
    <class kind="class">MueLu::SmootherBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERBASE_SHORT</name>
      <anchorfile>MueLu__SmootherBase__fwd_8hpp.html</anchorfile>
      <anchor>a96690be3aca3dc11535e4ae8fd729889</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherCloner.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherCloner_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERBASECLONER_SHORT</name>
      <anchorfile>MueLu__SmootherCloner_8hpp.html</anchorfile>
      <anchor>a078bc141284be750cac078d0e9daf634</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; SmootherBase&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a92161cf1eb87780943e53436618931f7</anchor>
      <arglist>(const Teuchos::RCP&lt; SmootherBase&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node1 &gt; &gt; &amp;SB, const Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;cloneA, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactoryBase_8hpp" name="MueLu_SmootherFactoryBase.hpp" local="yes" imported="no">MueLu_SmootherFactoryBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__Ifpack2Smoother__fwd_8hpp" name="MueLu_Ifpack2Smoother_fwd.hpp" local="yes" imported="no">MueLu_Ifpack2Smoother_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SmootherFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERFACTORY_SHORT</name>
      <anchorfile>MueLu__SmootherFactory__decl_8hpp.html</anchorfile>
      <anchor>abd24a18cc1408400d077e9af8b7d695f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherFactory__def_8hpp</filename>
    <includes id="MueLu__SmootherFactory__decl_8hpp" name="MueLu_SmootherFactory_decl.hpp" local="yes" imported="no">MueLu_SmootherFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SmootherFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::SmootherFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERFACTORY_SHORT</name>
      <anchorfile>MueLu__SmootherFactory__fwd_8hpp.html</anchorfile>
      <anchor>abd24a18cc1408400d077e9af8b7d695f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherFactoryBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherFactoryBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Types_8hpp" name="MueLu_Types.hpp" local="yes" imported="no">MueLu_Types.hpp</includes>
    <class kind="class">MueLu::SmootherFactoryBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERFACTORYBASE_SHORT</name>
      <anchorfile>MueLu__SmootherFactoryBase_8hpp.html</anchorfile>
      <anchor>a83d194411d4d8b993f7c48f865971a9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherFactoryBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SmootherFactoryBase__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERFACTORYBASE_SHORT</name>
      <anchorfile>MueLu__SmootherFactoryBase__fwd_8hpp.html</anchorfile>
      <anchor>a83d194411d4d8b993f7c48f865971a9e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherPrototype_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherPrototype__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <includes id="MueLu__Factory_8hpp" name="MueLu_Factory.hpp" local="yes" imported="no">MueLu_Factory.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SmootherPrototype</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERPROTOTYPE_SHORT</name>
      <anchorfile>MueLu__SmootherPrototype__decl_8hpp.html</anchorfile>
      <anchor>a3d341654046316bd2d6a309f6b25351c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherPrototype_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__SmootherPrototype__def_8hpp</filename>
    <includes id="MueLu__SmootherPrototype__decl_8hpp" name="MueLu_SmootherPrototype_decl.hpp" local="yes" imported="no">MueLu_SmootherPrototype_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_SmootherPrototype_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SmootherPrototype__fwd_8hpp</filename>
    <class kind="class">MueLu::SmootherPrototype</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SMOOTHERPROTOTYPE_SHORT</name>
      <anchorfile>MueLu__SmootherPrototype__fwd_8hpp.html</anchorfile>
      <anchor>a3d341654046316bd2d6a309f6b25351c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SolverBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__SolverBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Constraint__fwd_8hpp" name="MueLu_Constraint_fwd.hpp" local="yes" imported="no">MueLu_Constraint_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SolverBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SOLVERBASE_SHORT</name>
      <anchorfile>MueLu__SolverBase_8hpp.html</anchorfile>
      <anchor>a55b00f14ce2252e34aef5e4ff300eba2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SolverBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SolverBase__fwd_8hpp</filename>
    <class kind="class">MueLu::SolverBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SOLVERBASE_SHORT</name>
      <anchorfile>MueLu__SolverBase__fwd_8hpp.html</anchorfile>
      <anchor>a55b00f14ce2252e34aef5e4ff300eba2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SteepestDescentSolver_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__SteepestDescentSolver__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__SolverBase_8hpp" name="MueLu_SolverBase.hpp" local="yes" imported="no">MueLu_SolverBase.hpp</includes>
    <includes id="MueLu__Constraint__fwd_8hpp" name="MueLu_Constraint_fwd.hpp" local="yes" imported="no">MueLu_Constraint_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SteepestDescentSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_STEEPESTDESCENTSOLVER_SHORT</name>
      <anchorfile>MueLu__SteepestDescentSolver__decl_8hpp.html</anchorfile>
      <anchor>abf911fe1070eaee2253af3a792be4b17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SteepestDescentSolver_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Energy-Minimization/Solvers/</path>
    <filename>MueLu__SteepestDescentSolver__def_8hpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SteepestDescentSolver__decl_8hpp" name="MueLu_SteepestDescentSolver_decl.hpp" local="yes" imported="no">MueLu_SteepestDescentSolver_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_SteepestDescentSolver_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SteepestDescentSolver__fwd_8hpp</filename>
    <class kind="class">MueLu::SteepestDescentSolver</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_STEEPESTDESCENTSOLVER_SHORT</name>
      <anchorfile>MueLu__SteepestDescentSolver__fwd_8hpp.html</anchorfile>
      <anchor>abf911fe1070eaee2253af3a792be4b17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SubBlockAFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__SubBlockAFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__SubBlockAFactory__fwd_8hpp" name="MueLu_SubBlockAFactory_fwd.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::SubBlockAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SUBBLOCKAFACTORY_SHORT</name>
      <anchorfile>MueLu__SubBlockAFactory__decl_8hpp.html</anchorfile>
      <anchor>ab85e9b690a8e1a06d7c05dd68a66861e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_SubBlockAFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/BlockedTransfers/</path>
    <filename>MueLu__SubBlockAFactory__def_8hpp</filename>
    <includes id="MueLu__SubBlockAFactory__decl_8hpp" name="MueLu_SubBlockAFactory_decl.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_SubBlockAFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__SubBlockAFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::SubBlockAFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_SUBBLOCKAFACTORY_SHORT</name>
      <anchorfile>MueLu__SubBlockAFactory__fwd_8hpp.html</anchorfile>
      <anchor>ab85e9b690a8e1a06d7c05dd68a66861e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TekoSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__TekoSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TekoSmoother__fwd_8hpp" name="MueLu_TekoSmoother_fwd.hpp" local="yes" imported="no">MueLu_TekoSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TekoSmoother</class>
    <class kind="class">MueLu::TekoSmoother&lt; double, int, GlobalOrdinal, Node &gt;</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TEKOSMOOTHER_SHORT</name>
      <anchorfile>MueLu__TekoSmoother__decl_8hpp.html</anchorfile>
      <anchor>ae8eb7af6a0d620b8cec6eef1ebb04b1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TekoSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__TekoSmoother__def_8hpp</filename>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TekoSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TekoSmoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::TekoSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TEKOSMOOTHER_SHORT</name>
      <anchorfile>MueLu__TekoSmoother__fwd_8hpp.html</anchorfile>
      <anchor>ae8eb7af6a0d620b8cec6eef1ebb04b1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TentativePFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__TentativePFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TentativePFactory__fwd_8hpp" name="MueLu_TentativePFactory_fwd.hpp" local="yes" imported="no">MueLu_TentativePFactory_fwd.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationFactory__fwd_8hpp" name="MueLu_AmalgamationFactory_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationFactory_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__CoarseMapFactory__fwd_8hpp" name="MueLu_CoarseMapFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TentativePFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TENTATIVEPFACTORY_SHORT</name>
      <anchorfile>MueLu__TentativePFactory__decl_8hpp.html</anchorfile>
      <anchor>aebd49cdce8a987e8165298de5823a2ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TentativePFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__TentativePFactory__def_8hpp</filename>
    <includes id="MueLu__TentativePFactory__decl_8hpp" name="MueLu_TentativePFactory_decl.hpp" local="yes" imported="no">MueLu_TentativePFactory_decl.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TENTATIVEPFACTORY_SHORT</name>
      <anchorfile>MueLu__TentativePFactory__def_8hpp.html</anchorfile>
      <anchor>aebd49cdce8a987e8165298de5823a2ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TentativePFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TentativePFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::TentativePFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TENTATIVEPFACTORY_SHORT</name>
      <anchorfile>MueLu__TentativePFactory__fwd_8hpp.html</anchorfile>
      <anchor>aebd49cdce8a987e8165298de5823a2ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TentativePFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__TentativePFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_TentativePFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Smoothed-Aggregation/</path>
    <filename>MueLu__TentativePFactory__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_TentativePFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TentativePFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_ThresholdAFilterFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__ThresholdAFilterFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__ThresholdAFilterFactory__fwd_8hpp" name="MueLu_ThresholdAFilterFactory_fwd.hpp" local="yes" imported="no">MueLu_ThresholdAFilterFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ThresholdAFilterFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_THRESHOLDAFILTERFACTORY_SHORT</name>
      <anchorfile>MueLu__ThresholdAFilterFactory__decl_8hpp.html</anchorfile>
      <anchor>ab4520aec1123b9a261f65583a716254c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ThresholdAFilterFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Misc/</path>
    <filename>MueLu__ThresholdAFilterFactory__def_8hpp</filename>
    <includes id="MueLu__ThresholdAFilterFactory__decl_8hpp" name="MueLu_ThresholdAFilterFactory_decl.hpp" local="yes" imported="no">MueLu_ThresholdAFilterFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ThresholdAFilterFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ThresholdAFilterFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::ThresholdAFilterFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_THRESHOLDAFILTERFACTORY_SHORT</name>
      <anchorfile>MueLu__ThresholdAFilterFactory__fwd_8hpp.html</anchorfile>
      <anchor>ab4520aec1123b9a261f65583a716254c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TimeMonitor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__TimeMonitor_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__VerboseObject_8hpp" name="MueLu_VerboseObject.hpp" local="yes" imported="no">MueLu_VerboseObject.hpp</includes>
    <includes id="MueLu__MutuallyExclusiveTime_8hpp" name="MueLu_MutuallyExclusiveTime.hpp" local="yes" imported="no">MueLu_MutuallyExclusiveTime.hpp</includes>
    <class kind="class">MueLu::TimeMonitor</class>
    <class kind="class">MueLu::MutuallyExclusiveTimeMonitor</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ToggleCoordinatesTransferFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/SemiCoarsen/</path>
    <filename>MueLu__ToggleCoordinatesTransferFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__ToggleCoordinatesTransferFactory__fwd_8hpp" name="MueLu_ToggleCoordinatesTransferFactory_fwd.hpp" local="yes" imported="no">MueLu_ToggleCoordinatesTransferFactory_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ToggleCoordinatesTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOGGLECOORDINATESTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__ToggleCoordinatesTransferFactory__decl_8hpp.html</anchorfile>
      <anchor>a412c7abf239d9269a2689c742c7f9dc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ToggleCoordinatesTransferFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/SemiCoarsen/</path>
    <filename>MueLu__ToggleCoordinatesTransferFactory__def_8hpp</filename>
    <includes id="MueLu__ToggleCoordinatesTransferFactory__decl_8hpp" name="MueLu_ToggleCoordinatesTransferFactory_decl.hpp" local="yes" imported="no">MueLu_ToggleCoordinatesTransferFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ToggleCoordinatesTransferFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ToggleCoordinatesTransferFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::ToggleCoordinatesTransferFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOGGLECOORDINATESTRANSFERFACTORY_SHORT</name>
      <anchorfile>MueLu__ToggleCoordinatesTransferFactory__fwd_8hpp.html</anchorfile>
      <anchor>a412c7abf239d9269a2689c742c7f9dc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TogglePFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/SemiCoarsen/</path>
    <filename>MueLu__TogglePFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TogglePFactory__fwd_8hpp" name="MueLu_TogglePFactory_fwd.hpp" local="yes" imported="no">MueLu_TogglePFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__ParameterListAcceptor_8hpp" name="MueLu_ParameterListAcceptor.hpp" local="yes" imported="no">MueLu_ParameterListAcceptor.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase__fwd_8hpp" name="MueLu_SingleLevelFactoryBase_fwd.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TogglePFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOGGLEPFACTORY_SHORT</name>
      <anchorfile>MueLu__TogglePFactory__decl_8hpp.html</anchorfile>
      <anchor>a8d42d3a678a6a7a995d18742ca1d1471</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TogglePFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/SemiCoarsen/</path>
    <filename>MueLu__TogglePFactory__def_8hpp</filename>
    <includes id="MueLu__TogglePFactory__decl_8hpp" name="MueLu_TogglePFactory_decl.hpp" local="yes" imported="no">MueLu_TogglePFactory_decl.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__TogglePFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TogglePFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TogglePFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::TogglePFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOGGLEPFACTORY_SHORT</name>
      <anchorfile>MueLu__TogglePFactory__fwd_8hpp.html</anchorfile>
      <anchor>a8d42d3a678a6a7a995d18742ca1d1471</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TopRAPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__TopRAPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TopRAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOPRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__TopRAPFactory__decl_8hpp.html</anchorfile>
      <anchor>ad82ee3f005506fca4fe5baca077a8acc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TopRAPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__TopRAPFactory__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Hierarchy__fwd_8hpp" name="MueLu_Hierarchy_fwd.hpp" local="yes" imported="no">MueLu_Hierarchy_fwd.hpp</includes>
    <includes id="MueLu__HierarchyManager__fwd_8hpp" name="MueLu_HierarchyManager_fwd.hpp" local="yes" imported="no">MueLu_HierarchyManager_fwd.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TopRAPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TopRAPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::TopRAPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOPRAPFACTORY_SHORT</name>
      <anchorfile>MueLu__TopRAPFactory__fwd_8hpp.html</anchorfile>
      <anchor>ad82ee3f005506fca4fe5baca077a8acc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TopSmootherFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__TopSmootherFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__SmootherPrototype__fwd_8hpp" name="MueLu_SmootherPrototype_fwd.hpp" local="yes" imported="no">MueLu_SmootherPrototype_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TopSmootherFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOPSMOOTHERFACTORY_SHORT</name>
      <anchorfile>MueLu__TopSmootherFactory__decl_8hpp.html</anchorfile>
      <anchor>ab89c5371e551b6e156a3b12af0aad779</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TopSmootherFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__TopSmootherFactory__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TopSmootherFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TopSmootherFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::TopSmootherFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TOPSMOOTHERFACTORY_SHORT</name>
      <anchorfile>MueLu__TopSmootherFactory__fwd_8hpp.html</anchorfile>
      <anchor>ab89c5371e551b6e156a3b12af0aad779</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TpetraOperator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__TpetraOperator__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Hierarchy__decl_8hpp" name="MueLu_Hierarchy_decl.hpp" local="yes" imported="no">MueLu_Hierarchy_decl.hpp</includes>
    <class kind="class">MueLu::TpetraOperator</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TpetraOperator_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/tpetra/</path>
    <filename>MueLu__TpetraOperator__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TpetraOperator__decl_8hpp" name="MueLu_TpetraOperator_decl.hpp" local="yes" imported="no">MueLu_TpetraOperator_decl.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TpetraOperator_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TpetraOperator__fwd_8hpp</filename>
    <class kind="class">MueLu::TpetraOperator</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TPETRAOPERATOR_SHORT</name>
      <anchorfile>MueLu__TpetraOperator__fwd_8hpp.html</anchorfile>
      <anchor>a7cad73c556c1af113ec73bf3eff1d912</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TransPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Generic/</path>
    <filename>MueLu__TransPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TransPFactory__fwd_8hpp" name="MueLu_TransPFactory_fwd.hpp" local="yes" imported="no">MueLu_TransPFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TransPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TRANSPFACTORY_SHORT</name>
      <anchorfile>MueLu__TransPFactory__decl_8hpp.html</anchorfile>
      <anchor>a484cc9e456e99c97e9bbe4f8b33e1cda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TransPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/Generic/</path>
    <filename>MueLu__TransPFactory__def_8hpp</filename>
    <includes id="MueLu__TransPFactory__decl_8hpp" name="MueLu_TransPFactory_decl.hpp" local="yes" imported="no">MueLu_TransPFactory_decl.hpp</includes>
    <includes id="MueLu__DisableMultipleCallCheck_8hpp" name="MueLu_DisableMultipleCallCheck.hpp" local="yes" imported="no">MueLu_DisableMultipleCallCheck.hpp</includes>
    <includes id="MueLu__FactoryManagerBase_8hpp" name="MueLu_FactoryManagerBase.hpp" local="yes" imported="no">MueLu_FactoryManagerBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TransPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TransPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::TransPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TRANSPFACTORY_SHORT</name>
      <anchorfile>MueLu__TransPFactory__fwd_8hpp.html</anchorfile>
      <anchor>a484cc9e456e99c97e9bbe4f8b33e1cda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TrilinosSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__TrilinosSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TrilinosSmoother__fwd_8hpp" name="MueLu_TrilinosSmoother_fwd.hpp" local="yes" imported="no">MueLu_TrilinosSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__IfpackSmoother__fwd_8hpp" name="MueLu_IfpackSmoother_fwd.hpp" local="yes" imported="no">MueLu_IfpackSmoother_fwd.hpp</includes>
    <includes id="MueLu__Ifpack2Smoother__fwd_8hpp" name="MueLu_Ifpack2Smoother_fwd.hpp" local="yes" imported="no">MueLu_Ifpack2Smoother_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TrilinosSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TRILINOSSMOOTHER_SHORT</name>
      <anchorfile>MueLu__TrilinosSmoother__decl_8hpp.html</anchorfile>
      <anchor>a72fda996ec8a00fc787828a1a2488b95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TrilinosSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/</path>
    <filename>MueLu__TrilinosSmoother__def_8hpp</filename>
    <includes id="MueLu__TrilinosSmoother__decl_8hpp" name="MueLu_TrilinosSmoother_decl.hpp" local="yes" imported="no">MueLu_TrilinosSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__IfpackSmoother_8hpp" name="MueLu_IfpackSmoother.hpp" local="yes" imported="no">MueLu_IfpackSmoother.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_TrilinosSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TrilinosSmoother__fwd_8hpp</filename>
    <class kind="class">MueLu::TrilinosSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TRILINOSSMOOTHER_SHORT</name>
      <anchorfile>MueLu__TrilinosSmoother__fwd_8hpp.html</anchorfile>
      <anchor>a72fda996ec8a00fc787828a1a2488b95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TwoLevelFactoryBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__TwoLevelFactoryBase_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Factory_8hpp" name="MueLu_Factory.hpp" local="yes" imported="no">MueLu_Factory.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__TimeMonitor_8hpp" name="MueLu_TimeMonitor.hpp" local="yes" imported="no">MueLu_TimeMonitor.hpp</includes>
    <class kind="class">MueLu::TwoLevelFactoryBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TWOLEVELFACTORY_SHORT</name>
      <anchorfile>MueLu__TwoLevelFactoryBase_8hpp.html</anchorfile>
      <anchor>afe35d4c9b0f666193c5b515e38eefedb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TwoLevelFactoryBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TwoLevelFactoryBase__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TWOLEVELFACTORYBASE_SHORT</name>
      <anchorfile>MueLu__TwoLevelFactoryBase__fwd_8hpp.html</anchorfile>
      <anchor>a499bbc2cc0f208053bec7a0fd9208cd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TwoLevelMatlabFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__TwoLevelMatlabFactory_8cpp</filename>
    <includes id="MueLu__TwoLevelMatlabFactory__def_8hpp" name="MueLu_TwoLevelMatlabFactory_def.hpp" local="yes" imported="no">MueLu_TwoLevelMatlabFactory_def.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_LOCAL_INSTANT</name>
      <anchorfile>MueLu__TwoLevelMatlabFactory_8cpp.html</anchorfile>
      <anchor>a0cf4a2be66b0a7c31a079ddabc3f917e</anchor>
      <arglist>(S, LO, GO, N)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TwoLevelMatlabFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__TwoLevelMatlabFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__TwoLevelMatlabFactory__fwd_8hpp" name="MueLu_TwoLevelMatlabFactory_fwd.hpp" local="yes" imported="no">MueLu_TwoLevelMatlabFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__TwoLevelFactoryBase_8hpp" name="MueLu_TwoLevelFactoryBase.hpp" local="yes" imported="no">MueLu_TwoLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::TwoLevelMatlabFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TWOLEVELMATLABFACTORY_SHORT</name>
      <anchorfile>MueLu__TwoLevelMatlabFactory__decl_8hpp.html</anchorfile>
      <anchor>aed3b8d732e2dcdcf3b745142052c5620</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TwoLevelMatlabFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/matlab/src/</path>
    <filename>MueLu__TwoLevelMatlabFactory__def_8hpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__TwoLevelMatlabFactory__decl_8hpp" name="MueLu_TwoLevelMatlabFactory_decl.hpp" local="yes" imported="no">MueLu_TwoLevelMatlabFactory_decl.hpp</includes>
    <includes id="MueLu__MatlabUtils__decl_8hpp" name="MueLu_MatlabUtils_decl.hpp" local="yes" imported="no">MueLu_MatlabUtils_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TWOLEVELMATLABFACTORY_SHORT</name>
      <anchorfile>MueLu__TwoLevelMatlabFactory__def_8hpp.html</anchorfile>
      <anchor>aed3b8d732e2dcdcf3b745142052c5620</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_TwoLevelMatlabFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__TwoLevelMatlabFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::TwoLevelMatlabFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_TWOLEVELMATLABFACTORY_SHORT</name>
      <anchorfile>MueLu__TwoLevelMatlabFactory__fwd_8hpp.html</anchorfile>
      <anchor>aed3b8d732e2dcdcf3b745142052c5620</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Types.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__Types_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="enumeration">
      <type></type>
      <name>CycleType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae3c686f4ee7f191c037cef47adc0c9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VCYCLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae3c686f4ee7f191c037cef47adc0c9d5aac22bb2e2d8d8dd8ce3973719b59ecd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WCYCLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae3c686f4ee7f191c037cef47adc0c9d5a6f79ecf2544584e8cf8e08943b9311af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PreOrPost</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07cad46a9040e87200a3a8515e928ecb53be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POST</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07cabc5415e8b813aef3c0306a141d9c41d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTH</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07cac781172a0019766747736e50d90dbfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NodeState</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READY</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a13a08b8749f10fa66cf6b75e61db3ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTSEL</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a02d1ea3f826d319ca64fa1846f3c8834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGREGATED</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911ae74579d54f8f07c80658137176055ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ONEPT</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a454af139db31b2baf5f1eed7dfaf1a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IGNORED</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a632d712b1f0dce52ab1067f1e132df62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOUNDARY</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a57536ec6aa30bd6df106563486d752d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UncoupledAggregationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__UncoupledAggregationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UncoupledAggregationFactory__fwd_8hpp" name="MueLu_UncoupledAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_UncoupledAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__AggregationAlgorithmBase_8hpp" name="MueLu_AggregationAlgorithmBase.hpp" local="yes" imported="no">MueLu_AggregationAlgorithmBase.hpp</includes>
    <includes id="MueLu__OnePtAggregationAlgorithm__fwd_8hpp" name="MueLu_OnePtAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_OnePtAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__PreserveDirichletAggregationAlgorithm__fwd_8hpp" name="MueLu_PreserveDirichletAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_PreserveDirichletAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__IsolatedNodeAggregationAlgorithm__fwd_8hpp" name="MueLu_IsolatedNodeAggregationAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_IsolatedNodeAggregationAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__AggregationPhase1Algorithm__fwd_8hpp" name="MueLu_AggregationPhase1Algorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase1Algorithm_fwd.hpp</includes>
    <includes id="MueLu__AggregationPhase2aAlgorithm__fwd_8hpp" name="MueLu_AggregationPhase2aAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase2aAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__AggregationPhase2bAlgorithm__fwd_8hpp" name="MueLu_AggregationPhase2bAlgorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase2bAlgorithm_fwd.hpp</includes>
    <includes id="MueLu__AggregationPhase3Algorithm__fwd_8hpp" name="MueLu_AggregationPhase3Algorithm_fwd.hpp" local="yes" imported="no">MueLu_AggregationPhase3Algorithm_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__AmalgamationInfo__fwd_8hpp" name="MueLu_AmalgamationInfo_fwd.hpp" local="yes" imported="no">MueLu_AmalgamationInfo_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::UncoupledAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UNCOUPLEDAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__UncoupledAggregationFactory__decl_8hpp.html</anchorfile>
      <anchor>a9e1362f06dbbe17ce5cea15f6442e028</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UncoupledAggregationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__UncoupledAggregationFactory__def_8hpp</filename>
    <includes id="MueLu__UncoupledAggregationFactory__decl_8hpp" name="MueLu_UncoupledAggregationFactory_decl.hpp" local="yes" imported="no">MueLu_UncoupledAggregationFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="yes" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SET_VALID_ENTRY</name>
      <anchorfile>MueLu__UncoupledAggregationFactory__def_8hpp.html</anchorfile>
      <anchor>af6a857c25bcca4f300e01312cd6d4331</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UncoupledAggregationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__UncoupledAggregationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::UncoupledAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UNCOUPLEDAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__UncoupledAggregationFactory__fwd_8hpp.html</anchorfile>
      <anchor>a9e1362f06dbbe17ce5cea15f6442e028</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UncoupledAggregationFactory_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__UncoupledAggregationFactory__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_UncoupledAggregationFactory_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UncoupledAggregation/</path>
    <filename>MueLu__UncoupledAggregationFactory__kokkos__def_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_UncoupledAggregationFactory_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__UncoupledAggregationFactory__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_UseDefaultTypes.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__UseDefaultTypes_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_UseDefaultTypesComplex.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__UseDefaultTypesComplex_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_UserAggregationFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UserAggregation/</path>
    <filename>MueLu__UserAggregationFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__UserAggregationFactory__fwd_8hpp" name="MueLu_UserAggregationFactory_fwd.hpp" local="yes" imported="no">MueLu_UserAggregationFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Aggregates__fwd_8hpp" name="MueLu_Aggregates_fwd.hpp" local="yes" imported="no">MueLu_Aggregates_fwd.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <class kind="class">MueLu::UserAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_USERAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__UserAggregationFactory__decl_8hpp.html</anchorfile>
      <anchor>a0f3ca2e08913d04ef888084f46e16b1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UserAggregationFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Graph/UserAggregation/</path>
    <filename>MueLu__UserAggregationFactory__def_8hpp</filename>
    <includes id="MueLu__UserAggregationFactory__decl_8hpp" name="MueLu_UserAggregationFactory_decl.hpp" local="yes" imported="no">MueLu_UserAggregationFactory_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_UserAggregationFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__UserAggregationFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::UserAggregationFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_USERAGGREGATIONFACTORY_SHORT</name>
      <anchorfile>MueLu__UserAggregationFactory__fwd_8hpp.html</anchorfile>
      <anchor>a0f3ca2e08913d04ef888084f46e16b1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UserPFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/User/</path>
    <filename>MueLu__UserPFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__PerfUtils__fwd_8hpp" name="MueLu_PerfUtils_fwd.hpp" local="yes" imported="no">MueLu_PerfUtils_fwd.hpp</includes>
    <includes id="MueLu__UserPFactory__fwd_8hpp" name="MueLu_UserPFactory_fwd.hpp" local="yes" imported="no">MueLu_UserPFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__CoarseMapFactory__fwd_8hpp" name="MueLu_CoarseMapFactory_fwd.hpp" local="yes" imported="no">MueLu_CoarseMapFactory_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::UserPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_USERPFACTORY_SHORT</name>
      <anchorfile>MueLu__UserPFactory__decl_8hpp.html</anchorfile>
      <anchor>aaca89a493cbf2b96180808a56d2450a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UserPFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Transfers/User/</path>
    <filename>MueLu__UserPFactory__def_8hpp</filename>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_USERPFACTORY_SHORT</name>
      <anchorfile>MueLu__UserPFactory__def_8hpp.html</anchorfile>
      <anchor>aaca89a493cbf2b96180808a56d2450a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UserPFactory_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__UserPFactory__fwd_8hpp</filename>
    <class kind="class">MueLu::UserPFactory</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_USERPFACTORY_SHORT</name>
      <anchorfile>MueLu__UserPFactory__fwd_8hpp.html</anchorfile>
      <anchor>aaca89a493cbf2b96180808a56d2450a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UseShortNames.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__UseShortNames_8hpp</filename>
    <includes id="MueLu__UseShortNamesOrdinal_8hpp" name="MueLu_UseShortNamesOrdinal.hpp" local="yes" imported="no">MueLu_UseShortNamesOrdinal.hpp</includes>
    <includes id="MueLu__UseShortNamesScalar_8hpp" name="MueLu_UseShortNamesScalar.hpp" local="yes" imported="no">MueLu_UseShortNamesScalar.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_UseShortNamesOrdinal.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__UseShortNamesOrdinal_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_UseShortNamesScalar.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__UseShortNamesScalar_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Utilities_8cpp</filename>
    <includes id="MueLu__Utilities__def_8hpp" name="MueLu_Utilities_def.hpp" local="yes" imported="no">MueLu_Utilities_def.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>long</type>
      <name>ExtractNonSerializableData</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1b81fa817bd38bc45cfaebaeafa1210b</anchor>
      <arglist>(const Teuchos::ParameterList &amp;inList, Teuchos::ParameterList &amp;serialList, Teuchos::ParameterList &amp;nonSerialList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokenizeStringAndStripWhiteSpace</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa2e6058c0bae595f2930bf1f52b33557</anchor>
      <arglist>(const std::string &amp;stream, std::vector&lt; std::string &gt; &amp;tokenList, const char *delimChars)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsParamMuemexVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a02541672e606249c8598820d5a1e9e59</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Utilities__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <class kind="class">MueLu::Utilities</class>
    <class kind="class">MueLu::Utilities&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIES_SHORT</name>
      <anchorfile>MueLu__Utilities__decl_8hpp.html</anchorfile>
      <anchor>a33461a743a340e8498e7371dd31e70b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad08acbb17a884d4b3f15f2aea31ae00b</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>EpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af944843a77e6c2035b97f8235e68405d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>EpetraMultiVector_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7e7a26ed6cbb86fe5c468e9f9a4defb6</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>TpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2bba21b1bf37edecc31a3301abe0418e</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;Atpetra)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>TpetraCrs_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5f958e78301a32272070b478e0bb46b2</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt; &amp;Vtpetra)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>ExtractNonSerializableData</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1b81fa817bd38bc45cfaebaeafa1210b</anchor>
      <arglist>(const Teuchos::ParameterList &amp;inList, Teuchos::ParameterList &amp;serialList, Teuchos::ParameterList &amp;nonSerialList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokenizeStringAndStripWhiteSpace</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa2e6058c0bae595f2930bf1f52b33557</anchor>
      <arglist>(const std::string &amp;stream, std::vector&lt; std::string &gt; &amp;tokenList, const char *delimChars)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsParamMuemexVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a02541672e606249c8598820d5a1e9e59</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>EpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab7da282d8f66e6a2e9c9ff32e80435c7</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>EpetraMultiVector_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a77287bdcd926ae958616eafd6e1a0c35</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>TpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1bdec1074f6292471409d25e2e074be0</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Atpetra)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>TpetraMultiVector_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a42c07cadfff061386864fef2da43f69f</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Vtpetra)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adffcd9a4c5dd0a4b2cbf6c8e77f27e6b</anchor>
      <arglist>(const T &amp;what)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Utilities__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Utilities__decl_8hpp" name="MueLu_Utilities_decl.hpp" local="no" imported="no">MueLu_Utilities_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIES_SHORT</name>
      <anchorfile>MueLu__Utilities__def_8hpp.html</anchorfile>
      <anchor>a33461a743a340e8498e7371dd31e70b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad08acbb17a884d4b3f15f2aea31ae00b</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Utilities__fwd_8hpp</filename>
    <class kind="class">MueLu::Utilities</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIES_SHORT</name>
      <anchorfile>MueLu__Utilities__fwd_8hpp.html</anchorfile>
      <anchor>a33461a743a340e8498e7371dd31e70b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities_kokkos_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Utilities__kokkos__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities_kokkos_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__Utilities__kokkos__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Utilities__kokkos__decl_8hpp" name="MueLu_Utilities_kokkos_decl.hpp" local="no" imported="no">MueLu_Utilities_kokkos_decl.hpp</includes>
    <class kind="class">MueLu::DetectDirichletFunctor</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIES_KOKKOS_SHORT</name>
      <anchorfile>MueLu__Utilities__kokkos__def_8hpp.html</anchorfile>
      <anchor>ae323d9c31246e659e112e54b5bfa3dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Kokkos::View&lt; const bool *, typename NO::device_type &gt;</type>
      <name>DetectDirichletRows</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a844fdb19a143e351602b1baa8bf8889b</anchor>
      <arglist>(const Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &amp;A, const typename Teuchos::ScalarTraits&lt; SC &gt;::magnitudeType &amp;tol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Utilities_kokkos_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Utilities__kokkos__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>MueLu_UtilitiesBase_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__UtilitiesBase__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <class kind="class">MueLu::UtilitiesBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MueLu_sumAll</name>
      <anchorfile>MueLu__UtilitiesBase__decl_8hpp.html</anchorfile>
      <anchor>a4637910b75a550b9d9a5711f357d27cc</anchor>
      <arglist>(rcpComm, in, out)                                                                            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MueLu_minAll</name>
      <anchorfile>MueLu__UtilitiesBase__decl_8hpp.html</anchorfile>
      <anchor>a4736d9fbf84b81fddae5c7637cb1a59d</anchor>
      <arglist>(rcpComm, in, out)                                                                            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MueLu_maxAll</name>
      <anchorfile>MueLu__UtilitiesBase__decl_8hpp.html</anchorfile>
      <anchor>a45fe81ee7ee9192523d395db40e0937c</anchor>
      <arglist>(rcpComm, in, out)                                                                            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIESBASE_SHORT</name>
      <anchorfile>MueLu__UtilitiesBase__decl_8hpp.html</anchorfile>
      <anchor>a035527a19da32e9912821031b6c60148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UtilitiesBase_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__UtilitiesBase__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UtilitiesBase__decl_8hpp" name="MueLu_UtilitiesBase_decl.hpp" local="yes" imported="no">MueLu_UtilitiesBase_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIESBASE_SHORT</name>
      <anchorfile>MueLu__UtilitiesBase__def_8hpp.html</anchorfile>
      <anchor>a035527a19da32e9912821031b6c60148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UtilitiesBase_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__UtilitiesBase__fwd_8hpp</filename>
    <class kind="class">MueLu::UtilitiesBase</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UTILITIESBASE_SHORT</name>
      <anchorfile>MueLu__UtilitiesBase__fwd_8hpp.html</anchorfile>
      <anchor>a035527a19da32e9912821031b6c60148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UzawaSmoother_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__UzawaSmoother__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UzawaSmoother__fwd_8hpp" name="MueLu_UzawaSmoother_fwd.hpp" local="yes" imported="no">MueLu_UzawaSmoother_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__FactoryManagerBase__fwd_8hpp" name="MueLu_FactoryManagerBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryManagerBase_fwd.hpp</includes>
    <includes id="MueLu__SmootherBase__fwd_8hpp" name="MueLu_SmootherBase_fwd.hpp" local="yes" imported="no">MueLu_SmootherBase_fwd.hpp</includes>
    <includes id="MueLu__SubBlockAFactory__fwd_8hpp" name="MueLu_SubBlockAFactory_fwd.hpp" local="yes" imported="no">MueLu_SubBlockAFactory_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__SchurComplementFactory__fwd_8hpp" name="MueLu_SchurComplementFactory_fwd.hpp" local="yes" imported="no">MueLu_SchurComplementFactory_fwd.hpp</includes>
    <includes id="MueLu__DirectSolver__fwd_8hpp" name="MueLu_DirectSolver_fwd.hpp" local="yes" imported="no">MueLu_DirectSolver_fwd.hpp</includes>
    <includes id="MueLu__SmootherFactory__fwd_8hpp" name="MueLu_SmootherFactory_fwd.hpp" local="yes" imported="no">MueLu_SmootherFactory_fwd.hpp</includes>
    <includes id="MueLu__FactoryManager__fwd_8hpp" name="MueLu_FactoryManager_fwd.hpp" local="yes" imported="no">MueLu_FactoryManager_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::UzawaSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UZAWASMOOTHER_SHORT</name>
      <anchorfile>MueLu__UzawaSmoother__decl_8hpp.html</anchorfile>
      <anchor>aae417e5c32ae73570bc9bb2438f6a783</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_UzawaSmoother_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Smoothers/BlockedSmoothers/</path>
    <filename>MueLu__UzawaSmoother__def_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__UzawaSmoother__decl_8hpp" name="MueLu_UzawaSmoother_decl.hpp" local="yes" imported="no">MueLu_UzawaSmoother_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <includes id="MueLu__SmootherBase_8hpp" name="MueLu_SmootherBase.hpp" local="yes" imported="no">MueLu_SmootherBase.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_UzawaSmoother_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__UzawaSmoother__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::UzawaSmoother</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_UZAWASMOOTHER_SHORT</name>
      <anchorfile>MueLu__UzawaSmoother__fwd_8hpp.html</anchorfile>
      <anchor>aae417e5c32ae73570bc9bb2438f6a783</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_VariableContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__VariableContainer_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__KeepType_8hpp" name="MueLu_KeepType.hpp" local="yes" imported="no">MueLu_KeepType.hpp</includes>
    <class kind="class">MueLu::VariableContainer</class>
    <class kind="class">MueLu::VariableContainer::DataBase</class>
    <class kind="class">MueLu::VariableContainer::Data</class>
    <class kind="struct">MueLu::VariableContainer::Getter</class>
    <class kind="struct">MueLu::VariableContainer::Getter&lt; Teuchos::RCP&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_VariableContainer_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__VariableContainer__fwd_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_VARIABLECONTAINER_SHORT</name>
      <anchorfile>MueLu__VariableContainer__fwd_8hpp.html</anchorfile>
      <anchor>aaa9b0ad0f87255d6df8374c273e1be29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_VerboseObject.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__VerboseObject_8cpp</filename>
    <includes id="MueLu__VerboseObject_8hpp" name="MueLu_VerboseObject.hpp" local="yes" imported="no">MueLu_VerboseObject.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_VerboseObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__VerboseObject_8hpp</filename>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <class kind="class">MueLu::VerboseObject</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_VERBOSECLASS_SHORT</name>
      <anchorfile>MueLu__VerboseObject_8hpp.html</anchorfile>
      <anchor>ae4395b2e3c5eafa86a32e7d6a404bdb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_VerbosityLevel.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__VerbosityLevel_8cpp</filename>
    <includes id="MueLu__VerbosityLevel_8hpp" name="MueLu_VerbosityLevel.hpp" local="yes" imported="no">MueLu_VerbosityLevel.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>VerbLevel</type>
      <name>toMueLuVerbLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aea20491ed7cacf9cdab417be4719702c</anchor>
      <arglist>(const Teuchos::EVerbosityLevel verbLevel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_VerbosityLevel.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/MueCentral/</path>
    <filename>MueLu__VerbosityLevel_8hpp</filename>
    <namespace>MueLu</namespace>
    <member kind="typedef">
      <type>int</type>
      <name>VerbLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0265bde4f2d409b3d8414b59a20a5168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MsgType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Errors</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa70ef0e1234e22dd76b09217202d3595c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa1804a250088d64143eda40094c28d224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings00</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa0266f6d174e7209b88113732c803373e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faed1560bbde7be732234dc50d94e2a4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfWarnings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fabac4731693d0c773dfdc9d60ed936327</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Runtime0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fabcf3f2fd68507cefed497403ab07a54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Runtime1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fac0a17b52bf9e5c5f14f0d3bdbd3ba637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RuntimeTimings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa3c7782b54618266152c0ddd502c9cf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoTimeReport</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa9781a1a04c6263ba001301e0ed0496af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf380d18f674872fe2bd4ca526f51bbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf9a2394955219647f1b426bf2d026ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf487f4b7e739a4d39611284e8f24f05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa83a3214cf3b7416fa80a3de3d1965e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics2</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa18d960e5bd7364c1ea53ae67f5891ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timings0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faaa4d4c6c2abe574fe7222c78e3cc89db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timings1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa0c18ff65eb02d5002ba1c674c5d0efd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimingsByLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faebba10f17b7058eaeca4978a313e72c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>External</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa8844d4aee6f17d6329d46d2f8c0653b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Debug</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa6a391ac1916a6d1f5e3b952fc5e248b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Test</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fae3bcec1c3c42d6334f6e4e1c76312075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa5d2457d01820d3c019842442c4ed9d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Runtime</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa90f4dae353b7535917273458e0bddf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fac9ba86044b49a2755530877e446b34ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1facf0a2cc000c9e94c7c637c3c53440716</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faeed6207041b4d12935e395dcf691d725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fab8c8aa4808f7b61fa47e6d96d08cd895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Low</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa1f2a7ebce260fd64b5fcc4849d6f1496</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Medium</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faa754ef39fda0cd9ffb86ec8261051f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>High</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fadc14d17962743ba8a03918e9724d4559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Extreme</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fad44d3836eab1bdc92477d518ec18ada7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Default</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa47815c062d008efd5aa66650a143824e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotSpecified</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf9652e7be634b8627e5b736c62456991</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>VerbLevel</type>
      <name>toMueLuVerbLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aea20491ed7cacf9cdab417be4719702c</anchor>
      <arglist>(const Teuchos::EVerbosityLevel verbLevel)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Version.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Headers/</path>
    <filename>MueLu__Version_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <namespace>MueLu</namespace>
    <member kind="function">
      <type>std::string const</type>
      <name>Version</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab643586a83060a7cf1a8d72e3f61ae14</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_VisualizationHelpers_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__VisualizationHelpers__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__VisualizationHelpers__fwd_8hpp" name="MueLu_VisualizationHelpers_fwd.hpp" local="yes" imported="no">MueLu_VisualizationHelpers_fwd.hpp</includes>
    <includes id="MueLu__GraphBase_8hpp" name="MueLu_GraphBase.hpp" local="yes" imported="no">MueLu_GraphBase.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::myTriangle</class>
    <class kind="class">MueLu::myVec3</class>
    <class kind="class">MueLu::myVec2</class>
    <class kind="class">MueLu::VisualizationHelpers</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_VISUALIZATIONHELPERS_SHORT</name>
      <anchorfile>MueLu__VisualizationHelpers__decl_8hpp.html</anchorfile>
      <anchor>a3a7b0bcfeba379014c7c11f319be5e12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_VisualizationHelpers_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/</path>
    <filename>MueLu__VisualizationHelpers__def_8hpp</filename>
    <includes id="MueLu__VisualizationHelpers__decl_8hpp" name="MueLu_VisualizationHelpers_decl.hpp" local="yes" imported="no">MueLu_VisualizationHelpers_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_VisualizationHelpers_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__VisualizationHelpers__fwd_8hpp</filename>
    <class kind="class">MueLu::VisualizationHelpers</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_VISUALIZATIONHELPERS_SHORT</name>
      <anchorfile>MueLu__VisualizationHelpers__fwd_8hpp.html</anchorfile>
      <anchor>a3a7b0bcfeba379014c7c11f319be5e12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_XpetraOperator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/xpetra/</path>
    <filename>MueLu__XpetraOperator__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Hierarchy__decl_8hpp" name="MueLu_Hierarchy_decl.hpp" local="yes" imported="no">MueLu_Hierarchy_decl.hpp</includes>
    <class kind="class">MueLu::XpetraOperator</class>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_YamlParser_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/YamlParameterList/</path>
    <filename>MueLu__YamlParser__decl_8hpp</filename>
    <namespace>MueLu</namespace>
    <namespace>MueLu::YAMLParameterList</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAKE_EXCEPTION_TYPE</name>
      <anchorfile>MueLu__YamlParser__decl_8hpp.html</anchorfile>
      <anchor>aa1b0ea8cf8219029a0600130075ba46f</anchor>
      <arglist>(Name)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::ParameterList::ConstIterator</type>
      <name>PLIter</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aa8d79f1918f5b6ca2c9bc8c3cefe84d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlFile</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abbf23758c06ada4403aa379cfd7d9d68</anchor>
      <arglist>(const std::string &amp;yamlFileName, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58cc28b7c2d448646150bebc99f20570</anchor>
      <arglist>(const std::string &amp;yamlData, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlCString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7de881c813847b978229a3e6086d1bad</anchor>
      <arglist>(const char *const yamlData, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getParametersFromYamlFile</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6fdef9a410d0cbb973e637cd9d19fa41</anchor>
      <arglist>(const std::string &amp;yamlFileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlFileAndBroadcast</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a23f5e1f5c2c5c255cb4808d1486a0653</anchor>
      <arglist>(const std::string &amp;yamlFileName, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, const Teuchos::Comm&lt; int &gt; &amp;comm, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertXmlToYaml</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a57a40ce1f14ef811b5c6637f9baf479a</anchor>
      <arglist>(const std::string &amp;xmlFileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertXmlToYaml</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aacf3fbc6f88b8256a35030de222fd44a</anchor>
      <arglist>(const std::string &amp;xmlFileName, const std::string &amp;yamlFileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveSameValuesUnordered</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abaf0d1bec7a1861a965b295ae79a824c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;lhs, const Teuchos::ParameterList &amp;rhs, bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlText</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab4ca6e6373ed544a074f2b09df930468</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlText</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>af4eda3847c9e64482aac681e6d5530d0</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlFile</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a320a6624244f930fef01eb4d695baf46</anchor>
      <arglist>(const std::string &amp;yamlFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeYamlFile</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aa18d31fa840b4a8d08656272d376e382</anchor>
      <arglist>(const std::string &amp;yamlFile, Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>readParams</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a1b0b6fe665fa0caa031e1cfdddc173fe</anchor>
      <arglist>(std::vector&lt; YAML::Node &gt; &amp;lists)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMapNode</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab3b77e8413521ea3ac8fb3c2af8c67a4</anchor>
      <arglist>(const YAML::Node &amp;node, Teuchos::ParameterList &amp;parent, bool topLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processKeyValueNode</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a08e2bd7677f4dbcc8bf50fc8c41b4a8a</anchor>
      <arglist>(const std::string &amp;key, const YAML::Node &amp;node, Teuchos::ParameterList &amp;parent, bool topLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; T &gt;</type>
      <name>getYamlArray</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aef7ea8f59bc69d1caa998b2e49b21599</anchor>
      <arglist>(const YAML::Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeParameterList</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a89178df6a3a704ab0c0c2439d2925fe1</anchor>
      <arglist>(Teuchos::ParameterList &amp;pl, std::ofstream &amp;yaml, int indentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeParameter</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a5d0d2d9070ddb5bccb0715d68557fc07</anchor>
      <arglist>(const std::string &amp;paramName, const Teuchos::ParameterEntry &amp;entry, std::ofstream &amp;yaml, int indentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generalWriteString</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab5986cb49c0f4cf048b6d2262fc83f97</anchor>
      <arglist>(const std::string &amp;str, std::ofstream &amp;yaml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generalWriteDouble</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a200517d706cafbc5631be07e7c366270</anchor>
      <arglist>(double d, std::ofstream &amp;yaml)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stringNeedsQuotes</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>acb688f0983df254b94041d6228b15f1b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_YamlParser_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Interface/YamlParameterList/</path>
    <filename>MueLu__YamlParser__def_8hpp</filename>
    <includes id="MueLu__YamlParser__decl_8hpp" name="MueLu_YamlParser_decl.hpp" local="yes" imported="no">MueLu_YamlParser_decl.hpp</includes>
    <namespace>MueLu</namespace>
    <namespace>MueLu::YAMLParameterList</namespace>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlFile</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abbf23758c06ada4403aa379cfd7d9d68</anchor>
      <arglist>(const std::string &amp;yamlFileName, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlCString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7de881c813847b978229a3e6086d1bad</anchor>
      <arglist>(const char *const yamlData, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58cc28b7c2d448646150bebc99f20570</anchor>
      <arglist>(const std::string &amp;yamlData, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getParametersFromYamlFile</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6fdef9a410d0cbb973e637cd9d19fa41</anchor>
      <arglist>(const std::string &amp;yamlFileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlFileAndBroadcast</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a23f5e1f5c2c5c255cb4808d1486a0653</anchor>
      <arglist>(const std::string &amp;yamlFileName, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, const Teuchos::Comm&lt; int &gt; &amp;comm, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertXmlToYaml</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a57a40ce1f14ef811b5c6637f9baf479a</anchor>
      <arglist>(const std::string &amp;xmlFileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertXmlToYaml</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aacf3fbc6f88b8256a35030de222fd44a</anchor>
      <arglist>(const std::string &amp;xmlFileName, const std::string &amp;yamlFileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveSameValuesUnordered</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abaf0d1bec7a1861a965b295ae79a824c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;lhs, const Teuchos::ParameterList &amp;rhs, bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlText</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab4ca6e6373ed544a074f2b09df930468</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlText</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>af4eda3847c9e64482aac681e6d5530d0</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlFile</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a320a6624244f930fef01eb4d695baf46</anchor>
      <arglist>(const std::string &amp;yamlFile)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>readParams</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a1b0b6fe665fa0caa031e1cfdddc173fe</anchor>
      <arglist>(std::vector&lt; YAML::Node &gt; &amp;lists)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMapNode</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab3b77e8413521ea3ac8fb3c2af8c67a4</anchor>
      <arglist>(const YAML::Node &amp;node, Teuchos::ParameterList &amp;parent, bool topLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processKeyValueNode</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a08e2bd7677f4dbcc8bf50fc8c41b4a8a</anchor>
      <arglist>(const std::string &amp;key, const YAML::Node &amp;node, Teuchos::ParameterList &amp;parent, bool topLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; T &gt;</type>
      <name>getYamlArray</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aef7ea8f59bc69d1caa998b2e49b21599</anchor>
      <arglist>(const YAML::Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeYamlFile</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aa18d31fa840b4a8d08656272d376e382</anchor>
      <arglist>(const std::string &amp;yamlFile, Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeParameterList</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a89178df6a3a704ab0c0c2439d2925fe1</anchor>
      <arglist>(Teuchos::ParameterList &amp;pl, std::ofstream &amp;yaml, int indentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeParameter</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a5d0d2d9070ddb5bccb0715d68557fc07</anchor>
      <arglist>(const std::string &amp;paramName, const Teuchos::ParameterEntry &amp;entry, std::ofstream &amp;yaml, int indentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generalWriteString</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab5986cb49c0f4cf048b6d2262fc83f97</anchor>
      <arglist>(const std::string &amp;str, std::ofstream &amp;yaml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generalWriteDouble</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a200517d706cafbc5631be07e7c366270</anchor>
      <arglist>(double d, std::ofstream &amp;yaml)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stringNeedsQuotes</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>acb688f0983df254b94041d6228b15f1b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Zoltan2Interface_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__Zoltan2Interface__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__Zoltan2Interface__fwd_8hpp" name="MueLu_Zoltan2Interface_fwd.hpp" local="yes" imported="no">MueLu_Zoltan2Interface_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::Zoltan2Interface</class>
    <class kind="class">MueLu::Zoltan2Interface&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ZOLTAN2INTERFACE_SHORT</name>
      <anchorfile>MueLu__Zoltan2Interface__decl_8hpp.html</anchorfile>
      <anchor>ae0208249ab3856591b1a9e88adc0e51b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_Zoltan2Interface_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__Zoltan2Interface__def_8hpp</filename>
    <includes id="MueLu__Zoltan2Interface__decl_8hpp" name="MueLu_Zoltan2Interface_decl.hpp" local="yes" imported="no">MueLu_Zoltan2Interface_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_Zoltan2Interface_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__Zoltan2Interface__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::Zoltan2Interface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ZOLTAN2INTERFACE_SHORT</name>
      <anchorfile>MueLu__Zoltan2Interface__fwd_8hpp.html</anchorfile>
      <anchor>ae0208249ab3856591b1a9e88adc0e51b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ZoltanInterface_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__ZoltanInterface__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="MueLu__SingleLevelFactoryBase_8hpp" name="MueLu_SingleLevelFactoryBase.hpp" local="yes" imported="no">MueLu_SingleLevelFactoryBase.hpp</includes>
    <includes id="MueLu__ZoltanInterface__fwd_8hpp" name="MueLu_ZoltanInterface_fwd.hpp" local="yes" imported="no">MueLu_ZoltanInterface_fwd.hpp</includes>
    <includes id="MueLu__Level__fwd_8hpp" name="MueLu_Level_fwd.hpp" local="yes" imported="no">MueLu_Level_fwd.hpp</includes>
    <includes id="MueLu__FactoryBase__fwd_8hpp" name="MueLu_FactoryBase_fwd.hpp" local="yes" imported="no">MueLu_FactoryBase_fwd.hpp</includes>
    <includes id="MueLu__Utilities__fwd_8hpp" name="MueLu_Utilities_fwd.hpp" local="yes" imported="no">MueLu_Utilities_fwd.hpp</includes>
    <includes id="MueLu__UseShortNames_8hpp" name="MueLu_UseShortNames.hpp" local="yes" imported="no">MueLu_UseShortNames.hpp</includes>
    <class kind="class">MueLu::ZoltanInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ZOLTANINTERFACE_SHORT</name>
      <anchorfile>MueLu__ZoltanInterface__decl_8hpp.html</anchorfile>
      <anchor>ad146584887fd295c6624adbb17332b57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MueLu_ZoltanInterface_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Rebalancing/</path>
    <filename>MueLu__ZoltanInterface__def_8hpp</filename>
    <includes id="MueLu__ZoltanInterface__decl_8hpp" name="MueLu_ZoltanInterface_decl.hpp" local="yes" imported="no">MueLu_ZoltanInterface_decl.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <includes id="MueLu__Exceptions_8hpp" name="MueLu_Exceptions.hpp" local="yes" imported="no">MueLu_Exceptions.hpp</includes>
    <includes id="MueLu__Monitor_8hpp" name="MueLu_Monitor.hpp" local="yes" imported="no">MueLu_Monitor.hpp</includes>
    <namespace>MueLu</namespace>
  </compound>
  <compound kind="file">
    <name>MueLu_ZoltanInterface_fwd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/src/Utils/ForwardDeclaration/</path>
    <filename>MueLu__ZoltanInterface__fwd_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <class kind="class">MueLu::ZoltanInterface</class>
    <namespace>MueLu</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_ZOLTANINTERFACE_SHORT</name>
      <anchorfile>MueLu__ZoltanInterface__fwd_8hpp.html</anchorfile>
      <anchor>ad146584887fd295c6624adbb17332b57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Stratimikos_MueLuHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Stratimikos__MueLuHelpers_8cpp</filename>
    <includes id="Stratimikos__MueLuHelpers_8hpp" name="Stratimikos_MueLuHelpers.hpp" local="yes" imported="no">Stratimikos_MueLuHelpers.hpp</includes>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="yes" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="Thyra__MueLuPreconditionerFactory_8hpp" name="Thyra_MueLuPreconditionerFactory.hpp" local="yes" imported="no">Thyra_MueLuPreconditionerFactory.hpp</includes>
    <includes id="Thyra__MueLuTpetraQ2Q1PreconditionerFactory_8hpp" name="Thyra_MueLuTpetraQ2Q1PreconditionerFactory.hpp" local="yes" imported="no">Thyra_MueLuTpetraQ2Q1PreconditionerFactory.hpp</includes>
    <namespace>Stratimikos</namespace>
  </compound>
  <compound kind="file">
    <name>Stratimikos_MueLuHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Stratimikos__MueLuHelpers_8hpp</filename>
    <includes id="Thyra__MueLuPreconditionerFactory_8hpp" name="Thyra_MueLuPreconditionerFactory.hpp" local="yes" imported="no">Thyra_MueLuPreconditionerFactory.hpp</includes>
    <includes id="Thyra__MueLuTpetraQ2Q1PreconditionerFactory_8hpp" name="Thyra_MueLuTpetraQ2Q1PreconditionerFactory.hpp" local="yes" imported="no">Thyra_MueLuTpetraQ2Q1PreconditionerFactory.hpp</includes>
    <namespace>Stratimikos</namespace>
    <member kind="function">
      <type>void</type>
      <name>enableMueLu</name>
      <anchorfile>namespaceStratimikos.html</anchorfile>
      <anchor>ac191b5b3282c82bc6876dafd5190953b</anchor>
      <arglist>(DefaultLinearSolverBuilder &amp;builder, const std::string &amp;stratName=&quot;MueLu&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableMueLuTpetraQ2Q1</name>
      <anchorfile>namespaceStratimikos.html</anchorfile>
      <anchor>a44bf7da5f2151ec70cd877b05362ccc6</anchor>
      <arglist>(DefaultLinearSolverBuilder &amp;builder, const std::string &amp;stratName=&quot;MueLu&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Thyra_MueLuPreconditionerFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__MueLuPreconditionerFactory_8hpp</filename>
    <includes id="Thyra__MueLuPreconditionerFactory__decl_8hpp" name="Thyra_MueLuPreconditionerFactory_decl.hpp" local="yes" imported="no">Thyra_MueLuPreconditionerFactory_decl.hpp</includes>
    <includes id="Thyra__MueLuPreconditionerFactory__def_8hpp" name="Thyra_MueLuPreconditionerFactory_def.hpp" local="yes" imported="no">Thyra_MueLuPreconditionerFactory_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Thyra_MueLuPreconditionerFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__MueLuPreconditionerFactory__decl_8hpp</filename>
    <includes id="MueLu__ConfigDefs_8hpp" name="MueLu_ConfigDefs.hpp" local="no" imported="no">MueLu_ConfigDefs.hpp</includes>
    <includes id="Thyra__XpetraLinearOp_8hpp" name="Thyra_XpetraLinearOp.hpp" local="yes" imported="no">Thyra_XpetraLinearOp.hpp</includes>
    <includes id="MueLu__HierarchyManager_8hpp" name="MueLu_HierarchyManager.hpp" local="no" imported="no">MueLu_HierarchyManager.hpp</includes>
    <includes id="MueLu__MasterList_8hpp" name="MueLu_MasterList.hpp" local="no" imported="no">MueLu_MasterList.hpp</includes>
    <includes id="MueLu__XpetraOperator__decl_8hpp" name="MueLu_XpetraOperator_decl.hpp" local="no" imported="no">MueLu_XpetraOperator_decl.hpp</includes>
    <includes id="MueLu__CreateXpetraPreconditioner_8hpp" name="MueLu_CreateXpetraPreconditioner.hpp" local="no" imported="no">MueLu_CreateXpetraPreconditioner.hpp</includes>
    <includes id="MueLu__EpetraOperator_8hpp" name="MueLu_EpetraOperator.hpp" local="no" imported="no">MueLu_EpetraOperator.hpp</includes>
    <class kind="class">Thyra::MueLuPreconditionerFactory</class>
    <class kind="class">Thyra::MueLuPreconditionerFactory&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <namespace>Thyra</namespace>
  </compound>
  <compound kind="file">
    <name>Thyra_MueLuPreconditionerFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__MueLuPreconditionerFactory__def_8hpp</filename>
    <includes id="Thyra__MueLuPreconditionerFactory__decl_8hpp" name="Thyra_MueLuPreconditionerFactory_decl.hpp" local="yes" imported="no">Thyra_MueLuPreconditionerFactory_decl.hpp</includes>
    <namespace>Thyra</namespace>
  </compound>
  <compound kind="file">
    <name>Thyra_MueLuTpetraQ2Q1PreconditionerFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__MueLuTpetraQ2Q1PreconditionerFactory_8hpp</filename>
    <includes id="Thyra__MueLuTpetraQ2Q1PreconditionerFactory__decl_8hpp" name="Thyra_MueLuTpetraQ2Q1PreconditionerFactory_decl.hpp" local="yes" imported="no">Thyra_MueLuTpetraQ2Q1PreconditionerFactory_decl.hpp</includes>
    <includes id="Thyra__MueLuTpetraQ2Q1PreconditionerFactory__def_8hpp" name="Thyra_MueLuTpetraQ2Q1PreconditionerFactory_def.hpp" local="yes" imported="no">Thyra_MueLuTpetraQ2Q1PreconditionerFactory_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Thyra_MueLuTpetraQ2Q1PreconditionerFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__MueLuTpetraQ2Q1PreconditionerFactory__decl_8hpp</filename>
    <includes id="MueLu__FactoryBase_8hpp" name="MueLu_FactoryBase.hpp" local="yes" imported="no">MueLu_FactoryBase.hpp</includes>
    <class kind="class">Thyra::MueLuTpetraQ2Q1PreconditionerFactory</class>
    <namespace>Thyra</namespace>
  </compound>
  <compound kind="file">
    <name>Thyra_MueLuTpetraQ2Q1PreconditionerFactory_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__MueLuTpetraQ2Q1PreconditionerFactory__def_8hpp</filename>
    <includes id="Thyra__MueLuTpetraQ2Q1PreconditionerFactory__decl_8hpp" name="Thyra_MueLuTpetraQ2Q1PreconditionerFactory_decl.hpp" local="yes" imported="no">Thyra_MueLuTpetraQ2Q1PreconditionerFactory_decl.hpp</includes>
    <includes id="MueLu_8hpp" name="MueLu.hpp" local="yes" imported="no">MueLu.hpp</includes>
    <includes id="MueLu__BaseClass_8hpp" name="MueLu_BaseClass.hpp" local="yes" imported="no">MueLu_BaseClass.hpp</includes>
    <includes id="MueLu__CreateTpetraPreconditioner_8hpp" name="MueLu_CreateTpetraPreconditioner.hpp" local="yes" imported="no">MueLu_CreateTpetraPreconditioner.hpp</includes>
    <includes id="MueLu__Level_8hpp" name="MueLu_Level.hpp" local="yes" imported="no">MueLu_Level.hpp</includes>
    <namespace>Thyra</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MUELU_GPD</name>
      <anchorfile>Thyra__MueLuTpetraQ2Q1PreconditionerFactory__def_8hpp.html</anchorfile>
      <anchor>a265e7d3b084349d3bff763a7c878c95f</anchor>
      <arglist>(name, type, defaultValue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Thyra_XpetraLinearOp.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__XpetraLinearOp_8hpp</filename>
    <includes id="Thyra__XpetraLinearOp__decl_8hpp" name="Thyra_XpetraLinearOp_decl.hpp" local="yes" imported="no">Thyra_XpetraLinearOp_decl.hpp</includes>
    <includes id="Thyra__XpetraLinearOp__def_8hpp" name="Thyra_XpetraLinearOp_def.hpp" local="yes" imported="no">Thyra_XpetraLinearOp_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Thyra_XpetraLinearOp_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__XpetraLinearOp__decl_8hpp</filename>
    <class kind="class">Thyra::XpetraLinearOp</class>
    <namespace>Thyra</namespace>
  </compound>
  <compound kind="file">
    <name>Thyra_XpetraLinearOp_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/muelu/adapters/stratimikos/</path>
    <filename>Thyra__XpetraLinearOp__def_8hpp</filename>
    <includes id="Thyra__XpetraLinearOp__decl_8hpp" name="Thyra_XpetraLinearOp_decl.hpp" local="yes" imported="no">Thyra_XpetraLinearOp_decl.hpp</includes>
    <includes id="MueLu__XpetraOperator__decl_8hpp" name="MueLu_XpetraOperator_decl.hpp" local="yes" imported="no">MueLu_XpetraOperator_decl.hpp</includes>
    <namespace>Thyra</namespace>
  </compound>
  <compound kind="class">
    <name>MueLu::AdaptiveSaMLParameterListInterpreter</name>
    <filename>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::HierarchyManager</base>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupInitHierarchy</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a8f5fd8bacc89d8f0f0369b9fd0375163</anchor>
      <arglist>(Hierarchy &amp;H) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddInitFactoryManager</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a1a81ee8de256b0b743d1c076e70f0a66</anchor>
      <arglist>(int startLevel, int numDesiredLevel, RCP&lt; FactoryManagerBase &gt; manager)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; FactoryManagerBase &gt;</type>
      <name>InitLvlMngr</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>aa54453bb575f875b628fa70aed2c4e5c</anchor>
      <arglist>(int levelID, int lastLevelID) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nullspaceDim_</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a402a0e29aa98cf5423f14475c919ba4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>nullspace_</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>ad1831a7611e9b983de93e4f79808557e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bExportAggregates_</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>afae0275c50f3743e2a513ef49735caeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; FactoryBase &gt; &gt;</type>
      <name>TransferFacts_</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a009d61271d91352970fb51ac6cb5ef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; FactoryManagerBase &gt; &gt;</type>
      <name>init_levelManagers_</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>acb810845bb2f48cb5ea6982ec46ba865</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AdaptiveSaMLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>af008199764ecc390daf49b1c9f662107</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AdaptiveSaMLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>ab19fabfb8ee01afe3b5764460f1bb1af</anchor>
      <arglist>(Teuchos::ParameterList &amp;paramList, std::vector&lt; RCP&lt; FactoryBase &gt; &gt; factoryList=std::vector&lt; RCP&lt; FactoryBase &gt; &gt;(0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AdaptiveSaMLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a3421693598f76e1bdcde302da252ba7e</anchor>
      <arglist>(const std::string &amp;xmlFileName, std::vector&lt; RCP&lt; FactoryBase &gt; &gt; factoryList=std::vector&lt; RCP&lt; FactoryBase &gt; &gt;(0))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AdaptiveSaMLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a5e29a951b0e6e7ac282e543128d50e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a1f5f5e22f8a9de6541239dac3e77bb64</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupHierarchy</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>aa61b3d1d5d198718ae6d2d90cf288090</anchor>
      <arglist>(Hierarchy &amp;H) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTransferFactory</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>adbf1cfe0d7a936f1da2775affd23cc79</anchor>
      <arglist>(const RCP&lt; FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumTransferFactories</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>aac92a110d3d5862c6bb51ef35c00c46b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>blksize_</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>a841dcee5a6254a0bf48911d57e2b282e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupOperator</name>
      <anchorfile>classMueLu_1_1AdaptiveSaMLParameterListInterpreter.html</anchorfile>
      <anchor>ae875e61d97f991551a798417ac4e07b7</anchor>
      <arglist>(Operator &amp;Op) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AdaptiveSAMLParameterListInterpreter</name>
    <filename>classAdaptiveSAMLParameterListInterpreter.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::AdvSmootherPrototype</name>
    <filename>classMueLu_1_1AdvSmootherPrototype.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1AdvSmootherPrototype.html</anchorfile>
      <anchor>a5497579644acb001772494b638b562c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AdvSmootherPrototype</name>
      <anchorfile>classMueLu_1_1AdvSmootherPrototype.html</anchorfile>
      <anchor>afe84758bd98944c310f0d60dad4f325a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AdvSmootherPrototype</name>
      <anchorfile>classMueLu_1_1AdvSmootherPrototype.html</anchorfile>
      <anchor>acac573e56d7e686148f20d1d144cd971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CopyParameters</name>
      <anchorfile>classMueLu_1_1AdvSmootherPrototype.html</anchorfile>
      <anchor>aaa1d1885f65f8c8c24f4e51d00570965</anchor>
      <arglist>(const AdvSmootherPrototype &amp;smootherPrototype)=0</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetType</name>
      <anchorfile>classMueLu_1_1AdvSmootherPrototype.html</anchorfile>
      <anchor>a5c20e26b67ac862b85dece631bc899e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetType</name>
      <anchorfile>classMueLu_1_1AdvSmootherPrototype.html</anchorfile>
      <anchor>a029f82f3bb13e3a404f2b12e54f115cf</anchor>
      <arglist>(std::string &amp;type)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Aggregates</name>
    <filename>classMueLu_1_1Aggregates.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>Aggregates</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a2b430ca7e2c639dcc7999bf737408f05</anchor>
      <arglist>(const GraphBase &amp;graph)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Aggregates</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a0271614786a26abcf5ef119f159aebb3</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;map)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Aggregates</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>aed80de9ddeb023879da45647c79b3070</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LO</type>
      <name>GetNumAggregates</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>ab28c429349dcd73b322cb6bcd4d012d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNumAggregates</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>afa48a84f77cc6b9fdd78c59fc2106f26</anchor>
      <arglist>(LO nAggregates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AggregatesCrossProcessors</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a67346288aad23de38a67d84fee38920a</anchor>
      <arglist>(const bool &amp;flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AggregatesCrossProcessors</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a708e4edd376bcecf2f6f7a3e51d99538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; LOVector &gt; &amp;</type>
      <name>GetVertex2AggIdNonConst</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>afcd2b6d45ea5649dee6fd802765092f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; LOVector &gt; &amp;</type>
      <name>GetProcWinnerNonConst</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>ab329b92d7f35742a328c823d2d816c7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; LOVector &gt; &amp;</type>
      <name>GetVertex2AggId</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a4ce4aa3d93e3a793d7a4da8208df99f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; LOVector &gt; &amp;</type>
      <name>GetProcWinner</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a19ecae9e6e472c018da54e2316edc2d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRoot</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a8f1351ee897ab875a1754e9a124f34a9</anchor>
      <arglist>(LO i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIsRoot</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>aa5e5941cf699c8ee6f28f47b06b5f6ea</anchor>
      <arglist>(LO i, bool value=true)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>GetMap</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>ac9e6265197c05e98f6b5637e1ebd2561</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayRCP&lt; LO &gt;</type>
      <name>ComputeAggregateSizes</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>abdc2ea8d3d74bc15382e5de58c12c01c</anchor>
      <arglist>(bool forceRecompute=true, bool cacheSizes=false) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>nAggregates_</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a496ad718ee08953a83e979dbb7c09b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; LOVector &gt;</type>
      <name>vertex2AggId_</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a7e629cfb2cc84186895488af68366f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; LOVector &gt;</type>
      <name>procWinner_</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>acb42ae2e5d46ce651a3ab4ef7979f960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; bool &gt;</type>
      <name>isRoot_</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a0c083ea4f80b0889fcb6e18b405d8c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>aggregatesIncludeGhosts_</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a55699f8986c9f02123f0b997e22cd81e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; LO &gt;</type>
      <name>aggregateSizes_</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>aec21f3dbafd0d71ce8045f4470af2b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>aca1a3236261eb09df2855389d687e6eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a3af1532b5ebdd239ddd92eca3025a8b8</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=verbLevel_default) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>GO</type>
      <name>GetNumGlobalAggregates</name>
      <anchorfile>classMueLu_1_1Aggregates.html</anchorfile>
      <anchor>a1bd4baa4779d54af0c4834e8e6675632</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AggregationAlgorithmBase</name>
    <filename>classMueLu_1_1AggregationAlgorithmBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AggregationAlgorithmBase</name>
      <anchorfile>classMueLu_1_1AggregationAlgorithmBase.html</anchorfile>
      <anchor>ab06e95a5e402b898170b7eee14de32de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1AggregationAlgorithmBase.html</anchorfile>
      <anchor>aa74e66b0a3d850a5bd0afb70e6d37695</anchor>
      <arglist>(const Teuchos::ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AggregationExportFactory</name>
    <filename>classMueLu_1_1AggregationExportFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <base>MueLu::VisualizationHelpers</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a9cc99c2a395c6fe1bce8fdfab6a35355</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>doJacksPlus_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>acd3bdb83f7ff78d99c18a0ff508a7a1c</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>doConvexHulls</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a1130201cdd4a1ecf4f4975c1e8559928</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>doAlphaHulls_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ac8a1d0bce2ecdd495b0442a7520c6362</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>doAlphaHulls2D_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ae6157fa8b2486d3039944a7eb0896c80</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>doAlphaHulls3D_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a54999b0f813f6538f4073adddd7db656</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>doGraphEdges_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a7e95132611d9f23b5d784fc67929ce19</anchor>
      <arglist>(std::ofstream &amp;fout, Teuchos::RCP&lt; Matrix &gt; &amp;A, Teuchos::RCP&lt; GraphBase &gt; &amp;G, bool fine, int dofs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>writeFile_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>af8eecdb4622c372bff0ae856eb092d30</anchor>
      <arglist>(std::ofstream &amp;fout, std::string styleName, std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildColormap_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a82be25ac6f834f32013d4cdc5d14e33f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>writePVTU_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a22c1816a3be658e5eb7ab8d1181c2f4d</anchor>
      <arglist>(std::ofstream &amp;pvtu, std::string baseFname, int numProcs) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>xCoords_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>aa73de3e84a2a6e338be32e58e5cf60c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>yCoords_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ae265e73609f70d483489f960efdcf565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>zCoords_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>aafa56a478ba9b163f7d5ac2d8355b4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>cx_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>aeac0f7ab7844f090dcc2ea5093e8827f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>cy_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ab6c17dbfee5a18a3236eec38a2d3dc6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; const double &gt;</type>
      <name>cz_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a4203d21992f215ef73abec5634c1cdbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; LocalOrdinal &gt;</type>
      <name>vertex2AggId_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ae7b16ae80c97d3b8dce04d6f465ca213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ArrayRCP&lt; LocalOrdinal &gt;</type>
      <name>aggSizes_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a1229f5c252a344bdcc119505d91044b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>isRoot_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a8d5abd235badc7da408748e294cb2af3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>doFineGraphEdges_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a53eb74eecd2e5f7e5f07a217ccb7166f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>doCoarseGraphEdges_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ab5d207457e650a045c40809c47229dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numNodes_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>aae8f742f68541537bd430653723a87df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numAggs_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>adb0a594b96cd7402fb4bcd015dfbadb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dims_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>aa2e3171cbef0d6f89f783ed373bf84c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myRank_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>af45b3ba4621f6b9eeba52fcf5d7d5fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>nodeMap_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ad32f0ed21f22bc01106a0321e3f52d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>nodeMapCoarse_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ad1e992a5fc9ca4f6f5c6829c2b9cce2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>aggsOffset_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>acf9de862327f2302ff55fa62d1e3b140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>CONTRAST_1_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a153281ceec40600410b30c51929b7a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>CONTRAST_2_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ad7cd8c3c016f6919f1f2aefe5517f0d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>CONTRAST_3_</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>ac3e8d397152638fddf939c170999522c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AggregationExportFactory</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a479cdc2a16d3490018d07a16a22f7cdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AggregationExportFactory</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a8c41dc0029f26bfcb644140ae23031b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a0aa847950b4b3fd18b444e0f44087dd2</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1AggregationExportFactory.html</anchorfile>
      <anchor>a960c2ef618aafc528f15e3107f58a495</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AggregationPhase1Algorithm</name>
    <filename>classMueLu_1_1AggregationPhase1Algorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1AggregationPhase1Algorithm.html</anchorfile>
      <anchor>ae861a83b2ef0bbd2b76806624278e323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RandomReorder</name>
      <anchorfile>classMueLu_1_1AggregationPhase1Algorithm.html</anchorfile>
      <anchor>a9ebf9d90d8e85d75462072f33b2a0b08</anchor>
      <arglist>(ArrayRCP&lt; LO &gt; list) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>RandomOrdinal</name>
      <anchorfile>classMueLu_1_1AggregationPhase1Algorithm.html</anchorfile>
      <anchor>af902a0c25503f6da45ed493cf6dfe312</anchor>
      <arglist>(int min, int max) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AggregationPhase1Algorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase1Algorithm.html</anchorfile>
      <anchor>aec402bcb3060ca32a4affbfd798876fa</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AggregationPhase1Algorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase1Algorithm.html</anchorfile>
      <anchor>a0e39cfffeac2bf295ac31669cc77712b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1AggregationPhase1Algorithm.html</anchorfile>
      <anchor>a31efbc7dac0e4882b5a4626280f5998a</anchor>
      <arglist>(const ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AggregationPhase2aAlgorithm</name>
    <filename>classMueLu_1_1AggregationPhase2aAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1AggregationPhase2aAlgorithm.html</anchorfile>
      <anchor>af1b71d97570a8d2213b4fde89014c468</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AggregationPhase2aAlgorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase2aAlgorithm.html</anchorfile>
      <anchor>a5698443be7c51aee9a17326c03a376a8</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AggregationPhase2aAlgorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase2aAlgorithm.html</anchorfile>
      <anchor>a18b33e9fe8d8478f2ad98455c16bbbea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1AggregationPhase2aAlgorithm.html</anchorfile>
      <anchor>a70ab1c5e8ac167cc779419f294c72b20</anchor>
      <arglist>(const ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AggregationPhase2bAlgorithm</name>
    <filename>classMueLu_1_1AggregationPhase2bAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1AggregationPhase2bAlgorithm.html</anchorfile>
      <anchor>ad14d6ba6fbb92e2ecc18da1c70f76e20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AggregationPhase2bAlgorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase2bAlgorithm.html</anchorfile>
      <anchor>ada1cf47ff44d32e45af7e87d5105af18</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AggregationPhase2bAlgorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase2bAlgorithm.html</anchorfile>
      <anchor>ad16e7fc445626b4175aefe8e16e04eb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1AggregationPhase2bAlgorithm.html</anchorfile>
      <anchor>aa465e307d0002cd5915e4910754832ee</anchor>
      <arglist>(const ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AggregationPhase3Algorithm</name>
    <filename>classMueLu_1_1AggregationPhase3Algorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1AggregationPhase3Algorithm.html</anchorfile>
      <anchor>a5072f786b9d411b401233de79bf2dd63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AggregationPhase3Algorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase3Algorithm.html</anchorfile>
      <anchor>af25a4b8e87a7e473c8e8f9d5ceb642b3</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AggregationPhase3Algorithm</name>
      <anchorfile>classMueLu_1_1AggregationPhase3Algorithm.html</anchorfile>
      <anchor>a51a7dbf9ed7363ace90144076e5f20f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1AggregationPhase3Algorithm.html</anchorfile>
      <anchor>ac2ac2452bb060abf78a4ed9a4851d13c</anchor>
      <arglist>(const ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AlgebraicPermutationStrategy</name>
    <filename>classMueLu_1_1AlgebraicPermutationStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type>void</type>
      <name>BuildPermutation</name>
      <anchorfile>classMueLu_1_1AlgebraicPermutationStrategy.html</anchorfile>
      <anchor>a923fe2c2ea58dbe138b7d02d228fc18f</anchor>
      <arglist>(const Teuchos::RCP&lt; Matrix &gt; &amp;A, const Teuchos::RCP&lt; const Map &gt; permRowMap, Level &amp;currentLevel, const FactoryBase *genFactory) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlgebraicPermutationStrategy</name>
    <filename>classAlgebraicPermutationStrategy.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::AmalgamationFactory</name>
    <filename>classMueLu_1_1AmalgamationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>a4b4876895f904ff63b7f2c2999fed714</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const GlobalOrdinal</type>
      <name>DOFGid2NodeId</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>a4979919e275c415472074ab6e1bbdd3c</anchor>
      <arglist>(GlobalOrdinal gid, LocalOrdinal blockSize, const GlobalOrdinal offset, const GlobalOrdinal indexBase)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AmalgamateMap</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>a48502cd863663294d89edaf4ea255609</anchor>
      <arglist>(const Map &amp;sourceMap, const Matrix &amp;A, RCP&lt; const Map &gt; &amp;amalgamatedMap, Array&lt; LO &gt; &amp;translation)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AmalgamationFactory</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>aa48873245364af4b861ced941935e987</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AmalgamationFactory</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>abd26f8e35c6e4a59ccc8bea7ab7901b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>ad31ba73a00ef2cfdeef65dbb064ddbca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1AmalgamationFactory.html</anchorfile>
      <anchor>ac61a62ed7bc620d67c550b4fc03bb2de</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AmalgamationInfo</name>
    <filename>classMueLu_1_1AmalgamationInfo.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>AmalgamationInfo</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a3e2c3932e02904d51e92726d952f1289</anchor>
      <arglist>(RCP&lt; Array&lt; LO &gt; &gt; rowTranslation, RCP&lt; Array&lt; LO &gt; &gt; colTranslation, RCP&lt; const Map &gt; nodeRowMap, RCP&lt; const Map &gt; nodeColMap, RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; const &amp;columnMap, LO fullblocksize, GO offset, LO blockid, LO nStridedOffset, LO stridedblocksize)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AmalgamationInfo</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>ab9c36ae6e5f3f968e71712c862d4cb50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>aca588a3a00f168790060152547e9d4f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a679d59759594a413a304f3379c105e6e</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getNodeRowMap</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a64f87ea6b5f5dd880d20833398401567</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Map &gt;</type>
      <name>getNodeColMap</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>ae6aeddff18f6146e8b85049e734faf67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnamalgamateAggregates</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a5e3f5d6173fec7643cfff9d11bf1a380</anchor>
      <arglist>(const Aggregates &amp;aggregates, Teuchos::ArrayRCP&lt; LocalOrdinal &gt; &amp;aggStart, Teuchos::ArrayRCP&lt; GlobalOrdinal &gt; &amp;aggToRowMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UnamalgamateAggregatesLO</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>aee9a070503fa318a33c91012ecde91ee</anchor>
      <arglist>(const Aggregates &amp;aggregates, Teuchos::ArrayRCP&lt; LocalOrdinal &gt; &amp;aggStart, Teuchos::ArrayRCP&lt; LO &gt; &amp;aggToRowMap) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ComputeUnamalgamatedImportDofMap</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a50922ea7d885c693eb5699cd0b94da04</anchor>
      <arglist>(const Aggregates &amp;aggregates) const </arglist>
    </member>
    <member kind="function">
      <type>GO</type>
      <name>ComputeGlobalDOF</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a5290022cb1f37d9aa575dffed3dbdd51</anchor>
      <arglist>(GO const &amp;gNodeID, LO const &amp;k=0) const </arglist>
    </member>
    <member kind="function">
      <type>GO</type>
      <name>GlobalOffset</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a609ab0daf11df54f47c9403a60927c65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Array&lt; LO &gt; &gt;</type>
      <name>getRowTranslation</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a34e0ad3869532897b42a380cc36645de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Array&lt; LO &gt; &gt;</type>
      <name>getColTranslation</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a8bcf5cd139605221d4c5925ef65cdd33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Array&lt; LO &gt; &gt;</type>
      <name>rowTranslation_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>ab5b0950edc866caf72a068c035417c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Array&lt; LO &gt; &gt;</type>
      <name>colTranslation_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>ac9fe7838c9f93b311aaf34987d30066e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>nodeRowMap_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a6f537203476d9d055ada55ccaaa7e299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>nodeColMap_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>aa966ccdd4c1f4a335436e42cd002daa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>columnMap_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>aa583a6afe5b01f157b8a93b1302da12d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>fullblocksize_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a7a9a7a4fbac04e2818d74c45669151fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GO</type>
      <name>offset_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>ab0397d9ce039fe8ae5cf486d5dab5357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>blockid_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a33812e31fca93e11d30a1aec810cacd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>nStridedOffset_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>ab90d66f1d69531a09d06ea927da72d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>stridedblocksize_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>abcc37b50fe32c7d357d8683bd078424a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GO</type>
      <name>indexBase_</name>
      <anchorfile>classMueLu_1_1AmalgamationInfo.html</anchorfile>
      <anchor>a4bedc3f1752e453c5ee62db447b4bc61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Amesos2Smoother</name>
    <filename>classMueLu_1_1Amesos2Smoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>aa81b74f3ef68191ed612bee1f989a8a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Tpetra_CrsMatrix</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a8ffe1d288cc117503f5d166ef7a5291c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Tpetra_MultiVector</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>ad7b17b43212a097033e4102b9ea290cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a2588fe554cf0157008e001a4831a021c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Amesos2::Solver&lt; Tpetra_CrsMatrix, Tpetra_MultiVector &gt; &gt;</type>
      <name>prec_</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a98a63657b121a02d2226098eb504a119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTransformation_</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>ae5908a4dffa9ee186324c150fa8247a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>X_</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>acc19876f0f5a5e9e18b949397f2a0217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>B_</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a3052f86f7fdb0bd04574680c1d23719e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos2Smoother</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>afa76529d339ed5a43cccfe1fee4f086e</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos2Smoother</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a9094466253f80faac4b187da30613991</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a5ed4271b25bc822b58f034aca98fbd95</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>ae7e656a1d170deceaa7d346fd924a517</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a2a23bc59c51cd270a45a9537a8d6d368</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a7f93ffc84f00bd19a621131489e04074</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother.html</anchorfile>
      <anchor>a41f12c3407741fe631503328db697974</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Amesos2Smoother&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <base>SmootherPrototype&lt; double, int, int, Xpetra::EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>Amesos2Smoother</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ae270d2959adc47e5647b5c60a7b10143</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos2Smoother</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a13717b732ab3017d05fda0991743ddc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a02e12f368199d2ec920c180b8e4ee479</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa7b663cca4c201dfc269612a99656468</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a4eaf1a0ce1c8bf6ccca9eca85afa328b</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa23e6017f870733152e88e6a559d486a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>af9d3576ce3a4736d4d87b2ad91f09125</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ab6679e6792fec1ae0972322c024dec49</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5d8d25311f3ad71bd5b1f7bc79154039</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0407ca9984e01603071958eb981da631</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa9cd9018b5687b94e94661d638922abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classMueLu_1_1Amesos2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a68c9f3ddd32d8a58620e1bd56918f660</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AmesosSmoother</name>
    <filename>classMueLu_1_1AmesosSmoother.html</filename>
    <templarg></templarg>
    <base>SmootherPrototype&lt; double, int, int, Node &gt;</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>aefad009dc488edefefe0063ce19d9b51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a2301d1e5b4ae96988ba410bd2eaa743c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>aca40e13115c844a7d176f0c005c5a156</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a06b3d2ec144032cc5d839f3b7a137bc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a22cabf1452c0b6f2f262c35af1d61be3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a2eed643a858eff256b828e72e75f4e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_LinearProblem &gt;</type>
      <name>linearProblem_</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a748d9b7a7ee993cb71060989873ead4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Amesos_BaseSolver &gt;</type>
      <name>prec_</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>afcb8412a08d144b222a9140625aca001</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AmesosSmoother</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a09816ee9dee601964a61e46262b12824</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AmesosSmoother</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>af8e40a6f51442d5811f550c85a68a176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a9dbfdae33f53b83cb704460b92deb3bb</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a3ac252893f06ccaaa43ef271973f75d0</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a122e04c0fd25132715ea6292449fa34f</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>a70682454cb5969c2c02b6d99326d19aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1AmesosSmoother.html</anchorfile>
      <anchor>ac66c5063ec7f6da0e695cca507198c0e</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AMGXOperator</name>
    <filename>classMueLu_1_1AMGXOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TpetraOperator</base>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>ae61d34bee4bc45cba94e1a0f0314c5f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a4e692c893daeeb8c2857e5840a68f9d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a4abb317bdb408ed9a4f2269813ceab72</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a4aac8a97bc4e88bb43d78398e49f345a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Hierarchy&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>GetHierarchy</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>aac988afba560da88f1c910e1e69edb3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Scalar</type>
      <name>SC</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a0ac4b10fafb35b1ad5b68fc09dd6c7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>LocalOrdinal</type>
      <name>LO</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a6d5941af5304eaeb98191d2ac62f220a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>GlobalOrdinal</type>
      <name>GO</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>aae35338d080f33874b4ce0fb87a39d79</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Node</type>
      <name>NO</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a5d9c343b5b47f194817ef12a1818f632</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NO &gt;</type>
      <name>Map</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>aa1a42c3b1185b3b00b8e861e26cb33aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::MultiVector&lt; SC, LO, GO, NO &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a6011d2abc4c8a1c2df293afad129fcbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AMGXOperator</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a47c4930a44da4a1ad3dd8647bee33ca1</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;InA, Teuchos::ParameterList &amp;paramListIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AMGXOperator</name>
      <anchorfile>classMueLu_1_1AMGXOperator.html</anchorfile>
      <anchor>a006808f6f3c5d842f679abe4da0af990</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::AMGXOperator&lt; double, int, int, Node &gt;</name>
    <filename>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</filename>
    <templarg></templarg>
    <base>TpetraOperator&lt; double, int, int, Node &gt;</base>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>SC</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a87a8b6f74b59985db752c778b04b6ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LO</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a8d8fee885a286d5e82bd5ffc59008da5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GO</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a563171f1f50313cfa7913e0270255828</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Node</type>
      <name>NO</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a15965cf8c17053a2508ff9f257417ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NO &gt;</type>
      <name>Map</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a924363e94007cf3b34f774827c9a1b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::MultiVector&lt; SC, LO, GO, NO &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>adfd30527a60f8a27a510dc3b0f5e620a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>printMaps</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a20735896253fdeb1b6d1a9e08112f0a7</anchor>
      <arglist>(Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;vec, const std::vector&lt; int &gt; &amp;perm, const int *nbrs, const Map &amp;map, const std::string &amp;label)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AMGX_solver_handle</type>
      <name>Solver_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a1c3bc84a14c4fdfafa52026a85905794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AMGX_resources_handle</type>
      <name>Resources_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a8cac1a9c3cc6c9b3a2424648fcddf33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AMGX_config_handle</type>
      <name>Config_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a280acac9265a91bef44ab346b9c06fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AMGX_matrix_handle</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a776ccb236a50bba634cce3d407303a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AMGX_vector_handle</type>
      <name>X_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>af77c538212b24da4778b1a7fc8dc4907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AMGX_vector_handle</type>
      <name>Y_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a4d309df41b19642129f4eeeceb5cdf61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>N_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a54d57feb726ecb8dad505a9d734bc4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>domainMap_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a53592d4ad4be9a25ea895f0fb5e2a534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Map &gt;</type>
      <name>rangeMap_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a7b5ca8ba0987813309917bdc8888031e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>muelu2amgx_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a612efcd6220759509127ff0660574074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Teuchos::Time &gt;</type>
      <name>vectorTimer1_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a39e0d90469bd348bec62dd93bbe1c7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Teuchos::Time &gt;</type>
      <name>vectorTimer2_</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>ae83373e872ccef5e24173760a0e3fb30</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AMGXOperator</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a2e92a7c5f418cfd18b4f50c610244dd1</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;inA, Teuchos::ParameterList &amp;paramListIn)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AMGXOperator</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a60a0b4bb26dd60554dc157eccb7054ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a280a39f591de17d2c534f7f2b610365e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Map &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a0f91f9d36d851e1e24bdd2aa519d160d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a71a5115ecd90a4de44931ee0729d63ce</anchor>
      <arglist>(const MultiVector &amp;X, MultiVector &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, SC alpha=Teuchos::ScalarTraits&lt; SC &gt;::one(), SC beta=Teuchos::ScalarTraits&lt; SC &gt;::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a4faa35f34e4bd33bc3df93cae28be97a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Hierarchy&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>GetHierarchy</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>af2c99199d2e9d0af44d12aa1eb2ced74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>filterValueToString</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a5d5581c1c0bb403e2c902886b160bd9d</anchor>
      <arglist>(const Teuchos::ParameterEntry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sizeA</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>af6c9ca7ad09e18cc6b86bf5c6e81dca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>iters</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>a841b722a18cd9b453a096d18a2c6815b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AMGX_SOLVE_STATUS</type>
      <name>getStatus</name>
      <anchorfile>classMueLu_1_1AMGXOperator_3_01double_00_01int_00_01int_00_01Node_01_4.html</anchorfile>
      <anchor>ad650974b0797354c22b0be439806d297</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::BadCast</name>
    <filename>classMueLu_1_1Exceptions_1_1BadCast.html</filename>
    <member kind="function">
      <type></type>
      <name>BadCast</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1BadCast.html</anchorfile>
      <anchor>a19964dc0f3b75b4c794a70ea442dc932</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BaseClass</name>
    <filename>classMueLu_1_1BaseClass.html</filename>
    <base>MueLu::VerboseObject</base>
    <base>MueLu::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BaseClass</name>
      <anchorfile>classMueLu_1_1BaseClass.html</anchorfile>
      <anchor>a8b4300b78aff18f709d332226fb1048f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BlockedCoarseMapFactory</name>
    <filename>classMueLu_1_1BlockedCoarseMapFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::CoarseMapFactory</base>
    <member kind="function">
      <type></type>
      <name>BlockedCoarseMapFactory</name>
      <anchorfile>classMueLu_1_1BlockedCoarseMapFactory.html</anchorfile>
      <anchor>aaa3e9afbe308c279670ef255934be09d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedCoarseMapFactory</name>
      <anchorfile>classMueLu_1_1BlockedCoarseMapFactory.html</anchorfile>
      <anchor>ab9f14b7c511e2c8175332acfc4871e81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BlockedCoarseMapFactory.html</anchorfile>
      <anchor>aa1719f9c236da42b2250c5df3ee9995c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BlockedCoarseMapFactory.html</anchorfile>
      <anchor>a8ef89d6d039e2ed7b2cbd7c1f7665da1</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1BlockedCoarseMapFactory.html</anchorfile>
      <anchor>aa083b7671698a394520fb734790cb1a5</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BlockedDirectSolver</name>
    <filename>classMueLu_1_1BlockedDirectSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>ab26bd710553080ee29d46638bd7d3532</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a3fba7416a410e5331f9e087bd903c745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a6ab6e7b869925412799031616b217e8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MergedBlockedMatrixFactory &gt;</type>
      <name>MergedAFact_</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>ae83ed973f68299f9a57fb1f7e0f89565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; DirectSolver &gt;</type>
      <name>s_</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a75d5ff7c78882b0798e05467a0a8c527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a543f1bbcfa55d9c11e34b5dbeffa272c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedDirectSolver</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>aac5b2e8fb08f1a4662d5f3b297106835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedDirectSolver</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>af3136331fa2a87c311b76849ad0a9368</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a7102c1caad59a525ad267d8a92fabb4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a67f5efa2da95d3598b162bca2edbe26c</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a048cbda7589229c9454d2d4cd2936afb</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a5b716794d3bc4d84d42975f01cb2fe48</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>adc74f219ddece9daa35c1ce7d2fd6872</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1BlockedDirectSolver.html</anchorfile>
      <anchor>a9e9c201de81a308e3584f57224362c45</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BlockedGaussSeidelSmoother</name>
    <filename>classMueLu_1_1BlockedGaussSeidelSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a141422b4f752b8be69b929774f75be85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>abb3dbba036cb8d10855169964c1d650a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>ad5db41c87af7d7bbdc6b2e2f5c67c285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a1821f5a6bd32986e20dc20bbe792609e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const SmootherBase &gt; &gt;</type>
      <name>Inverse_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a1e81cf9b1d856047b588e864051a2d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>bIsBlockedOperator_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>aa1a56424bdc94a3b48d0ba762995cc21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>AFact_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>ae47c30e9d4120e0921652ab6e771f7ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>ae60c188149fc25090a18b4f410667c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>rangeMapExtractor_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a687cd7c5f16518d0bf5e48341c7a1e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>domainMapExtractor_</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a246de7c8995b30b2e371931585895946</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedGaussSeidelSmoother</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>aa78521b1ee52314b2963adc7d7157435</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedGaussSeidelSmoother</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a2eefe3db493adb3234ade050e4cdb527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a3b8777e8bde5740f41c295e7648439fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a8a4070d1311db957b4e5c7d3e95d5383</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a3c3963b9f4fa0cb6052f3131d5f56a1b</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager, int pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>affa2b0011fcf689dc0db4188bed1ec3a</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a0968479e05c2d3b8883bf119d4cd1be6</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>a342a27b31e88346c7acd6bf91f674f78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1BlockedGaussSeidelSmoother.html</anchorfile>
      <anchor>abcaefd3bd98b7a83889c5a82f064b13d</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BlockedPFactory</name>
    <filename>classMueLu_1_1BlockedPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>areGidsUnique</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>adce9cb35fac7f27cef2326b0fa022974</anchor>
      <arglist>(const std::vector&lt; GO &gt; &amp;X) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>abe50def67caa89a397041be0ddaa3594</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>diagonalView_</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a061d5983607ce8134ebd819518d5323e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedPFactory</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a2fde28ee33af90917cd00d12b4636094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedPFactory</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a0a284d2ad1fac0c3f35e2e652357df69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>ae2b9f4945dbd903cb36639aa0abd9720</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDiagonalView</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a0382a781204f95b3861a753fe0ce09a1</anchor>
      <arglist>(std::string const &amp;diagView)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>aef23339efa94b18dba6cf4bdb296ab7a</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetDiagonalView</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a894dba49895607e3ae6928ba22708943</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a76485d6b5791e41b15a31662102c8ae0</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>a0201f3fd473ed7c82186cc7c2169153c</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1BlockedPFactory.html</anchorfile>
      <anchor>ab07e4f940c3a32e0a93589540f87c88f</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BlockedRAPFactory</name>
    <filename>classMueLu_1_1BlockedRAPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>BlockedRAPFactory</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a366970cc0207bd3f17ad150ced56311c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedRAPFactory</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a9796cdbdac9e7952619a9a211ab4c560</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>ad93b66aa48829e45fbb48b54a6662b04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a3a2f0e26608bd9ca9faad791af0cf2cb</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a89eb4ef83d229a1085ee55371b9187cb</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRepairZeroDiagonal</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a3e4981cee502fc3f50f2e363655e1ab7</anchor>
      <arglist>(bool const &amp;repair)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlausibilityCheck</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a15ad57116be1f3795c754e74b8534b7d</anchor>
      <arglist>(bool const &amp;check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTransferFactory</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>afd9685f1abd61dd275ecf8fe529a9d54</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumTransferFactories</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a75196457319aa66100e669234d616b70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkAc_</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a177061336781accdf6bf11bd87b17a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>repairZeroDiagonals_</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>ad04bfd8899b8520048ccacebd5089588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>transferFacts_</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a74783d2f736eed3ea1b33bde3f14e702</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>CheckMainDiagonal</name>
      <anchorfile>classMueLu_1_1BlockedRAPFactory.html</anchorfile>
      <anchor>a4ebf1229ef5952ddcbeba13818525106</anchor>
      <arglist>(RCP&lt; BlockedCrsMatrix &gt; &amp;bAc, bool repairZeroDiagonals=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::BraessSarazinSmoother</name>
    <filename>classMueLu_1_1BraessSarazinSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>ac2a20967cac659a495766af7b79abda3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a9c6c808eb3c85e2bc10261cd894a881c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a65c623afff2d32351a68cfd6f8eac03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>AFact_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a5660219253ef38b706040dc24388c875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryManagerBase &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>acb393da39bab6f5ac6b8baa84a8d50a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a52dd7f2874f4497c9bd116841065eb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>rangeMapExtractor_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>af2f5b275df6b563d8fb35d3c701a3bf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>domainMapExtractor_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>ac4d5f4f3d56b578b52f1b150c5712718</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A00_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>ab00e4de5dd01e0d31aad02c2962e73ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A01_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a0eaabc8457b3802927ca84116adf495a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A10_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a1fdba744f53c8069458318be9dbc74b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A11_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a705dd682c6ff49f8dc6272a77fab1ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>S_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>acbd6a485edc41d8add4d274a46c0a447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Vector &gt;</type>
      <name>D_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a97910d0d70c8fccacff7bbd8b1aa3765</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>smoo_</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>abef6db5f41041943b573ba6bbd22bf12</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BraessSarazinSmoother</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a6ed9f19b550611a586b35d45a229ccca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BraessSarazinSmoother</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>accb47f56b2a5072ea5c9c8ad321cd239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a7e5f17fb54f3fce3e53b731050252b76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>ad00b00d3e02913ba024a324c03b16ef3</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>aefd31032bb547a71a06db63ab8ebb155</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager, int pos=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>ab3ebf5b85847614690df54fdd5a23bc7</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>affe8a78f9b2e1b90e434857a34ed8a5e</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a1f352c3bd14d2b57e54b09c2c1a5b53c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1BraessSarazinSmoother.html</anchorfile>
      <anchor>a94b86e6032f6179ef0a7818aa1d2a48a</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BrickAggregationFactory</name>
    <filename>classBrickAggregationFactory.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::BrickAggregationFactory</name>
    <filename>classMueLu_1_1BrickAggregationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <class kind="class">MueLu::BrickAggregationFactory::compare</class>
    <member kind="typedef" protection="private">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;</type>
      <name>STS</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>aaab712fabfca4dfd4d35b0982daef020</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; Scalar, GlobalOrdinal, compare &gt;</type>
      <name>container</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>afb9d656d4b320613cb2558fd53264dda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a1318bcf2e3165f91f733669a3c024151</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const RCP&lt; Xpetra::MultiVector&lt; double, LO, GO, NO &gt; &gt; &amp;coords, const RCP&lt; const Map &gt; &amp;map) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCP&lt; container &gt;</type>
      <name>Construct1DMap</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a9cf8ed594147c3b8d755c761e141884a</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const ArrayRCP&lt; const double &gt; &amp;x) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isRoot</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>aeb73fb9a33b68427a435228df760e91c</anchor>
      <arglist>(LocalOrdinal LID) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>GlobalOrdinal</type>
      <name>getRoot</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a0addf72fdd835120a4ab7562d0cf0858</anchor>
      <arglist>(LocalOrdinal LID) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>GlobalOrdinal</type>
      <name>getAggGID</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>aeff6cd482ef9175eead7f2c21538f762</anchor>
      <arglist>(LocalOrdinal LID) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nDim_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>afe6f9ec156c80ddb38f6d9f22a43d8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; container &gt;</type>
      <name>xMap_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>ac84b869d9420d2a75fa2737d9a0e118b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; container &gt;</type>
      <name>yMap_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a4b6597e8f727c369d656e1854ab94785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; container &gt;</type>
      <name>zMap_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>ac1bcf9e76c28359357c823d06958c847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; const double &gt;</type>
      <name>x_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a80d1afe1797903ddf218f7d79e5789aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; const double &gt;</type>
      <name>y_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a332f4304b8cdf199ee23cda94f3d9aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; const double &gt;</type>
      <name>z_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>adea84a6710f483fcf6e9875552c4bfe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nx_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a939c1a974e670f13d40520c1382cf6ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>ny_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a5ba59a3d56ce925ae0d5349ff7fabaa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nz_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>abce8cb4db325f0edfce0013af228a587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>bx_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a86095d4635964dd72a1f5d7438f022fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>by_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a0794217dc4c0f09a27fb5f1e07ce3e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>bz_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a19791604555c85a23f1e810e240759f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; GlobalOrdinal, GlobalOrdinal &gt;</type>
      <name>revMap_</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a5a8314266634c6dc3fddbfe6f0522e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BrickAggregationFactory</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>ae6eef5efd5896e9214edf155837f5728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BrickAggregationFactory</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a5685daee69df601db5821ddcc7fbced1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a445bdefa095b7bfa91105f12930b2e67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>ad35d43a0675c4dcd59e2d3ab2913919c</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory.html</anchorfile>
      <anchor>a6aa784fb1e488173b721ed7e426de120</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CGSolver</name>
    <filename>classMueLu_1_1CGSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SolverBase</base>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>nIts_</name>
      <anchorfile>classMueLu_1_1CGSolver.html</anchorfile>
      <anchor>a65100e5d08e7c6d5d22ee6d76dc08427</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CGSolver</name>
      <anchorfile>classMueLu_1_1CGSolver.html</anchorfile>
      <anchor>ad15850a8b4a95eb7da559af61a63a036</anchor>
      <arglist>(size_t Its)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Iterate</name>
      <anchorfile>classMueLu_1_1CGSolver.html</anchorfile>
      <anchor>a6f9c0a6e5224a7a9d948058d66a4fbb2</anchor>
      <arglist>(const Matrix &amp;A, const Constraint &amp;C, const Matrix &amp;P0, RCP&lt; Matrix &gt; &amp;P) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CloneRepartitionInterface</name>
    <filename>classMueLu_1_1CloneRepartitionInterface.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1CloneRepartitionInterface.html</anchorfile>
      <anchor>ae598e978bab2c1cdfcfdc3fdd45459fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CloneRepartitionInterface</name>
      <anchorfile>classMueLu_1_1CloneRepartitionInterface.html</anchorfile>
      <anchor>a03a1d382f780ab8207ffd398042f646a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CloneRepartitionInterface</name>
      <anchorfile>classMueLu_1_1CloneRepartitionInterface.html</anchorfile>
      <anchor>a3316623b66f2e256ee9adaa46fe48ae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CloneRepartitionInterface.html</anchorfile>
      <anchor>ac26f3fc64123a67fe2be1d74fc2d2905</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CloneRepartitionInterface.html</anchorfile>
      <anchor>a0682024d9e89d4baf95914315afe1847</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoalesceDropFactory</name>
    <filename>classMueLu_1_1CoalesceDropFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>ac6606f7e613d91debb0846b6d34025e7</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>MergeRows</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>a29039753ebb1d954b49449511be48de0</anchor>
      <arglist>(const Matrix &amp;A, const LO row, Array&lt; LO &gt; &amp;cols, const Array&lt; LO &gt; &amp;translation) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>MergeRowsWithDropping</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>a0cd57ffb7d045eeb68a386b89ff9bc88</anchor>
      <arglist>(const Matrix &amp;A, const LO row, const ArrayRCP&lt; const SC &gt; &amp;ghostedDiagVals, SC threshold, Array&lt; LO &gt; &amp;cols, const Array&lt; LO &gt; &amp;translation) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; PreDropFunctionBaseClass &gt;</type>
      <name>predrop_</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>ac44b6972590d1dc8e9d5360905739a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoalesceDropFactory</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>a55cd6f5ffe2b3cdee0288feb884805f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoalesceDropFactory</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>a5abbf5c82eb84961c36a446db35e760b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>a351db8a48d3f00e1dfda9aca77ae0849</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>a8072b624483e040e240748afe3f48a4a</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreDropFunction</name>
      <anchorfile>classMueLu_1_1CoalesceDropFactory.html</anchorfile>
      <anchor>aa1dbd3841b4409deb82efda6d5a66f3f</anchor>
      <arglist>(const RCP&lt; MueLu::PreDropFunctionBaseClass&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;predrop)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoarseMapFactory</name>
    <filename>classMueLu_1_1CoarseMapFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getFixedBlockSize</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>a639323789b13cae657bc707c88659785</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; size_t &gt;</type>
      <name>stridingInfo_</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>a07ef5aed51cc2b9cfe3c59531d4c52f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseMapFactory</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>af8ae6067e027bed28014abf9a4545de2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarseMapFactory</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>a341f8a6805a39b303523fbaad6b00e0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>a5a69c1c0123dd762e5b944bc4cdc68e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>af7f70f4ea31b5f1ad904caff4bddcff8</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>abd6cdad9f8e631116fa6059f88995c66</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::vector&lt; size_t &gt;</type>
      <name>getStridingData</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>a731acb9f4ecc426de4d47c96f4012ffb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStridingData</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>aa3cae1471c0b7412021c120de1c6a547</anchor>
      <arglist>(std::vector&lt; size_t &gt; stridingInfo)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalOrdinal</type>
      <name>getStridedBlockId</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>ae22eac8dab11e29ef437297fbf2e31d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setStridedBlockId</name>
      <anchorfile>classMueLu_1_1CoarseMapFactory.html</anchorfile>
      <anchor>aa033970fd988b1b19bc4d0e3c660d945</anchor>
      <arglist>(LocalOrdinal stridedBlockId)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoarseningVisualizationFactory</name>
    <filename>classMueLu_1_1CoarseningVisualizationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <base>MueLu::VisualizationHelpers</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1CoarseningVisualizationFactory.html</anchorfile>
      <anchor>acf7f990b07f5e8eabec64771c70db033</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseningVisualizationFactory</name>
      <anchorfile>classMueLu_1_1CoarseningVisualizationFactory.html</anchorfile>
      <anchor>a9ff5ccd4ba83ce86221b4ce6c2a30526</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarseningVisualizationFactory</name>
      <anchorfile>classMueLu_1_1CoarseningVisualizationFactory.html</anchorfile>
      <anchor>ac726e55c25112184588752279768ef76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CoarseningVisualizationFactory.html</anchorfile>
      <anchor>a8d2c09e4b9fc0557a7ed00c23a0bc266</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CoarseningVisualizationFactory.html</anchorfile>
      <anchor>a358304d0ea71c51dc9b1694e5b6c3745</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Comm</name>
    <filename>classTeuchos_1_1Comm.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>MueLu::BrickAggregationFactory::compare</name>
    <filename>classMueLu_1_1BrickAggregationFactory_1_1compare.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classMueLu_1_1BrickAggregationFactory_1_1compare.html</anchorfile>
      <anchor>a56d3edea30b20b97d30368120c595f88</anchor>
      <arglist>(const Scalar &amp;x, const Scalar &amp;y) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::CompPairs</name>
    <filename>structMueLu_1_1CompPairs.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>CompPairs</name>
      <anchorfile>structMueLu_1_1CompPairs.html</anchorfile>
      <anchor>a278f7df74965135822045145ae55b71c</anchor>
      <arglist>(const std::vector&lt; Scalar &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structMueLu_1_1CompPairs.html</anchorfile>
      <anchor>a7d6dba42c9a0c293392842741756540c</anchor>
      <arglist>(LocalOrdinal a, LocalOrdinal b)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Scalar &gt;</type>
      <name>vinternal_</name>
      <anchorfile>structMueLu_1_1CompPairs.html</anchorfile>
      <anchor>a5feea6425ddcae6078f4cc3fe455f10d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ComputeAggregateSizesFunctor</name>
    <filename>classMueLu_1_1ComputeAggregateSizesFunctor.html</filename>
    <templarg>ProcWinnerType</templarg>
    <templarg>Vertex2AggIdType</templarg>
    <templarg>AggregateSizesType</templarg>
    <templarg>LO</templarg>
    <member kind="function">
      <type></type>
      <name>ComputeAggregateSizesFunctor</name>
      <anchorfile>classMueLu_1_1ComputeAggregateSizesFunctor.html</anchorfile>
      <anchor>a2128418ee5d072af625bec4dfcc59237</anchor>
      <arglist>(ProcWinnerType procWinner_, Vertex2AggIdType vertex2AggId_, int myPID_, AggregateSizesType aggregateSizes_)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classMueLu_1_1ComputeAggregateSizesFunctor.html</anchorfile>
      <anchor>aaf2b1fa0ba27fb4cbfc620e715838b16</anchor>
      <arglist>(const LO k) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ProcWinnerType</type>
      <name>procWinner</name>
      <anchorfile>classMueLu_1_1ComputeAggregateSizesFunctor.html</anchorfile>
      <anchor>a8b5a43fbc43ddc84bb5211a3df81f60a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Vertex2AggIdType</type>
      <name>vertex2AggId</name>
      <anchorfile>classMueLu_1_1ComputeAggregateSizesFunctor.html</anchorfile>
      <anchor>a0ce65857ad93211335dd9aa8cabd29ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myPID</name>
      <anchorfile>classMueLu_1_1ComputeAggregateSizesFunctor.html</anchorfile>
      <anchor>ae48f477a4af9fdb3ceb6ceda11675eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AggregateSizesType</type>
      <name>aggregateSizes</name>
      <anchorfile>classMueLu_1_1ComputeAggregateSizesFunctor.html</anchorfile>
      <anchor>a131ea49b489ff238fff353835652b101</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Constraint</name>
    <filename>classMueLu_1_1Constraint.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type>RCP&lt; const CrsGraph &gt;</type>
      <name>GetPattern</name>
      <anchorfile>classMueLu_1_1Constraint.html</anchorfile>
      <anchor>ac6d6301c2ed475fecedd7866ae2e10ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>X_</name>
      <anchorfile>classMueLu_1_1Constraint.html</anchorfile>
      <anchor>a585abdec4cf926c50d632a645666a847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const CrsGraph &gt;</type>
      <name>Ppattern_</name>
      <anchorfile>classMueLu_1_1Constraint.html</anchorfile>
      <anchor>a3025f864ed066142186871c93b9ee241</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; Teuchos::SerialDenseMatrix&lt; LO, SC &gt; &gt;</type>
      <name>XXtInv_</name>
      <anchorfile>classMueLu_1_1Constraint.html</anchorfile>
      <anchor>a678f9399713c03495c146cddb26914cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Constraint.html</anchorfile>
      <anchor>a2bbc7b2f11ca4635d293b6d6e21b0d38</anchor>
      <arglist>(const MultiVector &amp;B, const MultiVector &amp;Bc, RCP&lt; const CrsGraph &gt; Ppattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1Constraint.html</anchorfile>
      <anchor>a048b51f3460c2197183676dc8dd5716e</anchor>
      <arglist>(const Matrix &amp;P, Matrix &amp;Projected) const </arglist>
    </member>
    <docanchor file="classMueLu_1_1Constraint" title="Nonzero pattern constraint">pattern_constraint</docanchor>
    <docanchor file="classMueLu_1_1Constraint" title="Coarse space approximation constraint">space_constraint</docanchor>
  </compound>
  <compound kind="class">
    <name>Constraint</name>
    <filename>classConstraint.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::ConstraintFactory</name>
    <filename>classMueLu_1_1ConstraintFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1ConstraintFactory.html</anchorfile>
      <anchor>ab9005ea55b753a9f30945a7d7c3493a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstraintFactory</name>
      <anchorfile>classMueLu_1_1ConstraintFactory.html</anchorfile>
      <anchor>ab80b8c43ff59e1008adb8202a92c83c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstraintFactory</name>
      <anchorfile>classMueLu_1_1ConstraintFactory.html</anchorfile>
      <anchor>ac0c997db3c1ec7dfb1014ebc5dfe6601</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1ConstraintFactory.html</anchorfile>
      <anchor>a97ed2ba066ddba232f0ea939960da68c</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1ConstraintFactory.html</anchorfile>
      <anchor>acf3c73451ca5f898cbded24f1bb9f931</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::Hierarchy::ConvData</name>
    <filename>structMueLu_1_1Hierarchy_1_1ConvData.html</filename>
    <member kind="function">
      <type></type>
      <name>ConvData</name>
      <anchorfile>structMueLu_1_1Hierarchy_1_1ConvData.html</anchorfile>
      <anchor>ac8498316f5dc0c80d1bff68729859ee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConvData</name>
      <anchorfile>structMueLu_1_1Hierarchy_1_1ConvData.html</anchorfile>
      <anchor>a09d180cbfda69ac759b63576285e21fd</anchor>
      <arglist>(LO maxIts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConvData</name>
      <anchorfile>structMueLu_1_1Hierarchy_1_1ConvData.html</anchorfile>
      <anchor>adfe3664ddea9f05890ec91196fc32584</anchor>
      <arglist>(MagnitudeType tol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConvData</name>
      <anchorfile>structMueLu_1_1Hierarchy_1_1ConvData.html</anchorfile>
      <anchor>ada30d3fc39aa19d3763c9b5145da9a30</anchor>
      <arglist>(std::pair&lt; LO, MagnitudeType &gt; p)</arglist>
    </member>
    <member kind="variable">
      <type>LO</type>
      <name>maxIts_</name>
      <anchorfile>structMueLu_1_1Hierarchy_1_1ConvData.html</anchorfile>
      <anchor>aeb978cbf9b4d432be27f6ef664d1fc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>MagnitudeType</type>
      <name>tol_</name>
      <anchorfile>structMueLu_1_1Hierarchy_1_1ConvData.html</anchorfile>
      <anchor>abf815b553db7a6619c90c2f7adc3a6de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoordinatesTransferFactory</name>
    <filename>classMueLu_1_1CoordinatesTransferFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>CoordinatesTransferFactory</name>
      <anchorfile>classMueLu_1_1CoordinatesTransferFactory.html</anchorfile>
      <anchor>ad2fa2924efd2d3c6df0392cffc2c6b38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoordinatesTransferFactory</name>
      <anchorfile>classMueLu_1_1CoordinatesTransferFactory.html</anchorfile>
      <anchor>aa0ed447f294351ea5ec5ac9b9bde6a97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1CoordinatesTransferFactory.html</anchorfile>
      <anchor>ab9fdd043cd6812f8e628b0947e9d643d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CoordinatesTransferFactory.html</anchorfile>
      <anchor>a7f7eeec3839ae391f3932d3347fd0fc5</anchor>
      <arglist>(Level &amp;finelevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CoordinatesTransferFactory.html</anchorfile>
      <anchor>a74d7620e75391d4e281e85325b347273</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoupledAggregationCommHelper</name>
    <filename>classMueLu_1_1CoupledAggregationCommHelper.html</filename>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type>void</type>
      <name>ArbitrateAndCommunicate</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>aeace4933c6f3b1aa6553fe9a3e1d44d5</anchor>
      <arglist>(Vector &amp;weights, Aggregates &amp;aggregates, const bool perturb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ArbitrateAndCommunicate</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>acffbc0a06ff5654e09cf11a3f4567d61</anchor>
      <arglist>(Vector &amp;weight, LOVector &amp;procWinner, LOVector *companion, const bool perturb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NonUnique2NonUnique</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>afe5cca89cdb3f02a922bb94ef689b24e</anchor>
      <arglist>(const Vector &amp;source, Vector &amp;dest, const Xpetra::CombineMode what) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a38a5b702f12885d04e203df911cde607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Import &gt;</type>
      <name>import_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a0e74f3d80819bb1bc5d2adb59bf2cb02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Import &gt;</type>
      <name>winnerImport_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>ad2fe7f75f89b4c61eebe12854e919e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Import &gt;</type>
      <name>pushWinners_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a73517ba30d6fe6dbb5e7ffd48f320aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Vector &gt;</type>
      <name>tempVec_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a0aaff338dfd9509695180a118535d0c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Vector &gt;</type>
      <name>perturbWt_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>aec5abbd758eeed9235acebe71bee64cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Vector &gt;</type>
      <name>postComm_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a9ae1d8035c75d89db50f2c4cb1463d54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Vector &gt;</type>
      <name>candidateWinners_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a8577786639623dfdb8f96f6d3675d740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; GO &gt;</type>
      <name>myWinners_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a1da58aea511cdadea0d7aadf0c5d60a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numMyWinners_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>aa57671123b6d5ee85681fe6d44a2d808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Map &gt;</type>
      <name>winnerMap_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a02ff7a778f7d9d301f47d213a246cba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numCalls_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a10dd5f8f3e74c5a429b7cd07b69001ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>myPID_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a0e1eeb61e2301c0486381019060babc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoupledAggregationCommHelper</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a6d07f8fac9e09fa9995c9afbbf5072e7</anchor>
      <arglist>(const RCP&lt; const Map &gt; &amp;uniqueMap, const RCP&lt; const Map &gt; &amp;nonUniqueMap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoupledAggregationCommHelper</name>
      <anchorfile>classMueLu_1_1CoupledAggregationCommHelper.html</anchorfile>
      <anchor>a17c9b7843c9b9a6ad071e13960423668</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoupledAggregationFactory</name>
    <filename>classMueLu_1_1CoupledAggregationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>LocalAggregationAlgorithm</type>
      <name>algo1_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a5c14f1e90738107d682c798ea62bddab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LeftoverAggregationAlgorithm</type>
      <name>algo2_</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>ae4fb288e9b4935eff72fb7bb986a31bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoupledAggregationFactory</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>aaf6da9aec9d7670b88c4c71b877c5954</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoupledAggregationFactory</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a4ea48eb9fcc7c60dce73b51bc516f1d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrdering</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a05854d05f5041ed457ebc6bb4195a6b3</anchor>
      <arglist>(const std::string &amp;ordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxNeighAlreadySelected</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a714add9340299dd762ddb8fe6e6efee2</anchor>
      <arglist>(int maxNeighAlreadySelected)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetOrdering</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a9ad228dc588549f7451fcdbc03ac9e19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxNeighAlreadySelected</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>aa831ab11851c628bbffedb4f3ca66dec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPhase3AggCreation</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a7d215d32026d8bdcb3a4c019c12a3f34</anchor>
      <arglist>(double phase3AggCreation)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetPhase3AggCreation</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>aafdf590eab36dbd20b60e32234a57356</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a40e671d35d181366511c84eb6059057e</anchor>
      <arglist>(int minNodesPerAggregate)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a9794b610df184ac11fba73f69bb668ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>a81966895b57bf887de7175d115663f47</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CoupledAggregationFactory.html</anchorfile>
      <anchor>ada524ba2345562187120b3cbe62d0fc4</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::CoupledRBMFactory</name>
    <filename>classMueLu_1_1CoupledRBMFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>void</type>
      <name>setNumPDEs</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>aeeb41b435f067ca4cda70519d5b86a08</anchor>
      <arglist>(int numPDEs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastAcousticDOF</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>afc0012b4ff161df4f3f3e936bed2e928</anchor>
      <arglist>(int lastDOF)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>nspName_</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a191ce4fb7657804aaebba1abd7bfdb4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPDEs_</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a0bbe9441087c57f0c43d09c7cdf452d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lastAcousticDOF_</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a3b5df12e6917a71743296e9196f991a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoupledRBMFactory</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a5a89c10bfe382ece664ad0073a76f610</anchor>
      <arglist>(const int numPDEs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoupledRBMFactory</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>af712030fd99c098123d7e3df013d5dfc</anchor>
      <arglist>(const std::string &amp;nspName=&quot;Nullspace&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoupledRBMFactory</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>af010c9f6ff7c4d1f3fb5a923afd0c6a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a53bae412bd22067a990e4f71ca41f89b</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a4c5d61b1e00faea85866a22d2fb1cb53</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildRBM</name>
      <anchorfile>classMueLu_1_1CoupledRBMFactory.html</anchorfile>
      <anchor>a56fee541b1a0672cf5ebb27bd60d6735</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;A, RCP&lt; MultiVector &gt; &amp;Coords, RCP&lt; MultiVector &gt; &amp;nullspace) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::VariableContainer::Data</name>
    <filename>classMueLu_1_1VariableContainer_1_1Data.html</filename>
    <templarg>T</templarg>
    <base>MueLu::VariableContainer::DataBase</base>
    <member kind="function">
      <type></type>
      <name>Data</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1Data.html</anchorfile>
      <anchor>a8237e82d64c9858388adf09da2ff2792</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>const std::type_info &amp;</type>
      <name>type</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1Data.html</anchorfile>
      <anchor>a69dc2a7c9f1d7d657578f789ddceba6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>typeName</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1Data.html</anchorfile>
      <anchor>a00804130d8552b44c649c02e4cfec1e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>data_</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1Data.html</anchorfile>
      <anchor>a1837b9fc88ecdcba3564573f9d2ce1f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::VariableContainer::DataBase</name>
    <filename>classMueLu_1_1VariableContainer_1_1DataBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DataBase</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1DataBase.html</anchorfile>
      <anchor>a89aeab56df3d192688e95b3afd89abd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::type_info &amp;</type>
      <name>type</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1DataBase.html</anchorfile>
      <anchor>abea8ee6cc71c762cf59affeb1176e7f6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>typeName</name>
      <anchorfile>classMueLu_1_1VariableContainer_1_1DataBase.html</anchorfile>
      <anchor>a6bf371c869c16f469d5869ce44cf9d10</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::DefaultProblemStrings</name>
    <filename>classMueLu_1_1DefaultProblemStrings.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>DefaultProblemStrings</name>
      <anchorfile>classMueLu_1_1DefaultProblemStrings.html</anchorfile>
      <anchor>a3fcc1bc00ef178a81a2e56d8be924670</anchor>
      <arglist>(const T &amp;key, const U &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>DefaultProblemStrings&lt; T, U &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classMueLu_1_1DefaultProblemStrings.html</anchorfile>
      <anchor>aa0c280dfef8b7a6d527a6d9ffa2caa0e</anchor>
      <arglist>(const T &amp;key, const U &amp;val)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator std::map&lt; T, U &gt;</name>
      <anchorfile>classMueLu_1_1DefaultProblemStrings.html</anchorfile>
      <anchor>a8609f584818eb55d094bba19476a4a4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; T, U &gt;</type>
      <name>map_</name>
      <anchorfile>classMueLu_1_1DefaultProblemStrings.html</anchorfile>
      <anchor>ae99e84a6c3794e6ac7150d8f039f6100</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::DemoFactory</name>
    <filename>classMueLu_1_1DemoFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>DemoFactory</name>
      <anchorfile>classMueLu_1_1DemoFactory.html</anchorfile>
      <anchor>a5ee64987a882fc7f91be5baf569067e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DemoFactory</name>
      <anchorfile>classMueLu_1_1DemoFactory.html</anchorfile>
      <anchor>a3d4b2a5de3a0973071d88017f44ac2d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1DemoFactory.html</anchorfile>
      <anchor>a52b04a5c21e127a5fb2f6c961495d663</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1DemoFactory.html</anchorfile>
      <anchor>af6a7784b4fde135e5f9af673fa58daac</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::DependencyError</name>
    <filename>classMueLu_1_1Exceptions_1_1DependencyError.html</filename>
    <member kind="function">
      <type></type>
      <name>DependencyError</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1DependencyError.html</anchorfile>
      <anchor>a674456e9244618d9bb6ad0887cf152da</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Describable</name>
    <filename>classMueLu_1_1Describable.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Describable</name>
      <anchorfile>classMueLu_1_1Describable.html</anchorfile>
      <anchor>a70f2d103e641ee23ab610260e4ebcd4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>ShortClassName</name>
      <anchorfile>classMueLu_1_1Describable.html</anchorfile>
      <anchor>af54461eccd2d722f14c54546a2f7524e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1Describable.html</anchorfile>
      <anchor>a4d7cfecad63068402d447a2ea160dc3e</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out_arg, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Describable.html</anchorfile>
      <anchor>a1b1cf8c3f8d8202548a174fb504d7131</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1Describable.html</anchorfile>
      <anchor>a012389052c9a32677c46bec8037f2ea3</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::DetectDirichletFunctor</name>
    <filename>classMueLu_1_1DetectDirichletFunctor.html</filename>
    <templarg>MatrixType</templarg>
    <templarg>BNodesType</templarg>
    <member kind="function">
      <type></type>
      <name>DetectDirichletFunctor</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>a48962ad871506ebdc36455e0bf7666a7</anchor>
      <arglist>(MatrixType localMatrix_, BNodesType boundaryNodes_, SC tol_)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>a23cbd415c60ed684ab0fc1d7d437f7e3</anchor>
      <arglist>(const LO row) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>MatrixType::ordinal_type</type>
      <name>LO</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>ac33f8a586a4c5c9479de96f4059104eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>MatrixType::value_type</type>
      <name>SC</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>a5082899142093393cdec0cc660d43e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Kokkos::ArithTraits&lt; SC &gt;</type>
      <name>ATS</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>afe340c510ccf887918e24908b80a225c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MatrixType</type>
      <name>localMatrix</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>a5d9b15e6ee218bf9ea47bfdd28de7301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BNodesType</type>
      <name>boundaryNodes</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>ab07c95f6cc4decd741d28a54d5b05a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SC</type>
      <name>tol</name>
      <anchorfile>classMueLu_1_1DetectDirichletFunctor.html</anchorfile>
      <anchor>a392d7ef853fc536822828359e28a0bd8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::DirectSolver</name>
    <filename>classMueLu_1_1DirectSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>void</type>
      <name>SetFactory</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a3d38558ee74f86fe8e201cb56de007dd</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>ac7e3c1c4bd9b990f720e3c8923d0acda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>abe7642dde6c157b8a430e0afd66855ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>sEpetra_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a9a9f40b9ebd52d513490b6fe2249b42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>sTpetra_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>adfa66c81aa4236fc23fcbaf0612a4ac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>s_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a89e48d651cfa06833c67b1d9108b019e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>triedEpetra_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a4052402bcfe012d345df1e063f4e2e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>triedTpetra_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>ae4d061851738b337ad58fae6b1958bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>errorEpetra_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a3f2c90d4bd83873800e8a32ae65fbfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>errorTpetra_</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>ad661dbbba29e1412ed2e0596bc716276</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DirectSolver</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>aca69e7231d1854197693892a1a8cd2c7</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DirectSolver</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a14c8aa241f481c1e878a8e1dba321edd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>adf16acebfa38808af1b20a2fdc16e8f9</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a2b5b69befc1e3a66e6e4eccab4e38fed</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a988de644883b36e6101252c6fe5730ca</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>a70bad88cfd18cdebcd888db50cbfa89c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1DirectSolver.html</anchorfile>
      <anchor>af35265db1d9e19691cdf0944c2dcc77f</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::DisableMultipleCallCheck</name>
    <filename>classMueLu_1_1DisableMultipleCallCheck.html</filename>
    <member kind="function">
      <type></type>
      <name>DisableMultipleCallCheck</name>
      <anchorfile>classMueLu_1_1DisableMultipleCallCheck.html</anchorfile>
      <anchor>aa73bfcc2725de04ee2894bcfd69dc0ba</anchor>
      <arglist>(const RCP&lt; const TwoLevelFactoryBase &gt; &amp;fact)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DisableMultipleCallCheck</name>
      <anchorfile>classMueLu_1_1DisableMultipleCallCheck.html</anchorfile>
      <anchor>ade9130ee896821f80226ede94206a16b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const TwoLevelFactoryBase &gt;</type>
      <name>fact_</name>
      <anchorfile>classMueLu_1_1DisableMultipleCallCheck.html</anchorfile>
      <anchor>a5fd7517cdec8ec2e86d7fe8d8d1824c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::DropNegativeEntriesFactory</name>
    <filename>classMueLu_1_1DropNegativeEntriesFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>DropNegativeEntriesFactory</name>
      <anchorfile>classMueLu_1_1DropNegativeEntriesFactory.html</anchorfile>
      <anchor>ab49a1917be6533982782fac75f98abd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DropNegativeEntriesFactory</name>
      <anchorfile>classMueLu_1_1DropNegativeEntriesFactory.html</anchorfile>
      <anchor>abbc4c33d2bd55c3a5073a0557d68c7ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1DropNegativeEntriesFactory.html</anchorfile>
      <anchor>a0a181f96758ad5104baeef7b040499a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1DropNegativeEntriesFactory.html</anchorfile>
      <anchor>abf0e07e3b084e64050f7638942b2c431</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1DropNegativeEntriesFactory.html</anchorfile>
      <anchor>abc83d36283e42c7890286b2b3a8f6fdc</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::EminPFactory</name>
    <filename>classMueLu_1_1EminPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1EminPFactory.html</anchorfile>
      <anchor>a3afe3b5445bd7a8744ec2c6e613072ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EminPFactory</name>
      <anchorfile>classMueLu_1_1EminPFactory.html</anchorfile>
      <anchor>ae12faae6540b6c93b1ba78095a13177d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EminPFactory</name>
      <anchorfile>classMueLu_1_1EminPFactory.html</anchorfile>
      <anchor>a2cbfaee51503d3c03ba9ef9a02524c84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1EminPFactory.html</anchorfile>
      <anchor>a92453d50e648ae3a5a2bd6730cfc5753</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1EminPFactory.html</anchorfile>
      <anchor>a7c26e033b46838ee9f0108c3b7372ee7</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1EminPFactory.html</anchorfile>
      <anchor>af2b7eb1239f62c37f5dad00697d134ba</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FacadeBGS2x2</name>
    <filename>classMueLu_1_1FacadeBGS2x2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::FacadeClassBase</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1FacadeBGS2x2.html</anchorfile>
      <anchor>ac8cac49d4734e6f3f4a977abcb4f1841</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>stringTemplate_</name>
      <anchorfile>classMueLu_1_1FacadeBGS2x2.html</anchorfile>
      <anchor>a4efae261ab4962f398e8308281548915</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>defaultParams_</name>
      <anchorfile>classMueLu_1_1FacadeBGS2x2.html</anchorfile>
      <anchor>a9ae477c23ae067d3c7f4487627b54365</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FacadeBGS2x2</name>
      <anchorfile>classMueLu_1_1FacadeBGS2x2.html</anchorfile>
      <anchor>a9c2a11f1ce0486ef4eefcb9478d17d87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FacadeBGS2x2</name>
      <anchorfile>classMueLu_1_1FacadeBGS2x2.html</anchorfile>
      <anchor>ae3de8f5e6fcb7c4f84657ef26a6cb2c3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FacadeClassBase</name>
    <filename>classMueLu_1_1FacadeClassBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">MueLu::BaseClass</base>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1FacadeClassBase.html</anchorfile>
      <anchor>af1614114528a9aacf6ce61f3f9cc63b6</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)=0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>ReplaceString</name>
      <anchorfile>classMueLu_1_1FacadeClassBase.html</anchorfile>
      <anchor>a585610de8f27316c6acd9b01b90fc224</anchor>
      <arglist>(std::string &amp;subject, const std::string &amp;search, const std::string &amp;replace)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FacadeClassBase</name>
      <anchorfile>classMueLu_1_1FacadeClassBase.html</anchorfile>
      <anchor>aec4d1652f9febef38d626e8e3d08452e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FacadeClassBase</name>
      <anchorfile>classMueLu_1_1FacadeClassBase.html</anchorfile>
      <anchor>a32b46753c7564e6062d96f8e39f9ab29</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FacadeClassFactory</name>
    <filename>classMueLu_1_1FacadeClassFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">MueLu::BaseClass</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1FacadeClassFactory.html</anchorfile>
      <anchor>a3f0fc6650b6537706a2b8a5f8b35b907</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterFacadeClass</name>
      <anchorfile>classMueLu_1_1FacadeClassFactory.html</anchorfile>
      <anchor>a7ac20eec96bec58fd3d6c89ecffc0bfd</anchor>
      <arglist>(std::string name, Teuchos::RCP&lt; FacadeClassBase&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; facadeclass)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; FacadeClassBase&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</type>
      <name>facadeClasses_</name>
      <anchorfile>classMueLu_1_1FacadeClassFactory.html</anchorfile>
      <anchor>a38bef155cef5a39db6fff923b611b5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FacadeClassFactory</name>
      <anchorfile>classMueLu_1_1FacadeClassFactory.html</anchorfile>
      <anchor>a58ce31cf4be8b6a933f7f6698a10bb69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FacadeClassFactory</name>
      <anchorfile>classMueLu_1_1FacadeClassFactory.html</anchorfile>
      <anchor>a461be707bd5386dde609c75d5be29239</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FacadeSimple</name>
    <filename>classMueLu_1_1FacadeSimple.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::FacadeClassBase</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1FacadeSimple.html</anchorfile>
      <anchor>aa84ebd6e9b29c24113fefb02e72cb029</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>stringTemplate_</name>
      <anchorfile>classMueLu_1_1FacadeSimple.html</anchorfile>
      <anchor>a1959f4f11db257dcbd7921991ccb4038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>defaultParams_</name>
      <anchorfile>classMueLu_1_1FacadeSimple.html</anchorfile>
      <anchor>a1f3c0c47315b6a82e0770b1b2abb36ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FacadeSimple</name>
      <anchorfile>classMueLu_1_1FacadeSimple.html</anchorfile>
      <anchor>a8754280c838671a4b7710e4c17c9e37e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FacadeSimple</name>
      <anchorfile>classMueLu_1_1FacadeSimple.html</anchorfile>
      <anchor>afdefbd7c48c0d7c304df97c1270bf7b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Factory</name>
    <filename>classMueLu_1_1Factory.html</filename>
    <base>MueLu::FactoryBase</base>
    <base>MueLu::FactoryAcceptor</base>
    <base>MueLu::ParameterListAcceptorImpl</base>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>ae1c8a4c3ffdb0a70df3fda9e9a2b1d4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableMultipleCallCheck</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a6186a13d50cc991627bf40ca02f68e98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisableMultipleCallCheck</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a32c7da69649616fd04ff35071f1fa600</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetDebugData</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>adafacc49c5c276fb92fba8d1352a3399</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>EnableMultipleCheckGlobally</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a422f2f2b05b7d6ee0fb3a16d10b1b8be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DisableMultipleCheckGlobally</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a01a951d024fada6c453ae8db8a0a9971</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Input</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a67fbe09a54ca61a94b4b808ff99432fa</anchor>
      <arglist>(Level &amp;level, const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Input</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>ab73aaf90d2018fd87c8521bd36eec4f6</anchor>
      <arglist>(Level &amp;level, const std::string &amp;varName, const std::string &amp;varParamName) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>Get</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a58a788c2b011138f64cb1522b018d5c2</anchor>
      <arglist>(Level &amp;level, const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T</type>
      <name>Get</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a77de8fdec27dc63bad4e752f2d57081f</anchor>
      <arglist>(Level &amp;level, const std::string &amp;varName, const std::string &amp;varParamName) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>ad6f999c606f6268f2fecca5bcf9640a6</anchor>
      <arglist>(Level &amp;level, const std::string &amp;varName, const T &amp;data) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsAvailable</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a3a04c7a2a68bda07d4da096e65e7acc7</anchor>
      <arglist>(Level &amp;level, const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Factory</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>aa011c97aee0b522eb0a929f818379135</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Factory</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a6c7b354ca7eaf5ff968317222b1a3589</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetFactory</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a69bc75b4b2759ced59bc0532cce93dcd</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FactoryBase &gt;</type>
      <name>GetFactory</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>aae77fdac3443d6406629b15ac6cd0c79</anchor>
      <arglist>(const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>RemoveFactoriesFromList</name>
      <anchorfile>classMueLu_1_1Factory.html</anchorfile>
      <anchor>a1e5deaab42468f3511a47aa0dfdc94af</anchor>
      <arglist>(const ParameterList &amp;list) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FactoryAcceptor</name>
    <filename>classMueLu_1_1FactoryAcceptor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FactoryAcceptor</name>
      <anchorfile>classMueLu_1_1FactoryAcceptor.html</anchorfile>
      <anchor>ab205091728557239b6e0375f11e18bcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetFactory</name>
      <anchorfile>classMueLu_1_1FactoryAcceptor.html</anchorfile>
      <anchor>a37ff061470403070800b0e958df33085</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const FactoryBase &gt;</type>
      <name>GetFactory</name>
      <anchorfile>classMueLu_1_1FactoryAcceptor.html</anchorfile>
      <anchor>a82f0c4d45855dafd9d6027aed2c8f2e1</anchor>
      <arglist>(const std::string &amp;varName) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FactoryBase</name>
    <filename>classMueLu_1_1FactoryBase.html</filename>
    <base virtualness="virtual">MueLu::BaseClass</base>
    <member kind="function" protection="private" static="yes">
      <type>static int</type>
      <name>GenerateUniqueId</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>a23b4e4766b83cc59ecf31145f9d0bb24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const int</type>
      <name>id_</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>a4eedd13724aebe0213eaffa1e43495ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryBase</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>aa93a02cbc70b0f25f528db9041f7ee85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FactoryBase</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>acebd2928d30a677cb6f6463a77dcbed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>a4de0ce4b8373a06c0b49ee6c88d5b168</anchor>
      <arglist>(Level &amp;requestedLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>ac9494da64c8e26ae8ebeb45c7b3b0c52</anchor>
      <arglist>(Level &amp;requestedLevel) const  =0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetID</name>
      <anchorfile>classMueLu_1_1FactoryBase.html</anchorfile>
      <anchor>ae3c9976880d6494aa45af75cc0d17fe5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FactoryFactory</name>
    <filename>classMueLu_1_1FactoryFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const FactoryBase &gt;</type>
      <name>BuildFactory</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ac2d810dc0de2f9b24b8b916bcd8862a3</anchor>
      <arglist>(const Teuchos::ParameterEntry &amp;param, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>a7086d1bafbb246521e9298f7109115b8</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>Build2</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>abcc006afd5b0641bc743d9cf7746a0c2</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>BuildRAPFactory</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ac923d328dbb27f2dc675fd03089cf597</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>BuildTogglePFactory</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ab57cd111f298779d06e4568b3fde576b</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ToggleCoordinatesTransferFactory &gt;</type>
      <name>BuildToggleCoordinatesTransferFactory</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ac598cf2006378e5e772e7d8ec25e9a29</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildCoupledAggregationFactory</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ac34a282bc057a0930b008183b2cf5889</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildTrilinosSmoother</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>a2b31ffed2fd7f1dded018ce3f3f06e6f</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildMatlabSmoother</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>a37240a3c4142457eab6e0b843aa8ca34</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildDirectSolver</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>aa860e26b0f3df40e412a83e473caf3aa</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildBlockedSmoother</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ad64a85a6d6082a5498a7283a309aa5b4</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildTekoSmoother</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ad91d8bc06a644a7400b53cead34b4fc8</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>BuildBlockedDirectSolver</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ab4dffe55242b40d768f9fbc3a59f0352</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>BuildBlockedFactory</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>ad3b7d488155b086dbd79540958f31391</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, const FactoryManagerMap &amp;factoryManagersIn) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>FactoryMap</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>a24c22cb36be00d2862269725efc6bd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; FactoryManagerBase &gt; &gt;</type>
      <name>FactoryManagerMap</name>
      <anchorfile>classMueLu_1_1FactoryFactory.html</anchorfile>
      <anchor>a35ab2e57baa8d92ce773d1bde8ddb4c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FactoryManager</name>
    <filename>classMueLu_1_1FactoryManager.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>MueLu::FactoryManagerBase</base>
    <member kind="function">
      <type>void</type>
      <name>Clean</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a8e593351e69e62a06590f6a2ee393596</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a04d532f3c06959a1db4fd1f38566fe8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>factoryTable_</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a74669966eba98f0338c7f2b15d60c9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>defaultFactoryTable_</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a4da1aa8c4563da2c0078c92dfb6ef9e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryManager</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a993788aa5de0c3fdba410669c166faa3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryManager</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a9bdcaa94c17f6d8fe399c67e3a53f739</anchor>
      <arglist>(const std::map&lt; std::string, RCP&lt; const FactoryBase &gt; &gt; &amp;factoryTable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FactoryManager</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a9ed982ace0280a131f33997a5032b466</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFactory</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a56a57f06a2caee516e1e817fd8a9a1d0</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FactoryBase &gt;</type>
      <name>GetFactory</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a42e33a2b6e02c231ccfe7d0c4858279f</anchor>
      <arglist>(const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FactoryBase &gt;</type>
      <name>GetDefaultFactory</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>ad31f6817cc25f30e401bb32241ac1914</anchor>
      <arglist>(const std::string &amp;varName) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const RCP&lt; const FactoryBase &gt;</type>
      <name>SetAndReturnDefaultFactory</name>
      <anchorfile>classMueLu_1_1FactoryManager.html</anchorfile>
      <anchor>a3dca6110096a1550f6ee5cfdcc21baab</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FactoryManagerBase</name>
    <filename>classMueLu_1_1FactoryManagerBase.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Clean</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>a3f4d515027bdb9278d25b9df4b68d00c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IgnoreUserData</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>a7a69da2ec09bf8180ef5b5ae23ea59b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoreUserData</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>a06e882ae124ca5dfbbbe798df8fc094d</anchor>
      <arglist>(bool bIgnoreUserData=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bIgnoreUserData_</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>a9d9f465d9e4b52b4d7783b8bb7ef25c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryManagerBase</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>ade39f66dc2cca26abd0d693e6ac332c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FactoryManagerBase</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>abdf847db53b4fd43173e5e71c31fe872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const FactoryBase &gt;</type>
      <name>GetFactory</name>
      <anchorfile>classMueLu_1_1FactoryManagerBase.html</anchorfile>
      <anchor>a85a61d93e0ac7383d1567082b1c3377f</anchor>
      <arglist>(const std::string &amp;varName) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FactoryMonitor</name>
    <filename>classMueLu_1_1FactoryMonitor.html</filename>
    <base>MueLu::Monitor</base>
    <member kind="function">
      <type></type>
      <name>FactoryMonitor</name>
      <anchorfile>classMueLu_1_1FactoryMonitor.html</anchorfile>
      <anchor>a11de44a4520f86ddffcf28024a05b6d1</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, int levelID, MsgType msgLevel=static_cast&lt; MsgType &gt;(Test|Runtime0), MsgType timerLevel=Timings0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FactoryMonitor</name>
      <anchorfile>classMueLu_1_1FactoryMonitor.html</anchorfile>
      <anchor>ac6e6118883c026b32ff636c50b9845c6</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, const Level &amp;level, MsgType msgLevel=static_cast&lt; MsgType &gt;(Test|Runtime0), MsgType timerLevel=Timings0)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>timerIdentifier_</name>
      <anchorfile>classMueLu_1_1FactoryMonitor.html</anchorfile>
      <anchor>a971ba2711cf76601592057937d8c2b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; TimeMonitor &gt;</type>
      <name>levelTimeMonitor_</name>
      <anchorfile>classMueLu_1_1FactoryMonitor.html</anchorfile>
      <anchor>aa23dc4b4dcbe8d5203e0d88d1c578afe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MutuallyExclusiveTimeMonitor&lt; FactoryBase &gt;</type>
      <name>timerMonitorExclusive_</name>
      <anchorfile>classMueLu_1_1FactoryMonitor.html</anchorfile>
      <anchor>aeb11a76091952ce0b40bce1ba8bb2643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MutuallyExclusiveTimeMonitor&lt; Level &gt; &gt;</type>
      <name>levelTimeMonitorExclusive_</name>
      <anchorfile>classMueLu_1_1FactoryMonitor.html</anchorfile>
      <anchor>addf6632416639a1eab13a5e59efbb618</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::FakeSmootherPrototype</name>
    <filename>classMueLu_1_1FakeSmootherPrototype.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>MueLu::FilteredAFactory</name>
    <filename>classMueLu_1_1FilteredAFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BuildReuse</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>ae1c3d95c17c4d43e7a4b1d54bc02e5c4</anchor>
      <arglist>(const Matrix &amp;A, const GraphBase &amp;G, const bool lumping, Matrix &amp;filteredA) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BuildNew</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>afe511b044cc61935df6525e3547f4fa3</anchor>
      <arglist>(const Matrix &amp;A, const GraphBase &amp;G, const bool lumping, Matrix &amp;filteredA) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilteredAFactory</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>a8a8f21b0431ca3da1bb8d9c896ba98eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FilteredAFactory</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>a9d8f180bbd27f789573170b56ba618d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>ad1a2a235b2ac8a5bb6bb93c095011916</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>aa0a0846449fe1a14533a6867ac327b06</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1FilteredAFactory.html</anchorfile>
      <anchor>af4b07d64e2f03fa8b6ccccbe59ce034c</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::GenericRFactory</name>
    <filename>classMueLu_1_1GenericRFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>GenericRFactory</name>
      <anchorfile>classMueLu_1_1GenericRFactory.html</anchorfile>
      <anchor>afb3cfd2779299ccbc5637af1a15225ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GenericRFactory</name>
      <anchorfile>classMueLu_1_1GenericRFactory.html</anchorfile>
      <anchor>a1faa3985ceb2e6b57197c6eb2110eeda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1GenericRFactory.html</anchorfile>
      <anchor>aea585db285d3f62becb7e236532ca7dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1GenericRFactory.html</anchorfile>
      <anchor>aac5ef21617112e7dd8a773274061a5e4</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1GenericRFactory.html</anchorfile>
      <anchor>a91fa0ef2bbc2c5c2ef029a6b6d7482ed</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::GeoInterpFactory</name>
    <filename>classMueLu_1_1GeoInterpFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type></type>
      <name>GeoInterpFactory</name>
      <anchorfile>classMueLu_1_1GeoInterpFactory.html</anchorfile>
      <anchor>a40ff945239eeff80930186633627c8eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GeoInterpFactory</name>
      <anchorfile>classMueLu_1_1GeoInterpFactory.html</anchorfile>
      <anchor>a74156d7e6db5b88af3c1b2596d8ee4d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1GeoInterpFactory.html</anchorfile>
      <anchor>a04e0ca089bfe0855a46b171d7f185aa1</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1GeoInterpFactory.html</anchorfile>
      <anchor>a8b825f6648dba9a6155f83db2fe0879f</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1GeoInterpFactory.html</anchorfile>
      <anchor>a85edf121df1e1ec2c47cb2ac840acde1</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::VariableContainer::Getter</name>
    <filename>structMueLu_1_1VariableContainer_1_1Getter.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T &amp;</type>
      <name>get</name>
      <anchorfile>structMueLu_1_1VariableContainer_1_1Getter.html</anchorfile>
      <anchor>afef3994fb3e2267650a1510c26cabae8</anchor>
      <arglist>(DataBase *data_, DataBase *&amp;datah_)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::VariableContainer::Getter&lt; Teuchos::RCP&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</name>
    <filename>structMueLu_1_1VariableContainer_1_1Getter_3_01Teuchos_1_1RCP_3_01Xpetra_1_1Operator_3_01Scalar_3c2ced7bd27c6d8719a15e020c1c0bc0.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Operator</name>
      <anchorfile>structMueLu_1_1VariableContainer_1_1Getter_3_01Teuchos_1_1RCP_3_01Xpetra_1_1Operator_3_01Scalar_3c2ced7bd27c6d8719a15e020c1c0bc0.html</anchorfile>
      <anchor>a0cfa2253953888a19f822bff16bc8465</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Matrix</name>
      <anchorfile>structMueLu_1_1VariableContainer_1_1Getter_3_01Teuchos_1_1RCP_3_01Xpetra_1_1Operator_3_01Scalar_3c2ced7bd27c6d8719a15e020c1c0bc0.html</anchorfile>
      <anchor>a7fb728eee8fa6682aa840aed091572b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Operator &gt; &amp;</type>
      <name>get</name>
      <anchorfile>structMueLu_1_1VariableContainer_1_1Getter_3_01Teuchos_1_1RCP_3_01Xpetra_1_1Operator_3_01Scalar_3c2ced7bd27c6d8719a15e020c1c0bc0.html</anchorfile>
      <anchor>ae38ea5e2fd37e3da03a8f431c7be81d4</anchor>
      <arglist>(DataBase *data_, DataBase *&amp;datah_)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::GMRESSolver</name>
    <filename>classMueLu_1_1GMRESSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SolverBase</base>
    <member kind="function" protection="private">
      <type>void</type>
      <name>givapp</name>
      <anchorfile>classMueLu_1_1GMRESSolver.html</anchorfile>
      <anchor>a65b72d1382482c0abf31016cd3a8dbd3</anchor>
      <arglist>(SC *c, SC *s, SC *v, int k) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>nIts_</name>
      <anchorfile>classMueLu_1_1GMRESSolver.html</anchorfile>
      <anchor>a91ff76ac10420d5cddc76753c1af2a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GMRESSolver</name>
      <anchorfile>classMueLu_1_1GMRESSolver.html</anchorfile>
      <anchor>adac07f7957df2e1ab9c5347a4bceb99b</anchor>
      <arglist>(size_t Its)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Iterate</name>
      <anchorfile>classMueLu_1_1GMRESSolver.html</anchorfile>
      <anchor>a4eeea9d6190abdc8f4694938c6d2cbdb</anchor>
      <arglist>(const Matrix &amp;A, const Constraint &amp;C, const Matrix &amp;P0, RCP&lt; Matrix &gt; &amp;P) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Graph</name>
    <filename>classMueLu_1_1Graph.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::GraphBase</base>
    <member kind="function">
      <type>size_t</type>
      <name>GetNodeNumVertices</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a5dbee8d7a1f5da594a57fdf5cfbd076e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetNodeNumEdges</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>aef92db472a74a9b096f5ef0be764ae9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Xpetra::global_size_t</type>
      <name>GetGlobalNumEdges</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a9848477ec32854de4afb76e387d1cc6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>GetComm</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a28d5e11a6fdb11bbc2dbbf8c727be2ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>GetDomainMap</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a95b3cb4bad26ff1c0eee80ea5fd1bc3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>GetImportMap</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>aa27dbd86d37388b0640839473e8f9259</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a2fbb69888dbeaca80a883d2e85858d5f</anchor>
      <arglist>(const ArrayRCP&lt; const bool &gt; &amp;localDirichletNodes)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const bool &gt;</type>
      <name>GetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>add38d7fe4cffac7b6a99fa76391b5613</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>aad0626e9b8613cb9613afb9a8b31cc14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const LO &gt;</type>
      <name>getNeighborVertices</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>ae0afa4bf5feda142700197cfe99ff2b3</anchor>
      <arglist>(LO i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocalNeighborVertex</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a14aa45aeca791866cdfa7fa7bd4a62bf</anchor>
      <arglist>(LO i) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a9c68ed6c309d99b8f4ba32cba720ae26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a9caacfb4e00900402b623ed5921daaf2</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const CrsGraph &gt;</type>
      <name>graph_</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>ab40912afc39902062ccaf90dae2fd153</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; const bool &gt;</type>
      <name>localDirichletNodes_</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>a13c900dd061aaca5af4aa31d1ec2fccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>minLocalIndex_</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>aa8fee78bf0b8c73b7cb19bfe465da434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>maxLocalIndex_</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>aa07ff48eedfb024ce5343adaf7a354c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Graph</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>affaaf7f86b263656e031a95d3db6f1dc</anchor>
      <arglist>(const RCP&lt; const CrsGraph &gt; &amp;graph, const std::string &amp;objectLabel=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Graph</name>
      <anchorfile>classMueLu_1_1Graph.html</anchorfile>
      <anchor>ac9570311192a9494df17785e6ad8c192</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::GraphBase</name>
    <filename>classMueLu_1_1GraphBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>GetComm</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a109aaa11e5325f1de261caa3b2b85202</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map &gt;</type>
      <name>GetDomainMap</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>acc58cc2efcf4b79101bce55c6ce6e002</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const RCP&lt; const Map &gt;</type>
      <name>GetImportMap</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>aab9f0a0cb0a88251eabd65d7a2e48852</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GraphBase</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>aadb0e721dc1b91254184a594ebebd5c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>GetNodeNumVertices</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a916f90699be09c16eab1c8cad7e76ec8</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>GetNodeNumEdges</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>aeb11e278f46e67435b018e2691e8d71b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a56a8db569b6a5c73bf68413045cf0995</anchor>
      <arglist>(const ArrayRCP&lt; const bool &gt; &amp;boundaryArray)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a907fdeb4d29932d88659b7d44c6d5a54</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const ArrayRCP&lt; const bool &gt;</type>
      <name>GetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a90ad71475b5a381529481ad7fe274785</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Xpetra::global_size_t</type>
      <name>GetGlobalNumEdges</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>aab11e52e994ab1c01d2aa1b1d79534ec</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::ArrayView&lt; const LocalOrdinal &gt;</type>
      <name>getNeighborVertices</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a01353fd92cbc791ae8721cdea364d637</anchor>
      <arglist>(LocalOrdinal v) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isLocalNeighborVertex</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>aa4e713ec3b7bab745d7b2dc4826725fd</anchor>
      <arglist>(LocalOrdinal v) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>ac2d0117eb7a942dd600971fc9829ccd2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1GraphBase.html</anchorfile>
      <anchor>a137c284449cd069b347534131c4a99f1</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Hierarchy</name>
    <filename>classMueLu_1_1Hierarchy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <class kind="struct">MueLu::Hierarchy::ConvData</class>
    <member kind="function">
      <type>void</type>
      <name>AddLevel</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a01eb17201fa04cbb1f7e32105ec1ddf8</anchor>
      <arglist>(const RCP&lt; Level &gt; &amp;level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddNewLevel</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ae80ce1c7c575777455f87473a11e4278</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Level &gt; &amp;</type>
      <name>GetLevel</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a06c3f06aa3d204971ac696ccdffeff32</anchor>
      <arglist>(const int levelID=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetNumLevels</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>af9b7d36a865ca391ec68d0a398b27d66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetGlobalNumLevels</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a05639aa986be22b8049813cb878f8fae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>GetRate</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a86fa704fa91bced16303b3b8bab1df38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetOperatorComplexity</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ab4869b87668cfd9dd7f88920b5bde5ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckLevel</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a127af013b44c23af0da75ebdded9fd57</anchor>
      <arglist>(Level &amp;level, int levelID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a3b0d0e005be1c5cd4d3c08e6d557d6f4</anchor>
      <arglist>(int coarseLevelID, const RCP&lt; const FactoryManagerBase &gt; fineLevelManager, const RCP&lt; const FactoryManagerBase &gt; coarseLevelManager, const RCP&lt; const FactoryManagerBase &gt; nextLevelManager=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a3bf39be63ca87964ff637bfecc99bee3</anchor>
      <arglist>(const FactoryManagerBase &amp;manager=FactoryManager(), int startLevel=0, int numDesiredLevels=GetDefaultMaxLevels())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetupRe</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aded249a8bbfd00f16c3836458eea394b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a79d67c93f141939f81c7741f7ee67939</anchor>
      <arglist>(int startLevel=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpertClear</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ae73d3fd8a950bb4a149aaec190b84f7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CycleType</type>
      <name>GetCycle</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>afe1001bdd81533556ba392ed6d134414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCycle</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ae72690f408af22f464321310317db4b0</anchor>
      <arglist>(CycleType Cycle)</arglist>
    </member>
    <member kind="function">
      <type>ReturnType</type>
      <name>Iterate</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a863f0327c467ab54330aba79f9110001</anchor>
      <arglist>(const MultiVector &amp;B, MultiVector &amp;X, ConvData conv=ConvData(), bool InitialGuessIsZero=false, LO startLevel=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Write</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a04b92f8d431f1da3bd3e8e2b2a0ce972</anchor>
      <arglist>(const LO &amp;start=-1, const LO &amp;end=-1, const std::string &amp;suffix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnableGraphDumping</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a7d223dc353efaaa48e5e7138219739c1</anchor>
      <arglist>(const std::string &amp;filename, int levelID=1)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a73a86f0ec58ea42589f2ed2f7ed4de44</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setlib</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a3a4a659d6b49b4b9943a5eb9b1c7c64a</anchor>
      <arglist>(Xpetra::UnderlyingLib inlib)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ab0764385401d40c015e8d3a78e05021b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aa61fe8e4c27b67e27f95d2e93b95ddbb</anchor>
      <arglist>(const Teuchos::RCP&lt; Node2 &gt; &amp;node2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const RCP&lt; const FactoryManagerBase &gt; &amp;</type>
      <name>GetLevelManager</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>adcd93499992298cf1676cbe6ade47d08</anchor>
      <arglist>(const int levelID) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::ScalarTraits&lt; SC &gt;</type>
      <name>STS</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a8c2c902e4614e2ca0399d10929a41e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>STS::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a3bc326ce734f708cbaa0c8afdcf232de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>LastLevelID</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aeae22d444fb5756d85253c07b9c9c5b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DumpCurrentGraph</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a38dc50ec2eea8acb9004a2a4f2d96ccb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Hierarchy</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aa000463e65be101e01d86355bd41ffef</anchor>
      <arglist>(const Hierarchy &amp;h)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ReplaceCoordinateMap</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>af54478a31e70ca48f93cac787845e241</anchor>
      <arglist>(Level &amp;level)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; Level &gt; &gt;</type>
      <name>Levels_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a2bc041e7638df7b72d2bd95faf7d82ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Xpetra::global_size_t</type>
      <name>maxCoarseSize_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ad2971322b9ccf466f4648adb93977da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>implicitTranspose_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a19d46d3a35188b1f3b4506eb60252324</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>doPRrebalance_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a24c39401c628daf8c7cc79d0ded0229b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isPreconditioner_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a439688eb896d741a4ba21d6000a8439c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CycleType</type>
      <name>Cycle_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a89f6c39a2415768eba015ae1bc6b493e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Xpetra::UnderlyingLib</type>
      <name>lib_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a780f769ebbd1913dbe253aa4a71c7e07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isDumpingEnabled_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>acba00ad3df803b68f57e4887f209d855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dumpLevel_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a36edb5071ccf096648f25a48e27abafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>dumpFile_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a040959adc89117673497472431850fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MagnitudeType</type>
      <name>rate_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a925fa4efb34d670477aaceaa04efbf0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>levelManagers_</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>af0ce4b343a8ff7829dbf8aba608c3c28</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Hierarchy</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a822cc2e53f55843ac332636f767cf467</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Hierarchy</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>adc216a265efa27012dea01a3b1be5f06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Hierarchy</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ac0cc9e55a3c8221e8d3bac4606402765</anchor>
      <arglist>(const RCP&lt; Matrix &gt; &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Hierarchy</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a42c13331b4ffa41dc0ae84ceef3df561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::global_size_t</type>
      <name>GetMaxCoarseSize</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aae0db16af4c5a41bcf0fa5ce3eee2dea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetImplicitTranspose</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a75db6c45baa70973ca05b1272a8291f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxCoarseSize</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a89c1a614ee0ec7c295ec832014c0a4b7</anchor>
      <arglist>(Xpetra::global_size_t maxCoarseSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPRrebalance</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a4511d1837ae3c64b1a4eb95335f49228</anchor>
      <arglist>(bool doPRrebalance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetImplicitTranspose</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>af5359e0fb50159e7de44aaf5b8045f66</anchor>
      <arglist>(const bool &amp;implicit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static CycleType</type>
      <name>GetDefaultCycle</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a2ab4098e1a7cf8ad6dc5f6261c455cce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetDefaultImplicitTranspose</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a6fca3944e110b71c2c35f22ab8f0e322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Xpetra::global_size_t</type>
      <name>GetDefaultMaxCoarseSize</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a745e1f48eeba0a6ce5149e0dde674257</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetDefaultMaxLevels</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ae038ebeab6b2d6ad1bd65b580fd740fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetDefaultPRrebalance</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a2f6f19e2a1a1b6ed2411160385187797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Keep</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aa8fcb1af999cfa8350c243ab36da5f78</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delete</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aa2015c9e1370065a6a12f82c18064806</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKeepFlag</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>ad719c23e5b5b747244f96e40d205bb13</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get(), KeepType keep=MueLu::Keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKeepFlag</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aec29a21dced37f5a1ed892a2ecb2d8ed</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory, KeepType keep=MueLu::All)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a6483b66a9731958c4dfeded9b6ad0138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>af7e940e8f81926b32d4a775e03497cc9</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>aff1d4715dfd6b8fd75afaf55a1272441</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::VERB_HIGH) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a0a4298aa7230ba64719c652193ed77ae</anchor>
      <arglist>(std::ostream &amp;out=std::cout, const VerbLevel verbLevel=(MueLu::Parameters|MueLu::Statistics0)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsPreconditioner</name>
      <anchorfile>classMueLu_1_1Hierarchy.html</anchorfile>
      <anchor>a1fcbef9d8d792a313eb9b97099f8a537</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::HierarchyFactory</name>
    <filename>classMueLu_1_1HierarchyFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Hierarchy &gt;</type>
      <name>CreateHierarchy</name>
      <anchorfile>classMueLu_1_1HierarchyFactory.html</anchorfile>
      <anchor>a224305f40e57ec35f29a63a1a6e0aa3c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetupHierarchy</name>
      <anchorfile>classMueLu_1_1HierarchyFactory.html</anchorfile>
      <anchor>ae5036a24b8bc0a382edb35643ba8da88</anchor>
      <arglist>(Hierarchy &amp;H) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFactory</name>
      <anchorfile>classMueLu_1_1HierarchyFactory.html</anchorfile>
      <anchor>aad396e335e751abb31f78b620354f204</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::HierarchyManager</name>
    <filename>classMueLu_1_1HierarchyManager.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::HierarchyFactory</base>
    <member kind="typedef">
      <type>std::map&lt; std::string, RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>FactoryMap</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a4313267c90230e210d8c708aa48af84f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HierarchyManager</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ad2f149eca00147375cf6c112e0d52ba7</anchor>
      <arglist>(int numDesiredLevel=MasterList::getDefault&lt; int &gt;(&quot;max levels&quot;))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyManager</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a5f01358368c7e832e705908977d38aaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a9c504f9354ed8cc734490e03158e40e3</anchor>
      <arglist>(int startLevel, int numDesiredLevel, RCP&lt; FactoryManagerBase &gt; manager)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FactoryManagerBase &gt;</type>
      <name>GetFactoryManager</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a45d31aba9c3d30ad996cdb1571274f17</anchor>
      <arglist>(int levelID) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNumFactoryManagers</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ad36fb97272554848ea802f16b19ba2e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CheckConfig</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a93c34a03be16cd9a5c519d51f9c2da41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupOperator</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a767d74336ff66e6520afc7857837b269</anchor>
      <arglist>(Operator &amp;Op) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupExtra</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ace42e8b82accfe72a9061058280884cb</anchor>
      <arglist>(Hierarchy &amp;H) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; FactoryManagerBase &gt;</type>
      <name>LvlMngr</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a4f6801d67674f38a73620e47096dd3a4</anchor>
      <arglist>(int levelID, int lastLevelID) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numDesiredLevel_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ae90629e3d729f8898697a10f68c586c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Xpetra::global_size_t</type>
      <name>maxCoarseSize_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>aabf7359c5d6432b5aff958efa18268dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MsgType</type>
      <name>verbosity_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a1d8c4f795a3cc1e96b6791630d0bbcf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>doPRrebalance_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a203eef7aad430b726ed9296ccc596aa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>implicitTranspose_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a0e9038c9eb4bc6c9a7c341846ca1a16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>graphOutputLevel_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a986dea12fcf9e69d69c419ae35fd2bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>matricesToPrint_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a2bdeb80c0b4c31f5dff8abe5f261bcc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>prolongatorsToPrint_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a4fa4192f302cef253c9d19109330f8e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>restrictorsToPrint_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a41ce7796e4a424a9a8f18843bf2ea780</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>nullspaceToPrint_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a33714b523f00e001d35a9e878a6b89b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>coordinatesToPrint_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ad187c23146ea4a8f90608beb3b91c07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, std::vector&lt; keep_pair &gt; &gt;</type>
      <name>keep_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a5ac31c0e9240148f3f9d1da2fecf2e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, const FactoryBase * &gt;</type>
      <name>keep_pair</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a8eee64faa49c1432167d0c6b41043ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>WriteData</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ae87dec28a58c3d0bc3cc572444f95567</anchor>
      <arglist>(Hierarchy &amp;H, const Teuchos::Array&lt; int &gt; &amp;data, const std::string &amp;name) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; FactoryManagerBase &gt; &gt;</type>
      <name>levelManagers_</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>a2c685830ba624bc866e882e38d75e40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Hierarchy &gt;</type>
      <name>CreateHierarchy</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>aed804b3a3d8fabd1486ba53b612b55a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupHierarchy</name>
      <anchorfile>classMueLu_1_1HierarchyManager.html</anchorfile>
      <anchor>ad270ef31dc1cb8a8b44bf4d908f3ff55</anchor>
      <arglist>(Hierarchy &amp;H) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::HierarchyUtils</name>
    <filename>classMueLu_1_1HierarchyUtils.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AddNonSerializableDataToHierarchy</name>
      <anchorfile>classMueLu_1_1HierarchyUtils.html</anchorfile>
      <anchor>a469d4f1bb405d2958d4e805c9af257d8</anchor>
      <arglist>(HierarchyManager &amp;HM, Hierarchy &amp;H, const ParameterList &amp;nonSerialList)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Ifpack2Smoother</name>
    <filename>classMueLu_1_1Ifpack2Smoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a5f5e8bab4492db1736bb7851708ab99d</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Ifpack2Smoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a54f7a4361cead4f2865788fc6cafc1a5</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Ifpack2Smoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a4d06b61af6f56b5fc58290faa5e0b15d</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetPrecParameters</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a9d1828c29a66393b5252a8c2749c28ba</anchor>
      <arglist>(const Teuchos::ParameterList &amp;list=Teuchos::ParameterList()) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupSchwarz</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a0ea9a2736a8b36934e2b19bb90c8f89e</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupChebyshev</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a4bf6df7dcf207d04a3ce72ddaa852eb6</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupLineSmoothing</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>ac69f651d72b7390172a8cb614fc3d06e</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetupGeneric</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>ada5df1b3d1b2e2bcb46b68bb562cecab</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>aa8d1f618696b651365c865eff048a832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>overlap_</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a7da815855d7a688ffe32b9a1fed5ae6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Ifpack2::Preconditioner&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>prec_</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>aa71d9639b586fcf620bb18f3f577042f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>ac276a972e280bd5de09caa17acff5eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Ifpack2Smoother</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>aa996c70540640f86ec03cd8f1d13061b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ifpack2Smoother</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a54c317f0b14d348b61f6bd10c2972370</anchor>
      <arglist>(const std::string &amp;type, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList(), const LO &amp;overlap=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Ifpack2Smoother</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a438d3c2b068673bcb98b96e5d68943a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>ada0bceff0e49d7b336eaef0a87044e09</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a0f4db7edb7371d29c93dc3f11b055c89</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>ab5e1a815bcdd9ceba920718c668b243b</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>ab7544933b4f402e4cf4def2393612039</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>aabd11c0e8d7e10b3a941884f24c4a5a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother.html</anchorfile>
      <anchor>a0a24c4e063c72d1941acc04b4a529a49</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Ifpack2Smoother&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <base>SmootherPrototype&lt; double, int, int, Xpetra::EpetraNode &gt;</base>
    <member kind="function">
      <type></type>
      <name>Ifpack2Smoother</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5386f69d413fb4a9717b23a5b11ae018</anchor>
      <arglist>(const std::string &amp;type, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList(), const LocalOrdinal &amp;overlap=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Ifpack2Smoother</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a440cf3c3ef8d31953289be0ed8284254</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a638de1cb4591f8d87e965c9f57d062e3</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a4a470d1865f2bae5d75bddc91ba070d8</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a77a32d04dac29e02316ed6a12ed50762</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ab35275ea4926fd6a0553e1b24cb37d3e</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>abf15bdae3a993acb814ef79fa15f59ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Ifpack2Smoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a04735d8f5fb79343ef9d8b58374089dd</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const Teuchos::RCP&lt; const Matrix &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a96450ab250c689fbaa1d46952e71b6c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a963f0cd5e2754f1456200213e0274b46</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a972709903852a4745608b1781393df21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a791d308bce8fbb27700fe5194b7ee4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aee31c403be87ae0980bcdbf99f6ff3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a8da88940b7b53e2662d8d34f2319db23</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetPrecParameters</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a165315e98403b3da0f1f01c342e4c86f</anchor>
      <arglist>(const Teuchos::ParameterList &amp;list=Teuchos::ParameterList()) const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Ifpack2Smoother</name>
      <anchorfile>classMueLu_1_1Ifpack2Smoother_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa996c70540640f86ec03cd8f1d13061b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::IfpackSmoother</name>
    <filename>classMueLu_1_1IfpackSmoother.html</filename>
    <templarg></templarg>
    <base>SmootherPrototype&lt; double, int, int, Node &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>ae020572a8aedf518694b001caddee1aa</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>acb5a99bd31082c5bb9e952c1f9c89aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a8e0a2006ea330875dcc6696fe98066aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a886d94a5a9e038d4cca596ac69a88090</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetPrecParameters</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>abc79de2d4a00d4e27f80c974067977c0</anchor>
      <arglist>(const Teuchos::ParameterList &amp;list=Teuchos::ParameterList()) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a61e5915e63be81e6a8f62d52a0f31c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>overlap_</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>aa8d989aaaf3d11aff4e299f93aface3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a9a35d4cc357c6ccafafd9db30c8c1f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Ifpack_Preconditioner &gt;</type>
      <name>prec_</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>aa01b8a2f808f69f89be7ee88945a54dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IfpackSmoother</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a2874bd177ffdcb37e28d0bf1182666a2</anchor>
      <arglist>(std::string const &amp;type, Teuchos::ParameterList const &amp;paramList=Teuchos::ParameterList(), LO const &amp;overlap=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IfpackSmoother</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a3f8cccac51fd4335622d335581e47cc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>ab9314f18e377e314f257584895762970</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a63aa75ce6e38d90a33d8f45cb8ca708a</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>abb9a7c05156e71fc4c2f173f0f4212b3</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>aa3505023e7b157c25333e00ebe5315a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>aacae0d03f8e095a3595dd51870a51b3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1IfpackSmoother.html</anchorfile>
      <anchor>a5ddf5253352ef6af83cc001a5d9a537c</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::Incompatible</name>
    <filename>classMueLu_1_1Exceptions_1_1Incompatible.html</filename>
    <member kind="function">
      <type></type>
      <name>Incompatible</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1Incompatible.html</anchorfile>
      <anchor>a39fc9d12c0d5e342ad4c750d7ff8cb14</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::IndefBlockedDiagonalSmoother</name>
    <filename>classMueLu_1_1IndefBlockedDiagonalSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>ae5e34afa5040c7d95b991aac09b6d53e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a1658c929141abeb8b0c9314fbd9b1ad4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a4e4998b39c971bed1bcce7883f43a29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>AFact_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>ab3339bb454e1bfdbf8333ff242a104e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>ae4371352fe5af04ecf41a5e63ead3528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>F_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>afbcc21cd140a13b2c92753a971fd5672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>Z_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a16e5feaf2acaa6eb11e0e13009a8d00e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>rangeMapExtractor_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a61b933cdb444a17d4beee59547fa67be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>domainMapExtractor_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a4e9aaf3864fb07ef52a0016712d9d339</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>velPredictSmoo_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a77352e4de7a551e1b6d405eea9e67011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>schurCompSmoo_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a67d43295024ee9a47289ec5fe1cf8844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>aee51f4ee310566303e96838335f5dfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndefBlockedDiagonalSmoother</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a1505f87c77177d381da2ade1f1ef983c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndefBlockedDiagonalSmoother</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a1a4953de6bdfcfdaaa60364165e7b357</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a457f6723529f0e26e0a8b32a560eb85f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a1d2d3983140ea354ac339bfc98c94034</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a29f62fd525e6181b05c812cf5262c943</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager, int pos=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a460ac7dfd1562b7bb3a53fe20bd8cce6</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a9aadaaaf59e1c73925469a08c999f63e</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a4d54a3bd11815a567b709f309a0a921b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1IndefBlockedDiagonalSmoother.html</anchorfile>
      <anchor>a51cf968ea7f24bc296e1b635f53c317f</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::InvalidArgument</name>
    <filename>classMueLu_1_1Exceptions_1_1InvalidArgument.html</filename>
    <member kind="function">
      <type></type>
      <name>InvalidArgument</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1InvalidArgument.html</anchorfile>
      <anchor>aeb6f14bac7b70032acee3f482f0d6bec</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::IsolatedNodeAggregationAlgorithm</name>
    <filename>classMueLu_1_1IsolatedNodeAggregationAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1IsolatedNodeAggregationAlgorithm.html</anchorfile>
      <anchor>a2606de303166747e5783f93a5a76c189</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IsolatedNodeAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1IsolatedNodeAggregationAlgorithm.html</anchorfile>
      <anchor>ae6681d135930d17e7ce30e3cc0a88611</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IsolatedNodeAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1IsolatedNodeAggregationAlgorithm.html</anchorfile>
      <anchor>a1db6d22eeb2bbb950e8173ae2eab965c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1IsolatedNodeAggregationAlgorithm.html</anchorfile>
      <anchor>a39a9937d14363f80dbad9c6f9f587967</anchor>
      <arglist>(const ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::IsorropiaInterface</name>
    <filename>classMueLu_1_1IsorropiaInterface.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1IsorropiaInterface.html</anchorfile>
      <anchor>ad867f4b54f0125fbc9c68f07a7fff0ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1IsorropiaInterface.html</anchorfile>
      <anchor>afae8faaadf2a95119520dd37e44005b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IsorropiaInterface</name>
      <anchorfile>classMueLu_1_1IsorropiaInterface.html</anchorfile>
      <anchor>a69bb6e0480bf97126e2e67f362d5b718</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IsorropiaInterface</name>
      <anchorfile>classMueLu_1_1IsorropiaInterface.html</anchorfile>
      <anchor>a620ee02a5be3794a9644e112105069cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1IsorropiaInterface.html</anchorfile>
      <anchor>afb571c99a796099782a31800c8b477c9</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1IsorropiaInterface.html</anchorfile>
      <anchor>a0298b1af3e339ee7d572d11a26ea3373</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::LeftoverAggregationAlgorithm</name>
    <filename>classMueLu_1_1LeftoverAggregationAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="typedef" protection="private">
      <type>GO</type>
      <name>global_size_t</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>afd784b2210b79ece07f3ea29f7d93f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>LO</type>
      <name>my_size_t</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a1905ec2fef9e721d6da9e80e4b390ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>phase3AggCreation_</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a348af0f3377209b3a8ed76c5e0b8cf2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>minNodesPerAggregate_</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>af987ae2b448d960d916c32798f171f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LeftoverAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>ac03d4708c99ecc043a7e87f0a066da91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LeftoverAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a087f6cb4f1636e7752ebffd4015f3885</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>afc73f55551109a4c3821cad75512b1c8</anchor>
      <arglist>(int minNodesPerAggregate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPhase3AggCreation</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a18dabe091427450cb26e28b007b5d02d</anchor>
      <arglist>(double phase3AggCreation)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetPhase3AggCreation</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a57021e4c8ee81226796eda0a424504ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a9ca7da83f89bd6899371a19820a29e55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AggregateLeftovers</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>aa7cf7baa9022bd97d0600106101ac6a4</anchor>
      <arglist>(GraphBase const &amp;graph, Aggregates &amp;aggregates) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RootCandidates</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>a5911520177f6dfd064799c46da172c7e</anchor>
      <arglist>(my_size_t nVertices, ArrayView&lt; const LO &gt; &amp;vertex2AggId, GraphBase const &amp;graph, ArrayRCP&lt; LO &gt; &amp;candidates, my_size_t &amp;nCandidates, global_size_t &amp;nCandidatesGlobal) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RemoveSmallAggs</name>
      <anchorfile>classMueLu_1_1LeftoverAggregationAlgorithm.html</anchorfile>
      <anchor>af3ac1c8739639eb57e77f8c8e47c04ab</anchor>
      <arglist>(Aggregates &amp;aggregates, int min_size, RCP&lt; Xpetra::Vector&lt; double, LO, GO, NO &gt; &gt; &amp;distWeights, const MueLu::CoupledAggregationCommHelper&lt; LO, GO, NO &gt; &amp;myWidget) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Level</name>
    <filename>classMueLu_1_1Level.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="enumeration">
      <type></type>
      <name>RequestMode</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUEST</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9dac38b759cd9d36d68da114e988fba15e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELEASE</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9dae5cd91198633da8d2f77b7922f919732</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEF</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9da5cfd7465b67ca39afaccdabc00d6cf77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REQUEST</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9dac38b759cd9d36d68da114e988fba15e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RELEASE</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9dae5cd91198633da8d2f77b7922f919732</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEF</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0c74c388105bf05742a819df3a9c7c9da5cfd7465b67ca39afaccdabc00d6cf77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RequestMode</type>
      <name>GetRequestMode</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>aa97dbf44fb7f847241577cec8038d0cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setlib</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a39da464d1745d55504e7669e5c2a2a83</anchor>
      <arglist>(Xpetra::UnderlyingLib lib2)</arglist>
    </member>
    <member kind="function">
      <type>Xpetra::UnderlyingLib</type>
      <name>lib</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>adaf61cdd5a1ae6e446bc956ab906de48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetComm</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a16f332b2d8e8f10d7be57ec2538d7192</anchor>
      <arglist>(RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; const &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>GetComm</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a3994d4cfd04754dcd2b7521f2a97f710</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>const FactoryBase *</type>
      <name>Key1</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a633681aecf3f90f720efcaa844100fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>const std::string</type>
      <name>Key2</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a486719471de3fde67dd09bc2a9d7c736</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>RCP&lt; VariableContainer &gt;</type>
      <name>Value</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a612a17fd1bc5d9e6bbbbd1578e840710</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::map&lt; Key2, Value &gt;</type>
      <name>SubMap</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a188dfda319f8fa4b221c9bef439e563c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::map&lt; Key1, SubMap &gt;</type>
      <name>TwoKeyMap</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a5dfe10402bb050c38320ea780747f7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Level</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a398a5af6b6b01d19a0f4a8e1ecadd57a</anchor>
      <arglist>(const Level &amp;source)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const FactoryBase *</type>
      <name>GetFactory</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a4462032a13eb74b61ca3b8a91e292fb4</anchor>
      <arglist>(const std::string &amp;varname, const FactoryBase *factory) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Xpetra::UnderlyingLib</type>
      <name>lib_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a2fd332e7e2fea1c132b9767126aaac72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>comm_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>aa0f9f9744f2c618a19f72ba5cfbaa158</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>levelID_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ae237751586b1072c1f7ce40bfe91df14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryManagerBase &gt;</type>
      <name>factoryManager_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ab5bf4dceae5da185c1942c3e1acd692f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Level &gt;</type>
      <name>previousLevel_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a636a5ea0da57e190efb505f66ac317dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TwoKeyMap</type>
      <name>map_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ae52b8d591abf98ca656799a89e563509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static RequestMode</type>
      <name>requestMode_</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a4107392b2240509b5b17430b99d62fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Level</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>abeded01ab80035b22afee3a69d73e959</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Level</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>aef0a84f6ed5527d921b7fb82690f3290</anchor>
      <arglist>(RCP&lt; FactoryManagerBase &gt; &amp;factoryManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Level</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a5d742fdc623da920a88e7f8f09108e20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Level &gt;</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a1b15469fc4a2dbbea333f7a3afc73f6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLevelID</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a023e36fd0bc38b078606d9c5222087d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLevelID</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a596a1b77f091f4870b09907a68cb1c95</anchor>
      <arglist>(int levelID)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Level &gt; &amp;</type>
      <name>GetPreviousLevel</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>afc017deca51b63b6081f29d501210996</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPreviousLevel</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>adae6093d757a7f2b27e040121858a1ab</anchor>
      <arglist>(const RCP&lt; Level &gt; &amp;previousLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFactoryManager</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>adc20dade6c92f6a91bda5e47ede8175a</anchor>
      <arglist>(const RCP&lt; const FactoryManagerBase &gt; &amp;factoryManager)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FactoryManagerBase &gt;</type>
      <name>GetFactoryManager</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a545f12afa73314ebb0b9f8a71844cd0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>aaba9ac5f28a6f990dcd5439af464d868</anchor>
      <arglist>(const std::string &amp;ename, const T &amp;entry, const FactoryBase *factory=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>Get</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a8db0721754e4004fa18dc80b591850b2</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Get</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a3356e7f59b536af3e2dc3c842b12dd91</anchor>
      <arglist>(const std::string &amp;ename, T &amp;rValue, const FactoryBase *factory=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Keep</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>af3ffd5552e631a7712de69fc6c4efea6</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Delete</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>af939679d90ed5ed51dc2eb7da831b404</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a7bf18bb6c644af9bebc8fe5b3d4d0099</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpertClear</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a85ca73e90c31985ed75328187142a03d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKept</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>acf0be3472dc948a3286c70084ccea304</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory, KeepType keep) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKeepFlag</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a7fc8e1a0fb776441153f57328a8eacf9</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get(), KeepType keep=MueLu::Keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKeepFlag</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a6d0e4381e4f8fc15f77bd68a776b08d0</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory, KeepType keep=MueLu::All)</arglist>
    </member>
    <member kind="function">
      <type>KeepType</type>
      <name>GetKeepFlag</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>aacc20175b9768c55d56bb0dee99d629f</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Request</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ad7b55efe2bcb1721aa5dd82c0197e903</anchor>
      <arglist>(const FactoryBase &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Release</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a46de089bab70a38ac09195e8d5adc239</anchor>
      <arglist>(const FactoryBase &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a1aeff8bda2f6b4be0f83bf3ffc72db95</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory, const FactoryBase *requestedBy=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareDependencies</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a941b3baa2f88eea090f1b6c61039eeb4</anchor>
      <arglist>(const FactoryBase *factory, bool bRequestOnly=false, bool bReleaseOnly=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Request</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ab0a6d2721bc25f7434550a32e060883b</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get(), const FactoryBase *requestedBy=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Release</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a48cc4c2716ede5dfd36cf50dfb47e2a0</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get(), const FactoryBase *requestedBy=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAvailable</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a8f55a86318016104af2da3838b2e1c52</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRequested</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ae5e2e9817fbedf5ff89f269ecd69b672</anchor>
      <arglist>(const std::string &amp;ename, const FactoryBase *factory=NoFactory::get()) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsKey</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ad0ffd2dd0b1a1bd4504489867cad1213</anchor>
      <arglist>(const FactoryBase *factory, const std::string &amp;ename) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsAvailableFactory</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ac3c6addb60beaff5ab781ba25eabd076</anchor>
      <arglist>(const FactoryBase *factory) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsRequested</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a9342892fb5e3aade065b212971769f15</anchor>
      <arglist>(const Value &amp;v) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsRequestedBy</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a36022b0f02b6741a890fe8dabf835ace</anchor>
      <arglist>(const FactoryBase *factory, const std::string &amp;ename, const FactoryBase *requestedBy) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsRequestedBy</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a0f1208608f6a7b020987dac0fe701410</anchor>
      <arglist>(const Value &amp;v, const FactoryBase *requestedBy) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsRequestedFactory</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a2301d7b2f091bb5bc6d8629dfb4b9ca1</anchor>
      <arglist>(const FactoryBase *factory) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Value &amp;</type>
      <name>Get</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a417039b9216d0e5f2ac0017e131eadf9</anchor>
      <arglist>(const FactoryBase *factory, const std::string &amp;ename) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>NumRequests</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ac27621bb968c3a4d949e61b362d3393f</anchor>
      <arglist>(const FactoryBase *factory, const std::string &amp;ename) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>CountRequestedFactory</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>a984c242508198f0667fac11eec4d08b6</anchor>
      <arglist>(const FactoryBase *factory) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>aea797f4c4a340945b8be7174160443c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1Level.html</anchorfile>
      <anchor>ad16cef9e657ecfc7cf170250e7f1c629</anchor>
      <arglist>(std::ostream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Details::LinearSolver</name>
    <filename>classMueLu_1_1Details_1_1LinearSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LinearSolver</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>adccc73995f4863b8e351385ce2736577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearSolver</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a44e8f3f501891a297140b96fb6fbcae1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMatrix</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>afec3107d9be54c40bf4d82721e9d9f56</anchor>
      <arglist>(const Teuchos::RCP&lt; const OP &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OP &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>afdbd14b7ab27e1405475ad02be50e412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>aa3cf66e8f30d3fd165d68eeb334b9003</anchor>
      <arglist>(MV &amp;X, const MV &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a8499e5c5e2cc64e25d4e3619dd951fb8</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>symbolic</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a2cfad1c95d5ae151291870b6cdf43b8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>numeric</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>abeeac84ea1b93958b1edc6bf28b62703</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>ad2446dcfd641e92ae114648cccca3b04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a8b4bc1c9833199c496568cb4d2319bda</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const OP &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a4a9ffcd1a99864c246df276669594d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a08c861db29b36687e0ea8b88a9426663</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Details::LinearSolver&lt; Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt;,                                                                                                                                                                                                                                                                                   Tpetra::Operator&lt; Scalar, LO, GO, Node &gt;,                                                                                                                                                                                                                                                                   typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt;</name>
    <filename>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LinearSolver</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>aa11c3ea24f305b053c98fb4d44c283e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearSolver</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a13a27bb1b0efb5733c4e92c82efef568</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMatrix</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a18597321cb43ae7cdbc447e97353c5e4</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Operator&lt; Scalar, LO, GO, Node &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Operator&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>ae718421abdd4702555addea8bd081297</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a8ae0f0053fed5b7ba486ae7eea1d5d7a</anchor>
      <arglist>(Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;X, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>afeb3290609f2f8243893357d96e1edd1</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>symbolic</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a8dd2faad539ab39a79d91247e5a97289</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>numeric</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>abae2cf3cc13f0eb1335bd62635143e88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>ab6dcdaae801ae0d2c06da00b9d892790</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>af975bc0d12884f9f1f0fe7a6be82cc86</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Tpetra::Operator&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a0e4cb65dd043e54364805e7462b5ac3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a12dfa6c3f44efcb92a2a417ef7ce3942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; TpetraOperator&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>solver_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>ad3f627f057aac9784261a92453613c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>changedA_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>ad6b06c513fbc1602ca9dd04fdbcd829a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>changedParams_</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolver_3_01Tpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01d17ee39c1b18ef05f9c8253d7ef2a245.html</anchorfile>
      <anchor>a8d2658d905ed5bcbb92bc644c5d74f8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Details::LinearSolverFactory</name>
    <filename>classMueLu_1_1Details_1_1LinearSolverFactory.html</filename>
    <templarg>MV</templarg>
    <templarg>OP</templarg>
    <templarg>NormType</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Trilinos::Details::LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolverFactory.html</anchorfile>
      <anchor>ad0f033215eeb2976cc7c5e3d229c8581</anchor>
      <arglist>(const std::string &amp;solverName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>classMueLu_1_1Details_1_1LinearSolverFactory.html</anchorfile>
      <anchor>a674f3e7d2cdcd57426d29588984df027</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::LineDetectionFactory</name>
    <filename>classMueLu_1_1LineDetectionFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function" protection="private">
      <type>void</type>
      <name>sort_coordinates</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>aeb84350bd9d8ba7ae7ba8b9f18e7f6cc</anchor>
      <arglist>(LO numCoords, LO *OrigLoc, Scalar *xvals, Scalar *yvals, Scalar *zvals, Scalar *xtemp, Scalar *ytemp, Scalar *ztemp, bool flipXY=false) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>LO</type>
      <name>ML_compute_line_info</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>abe99fcb5f33939f7fd5644782567398e</anchor>
      <arglist>(LO LayerId[], LO VertLineId[], LO Ndof, LO DofsPerNode, LO MeshNumbering, LO NumNodesPerVertLine, SC *xvals, SC *yvals, SC *zvals, const Teuchos::Comm&lt; int &gt; &amp;comm) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ML_az_dsort2</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>a92e9eec9d9ac6523072d9bae7f7bc695</anchor>
      <arglist>(SC dlist[], LO N, LO list2[]) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>Zorientation_</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>abb8dc3724fb26435271149087fa6c746</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LineDetectionFactory</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>ae9a03b4b1844dbf2305ef3565239f97b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LineDetectionFactory</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>a630de95e464a49a9b6edccb3e52078a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>a6ab8ea3fe7f09400abb4aa6c78a09691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>a593358aa1608da201f363b9023840b61</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1LineDetectionFactory.html</anchorfile>
      <anchor>a3689e5f26caa33ae13d47101b5a63eeb</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::LinkedList</name>
    <filename>classMueLu_1_1LinkedList.html</filename>
    <member kind="function">
      <type></type>
      <name>LinkedList</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a002d68331a3aa3f6314255437a5306f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LinkedList</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a030e33ea59c1d93af1a7d7780506436a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>abf8ae91ac90c0f2a747ef5484dfe41e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Add</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a8a15a45b3689bcd2ee3be06fd793f3d6</anchor>
      <arglist>(int iNode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Pop</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a5ae780e0ba76bb5bac7d3f7bc312c197</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>DeleteHead</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a4be76bc5dff105a437eeb190ea6e1f72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MueLu_Node *</type>
      <name>nodeHead</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a429ca03dc0ac63e2551f0be45e6ec67e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MueLu_Node *</type>
      <name>nodeTail</name>
      <anchorfile>classMueLu_1_1LinkedList.html</anchorfile>
      <anchor>a4bbadd030cc840d0357864c433cc4966</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::LocalAggregationAlgorithm</name>
    <filename>classMueLu_1_1LocalAggregationAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="typedef" protection="private">
      <type>GO</type>
      <name>global_size_t</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a73b18bf7b8546d2d0905c0c25d6654cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>LO</type>
      <name>my_size_t</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>ae5ee3431cda52c3549b4267fc7813485</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a20a694b06f0d3c34eb77930a553c6756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocalAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a1a3dcec8dd1e98e176664ae77345c014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrdering</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a6281a441e19912355f666f76bd1bdacb</anchor>
      <arglist>(const std::string &amp;ordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a63cd59ef211527d484c0e89f48d3b304</anchor>
      <arglist>(int minNodesPerAggregate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxNeighAlreadySelected</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>ac3baa3c14b935ac2557ea48e960c0795</anchor>
      <arglist>(int maxNeighAlreadySelected)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetOrdering</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>aec0685d3ce582d1a8ba1334394d84af8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a8c577f7467e818c80a2e9decae30a9dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxNeighAlreadySelected</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a44734a13043f594323f4e6b3cd4706a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ordering_</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a8eef6689ceaa27379ca1eaafa175c385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>minNodesPerAggregate_</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>a59cf002b38dd93a45b4680aa4f6acb04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxNeighAlreadySelected_</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>af60753c8e7d87f24ee1658fdc8b538c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CoarsenUncoupled</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>acecd1e1e7c45adbda3343d77b8b758b3</anchor>
      <arglist>(GraphBase const &amp;graph, Aggregates &amp;aggregates) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RandomReorder</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>ab5fae488e80d6c60dd706303d685cce4</anchor>
      <arglist>(Teuchos::ArrayRCP&lt; LO &gt; list) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>RandomOrdinal</name>
      <anchorfile>classMueLu_1_1LocalAggregationAlgorithm.html</anchorfile>
      <anchor>aaa881ccdb35e8ff7af912b8129cf4dc1</anchor>
      <arglist>(int min, int max) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::LocalPermutationStrategy</name>
    <filename>classMueLu_1_1LocalPermutationStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type>void</type>
      <name>BuildPermutation</name>
      <anchorfile>classMueLu_1_1LocalPermutationStrategy.html</anchorfile>
      <anchor>a64251cef5295786dcfd96524a3a9d9c7</anchor>
      <arglist>(const Teuchos::RCP&lt; Matrix &gt; &amp;A, const Teuchos::RCP&lt; const Map &gt; permRowMap, Level &amp;currentLevel, const FactoryBase *genFactory) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BuildPermutations</name>
      <anchorfile>classMueLu_1_1LocalPermutationStrategy.html</anchorfile>
      <anchor>ac58aab8d54c0908b6e2e7820bbc82e94</anchor>
      <arglist>(size_t nDofsPerNode) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>GlobalOrdinal</type>
      <name>getGlobalDofId</name>
      <anchorfile>classMueLu_1_1LocalPermutationStrategy.html</anchorfile>
      <anchor>a694b5907af29f6e3287a8f8ca2162647</anchor>
      <arglist>(const Teuchos::RCP&lt; Matrix &gt; &amp;A, LocalOrdinal localNodeId, LocalOrdinal localDof) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>GlobalOrdinal</type>
      <name>globalDofId2globalNodeId</name>
      <anchorfile>classMueLu_1_1LocalPermutationStrategy.html</anchorfile>
      <anchor>a38fcb84e5f71012864365a3c882a1ac9</anchor>
      <arglist>(const Teuchos::RCP&lt; Matrix &gt; &amp;A, GlobalOrdinal grid) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
      <name>result_permvecs_</name>
      <anchorfile>classMueLu_1_1LocalPermutationStrategy.html</anchorfile>
      <anchor>a80594443434b44e7073719eb25fd5dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>permWidth_</name>
      <anchorfile>classMueLu_1_1LocalPermutationStrategy.html</anchorfile>
      <anchor>ae27a169bff1f0cd07e2b048cbfddf89a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>LocalPermutationStrategy</name>
    <filename>classLocalPermutationStrategy.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::LWGraph</name>
    <filename>classMueLu_1_1LWGraph.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::GraphBase</base>
    <member kind="function">
      <type>size_t</type>
      <name>GetNodeNumVertices</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a6f582d7c6bc215b65f57f03726205ddb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetNodeNumEdges</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ad76383249a047183bc4357582b088d30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Xpetra::global_size_t</type>
      <name>GetGlobalNumEdges</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a198b274904a99b2ccf01b494d94fa9c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>GetComm</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ac79042a69228550d45ffe93f2899bb2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>GetDomainMap</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a32c8fb236765053cfb55b9354124e609</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Map &gt;</type>
      <name>GetImportMap</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a8408e10a04fdc639a9cd0e4ef45ef397</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ac62d3c237fc9b1f5aa96ab0834b9ff80</anchor>
      <arglist>(RCP&lt; const Map &gt; const &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const LO &gt;</type>
      <name>getNeighborVertices</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a3c815570db5cd61dfc52d0d8b9a9aad9</anchor>
      <arglist>(LO i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocalNeighborVertex</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a640b2ca3afa8e412587ec3e6a08e784f</anchor>
      <arglist>(LO i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a35ab7c428479b24caddc261cb5efc9b4</anchor>
      <arglist>(const ArrayRCP&lt; const bool &gt; &amp;bndry)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getNodeMaxNumRowEntries</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>acf67e6ca6a534b5382c1619e6bc9f9e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const bool &gt;</type>
      <name>GetBoundaryNodeMap</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a9794f68dd71ad4a42fef80475edb61c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a60d7254e49f0b3dbac21acb0c8ceba3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a9051ed5bbc6b02bcd5a0d9fc42c0664a</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const ArrayRCP&lt; const LO &gt;</type>
      <name>rows_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a280782b76ebead9e35408c8c0bee201d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const ArrayRCP&lt; const LO &gt;</type>
      <name>columns_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a6631821d89141d517ed2d4e2f28409b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const Map &gt;</type>
      <name>domainMap_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a5815d346253ec952179e3ee1d1167c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const Map &gt;</type>
      <name>importMap_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ae83bc97670a14ced7835b4cd0c3ba7b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Map &amp;</type>
      <name>domainMapRef_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ac52a32475c222199ee83d713c109197c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string &amp;</type>
      <name>objectLabel_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ae3ed2020d61b988bd709d50eefcbcc04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; const bool &gt;</type>
      <name>dirichletBoundaries_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ad5086fc68e7b18f459c1d0924e549486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>minLocalIndex_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>ad70f22fc776508e67025f199669c1c68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>maxLocalIndex_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a97f6eb62ac971d06feb732be64407328</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>maxNumRowEntries_</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a30aad224834b9eca4eb8c8eaa985588d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LWGraph</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a3bb467f642d1911581ad99f1a16fdddc</anchor>
      <arglist>(const ArrayRCP&lt; const LO &gt; &amp;rowPtrs, const ArrayRCP&lt; const LO &gt; &amp;colPtrs, const RCP&lt; const Map &gt; &amp;domainMap, const RCP&lt; const Map &gt; &amp;rangeMap, const std::string &amp;objectLabel=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LWGraph</name>
      <anchorfile>classMueLu_1_1LWGraph.html</anchorfile>
      <anchor>a44e3e00dbec1170d61e219d7fa167f53</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MapTransferFactory</name>
    <filename>classMueLu_1_1MapTransferFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>mapFact_</name>
      <anchorfile>classMueLu_1_1MapTransferFactory.html</anchorfile>
      <anchor>aa4ad5b2ae283fddeb44c95b359c27985</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MapTransferFactory</name>
      <anchorfile>classMueLu_1_1MapTransferFactory.html</anchorfile>
      <anchor>a493775ef3d8ad7bcfd515b705f2c6cab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MapTransferFactory</name>
      <anchorfile>classMueLu_1_1MapTransferFactory.html</anchorfile>
      <anchor>a968b3c9c376266ff57356ceefe278b3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1MapTransferFactory.html</anchorfile>
      <anchor>a82d267b82c2da3a63a5de2da2faacf49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MapTransferFactory.html</anchorfile>
      <anchor>ac40045b93e3aad3192e4574d3a237bce</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1MapTransferFactory.html</anchorfile>
      <anchor>ab72fd0edc297812cedafe53979b71c6a</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MasterList</name>
    <filename>classMueLu_1_1MasterList.html</filename>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>List</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>ac770fa50c0de91a4c3a2d798e829d73f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>GetProblemSpecificList</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a1c2a4ddc698e0a7a34b8a42974bd912e</anchor>
      <arglist>(std::string const &amp;problemType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T &amp;</type>
      <name>getDefault</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a622892348e8d2503fa3c759687d92291</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Teuchos::ParameterEntry &amp;</type>
      <name>getEntry</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>aa8d6db5906da45e8669d744b9d8a05ab</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>generateXMLParameterString</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a7c4c5a6bb5ab6c1cca294e7fc29d3edb</anchor>
      <arglist>(const std::string &amp;name, T data)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>ML2MueLu</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a5f0f3723ebf015ec98a32448b589e043</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>interpretParameterName</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>accb1fbadcd75a1bcb66288609f404ed7</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MasterList</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a6cc25c42e7f0e899d4104314bd0b0f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MasterList</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a24856d29a08369ba7d6177b4c66f4cd9</anchor>
      <arglist>(const MasterList &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MasterList &amp;</type>
      <name>operator=</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>ad5c198f20f5ee9b5d06ec43bda86cde7</anchor>
      <arglist>(const MasterList &amp;)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>masterList_</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a5bc57387e3d79494fd7bcdca000846c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>stringList_</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a436bc78baee84b1095c02553a86706a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>problemSpecificList_</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>aa3284ea8b1f811eca578e796635296b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::string</type>
      <name>problemType_</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>a0e58ea8449ca57e1694c006f90194fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, std::string &gt;</type>
      <name>DefaultProblemTypeLists_</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>ada99b13db4a11b24eb9cb1bc0b287cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, std::string &gt;</type>
      <name>ML2MueLuLists_</name>
      <anchorfile>classMueLu_1_1MasterList.html</anchorfile>
      <anchor>aef46bccc19f46ec57e353832cd232fa9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MatlabSmoother</name>
    <filename>classMueLu_1_1MatlabSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>afe3dd12fe09d40ff30ef26b56e31a218</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::MatlabSmoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a6f86987bad8f0f373be394091d18b23a</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::MatlabSmoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>afcbfd8a11b83c5a3a25fa3289a6f83ec</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>needsSetup_</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a8862cbb78d4f46834424067f5a3a7ecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>solveDataSize_</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>ab0eea84e35d8e20612129dbec85e69b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>solveData_</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>ad310f9ffbe1340ae1671b1cf8c7eceb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>setupFunction_</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>ae759298a71554fefccd1ea1695b8c197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>solveFunction_</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a353c648b620fe6a57fa954b6b73f38a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>ab9574b821fedd0b7eba6cfab8a6ea492</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>MatlabSmoother</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>ac1f4a2fe36791e5458ae0089bb5f0357</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MatlabSmoother</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a281b8178af2076456854382c15b44ee4</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MatlabSmoother</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a01803c5db07f5a0950588fcbd6656c36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>aed30aa2dee9b8ec3418b9bf158b7a15f</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>aa9aac954ef36c52a8d51ec3c8a16404a</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a4de384b0f26a9d1176a082ebcdaaa871</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a3f61e014296669d4c87b62c64625985e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a606bc36ebb97af75ca7d51243e339273</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1MatlabSmoother.html</anchorfile>
      <anchor>a20794032683d6b7ba81924dc13d0aca9</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MatrixAnalysisFactory</name>
    <filename>classMueLu_1_1MatrixAnalysisFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1MatrixAnalysisFactory.html</anchorfile>
      <anchor>a0e2b6c177d861d035acfa9c29cdb3bb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>checkVectorEntries</name>
      <anchorfile>classMueLu_1_1MatrixAnalysisFactory.html</anchorfile>
      <anchor>a7b2ee28c2c5808f40a68af4b8bc8747e</anchor>
      <arglist>(const Teuchos::RCP&lt; Vector &gt; &amp;vec, std::string info) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MatrixAnalysisFactory</name>
      <anchorfile>classMueLu_1_1MatrixAnalysisFactory.html</anchorfile>
      <anchor>acc62ab5e26e62d5ad27f8c31e3782d42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MatrixAnalysisFactory</name>
      <anchorfile>classMueLu_1_1MatrixAnalysisFactory.html</anchorfile>
      <anchor>a52204e9075966b3bc3e7d704c986d078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MatrixAnalysisFactory.html</anchorfile>
      <anchor>a99f1aa52fa5d5a853c9bb685a9ed5f50</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1MatrixAnalysisFactory.html</anchorfile>
      <anchor>a64ecafc0719e7ee62b6a65cbe461d94b</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MergedBlockedMatrix</name>
    <filename>classMergedBlockedMatrix.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::MergedBlockedMatrixFactory</name>
    <filename>classMueLu_1_1MergedBlockedMatrixFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>MergedBlockedMatrixFactory</name>
      <anchorfile>classMueLu_1_1MergedBlockedMatrixFactory.html</anchorfile>
      <anchor>a47d529b5b2e83794741734d104f0b876</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MergedBlockedMatrixFactory</name>
      <anchorfile>classMueLu_1_1MergedBlockedMatrixFactory.html</anchorfile>
      <anchor>a6c28ddc87e369d697bc8a14c37add4a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1MergedBlockedMatrixFactory.html</anchorfile>
      <anchor>aa514cfbc6fc22583340349a35edc552c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MergedBlockedMatrixFactory.html</anchorfile>
      <anchor>a83201c12516a7c5149d9f4b86c2c85f9</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1MergedBlockedMatrixFactory.html</anchorfile>
      <anchor>ac8d602024c64035f491f23fab1da8072</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MergedSmoother</name>
    <filename>classMergedSmoother.html</filename>
  </compound>
  <compound kind="class">
    <name>MueLu::MergedSmoother</name>
    <filename>classMueLu_1_1MergedSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a1fe309942224e56749bf91fda55e3e7f</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFactory</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>acf5329d1abd659d4b8be115da313cfbc</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>acc55327d5958befe9ebb7bf990529b8a</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CopyParameters</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>ad947205c6ee3af112b167757c389eeda</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; src)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; RCP&lt; SmootherPrototype &gt; &gt;</type>
      <name>SmootherListDeepCopy</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>ab0d6f3eb5ab7e5abfb327bddb250fba4</anchor>
      <arglist>(const ArrayRCP&lt; const RCP&lt; SmootherPrototype &gt; &gt; &amp;srcSmootherList)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; RCP&lt; SmootherPrototype &gt; &gt;</type>
      <name>smootherList_</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>aaca8b8e7245456f6c3e25dae2a7161c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>reverseOrder_</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>ac478105a2cc0b0ab28f04115812b2744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>verbose_</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>aa907651812bd13c22a6b0589e39187fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MergedSmoother</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>ad52eeffd70cfcb5eec8f668d88883ee7</anchor>
      <arglist>(ArrayRCP&lt; RCP&lt; SmootherPrototype &gt; &gt; &amp;smootherList, bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MergedSmoother</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a8dc963489dd109c2cee115787ab81021</anchor>
      <arglist>(const MergedSmoother &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a3a20e4eb96724042e8d9e18eb34ccb73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MergedSmoother</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a43c1270d4fcf82a58418955deb694cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StandardOrder</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a5241469a84d3cdec6fbb8d0a729f5580</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReverseOrder</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a55eb568147c2a50d5966fe59023b4fc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetReverseOrder</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>a7fdfa60d93c9ef19dd8e5dd6228f46f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const RCP&lt; SmootherPrototype &gt; &gt;</type>
      <name>GetSmootherList</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>af42be9e51a88539281296a67a3d1b4d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>ab64142cf9fbc5fed3df47c89efe0c010</anchor>
      <arglist>(Level &amp;level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1MergedSmoother.html</anchorfile>
      <anchor>afad41cd792b8efec061ba8e3a761f46f</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MHDRAPFactory</name>
    <filename>classMueLu_1_1MHDRAPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>MHDRAPFactory</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>a768a6ff3ec71b9dd24364bba470b6d32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MHDRAPFactory</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>abb3e5e95b6c632bdc3625d41ca4c3c03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>ae46fe5994ce488d25c7ea57ff5296132</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>ad49d81627745939d0e1e5f386fa0e9e5</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetImplicitTranspose</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>a21cd4c6be5bde846846a433c5fa08e4f</anchor>
      <arglist>(bool const &amp;implicit)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>implicitTranspose_</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>acb0765a1e6111b3d2fbe09b05bf98edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>PrintLoadBalancingInfo</name>
      <anchorfile>classMueLu_1_1MHDRAPFactory.html</anchorfile>
      <anchor>aa63077b7f31880d13208b3d07d20ac79</anchor>
      <arglist>(const Matrix &amp;Ac, const std::string &amp;msgTag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ML2MueLuParameterTranslator</name>
    <filename>classMueLu_1_1ML2MueLuParameterTranslator.html</filename>
    <member kind="function" protection="private" static="yes">
      <type>static std::string &amp;</type>
      <name>ltrim</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>adf39071f93bb5e0178d71a7e43a7bb06</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string &amp;</type>
      <name>rtrim</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>a680e51660225faf73e73d3d58471ebfd</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string &amp;</type>
      <name>trim</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>aa64024146e5bb73bfee0e76cd95330e8</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ML2MueLuParameterTranslator</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>a165053dc59a33f12962455b1d5c66853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ML2MueLuParameterTranslator</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>abba5504548fa66beec4720f2f7ca08be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>translate</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>a9acb881089bb8271a07736d6710855ae</anchor>
      <arglist>(Teuchos::ParameterList &amp;paramList, const std::string &amp;defaultVals=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>translate</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>a2a520cc67d89ab34eaf1fb7d9b447981</anchor>
      <arglist>(const std::string &amp;xmlFileName, const std::string &amp;defaultVals=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>a644dd00f94f498b076eede7359ac8eac</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList_in, const std::string &amp;defaultVals)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>GetSmootherFactory</name>
      <anchorfile>classMueLu_1_1ML2MueLuParameterTranslator.html</anchorfile>
      <anchor>ad2362fd582116b0eff2a2f638da3ec5f</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, Teuchos::ParameterList &amp;adaptingParamList, const std::string &amp;pname, const std::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MLParameterListInterpreter</name>
    <filename>classMueLu_1_1MLParameterListInterpreter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::HierarchyManager</base>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nullspaceDim_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>aa21e555df0608d95c57850256f9f9a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>nullspace_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a36b22aff54341a7dcf46c9e44ad0b89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>xcoord_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a0ca34be4c744b3175ff9191bee6ae273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>ycoord_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>acd56460110afb5e6407c7d90027a24a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>zcoord_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a67766e877dc4cf1362c533824b9b97a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; FactoryBase &gt; &gt;</type>
      <name>TransferFacts_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a3c237c46d2ac27a4b03928ab8ffb033a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a874725125b1be8d420283144e9bda90d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a3ee154c5e0a177ed5e3f1f2e52ebaa1b</anchor>
      <arglist>(Teuchos::ParameterList &amp;paramList, Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; comm=Teuchos::null, std::vector&lt; RCP&lt; FactoryBase &gt; &gt; factoryList=std::vector&lt; RCP&lt; FactoryBase &gt; &gt;(0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a090e1b605f86ede3f4fa3ce317b9c27e</anchor>
      <arglist>(const std::string &amp;xmlFileName, std::vector&lt; RCP&lt; FactoryBase &gt; &gt; factoryList=std::vector&lt; RCP&lt; FactoryBase &gt; &gt;(0))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MLParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>ae08a4e0e7b43156ca80305e77e0e5a0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a17f7a58069733b1fce400b8510d4b926</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupHierarchy</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>afb21d2ea305a1c039bc87d20f06fcf0a</anchor>
      <arglist>(Hierarchy &amp;H) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; SmootherFactory &gt;</type>
      <name>GetSmootherFactory</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a1b9e044c6534c59cdba41e5b0468c52c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const RCP&lt; FactoryBase &gt; &amp;AFact=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTransferFactory</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a030a094f6061517bdf0914be5368d6d7</anchor>
      <arglist>(const RCP&lt; FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumTransferFactories</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a1f1d00d50c73a8a0e8feb0920c0bd4c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>blksize_</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>a85a0702cfa99c7aab9cd43e225828d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupOperator</name>
      <anchorfile>classMueLu_1_1MLParameterListInterpreter.html</anchorfile>
      <anchor>acf39f30145172bfb7c10ce136ce636bb</anchor>
      <arglist>(Operator &amp;Op) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Monitor</name>
    <filename>classMueLu_1_1Monitor.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>Monitor</name>
      <anchorfile>classMueLu_1_1Monitor.html</anchorfile>
      <anchor>aded8f826d9aae52588592d1187f7c2f5</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, MsgType msgLevel=Runtime0, MsgType timerLevel=Timings0)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PrintMonitor</type>
      <name>printMonitor_</name>
      <anchorfile>classMueLu_1_1Monitor.html</anchorfile>
      <anchor>ae29fdb859bc2d182d828c3d94dbeba18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TimeMonitor</type>
      <name>timerMonitor_</name>
      <anchorfile>classMueLu_1_1Monitor.html</anchorfile>
      <anchor>a8292188f78cbd97a1bfa18e89228f826</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MpiTypeTraits</name>
    <filename>classMueLu_1_1MpiTypeTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static MPI_Datatype</type>
      <name>getType</name>
      <anchorfile>classMueLu_1_1MpiTypeTraits.html</anchorfile>
      <anchor>a133acae89a3bd016b8fb7a3e444dd84b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MpiTypeTraits&lt; int &gt;</name>
    <filename>classMueLu_1_1MpiTypeTraits_3_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static MPI_Datatype</type>
      <name>getType</name>
      <anchorfile>classMueLu_1_1MpiTypeTraits_3_01int_01_4.html</anchorfile>
      <anchor>a5257e1b63026767085aca6d04014f7b9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MpiTypeTraits&lt; long &gt;</name>
    <filename>classMueLu_1_1MpiTypeTraits_3_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static MPI_Datatype</type>
      <name>getType</name>
      <anchorfile>classMueLu_1_1MpiTypeTraits_3_01long_01_4.html</anchorfile>
      <anchor>aa4a716dfddb695d7bc5af39ab02a5bf9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MpiTypeTraits&lt; long long &gt;</name>
    <filename>classMueLu_1_1MpiTypeTraits_3_01long_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static MPI_Datatype</type>
      <name>getType</name>
      <anchorfile>classMueLu_1_1MpiTypeTraits_3_01long_01long_01_4.html</anchorfile>
      <anchor>aa1f716ea4a6758b09afcea50aa579895</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MpiTypeTraits&lt; short &gt;</name>
    <filename>classMueLu_1_1MpiTypeTraits_3_01short_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static MPI_Datatype</type>
      <name>getType</name>
      <anchorfile>classMueLu_1_1MpiTypeTraits_3_01short_01_4.html</anchorfile>
      <anchor>a21ea493f910ad19fb4bbb66a62e2d37a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MpiTypeTraits&lt; unsigned &gt;</name>
    <filename>classMueLu_1_1MpiTypeTraits_3_01unsigned_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static MPI_Datatype</type>
      <name>getType</name>
      <anchorfile>classMueLu_1_1MpiTypeTraits_3_01unsigned_01_4.html</anchorfile>
      <anchor>aabbc7ee0bb19a4b577ea7a589a6c5832</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::MueLu_Node_Struct</name>
    <filename>structMueLu_1_1MueLu__Node__Struct.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>nodeId</name>
      <anchorfile>structMueLu_1_1MueLu__Node__Struct.html</anchorfile>
      <anchor>a0e02e2348e79b9036db4226e58cc6c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct MueLu_Node_Struct *</type>
      <name>next</name>
      <anchorfile>structMueLu_1_1MueLu__Node__Struct.html</anchorfile>
      <anchor>a48e1a8b8b7bd61a3f95ce9aaa9723205</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::MueLu_SuperNode_Struct</name>
    <filename>structMueLu_1_1MueLu__SuperNode__Struct.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>length</name>
      <anchorfile>structMueLu_1_1MueLu__SuperNode__Struct.html</anchorfile>
      <anchor>a2fec9b622edca221f89839e78dbb10e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxLength</name>
      <anchorfile>structMueLu_1_1MueLu__SuperNode__Struct.html</anchorfile>
      <anchor>ab300cc1fb1daa7e017f4818e794d915d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>index</name>
      <anchorfile>structMueLu_1_1MueLu__SuperNode__Struct.html</anchorfile>
      <anchor>a58a4744eba10656fa7c636c4d64104ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::ArrayRCP&lt; int &gt;</type>
      <name>list</name>
      <anchorfile>structMueLu_1_1MueLu__SuperNode__Struct.html</anchorfile>
      <anchor>a942a678b0d06d86d86b557acb781ddf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct MueLu_SuperNode_Struct *</type>
      <name>next</name>
      <anchorfile>structMueLu_1_1MueLu__SuperNode__Struct.html</anchorfile>
      <anchor>a8daf9c59a5b145387939290952e78ff7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::MueLuOp</name>
    <filename>classBelos_1_1MueLuOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>OperatorT&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Hierarchy_</name>
      <anchorfile>classBelos_1_1MueLuOp.html</anchorfile>
      <anchor>a7658cb2d942e0c4ff15ba90d1498e1d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::AMGXOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>AMGX_</name>
      <anchorfile>classBelos_1_1MueLuOp.html</anchorfile>
      <anchor>a21c89670e5b93402428fe389730fd79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MueLuOp</name>
      <anchorfile>classBelos_1_1MueLuOp.html</anchorfile>
      <anchor>aca2434404b1c03970d9e76da1ac7331d</anchor>
      <arglist>(const RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;H)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MueLuOp</name>
      <anchorfile>classBelos_1_1MueLuOp.html</anchorfile>
      <anchor>af3d51bb95ed1a194175a9f0a0f994a04</anchor>
      <arglist>(const RCP&lt; MueLu::AMGXOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MueLuOp</name>
      <anchorfile>classBelos_1_1MueLuOp.html</anchorfile>
      <anchor>a7dfff2134369436dc2b040080db5380d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1MueLuOp.html</anchorfile>
      <anchor>a0a557089d207d35d5df40d661bf55fe8</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;y, ETrans trans=NOTRANS) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::MueLuOpFailure</name>
    <filename>classBelos_1_1MueLuOpFailure.html</filename>
    <member kind="function">
      <type></type>
      <name>MueLuOpFailure</name>
      <anchorfile>classBelos_1_1MueLuOpFailure.html</anchorfile>
      <anchor>a662b6931d5d5272c2ae41b24bbeb4f80</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::MueLuPreconditionerFactory</name>
    <filename>classThyra_1_1MueLuPreconditionerFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>abf832d123bb9b64c7aafe23d95a2b329</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MueLuPreconditionerFactory</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a6f1e9b945d8e62bbc63fd03a45d40a55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a7275e6858477b634c533e20466c4bdf7</anchor>
      <arglist>(const LinearOpSourceBase&lt; Scalar &gt; &amp;fwdOp) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PreconditionerBase&lt; Scalar &gt; &gt;</type>
      <name>createPrec</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a82d5172a7d129103e3f39996b50ab903</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePrec</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>aa47f51fc619f0a1ab12c4e43f3d31a68</anchor>
      <arglist>(const Teuchos::RCP&lt; const LinearOpSourceBase&lt; Scalar &gt; &gt; &amp;fwdOp, PreconditionerBase&lt; Scalar &gt; *prec, const ESupportSolveUse supportSolveUse) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninitializePrec</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>af2166ee9beaa8f56072ca74f4b58d1f1</anchor>
      <arglist>(PreconditionerBase&lt; Scalar &gt; *prec, Teuchos::RCP&lt; const LinearOpSourceBase&lt; Scalar &gt; &gt; *fwdOp, ESupportSolveUse *supportSolveUse) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>ab8c71cce8ca9685c9a70c157014b7c77</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a3d3ef7c62060071609567b801f77f39d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a9badf5b2b037eb91d22b1bc70eed3100</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a226504951af8205be7f06033159f9c2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>a1aea76f45692519dcf710d75a9b6dfd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory.html</anchorfile>
      <anchor>ae38142f6d4b5a29ce7dca39e462ef1e3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::MueLuPreconditionerFactory&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a3f7bb00042bfcc0ba62b40a81ba0fec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a6f7d1eb81dc002eb09dfe00e80afb2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5496a3eb1af7d6b8bf6cb3a531eef5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a3ee91fe55cd4221a4f77b6b962edc603</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>abaaca75e9a2de388e91393b957495901</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MueLuPreconditionerFactory</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a7988abac51e6a755066f3cacd8408ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a8e7a13b02e8862c163aadd87f76cd9e0</anchor>
      <arglist>(const LinearOpSourceBase&lt; Scalar &gt; &amp;fwdOpSrc) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PreconditionerBase&lt; Scalar &gt; &gt;</type>
      <name>createPrec</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a8e4bbbb65e4bebf2cefd3e829fa31bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePrec</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0384f6684205649d09dd1c739396d8bb</anchor>
      <arglist>(const Teuchos::RCP&lt; const LinearOpSourceBase&lt; Scalar &gt; &gt; &amp;fwdOpSrc, PreconditionerBase&lt; Scalar &gt; *prec, const ESupportSolveUse supportSolveUse) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninitializePrec</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aea7811685ded68159352fef16a5ffb44</anchor>
      <arglist>(PreconditionerBase&lt; Scalar &gt; *prec, Teuchos::RCP&lt; const LinearOpSourceBase&lt; Scalar &gt; &gt; *fwdOp, ESupportSolveUse *supportSolveUse) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ab44519f0f35a8fe52e4ea186be8dd2eb</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>afe52cc998f88898f146e5b874e28616c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa99145deedeb5a93d573562f43995c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a501020e13c3c7fec8440538a435eafb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aab80155234fcb663231593963374607b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classThyra_1_1MueLuPreconditionerFactory_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a80456904977765f30923662386318468</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::MueLuTpetraQ2Q1PreconditionerFactory</name>
    <filename>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef" protection="private">
      <type>Scalar</type>
      <name>SC</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a58410f3c3aa1889293a99c11cabcdd5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>LocalOrdinal</type>
      <name>LO</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>abfcca3b210abb756416b02b35b2d9905</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>GlobalOrdinal</type>
      <name>GO</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a1fa3688c4dbddb8a2404d8d16931a986</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Node</type>
      <name>NO</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>af9deb252f06498af3875a760a1ca9a1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Q2Q1MkPrecond</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a96ec248e86e0890e3e7eb64024e827f7</anchor>
      <arglist>(const ParameterList &amp;paramList, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt; &amp;velCoords, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt; &amp;presCoords, const Teuchos::ArrayRCP&lt; LO &gt; &amp;p2vMap, const Teko::LinearOp &amp;thA11, const Teko::LinearOp &amp;thA12, const Teko::LinearOp &amp;thA21, const Teko::LinearOp &amp;thA11_9Pt) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Absolute</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>aecc10c217c7555fb68e0532ad6ae2b1f</anchor>
      <arglist>(const Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &amp;A) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>FilterMatrix</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>ad314ab04c294af6ba66d94364a0c3854</anchor>
      <arglist>(Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &amp;A, Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &amp;Pattern, SC dropTol) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetDependencyTree</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a4a6cf2cd721c9c6be698748d6f73859a</anchor>
      <arglist>(MueLu::FactoryManager&lt; SC, LO, GO, NO &gt; &amp;M, const ParameterList &amp;paramList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetBlockDependencyTree</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a0268cd905064ae8dc8eefaaaa9f18866</anchor>
      <arglist>(MueLu::FactoryManager&lt; SC, LO, GO, NO &gt; &amp;M, LO row, LO col, const std::string &amp;mode, const ParameterList &amp;paramList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCP&lt; MueLu::FactoryBase &gt;</type>
      <name>GetSmoother</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>ab795a8a6c36a94a10dcce37d6352f3ef</anchor>
      <arglist>(const std::string &amp;type, const ParameterList &amp;paramList, bool coarseSolver) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a8c3e7f1c002752a445cbfde462947f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MueLuTpetraQ2Q1PreconditionerFactory</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a27e1351da85e7c76efae0abb747964ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCompatible</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a5aa3cda39b6c527db60ef5bcb6a5f141</anchor>
      <arglist>(const LinearOpSourceBase&lt; SC &gt; &amp;fwdOp) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PreconditionerBase&lt; SC &gt; &gt;</type>
      <name>createPrec</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>ad09f27a0288e9c8e7c417272b098ab2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePrec</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a72198b7c85567e4dc47e6eeddb06e69a</anchor>
      <arglist>(const Teuchos::RCP&lt; const LinearOpSourceBase&lt; SC &gt; &gt; &amp;fwdOp, PreconditionerBase&lt; SC &gt; *prec, const ESupportSolveUse supportSolveUse) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninitializePrec</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a0a5a180b540c83bb8bb6b674b3c82d09</anchor>
      <arglist>(PreconditionerBase&lt; SC &gt; *prec, Teuchos::RCP&lt; const LinearOpSourceBase&lt; SC &gt; &gt; *fwdOp, ESupportSolveUse *supportSolveUse) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>aabf911d07864b404419d3447b74b5372</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a3d35ea0b912eac062a592832dc82b5f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a93ea7bb881c6c43946c16e7e7461bf67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>af91ac85186129c623f383efba75a4335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>a8d31946ea7b768e0aa997e642acf677d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classThyra_1_1MueLuTpetraQ2Q1PreconditionerFactory.html</anchorfile>
      <anchor>aae7cd8e3efdbdc1f8911ca6c35a19b24</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MuemexArg</name>
    <filename>classMueLu_1_1MuemexArg.html</filename>
    <member kind="function">
      <type></type>
      <name>MuemexArg</name>
      <anchorfile>classMueLu_1_1MuemexArg.html</anchorfile>
      <anchor>a7da148897757bc4a95e3b16fab56f6ab</anchor>
      <arglist>(MuemexType dataType)</arglist>
    </member>
    <member kind="variable">
      <type>MuemexType</type>
      <name>type</name>
      <anchorfile>classMueLu_1_1MuemexArg.html</anchorfile>
      <anchor>a90cba334b2b0f02bf1e35ce9200cfff3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MuemexData</name>
    <filename>classMueLu_1_1MuemexData.html</filename>
    <templarg></templarg>
    <base>MueLu::MuemexArg</base>
    <member kind="function">
      <type></type>
      <name>MuemexData</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>a2a326f0fd92d4f2c65458009e81f85b2</anchor>
      <arglist>(T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MuemexData</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>abef89ce6a3fd2bb21b47436cdba18a33</anchor>
      <arglist>(T &amp;data, MuemexType type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MuemexData</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>a05d7a01dc4eff0968804f22cb9eb3d8a</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>convertToMatlab</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>aad809eced68f3eb5f1f1c543c376f0d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getData</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>ad698319b6420f655672cbf1c2eb8036b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setData</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>a30d35bf2504549fa984c4db43a67fdde</anchor>
      <arglist>(T &amp;data)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>data</name>
      <anchorfile>classMueLu_1_1MuemexData.html</anchorfile>
      <anchor>a8d1567913c6585ec896fefeff96d1537</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MultiVectorTransferFactory</name>
    <filename>classMueLu_1_1MultiVectorTransferFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function" protection="private" static="yes">
      <type>static ArrayRCP&lt; SC &gt;</type>
      <name>expandCoordinates</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>aa08f7ef8df3eabb82a64983e7e3e7c3e</anchor>
      <arglist>(ArrayRCP&lt; SC &gt; coord, LocalOrdinal blksize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVectorTransferFactory</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>a5458199488f6bfcaf085878e248514b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiVectorTransferFactory</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>af3bc455b08135a3ffad89f2934d2f5f1</anchor>
      <arglist>(std::string const &amp;vectorName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiVectorTransferFactory</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>a7fd1824adff1a755609620ff22719b88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>a05ecb68f3604fb361382f7cf836cdb3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>ae2c3b2ea0d1f7479776e184b9931a569</anchor>
      <arglist>(Level &amp;finelevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1MultiVectorTransferFactory.html</anchorfile>
      <anchor>af6cc967cc16e95d3c0f21f20d4b1f992</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::MultiVecTraits&lt; Scalar, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>Clone</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a1d58800c9fee391d06be9568d5e502cf</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const int numvecs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>ab31e50a66f29ca9bd38ba8b82cc28730</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a38dda0746646647418fa740a7287e36a</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a15217cc99db2578504f865507a820abf</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const Teuchos::Range1D &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneViewNonConst</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a35c40d0307868d8a0db83cfcdb5b524e</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneViewNonConst</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a300b7cf3521ab832fe834b27db8d206e</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const Teuchos::Range1D &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneView</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a200d554655ca5bf2d30bb2199bc4310f</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</type>
      <name>CloneView</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a8c29537f1242dd99ed2e32d812801f4f</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const Teuchos::Range1D &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ptrdiff_t</type>
      <name>GetGlobalLength</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>ad6dbcfc1d68069e137fca163f2435f69</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetNumberVecs</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>af99e2924823860ca90874590a4d23cd6</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>HasConstantStride</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>abfb09678e80e5f3a43b55c69b61e8caa</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvTimesMatAddMv</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a6d7cc1a87bf8f1577dc9a1b391db2c5f</anchor>
      <arglist>(Scalar alpha, const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const Teuchos::SerialDenseMatrix&lt; int, Scalar &gt; &amp;B, Scalar beta, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvAddMv</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a03bc0d081f3a1f1e47dda04a3a485d1d</anchor>
      <arglist>(Scalar alpha, const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, Scalar beta, const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvScale</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a3832fdb9728a26292f8bc77fd10035e3</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, Scalar alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvScale</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>ae272549dd055f1344375a9877a9986e9</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, const std::vector&lt; Scalar &gt; &amp;alphas)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvTransMv</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a35f1935ddde214dcee9c6d23eac4e931</anchor>
      <arglist>(Scalar alpha, const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, Teuchos::SerialDenseMatrix&lt; int, Scalar &gt; &amp;C)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvDot</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a407990d2faedebdb793f165979b4fac5</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, std::vector&lt; Scalar &gt; &amp;dots)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvNorm</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a3a077222f5b5a81ea4fa7b2afec113a6</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, std::vector&lt; typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt; &amp;normvec, NormType type=TwoNorm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetBlock</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>ae330a7bf2398823a59cf0c370b8fd3f8</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const std::vector&lt; int &gt; &amp;index, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetBlock</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a485484c8faf1adf94c60513e262ca052</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const Teuchos::Range1D &amp;index, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Assign</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a31b64eb35d532f9afa28365bee2eb59f</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvRandom</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>ac1ae1961c76190151ad4e29c7b37d7ee</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvInit</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>a5513e792bec2e4ba86afccf5fa270233</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvPrint</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01LO_00_01GO_00_01Node_01_4_01_4.html</anchorfile>
      <anchor>aaed59eaf1e4d2c94bc908bb9563f02cd</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, std::ostream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MutuallyExclusiveTime</name>
    <filename>classMueLu_1_1MutuallyExclusiveTime.html</filename>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>aec12ad2fc0f08a8828ff5023ed341887</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrementNumCalls</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>ae4074351f7e7af36eaa5fe974bb014f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; MutuallyExclusiveTime&lt; TagName &gt; &gt;</type>
      <name>getNewTimer</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>abb1af5b54cd44593698b03a839df46fd</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PrintParentChildPairs</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a6dcc6f412a8761e6710a6bf20b3388cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a6e8b89b33d2c7381b3de59b10df7ec88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MutuallyExclusiveTime</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>ace8d4d4050a1a2704de8eea08cf03a29</anchor>
      <arglist>(RCP&lt; Teuchos::Time &gt; timer)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>TopOfTheStack</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a9824c36be7765bbe33e21470762bbda5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Teuchos::Time &gt;</type>
      <name>timer_</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>afb19d494cec442d42db1690093ab1772</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isPaused_</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a7c995be9e289a8a7bcd25a31a194d327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::stack&lt; MutuallyExclusiveTime&lt; TagName &gt; * &gt;</type>
      <name>timerStack_</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a8c95c1c4eee17f9155f1d82ed5a874e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MutuallyExclusiveTime</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a7d3d9a825bc3479a77afaef864267cc8</anchor>
      <arglist>(const std::string &amp;name, bool startFlag=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MutuallyExclusiveTime</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a9dfb4a4e0be862845d8fbcd9a02c5725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stop</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>aaf3379998da35e4ce69fcd7b6550e27b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pause</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a2c43361dd1235682439ff7035aaeed98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resume</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a544c93cd936ac8afd6471dc599cba1a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>a27671903c85038c4b4f73a3510f40872</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPaused</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTime.html</anchorfile>
      <anchor>af4a078894a715ddc5f7622b8d65a7ad0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::MutuallyExclusiveTimeMonitor</name>
    <filename>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</filename>
    <templarg>TagName</templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>MutuallyExclusiveTimeMonitor</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>a82c2c57f81c1e21036436e02a8d50c60</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, MsgType timerLevel=Timings0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MutuallyExclusiveTimeMonitor</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>ad558026a1509de24abd23d75c65b95ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MutuallyExclusiveTimeMonitor</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>a58775a3a1888c73479bc11c68f56e427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MutuallyExclusiveTime&lt; TagName &gt; &gt;</type>
      <name>timer_</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>a5d6c6d0b085b65f0633d605dbecd676d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MutuallyExclusiveTimeMonitor&lt; MueLu::FactoryBase &gt;</name>
    <filename>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>MutuallyExclusiveTimeMonitor</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>a82c2c57f81c1e21036436e02a8d50c60</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, MsgType timerLevel=Timings0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MutuallyExclusiveTimeMonitor</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>ad558026a1509de24abd23d75c65b95ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>MutuallyExclusiveTimeMonitor</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>a58775a3a1888c73479bc11c68f56e427</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MutuallyExclusiveTime&lt; MueLu::FactoryBase &gt; &gt;</type>
      <name>timer_</name>
      <anchorfile>classMueLu_1_1MutuallyExclusiveTimeMonitor.html</anchorfile>
      <anchor>a5d6c6d0b085b65f0633d605dbecd676d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::myTriangle</name>
    <filename>classMueLu_1_1myTriangle.html</filename>
    <member kind="function">
      <type></type>
      <name>myTriangle</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>a9e3c5d9bc92fc6daeb780f2952eb910b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>myTriangle</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>ad6d696c5b66e70383f073d3c50741088</anchor>
      <arglist>(int v1in, int v2in, int v3in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~myTriangle</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>a42823c70af5832ba5876a3daf0888699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>ad9fe45b5c8a85fd77b5fce1afde8e7b7</anchor>
      <arglist>(const myTriangle &amp;l)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>v1</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>ae354eeb0a7b130c100e2ba4d9069e794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>v2</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>a467a19b7f4de655fb26db5f12a68cd48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>v3</name>
      <anchorfile>classMueLu_1_1myTriangle.html</anchorfile>
      <anchor>a1eda0fb1797d6a23abf3824e71c8d762</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::myVec2</name>
    <filename>classMueLu_1_1myVec2.html</filename>
    <member kind="function">
      <type></type>
      <name>myVec2</name>
      <anchorfile>classMueLu_1_1myVec2.html</anchorfile>
      <anchor>a86b2ec91c0759cf3b6eeb1baa6a53b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>myVec2</name>
      <anchorfile>classMueLu_1_1myVec2.html</anchorfile>
      <anchor>abbfa1dea51a5465210e61f7cc9721188</anchor>
      <arglist>(double xin, double yin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~myVec2</name>
      <anchorfile>classMueLu_1_1myVec2.html</anchorfile>
      <anchor>a9c7ebfeb2ec695014550a3dc5e79fb5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classMueLu_1_1myVec2.html</anchorfile>
      <anchor>ae39886f516ec2a16a0012b85856bebf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classMueLu_1_1myVec2.html</anchorfile>
      <anchor>ae6306959963c02bd68f6d82be9a20992</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::myVec3</name>
    <filename>classMueLu_1_1myVec3.html</filename>
    <member kind="function">
      <type></type>
      <name>myVec3</name>
      <anchorfile>classMueLu_1_1myVec3.html</anchorfile>
      <anchor>acea361c4c8b9f0e558a5ddec9dc48922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>myVec3</name>
      <anchorfile>classMueLu_1_1myVec3.html</anchorfile>
      <anchor>a03707b55f03cf6029dcb9dbaa37f6383</anchor>
      <arglist>(double xin, double yin, double zin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~myVec3</name>
      <anchorfile>classMueLu_1_1myVec3.html</anchorfile>
      <anchor>aba843e555d93023983197ac376e3d0e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>x</name>
      <anchorfile>classMueLu_1_1myVec3.html</anchorfile>
      <anchor>a1f2f1c397279a9b70ab333bba3848a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>y</name>
      <anchorfile>classMueLu_1_1myVec3.html</anchorfile>
      <anchor>a9e53927108a11c2673a9357963d75e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>z</name>
      <anchorfile>classMueLu_1_1myVec3.html</anchorfile>
      <anchor>a9a8b94a742592f944361e1d9e19ac919</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::NoFactory</name>
    <filename>classMueLu_1_1NoFactory.html</filename>
    <base>MueLu::FactoryBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NoFactory</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>a5fe7dcaf2cc5ed9951d20895c928b323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>NoFactory</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>a609328421779197e2245ee90a16c3582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static RCP&lt; const NoFactory &gt;</type>
      <name>noFactory_</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>a219c9271e1c07523c1e285d4afd9490c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>a1de54c95554ab4730897f1bade87bae8</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>a3dcf17390fca6777048ae4ece88a51ab</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RCP&lt; const NoFactory &gt;</type>
      <name>getRCP</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>afabd9bf7d056fb360b7d22bcce0a72b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const NoFactory *</type>
      <name>get</name>
      <anchorfile>classMueLu_1_1NoFactory.html</anchorfile>
      <anchor>adbe10c50be6f9f4ccb945840530d8f78</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::NotImplemented</name>
    <filename>classMueLu_1_1Exceptions_1_1NotImplemented.html</filename>
    <member kind="function">
      <type></type>
      <name>NotImplemented</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1NotImplemented.html</anchorfile>
      <anchor>a7cbbc2a3d04288189f933d513e63c350</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::NullspaceFactory</name>
    <filename>classMueLu_1_1NullspaceFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>NullspaceFactory</name>
      <anchorfile>classMueLu_1_1NullspaceFactory.html</anchorfile>
      <anchor>aea9164eebc7b87affc290e3e14cd8f0f</anchor>
      <arglist>(const std::string &amp;nspName=&quot;Nullspace&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullspaceFactory</name>
      <anchorfile>classMueLu_1_1NullspaceFactory.html</anchorfile>
      <anchor>a6fea2f041a75eeb7afdb9e233deb3efd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1NullspaceFactory.html</anchorfile>
      <anchor>a1420c4b4502f02d94eaf145f56725baf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1NullspaceFactory.html</anchorfile>
      <anchor>a0cf6c881ff8d1595037d741edac03ace</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1NullspaceFactory.html</anchorfile>
      <anchor>a092657ee5488eaf69b3065556b312a6d</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::NullspacePresmoothFactory</name>
    <filename>classMueLu_1_1NullspacePresmoothFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1NullspacePresmoothFactory.html</anchorfile>
      <anchor>a41f63c1a27f5e036e2c776f3d44e94b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NullspacePresmoothFactory</name>
      <anchorfile>classMueLu_1_1NullspacePresmoothFactory.html</anchorfile>
      <anchor>a5a09e96f1b0a6700142ae768a6f2d389</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullspacePresmoothFactory</name>
      <anchorfile>classMueLu_1_1NullspacePresmoothFactory.html</anchorfile>
      <anchor>a8cfd6f35e99918daa067dbd9424d56a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1NullspacePresmoothFactory.html</anchorfile>
      <anchor>a905ea1696be1068e0d3d927b78468a1a</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1NullspacePresmoothFactory.html</anchorfile>
      <anchor>adffb47e7c7ae9b5324bd384c1f33bb71</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::OnePtAggregationAlgorithm</name>
    <filename>classMueLu_1_1OnePtAggregationAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type></type>
      <name>OnePtAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1OnePtAggregationAlgorithm.html</anchorfile>
      <anchor>a7f091398b66717ead41f41b0f319a594</anchor>
      <arglist>(RCP&lt; const FactoryBase &gt; const &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OnePtAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1OnePtAggregationAlgorithm.html</anchorfile>
      <anchor>a54b0aaa2ae7d1e2955b74bd39278d3ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1OnePtAggregationAlgorithm.html</anchorfile>
      <anchor>ab0bb82f32652f809d976116723d2325f</anchor>
      <arglist>(Teuchos::ParameterList const &amp;params, GraphBase const &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::OperatorT</name>
    <filename>classBelos_1_1OperatorT.html</filename>
    <templarg>MV</templarg>
    <member kind="function">
      <type></type>
      <name>OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>abf63db6d8d1f35aec5a5eaf17de30aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>ae31923297e2fd16080a5e27873810b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>af52687acc36779e8d1194b9058458df5</anchor>
      <arglist>(const MV &amp;x, MV &amp;y, ETrans trans=NOTRANS) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OperatorT&lt; Xpetra::MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</name>
    <filename>classBelos_1_1OperatorT.html</filename>
    <member kind="function">
      <type></type>
      <name>OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>abf63db6d8d1f35aec5a5eaf17de30aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>ae31923297e2fd16080a5e27873810b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>af52687acc36779e8d1194b9058458df5</anchor>
      <arglist>(const Xpetra::MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;x, Xpetra::MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;y, ETrans trans=NOTRANS) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OperatorT&lt; Xpetra::MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &gt;</name>
    <filename>classBelos_1_1OperatorT.html</filename>
    <member kind="function">
      <type></type>
      <name>OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>abf63db6d8d1f35aec5a5eaf17de30aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>ae31923297e2fd16080a5e27873810b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>af52687acc36779e8d1194b9058458df5</anchor>
      <arglist>(const Xpetra::MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;x, Xpetra::MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &amp;y, ETrans trans=NOTRANS) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OperatorT&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</name>
    <filename>classBelos_1_1OperatorT.html</filename>
    <member kind="function">
      <type></type>
      <name>OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>abf63db6d8d1f35aec5a5eaf17de30aa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OperatorT</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>ae31923297e2fd16080a5e27873810b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1OperatorT.html</anchorfile>
      <anchor>af52687acc36779e8d1194b9058458df5</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;y, ETrans trans=NOTRANS) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::OperatorTraits&lt; ScalarType, MV, OperatorT&lt; MV &gt; &gt;</name>
    <filename>classBelos_1_1OperatorTraits_3_01ScalarType_00_01MV_00_01OperatorT_3_01MV_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1OperatorTraits_3_01ScalarType_00_01MV_00_01OperatorT_3_01MV_01_4_01_4.html</anchorfile>
      <anchor>a735abbc3e4b54f879927d2cc214db564</anchor>
      <arglist>(const OperatorT&lt; MV &gt; &amp;Op, const MV &amp;x, MV &amp;y, ETrans trans=NOTRANS)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::Overflow</name>
    <filename>classMueLu_1_1Exceptions_1_1Overflow.html</filename>
    <member kind="function">
      <type></type>
      <name>Overflow</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1Overflow.html</anchorfile>
      <anchor>a33a2ea7c0687282753b4660399eb41ba</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ParameterListAcceptor</name>
    <filename>classMueLu_1_1ParameterListAcceptor.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterListAcceptor</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a2114359758aec37545012e54679e89df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterListAcceptor</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a438ac883fd023aefa78fcc452fe40c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a4152b052ec78a96dcd14527d83f9f2af</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a6f04b804bb1d6208ccfe46e880b05701</anchor>
      <arglist>(const ParameterList &amp;paramList)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>GetParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>ade1a07dcee252720d216045f4bedbe4e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>SetParameter</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a54c4a14179a93af897127a2b347729a5</anchor>
      <arglist>(const std::string &amp;name, const ParameterEntry &amp;entry)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const ParameterEntry &amp;</type>
      <name>GetParameter</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>ac8a6e4111fd293d804a4719f79289cab</anchor>
      <arglist>(const std::string &amp;name) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>GetDocumentation</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a04bead0040db176a9cc9e6b4e31973ff</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ParameterListAcceptorImpl</name>
    <filename>classMueLu_1_1ParameterListAcceptorImpl.html</filename>
    <base>MueLu::ParameterListAcceptor</base>
    <member kind="function">
      <type></type>
      <name>ParameterListAcceptorImpl</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>a0fe608ce6fb670623c384db20a49cceb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterListAcceptorImpl</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>a7c5e4adacb973cec0e05b0ffecb24dc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>ab5912f28de596a2095975f22d755981c</anchor>
      <arglist>(const ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::ParameterList &amp;</type>
      <name>GetParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>a317f793dce76bf8d1bf1e3df1d679425</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetParameter</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>a7574a027720f209c1e6b8487cab5e15c</anchor>
      <arglist>(const std::string &amp;name, const ParameterEntry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>const ParameterEntry &amp;</type>
      <name>GetParameter</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>ad35ffae1a9a366c5cffc425f3b6cbc98</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GetDocumentation</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>a549a9752bc16e36032787321fc1ec3d0</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>paramList_</name>
      <anchorfile>classMueLu_1_1ParameterListAcceptorImpl.html</anchorfile>
      <anchor>ad25dc276ddc79f60a71ad0398c3d7207</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ParameterListInterpreter</name>
    <filename>classMueLu_1_1ParameterListInterpreter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::HierarchyManager</base>
    <member kind="function">
      <type>void</type>
      <name>SetParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a7fd569caf872cefbf814caca3ace9746</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetupHierarchy</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a3ce867eedcae6eac1e616cb05b92fc74</anchor>
      <arglist>(Hierarchy &amp;H) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, const FactoryBase * &gt;</type>
      <name>keep_pair</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a7bedf9e2eb1e78af9e78b75d9392f2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>SetupOperator</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a4d1cc98893069f32ae268166b2b7b5c7</anchor>
      <arglist>(Operator &amp;A) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>blockSize_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a49fbd387f0aaf460e9ae421e86569d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>CycleType</type>
      <name>Cycle_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a8e685ce828d9d5c5d51e339a4047343f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GlobalOrdinal</type>
      <name>dofOffset_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a3e0454fe9a505f52a186d3df4b2e8738</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a75f2406bdc67b67756826c28e79627b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a0b262e6560dd9fde331a2fe416adcf58</anchor>
      <arglist>(Teuchos::ParameterList &amp;paramList, Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; comm=Teuchos::null, Teuchos::RCP&lt; FactoryFactory &gt; factFact=Teuchos::null, Teuchos::RCP&lt; FacadeClassFactory &gt; facadeFact=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a09d5f3260a8fd924c1cb6dfd6a2379c7</anchor>
      <arglist>(const std::string &amp;xmlFileName, const Teuchos::Comm&lt; int &gt; &amp;comm, Teuchos::RCP&lt; FactoryFactory &gt; factFact=Teuchos::null, Teuchos::RCP&lt; FacadeClassFactory &gt; facadeFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterListInterpreter</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a5278799ba82ba56f4b836ccde1147085</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>changedPRrebalance_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a1f240f9f5b2ab45e12eaa6af85863024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>changedImplicitTranspose_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a0ca4e1dc131f41f746823e89aede34e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useCoordinates_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a3287e351489c43d1a61c7040a80ec105</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetEasyParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a3c9a9b59d46006c70b9b53c6ac37bdec</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Validate</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a926483cb9b6e6ac70e6f9b5f63e7ab40</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateFactoryManager</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a6815c40c0f353f4eb53842d215a9190c</anchor>
      <arglist>(Teuchos::ParameterList &amp;paramList, const Teuchos::ParameterList &amp;defaultList, FactoryManager &amp;manager, int levelID, std::vector&lt; keep_pair &gt; &amp;keeps) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>FactoryMap</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>ad53d311dc3d4af8f0a3a19067433ce8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; FactoryManagerBase &gt; &gt;</type>
      <name>FactoryManagerMap</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a9651d62d5caa3fbd1e110a03e8afe375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; FactoryFactory &gt;</type>
      <name>factFact_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>aadb5407798458e5279162eff48b60e49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; MueLu::FacadeClassFactory&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>facadeFact_</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a749f506be5713ea0107c6ba522e44df5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetFactoryParameterList</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>aeb3b5fbcfda80acd4a95937386b00a15</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BuildFactoryMap</name>
      <anchorfile>classMueLu_1_1ParameterListInterpreter.html</anchorfile>
      <anchor>a973834c6075ddd0776efbac884942a9e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const FactoryMap &amp;factoryMapIn, FactoryMap &amp;factoryMapOut, FactoryManagerMap &amp;factoryManagers) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PatternFactory</name>
    <filename>classMueLu_1_1PatternFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1PatternFactory.html</anchorfile>
      <anchor>aedfdfa60d67c3c2e6752dd9595283aac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatternFactory</name>
      <anchorfile>classMueLu_1_1PatternFactory.html</anchorfile>
      <anchor>afe7e0d3d3cfc464bbdb2daf23c0ed192</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatternFactory</name>
      <anchorfile>classMueLu_1_1PatternFactory.html</anchorfile>
      <anchor>a5aebc97ed80fc41f08f1db75fc5e06ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1PatternFactory.html</anchorfile>
      <anchor>ab33afc03a5cb4505e900c0c2303c0bd9</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1PatternFactory.html</anchorfile>
      <anchor>aa68f07f102f5037020779c74c18971a9</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PerfUtils</name>
    <filename>classMueLu_1_1PerfUtils.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>PrintMatrixInfo</name>
      <anchorfile>classMueLu_1_1PerfUtils.html</anchorfile>
      <anchor>ac7b7e0e13848f272100ab777e7931bb2</anchor>
      <arglist>(const Matrix &amp;A, const std::string &amp;msgTag, RCP&lt; const Teuchos::ParameterList &gt; params=Teuchos::null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>CommPattern</name>
      <anchorfile>classMueLu_1_1PerfUtils.html</anchorfile>
      <anchor>af329445323e48a9812c69b176173ff9c</anchor>
      <arglist>(const Matrix &amp;A, const std::string &amp;msgTag, RCP&lt; const Teuchos::ParameterList &gt; params=Teuchos::null)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PermutationFactory</name>
    <filename>classMueLu_1_1PermutationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1PermutationFactory.html</anchorfile>
      <anchor>a990c7a03ef85de46d9f1000b8e29a947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PermutationFactory</name>
      <anchorfile>classMueLu_1_1PermutationFactory.html</anchorfile>
      <anchor>a1680ae1a3461a6f2ffc8c98c80138e5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PermutationFactory</name>
      <anchorfile>classMueLu_1_1PermutationFactory.html</anchorfile>
      <anchor>afacfcb4fa57817e41b0a11a2214fc9f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1PermutationFactory.html</anchorfile>
      <anchor>a8aaa9e0f726c8878ba0ca5f4620111d8</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1PermutationFactory.html</anchorfile>
      <anchor>ad060305eeed654fd700889c47bd57493</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PermutingSmoother</name>
    <filename>classMueLu_1_1PermutingSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a7526061d28571036f53ac05675adf1a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a8a1d04d829185196288d4c1de732291c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>overlap_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a728c39bbddd7d23e14dab6c2cdca11bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>permFact_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a24da55aa55d66fa00b9475c2c04c0536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>permQT_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a2725191c4f1b0d9ec3cf557381b990c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>permP_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>ad639b72b4bdb3f4440772bb98719c381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>diagScalingOp_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a34fda7b0f0bedd591ee02b7d2652daef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>s_</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a93532c8171890a940c50376e8ceeeb92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PermutingSmoother</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a8d23a3913acb3e17adaeff66efa7a5da</anchor>
      <arglist>(std::string const &amp;mapName, const RCP&lt; const FactoryBase &gt; &amp;mapFact, std::string const &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList(), LO const &amp;overlap=0, RCP&lt; FactoryBase &gt; permFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PermutingSmoother</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a0d2ee0ea4d9c4a38b71b4cfbe5b62c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a29f43b24acf32d557708c86439f935e1</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a5f4947fac3a02933f7a2e7c9988638ab</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>acea5829984be0bd24196de7646afe95e</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>adfee05f263e4403cd60d22707f9ff163</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1PermutingSmoother.html</anchorfile>
      <anchor>a552b258f99c8f2a09047cbbaba22d211</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PFactory</name>
    <filename>classMueLu_1_1PFactory.html</filename>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>restrictionMode_</name>
      <anchorfile>classMueLu_1_1PFactory.html</anchorfile>
      <anchor>a5ff3a3f37ec4f264454fda1a7834a6ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PFactory</name>
      <anchorfile>classMueLu_1_1PFactory.html</anchorfile>
      <anchor>a1ff715057536ad277c0acb861b71946c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PFactory</name>
      <anchorfile>classMueLu_1_1PFactory.html</anchorfile>
      <anchor>a67ab0ab02e1d76446e6e4bbb45a24a06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1PFactory.html</anchorfile>
      <anchor>aa3a4a3fd523f5ee50df00f15cfd92558</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const  =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRestrictionMode</name>
      <anchorfile>classMueLu_1_1PFactory.html</anchorfile>
      <anchor>abe2ce8a99a04fe650adeae253ee8d16f</anchor>
      <arglist>(bool bRestrictionMode=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRestrictionModeSet</name>
      <anchorfile>classMueLu_1_1PFactory.html</anchorfile>
      <anchor>a9e5ede6814b162a6f53feb6b990970d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PgPFactory</name>
    <filename>classMueLu_1_1PgPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type>void</type>
      <name>ReUseDampingParameters</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a8e22ae4cd94c75790ea924e94cfdff50</anchor>
      <arglist>(bool bReuse)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>MultiplySelfAll</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>aea1d76e667b05cf532b043c166f2c8fb</anchor>
      <arglist>(const RCP&lt; Matrix &gt; &amp;Op, Teuchos::RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;InnerProdVec) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>MultiplyAll</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a3d8ba5cdb8691a7638541cc88e2732a2</anchor>
      <arglist>(const RCP&lt; Matrix &gt; &amp;left, const RCP&lt; Matrix &gt; &amp;right, Teuchos::RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;InnerProdVec) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ComputeRowBasedOmega</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>ab7adfdcc1ca331e6af6bd616e4ac6160</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel, const RCP&lt; Matrix &gt; &amp;A, const RCP&lt; Matrix &gt; &amp;P0, const RCP&lt; Matrix &gt; &amp;DinvAP0, RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;RowBasedOmega) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>diagonalView_</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a0283aafe7b9b1f3fe5881ce567059da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PgPFactory</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>ac3c2f7cf13bf1f35eb849ffba541143c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PgPFactory</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a721e0af4c5f5c50c2f1526132572f7fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a70e8e4016a1cf4eb337217e5152109a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinimizationMode</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>ad9c72a00e22261bcca48515300385c09</anchor>
      <arglist>(MinimizationNorm minnorm)</arglist>
    </member>
    <member kind="function">
      <type>MinimizationNorm</type>
      <name>GetMinimizationMode</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>add8e6de50d25825b4471ddb51c01deeb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a6e14bb511d40119237fe96541a570696</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>a4c2f9a3c9b0d85a32e06fae0d4ea2e44</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1PgPFactory.html</anchorfile>
      <anchor>ab3c44653f68af3dadaade1140c1a565b</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PreDropFunctionBaseClass</name>
    <filename>classMueLu_1_1PreDropFunctionBaseClass.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PreDropFunctionBaseClass</name>
      <anchorfile>classMueLu_1_1PreDropFunctionBaseClass.html</anchorfile>
      <anchor>a741d8d1d8050b5f0a177a7e64f640b80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Drop</name>
      <anchorfile>classMueLu_1_1PreDropFunctionBaseClass.html</anchorfile>
      <anchor>acab6fbad89e8cd6efe00ce6145cf4512</anchor>
      <arglist>(size_t lrow, GlobalOrdinal grow, size_t k, LocalOrdinal lcid, GlobalOrdinal gcid, const Teuchos::ArrayView&lt; const LocalOrdinal &gt; &amp;indices, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;vals)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PreDropFunctionConstVal</name>
    <filename>classMueLu_1_1PreDropFunctionConstVal.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PreDropFunctionBaseClass</base>
    <member kind="function">
      <type></type>
      <name>PreDropFunctionConstVal</name>
      <anchorfile>classMueLu_1_1PreDropFunctionConstVal.html</anchorfile>
      <anchor>a0e98f477d521035cdbfbf55dcf2bdd7c</anchor>
      <arglist>(const Scalar threshold=0.0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PreDropFunctionConstVal</name>
      <anchorfile>classMueLu_1_1PreDropFunctionConstVal.html</anchorfile>
      <anchor>ab705a73160e3c69e785ad164a92769cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Drop</name>
      <anchorfile>classMueLu_1_1PreDropFunctionConstVal.html</anchorfile>
      <anchor>af0b14b381f1db4725db6bc42852efc95</anchor>
      <arglist>(size_t lrow, GlobalOrdinal grow, size_t k, LocalOrdinal lcid, GlobalOrdinal gcid, const Teuchos::ArrayView&lt; const LocalOrdinal &gt; &amp;indices, const Teuchos::ArrayView&lt; const Scalar &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>GetThreshold</name>
      <anchorfile>classMueLu_1_1PreDropFunctionConstVal.html</anchorfile>
      <anchor>a52feeeab1ac3eaa22a18f11d9d9b2481</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scalar</type>
      <name>threshold_</name>
      <anchorfile>classMueLu_1_1PreDropFunctionConstVal.html</anchorfile>
      <anchor>a0dbe7b9e879ec591ce17e5191976d3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1PreDropFunctionConstVal.html</anchorfile>
      <anchor>a81d14e40eb080de75728d91f741f3642</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PreserveDirichletAggregationAlgorithm</name>
    <filename>classMueLu_1_1PreserveDirichletAggregationAlgorithm.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::AggregationAlgorithmBase</base>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1PreserveDirichletAggregationAlgorithm.html</anchorfile>
      <anchor>a32ff79ef4005048f862735b69a19a025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PreserveDirichletAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1PreserveDirichletAggregationAlgorithm.html</anchorfile>
      <anchor>a09b680423d4ab3461642cf5e4ba8d2f0</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;graphFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PreserveDirichletAggregationAlgorithm</name>
      <anchorfile>classMueLu_1_1PreserveDirichletAggregationAlgorithm.html</anchorfile>
      <anchor>a076d067bc18cb3a3003567f7077ca8c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildAggregates</name>
      <anchorfile>classMueLu_1_1PreserveDirichletAggregationAlgorithm.html</anchorfile>
      <anchor>ae137ea91903906d2ea060d95db5925be</anchor>
      <arglist>(const Teuchos::ParameterList &amp;params, const GraphBase &amp;graph, Aggregates &amp;aggregates, std::vector&lt; unsigned &gt; &amp;aggStat, LO &amp;numNonAggregatedNodes) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::PRFactory</name>
    <filename>classMueLu_1_1PRFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>MueLu::PrintMonitor</name>
    <filename>classMueLu_1_1PrintMonitor.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>PrintMonitor</name>
      <anchorfile>classMueLu_1_1PrintMonitor.html</anchorfile>
      <anchor>ac57390ba57291e3d38a1546a8a26b696</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, MsgType msgLevel=Runtime0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PrintMonitor</name>
      <anchorfile>classMueLu_1_1PrintMonitor.html</anchorfile>
      <anchor>afef0d3e4882921b13cf93c86e79786b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PrintMonitor</name>
      <anchorfile>classMueLu_1_1PrintMonitor.html</anchorfile>
      <anchor>a52cdfa30ac3a942f11383f8a1631ff1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>tabbed</name>
      <anchorfile>classMueLu_1_1PrintMonitor.html</anchorfile>
      <anchor>ad31d01e58f58e2d329b204360cd692a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const BaseClass &amp;</type>
      <name>object_</name>
      <anchorfile>classMueLu_1_1PrintMonitor.html</anchorfile>
      <anchor>aeca4eee93e19156417c1ccbec82df638</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ProjectorSmoother</name>
    <filename>classMueLu_1_1ProjectorSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>ab28c0e42116fb5137ea7d4ff4767d28a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>Borth_</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>af05cbc07db0836471ce2e08839497228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>coarseSolver_</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>a081b8bbb8004a202001800616b568020</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProjectorSmoother</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>adb4c3d187712252ce7e1b2bceb04e8d3</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; coarseSolver)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProjectorSmoother</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>a72b54523307b1d806c5df7fe9197e528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>a7218d3540cc67114db43cd762fd19f1b</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>a8fdaa8259496a09af087a11ede568298</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>afbb536ba4b864bf7ed84660e90b5c619</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>aa344f3d2d431e23b628536cfc8428c7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1ProjectorSmoother.html</anchorfile>
      <anchor>acbe7be29d3d3e530d1b07bbe4113b642</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Q2Q1Q2CoarseGridFactory</name>
    <filename>classMueLu_1_1Q2Q1Q2CoarseGridFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>Q2Q1Q2CoarseGridFactory</name>
      <anchorfile>classMueLu_1_1Q2Q1Q2CoarseGridFactory.html</anchorfile>
      <anchor>a9d9925ca99f2e6586a8d9978eabd4d5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Q2Q1Q2CoarseGridFactory</name>
      <anchorfile>classMueLu_1_1Q2Q1Q2CoarseGridFactory.html</anchorfile>
      <anchor>af40fad1892cbccd7266b3f866711fb8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Q2Q1Q2CoarseGridFactory.html</anchorfile>
      <anchor>aa6591e87e37eb9ac1a70f389e8f9cec8</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1Q2Q1Q2CoarseGridFactory.html</anchorfile>
      <anchor>a684bfd17843a5688438cbda4fdd77f2c</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildCoarseGrid</name>
      <anchorfile>classMueLu_1_1Q2Q1Q2CoarseGridFactory.html</anchorfile>
      <anchor>a3c6ae2865ab5146920558341665b72e3</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::QR_InterfaceEx</name>
    <filename>classMueLu_1_1QR__InterfaceEx.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isZeroNspColumn</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>aae2915029e684fa5f106fc4baa65285a</anchor>
      <arglist>(LocalOrdinal const &amp;myAggSize, ArrayRCP&lt; Scalar &gt; &amp;localQR, LocalOrdinal nspCol)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::LAPACK&lt; LocalOrdinal, Scalar &gt;</type>
      <name>lapack_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a4a303f3e21980962a37ae13a8df1f54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LocalOrdinal</type>
      <name>workSize_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>af9270464052d50160156c55d34802402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LocalOrdinal</type>
      <name>NSDim_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>abaf57743fb2578c157ceda4edbe794a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LocalOrdinal</type>
      <name>internalNSDim_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a030cc645b93f0c546a614ddae0403409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LocalOrdinal</type>
      <name>info_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a0c152ae4edbc0ce6fcab68150a2a8301</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; Scalar &gt;</type>
      <name>tau_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a668bbb4a15b6af27f6b9fe9a141ce098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; Scalar &gt;</type>
      <name>work_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>aac51d06a8580ece1b44642719c9d5905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; Scalar &gt;</type>
      <name>internalLocalQR_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a5f26d4f89dec186c1153feccb35efbf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LocalOrdinal &gt;</type>
      <name>nonZeroCols_</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>ac013d6385abfdbde42b3be6990977aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QR_InterfaceEx</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a4e1c8da00b9461214b54a8a07e25a3d2</anchor>
      <arglist>(const size_t nullSpaceDimension)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~QR_InterfaceEx</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>ad93adbd6c54a25e0b48838b69dfb06ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Compute</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>a41cf0ac1f7cb22ebef2d8fdba919e061</anchor>
      <arglist>(LocalOrdinal const &amp;myAggSize, ArrayRCP&lt; Scalar &gt; &amp;localQR)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExtractQ</name>
      <anchorfile>classMueLu_1_1QR__InterfaceEx.html</anchorfile>
      <anchor>ab255d7fb169aa68420bf9b39a8fa0ef5</anchor>
      <arglist>(LocalOrdinal const &amp;myAggSize, ArrayRCP&lt; Scalar &gt; &amp;localQR)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RAPFactory</name>
    <filename>classMueLu_1_1RAPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>RAPFactory</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a9e461c0317bdd6faa9201afda9487593</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RAPFactory</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>af59dc289553bda2375c05e8279b32391</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a0f88269bbaf1adcfb40e10ce1bab5f12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a4f8c63bc1dea780b4cdaf63678547e4e</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a31e63d292d807687c14f85b441228fc6</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTransferFactory</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>aa03b8199edd8a52536c4818b30b36b28</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumTransferFactories</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a3f8bf478de33037369c5cd08c5e89bde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>hasDeclaredInput_</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a8ba251355446387be38a02d4592e747c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>transferFacts_</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a3e5a01a34ba2912e5160942d5f70c1e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CheckRepairMainDiagonal</name>
      <anchorfile>classMueLu_1_1RAPFactory.html</anchorfile>
      <anchor>a41e426c701ecf514f851599e95358bfe</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;Ac) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RAPShiftFactory</name>
    <filename>classMueLu_1_1RAPShiftFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>RAPShiftFactory</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a35e206b28f322037e032d0e5078a4a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RAPShiftFactory</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a782f2e511d35d3295a7925b735682407</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>adc8d6ef12703cad2ab534d6a60864baa</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a89a7f0f5139753182bd329842f139bb1</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetImplicitTranspose</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a2c2e5c0d938a9bbb50a8c2600ece002c</anchor>
      <arglist>(bool const &amp;implicit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetRepairZeroDiagonal</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>ad66dfccf0e91958cf1ddd0d83b993a63</anchor>
      <arglist>(bool const &amp;repairZeroDiagonals)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPlausibilityCheck</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>aed74224626d03cf70a51fa038a15acdc</anchor>
      <arglist>(bool const &amp;checkAc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetShifts</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a251c6a7ef5331c280c0d0af4ba85d3db</anchor>
      <arglist>(std::vector&lt; Scalar &gt; &amp;shifts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddTransferFactory</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a6e36ab96029c7f4c2669e8e8feb73c2d</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumTransferFactories</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>adb25cf028cdb43a06cc4d64aa62c5826</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>implicitTranspose_</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>ab7d7bb911ae44d3f5d7ec3100d3778b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkAc_</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>ab0b13ca664b8c70544d7c1eec88d65da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>repairZeroDiagonals_</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>abe4025c4a9b1b15c40f8ad0f2cc0fa21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>transferFacts_</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a78d249f005461cfdaf1f7ccc5319ab1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Scalar &gt;</type>
      <name>shifts_</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>a818db539092f3d55fdf495ce1dbd0d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CheckMainDiagonal</name>
      <anchorfile>classMueLu_1_1RAPShiftFactory.html</anchorfile>
      <anchor>ae3d373df8e07796b87ea7a6915bc60be</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;Ac) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RebalanceAcFactory</name>
    <filename>classMueLu_1_1RebalanceAcFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>rebalanceFacts_</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>af167add2794d66c3654453e2a8eadc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RebalanceAcFactory</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>a853d1b4d602cd8c8efea87d292613649</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RebalanceAcFactory</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>ab8cff509ca9cc378b309469ada3329d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>a993681f925f6cb147070d6dc6e205654</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>a5db6e7b1812a652a6231696b4ec8116d</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>a7853fe1e3cc77b1cd1517ba098daf787</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddRebalanceFactory</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>a1103e622575733f50b5337988b3a2211</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumRebalanceFactories</name>
      <anchorfile>classMueLu_1_1RebalanceAcFactory.html</anchorfile>
      <anchor>a3cc0e91a2c503588968aa150f4baedaf</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RebalanceBlockAcFactory</name>
    <filename>classMueLu_1_1RebalanceBlockAcFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>aa59f5453219e68ad1d5183553c3c6d21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractorFactory&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorFactoryClass</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a049d76b78ea857718c2dc4d65798d97a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>rebalanceFacts_</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a2c9551827a8ce6becdc3200a55bf463b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>aba57cd681a99b2b92d81bed98baa343b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RebalanceBlockAcFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a649987cf625805777ca7ec0ee5d367f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RebalanceBlockAcFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a5ac8e56fd4b3bc02024581bb93bd9d98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a2b3d06009fff8dd1bd542605b0e85706</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a0b62609d31f6031a06ec835df6953d8a</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a011e058bde352e04476337093954ea1f</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a60544ad0ee1b91856f0682d347853026</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddRebalanceFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a9c23783bacf4bfb4a20f1432276fd5e9</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumRebalanceFactories</name>
      <anchorfile>classMueLu_1_1RebalanceBlockAcFactory.html</anchorfile>
      <anchor>a7e674fb55d9086d71ca6df8cf29ea891</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RebalanceBlockInterpolationFactory</name>
    <filename>classMueLu_1_1RebalanceBlockInterpolationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>acd3fc0110cebf986deb73484a64b244e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RebalanceBlockInterpolationFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>ae4b321c7b619169dc80c3d9d6aa6e4ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RebalanceBlockInterpolationFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>abe0dbcc80b9a5d193287c56d6d40b5ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>acebc46530a223428edb9777f7678ce4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>aeb45f4ef4cf6ef252e911f3354b78456</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>ac1f9b3b46ad98396a8269bb72a7fcb22</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RebalanceBlockInterpolationFactory.html</anchorfile>
      <anchor>ac1fd54ee1b7d1bbeebd5cdc5b107109e</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RebalanceBlockRestrictionFactory</name>
    <filename>classMueLu_1_1RebalanceBlockRestrictionFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>a9f0ada7432a7107251c6ddfb289d101d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RebalanceBlockRestrictionFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>a9800d3dbc15ca5c1b44790bd9b036baf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RebalanceBlockRestrictionFactory</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>a068d1a778c90b5d09bdcdd56765c28ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>ab0edbe5ec0bc3780d127311c63181e8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>a369d5da53b078855fe6a17f42e07f29a</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>a779411e1892f882879c9350c0edf20d6</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RebalanceBlockRestrictionFactory.html</anchorfile>
      <anchor>af43370014aa546edb965a1e432fa2f16</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RebalanceMapFactory</name>
    <filename>classMueLu_1_1RebalanceMapFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RebalanceMapFactory.html</anchorfile>
      <anchor>a6914ce88f30746b830257f396afd03e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1RebalanceMapFactory.html</anchorfile>
      <anchor>a4c2fdfdd7537bef07a8f406727f992c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RebalanceMapFactory</name>
      <anchorfile>classMueLu_1_1RebalanceMapFactory.html</anchorfile>
      <anchor>a96cd7532d7d33cf98ab23b35f4295ab7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RebalanceMapFactory</name>
      <anchorfile>classMueLu_1_1RebalanceMapFactory.html</anchorfile>
      <anchor>ac92dbb935860944f08d082e8ce97f4eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RebalanceMapFactory.html</anchorfile>
      <anchor>a4dc170f4b4dd88f8722844cdc844ac2f</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RebalanceMapFactory.html</anchorfile>
      <anchor>a95a7a8954e8ba784beff98281f5b8575</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RebalanceTransferFactory</name>
    <filename>classMueLu_1_1RebalanceTransferFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>RebalanceTransferFactory</name>
      <anchorfile>classMueLu_1_1RebalanceTransferFactory.html</anchorfile>
      <anchor>aea0d01897c38ac521c2a462d47ce6137</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RebalanceTransferFactory</name>
      <anchorfile>classMueLu_1_1RebalanceTransferFactory.html</anchorfile>
      <anchor>adfe71f2e4d37ef6029c4e20a26b90678</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RebalanceTransferFactory.html</anchorfile>
      <anchor>a3daf04bc6eaece982f7c4f0b7567ecdf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RebalanceTransferFactory.html</anchorfile>
      <anchor>a16f7c72a1d13b741ca54241ca72e924f</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RebalanceTransferFactory.html</anchorfile>
      <anchor>a84431fddd8d645738d1c5ca2d82813c4</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RefMaxwell</name>
    <filename>classMueLu_1_1RefMaxwell.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TMap</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a803deab7d8b97a593b729d3b6cfc7c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TCRS</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ab0f4851932a4dd1bcdbfd31bb7fd1d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TROW</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>aa2766873678f0d64e5f56561c5ea5778</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>TMV</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a5d53e0ee654a5a70102b6c206c59c2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XMap</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>af2f8e40b4ea4022e081d3c93888d5f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XMV</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ae59eeed5fe017d435cffbc694546a282</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::TpetraMultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XTMV</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a20cb4302a84553ee2ad6e5c4510421dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XCRS</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a210e088c480144192f2e2e8965e8da4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::TpetraCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XTCRS</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ac14441114d19c38e806178eeef506ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XMat</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a21e8f3c772cb89f285e2c934f8116bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::CrsMatrixWrap&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>XCrsWrap</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>adddbcfdecd40a6e5ff49f6bdb59b4b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a55796d2c734894304bd923404b6a4634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a4e7edefd85529f9adb1901b190a453f5</anchor>
      <arglist>(Teuchos::RCP&lt; Hierarchy &gt; H11, Teuchos::RCP&lt; Hierarchy &gt; H22)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ac6d73cdff4607ed593ac15d1e02b5d12</anchor>
      <arglist>(const Teuchos::RCP&lt; TCRS &gt; &amp;SM_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;D0_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M0inv_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M1_Matrix, const Teuchos::RCP&lt; TMV &gt; &amp;Nullspace, const Teuchos::RCP&lt; TMV &gt; &amp;Coords, Teuchos::ParameterList &amp;List, bool ComputePrec=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a4d360191c6a201a2cb8436509153920e</anchor>
      <arglist>(const Teuchos::RCP&lt; TCRS &gt; &amp;D0_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M0inv_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M1_Matrix, const Teuchos::RCP&lt; TMV &gt; &amp;Nullspace, const Teuchos::RCP&lt; TMV &gt; &amp;Coords, Teuchos::ParameterList &amp;List)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>af381b43d31b097bc9e051eda8e65548a</anchor>
      <arglist>(const Teuchos::RCP&lt; TCRS &gt; &amp;SM_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;D0_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M1_Matrix, const Teuchos::RCP&lt; TMV &gt; &amp;Nullspace, const Teuchos::RCP&lt; TMV &gt; &amp;Coords, Teuchos::ParameterList &amp;List, bool ComputePrec=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a6825de1119f62dd10f304bc3e366dd3c</anchor>
      <arglist>(const Teuchos::RCP&lt; TCRS &gt; &amp;D0_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M1_Matrix, const Teuchos::RCP&lt; TMV &gt; &amp;Nullspace, const Teuchos::RCP&lt; TMV &gt; &amp;Coords, Teuchos::ParameterList &amp;List)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefMaxwell</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a9f0dbacdd332398f6429c57e21c535d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a6b5538f80510833d97d341d7aee2be0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a953d54bcfee0180fff906101b3859d93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ae8ce41e00ff24c217d83eb92a93bbe4d</anchor>
      <arglist>(Teuchos::ParameterList &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compute</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a5919b520951ff5fceef3f47fa1ab2da2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildProlongator</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a928aba63381f2a802fc5521a053499f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>formCoarseMatrix</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a3e6bbe8c504d9137c0acbc299baf396f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetMatrix</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a971bfa5ee009dd2872d6e991cac8b380</anchor>
      <arglist>(Teuchos::RCP&lt; TCRS &gt; SM_Matrix_new)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyInverseAdditive</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a30294a77c2f4c283fba6eaad9cfd5131</anchor>
      <arglist>(const XTMV &amp;RHS, XTMV &amp;X) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyInverse121</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a2e447af4c699ae4ecda43cd539d51c3d</anchor>
      <arglist>(const XTMV &amp;RHS, XTMV &amp;X) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyInverse212</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>af4b098b47ecc6b321b1fd2312e7ecab3</anchor>
      <arglist>(const XTMV &amp;RHS, XTMV &amp;X) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a2a2d34c4979e676b110e9aca67b3f21c</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::one()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a00a995bec4dd09df6bed573507f92838</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; RefMaxwell&lt; Scalar, LocalOrdinal, GlobalOrdinal, NewNode &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>aec867e8324ee3377b13521dc40540c48</anchor>
      <arglist>(const RCP&lt; NewNode &gt; &amp;new_node) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>findDirichletRows</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ab57213a76c1f651e676cf65f5a18920b</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A, std::vector&lt; LocalOrdinal &gt; &amp;dirichletRows)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>findDirichletCols</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a766f1fc3b79ef468b16c6195e06c6155</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A, std::vector&lt; LocalOrdinal &gt; &amp;dirichletRows, std::vector&lt; LocalOrdinal &gt; &amp;dirichletCols)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Apply_BCsToMatrixRows</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a6fa9b5e96103eb2e42c80f16d8073570</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;A, std::vector&lt; LocalOrdinal &gt; &amp;dirichletRows)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Apply_BCsToMatrixCols</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ad19af78c7f0e812c5739338bd92d38aa</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;A, std::vector&lt; LocalOrdinal &gt; &amp;dirichletCols)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Remove_Zeroed_Rows</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>af92498e3e313e45023c0e04e6c13c613</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;A, double tol=1.0e-14)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>afc8a72dde0efc43a223a9e536d6dfa0e</anchor>
      <arglist>(const Teuchos::RCP&lt; TCRS &gt; &amp;D0_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M0inv_Matrix, const Teuchos::RCP&lt; TCRS &gt; &amp;M1_Matrix, const Teuchos::RCP&lt; TMV &gt; &amp;Nullspace, const Teuchos::RCP&lt; TMV &gt; &amp;Coords, Teuchos::ParameterList &amp;List)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Hierarchy &gt;</type>
      <name>Hierarchy11_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>aa6b01c0c3d62cb377ab3ba5f74067de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Hierarchy &gt;</type>
      <name>Hierarchy22_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>aa798db41ae1a378cd5aa9a9d92ce2127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Hierarchy &gt;</type>
      <name>HierarchySmoother_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ab6b41304621c3cc686a8b90615f7cd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Level &gt;</type>
      <name>TopLevel_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a8f60ded344546f6a7d65236aff4d1c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>SM_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a0cde5d48562e0f0b5f95ea8d0dd9951c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>D0_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a8a3428b8527893ffaa9db0833fc9d072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>M0inv_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a507c4aaca8909645dfbe203f1f2d4970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>M1_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>aa2bc6e45bcc4a0f5158d7c3bb2e15084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>Ms_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a393d08df663e3edb7ef5ac5393d1794d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>TMT_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a588466865e8ff6a0b97a5f98e8d37827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>TMT_Agg_Matrix_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>aae6dd57a42ad4c4426c01d9d2d1ea8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>P11_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a707e288acf1579c03594fdb6c16c43c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>A11_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a315330d7223941ed69d3e32d3b695a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMat &gt;</type>
      <name>A22_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a44ab4dca9b351b439d2c371fd5ee2c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LocalOrdinal &gt;</type>
      <name>BCrows_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ab7200658377d996a0625071d4ca0191e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; LocalOrdinal &gt;</type>
      <name>BCcols_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ac35e3e93774a05c487d4d0767cd996c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMV &gt;</type>
      <name>Nullspace_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a2e319e4ae1468ed243c04fd37906ecf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; XMV &gt;</type>
      <name>Coords_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a5e9e78fec264b3dd2b9b7a6bd61f7aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>parameterList_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>adc82d5e936a0c52ce40a56cad8d3d513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>precList11_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ac77b9ca121f530f9165e5efb947c5994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>precList22_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a8398a0d10f22acbe1108f801969120d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>smootherList_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a5617252ec81596dde7d2f79476b1d362</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disable_addon_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>a7cd6af3b18867052ca5e94c0ab97ef6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mode_</name>
      <anchorfile>classMueLu_1_1RefMaxwell.html</anchorfile>
      <anchor>ad4cdecd5217abe98066d1fd8906d8a67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ReorderBlockAFactory</name>
    <filename>classMueLu_1_1ReorderBlockAFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>ReorderBlockAFactory</name>
      <anchorfile>classMueLu_1_1ReorderBlockAFactory.html</anchorfile>
      <anchor>a2a18d4dc87d058cb45f48cc3d0defc8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReorderBlockAFactory</name>
      <anchorfile>classMueLu_1_1ReorderBlockAFactory.html</anchorfile>
      <anchor>a0f9ace8c1a04222811f7330a72e2a36f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1ReorderBlockAFactory.html</anchorfile>
      <anchor>af2bac9527c5c62e69c260296bac81850</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1ReorderBlockAFactory.html</anchorfile>
      <anchor>a3dec1de3f53b495ed5d02f1629a2a9d0</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1ReorderBlockAFactory.html</anchorfile>
      <anchor>a68476506260a55ff8e9e494fd0645cdd</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RepartitionFactory</name>
    <filename>classMueLu_1_1RepartitionFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>RepartitionFactory</name>
      <anchorfile>classMueLu_1_1RepartitionFactory.html</anchorfile>
      <anchor>aa8e06805fb089f7acefaa28316b46bc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RepartitionFactory</name>
      <anchorfile>classMueLu_1_1RepartitionFactory.html</anchorfile>
      <anchor>a6ce46ecea59dbfd14869e14b22d4a4bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RepartitionFactory.html</anchorfile>
      <anchor>a15b0ba26ca3b3610fc8e69f4c6e43fcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RepartitionFactory.html</anchorfile>
      <anchor>a4eb749ada146a9c42d8bea3f0dd421e2</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RepartitionFactory.html</anchorfile>
      <anchor>a1f6b1a3823a8405dcf46a538dc80a0f9</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeterminePartitionPlacement</name>
      <anchorfile>classMueLu_1_1RepartitionFactory.html</anchorfile>
      <anchor>ad174a97fa1a49220c446168ce29cf7f9</anchor>
      <arglist>(const Matrix &amp;A, GOVector &amp;decomposition, GO numPartitions) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RepartitionHeuristicFactory</name>
    <filename>classMueLu_1_1RepartitionHeuristicFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>RepartitionHeuristicFactory</name>
      <anchorfile>classMueLu_1_1RepartitionHeuristicFactory.html</anchorfile>
      <anchor>a4d4b6c0335e590a4f5a3cc21d4288481</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RepartitionHeuristicFactory</name>
      <anchorfile>classMueLu_1_1RepartitionHeuristicFactory.html</anchorfile>
      <anchor>a76128e5f6c076b2a52d138c90685d2a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RepartitionHeuristicFactory.html</anchorfile>
      <anchor>af1c6c418c0ce76ea48dcf5d7a92491e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RepartitionHeuristicFactory.html</anchorfile>
      <anchor>ae4b156c0ddfb4e849b42d9c748a73a69</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RepartitionHeuristicFactory.html</anchorfile>
      <anchor>a915c6850025b341922542c2e70c67c73</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RepartitionInterface</name>
    <filename>classMueLu_1_1RepartitionInterface.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1RepartitionInterface.html</anchorfile>
      <anchor>a5c41b62197bd22590ee68cdfd1bd0013</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1RepartitionInterface.html</anchorfile>
      <anchor>a68f1702d49de21f96f7b832cf59c9cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RepartitionInterface</name>
      <anchorfile>classMueLu_1_1RepartitionInterface.html</anchorfile>
      <anchor>aec48b9342245d958f9da9842f0f2a731</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RepartitionInterface</name>
      <anchorfile>classMueLu_1_1RepartitionInterface.html</anchorfile>
      <anchor>aa651734087043f1a4c33a0de977cbda2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RepartitionInterface.html</anchorfile>
      <anchor>a2bf398b736c1410b917687db8ff98dde</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RepartitionInterface.html</anchorfile>
      <anchor>a3beab43d0e57cbf34c3813080b111db0</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::RigidBodyModeFactory</name>
    <filename>classMueLu_1_1RigidBodyModeFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>void</type>
      <name>setNumPDEs</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>a4e764e1bc9c05998b9760f63d009258b</anchor>
      <arglist>(int numPDEs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>nspName_</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>aabdff4b8284a9dcdfed53ba6e53b435b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPDEs_</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>a09fa57be943839d05cd37090cb25021c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RigidBodyModeFactory</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>a800ffaac30cb6429d3f7e70943ed9155</anchor>
      <arglist>(const int numPDEs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RigidBodyModeFactory</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>a22a3d0b30cf37213c159bbd290e098ce</anchor>
      <arglist>(const std::string &amp;nspName=&quot;Nullspace&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RigidBodyModeFactory</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>aa76ae427cb9d7b63872726c1fd523d8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>a250a5de9609174224eebb86a865aa334</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1RigidBodyModeFactory.html</anchorfile>
      <anchor>aa75e0beaef51aa8b5f564d03506073a3</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Exceptions::RuntimeError</name>
    <filename>classMueLu_1_1Exceptions_1_1RuntimeError.html</filename>
    <member kind="function">
      <type></type>
      <name>RuntimeError</name>
      <anchorfile>classMueLu_1_1Exceptions_1_1RuntimeError.html</anchorfile>
      <anchor>a59ad182a73955236184207bf5f869c9d</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SaPFactory</name>
    <filename>classMueLu_1_1SaPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type></type>
      <name>SaPFactory</name>
      <anchorfile>classMueLu_1_1SaPFactory.html</anchorfile>
      <anchor>aa5c013dfea56412828efea0f907f1eb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SaPFactory</name>
      <anchorfile>classMueLu_1_1SaPFactory.html</anchorfile>
      <anchor>a24e21496279b9f8e7cd6b07a39d0d629</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SaPFactory.html</anchorfile>
      <anchor>ab1637b3409849e1b1ef763c9c0dfa529</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SaPFactory.html</anchorfile>
      <anchor>a01639e5b0463e3b4de43204077f02455</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SaPFactory.html</anchorfile>
      <anchor>a65dc546cb2f7e08b7f0cf7dd6043c471</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1SaPFactory.html</anchorfile>
      <anchor>aa9c091b719cb61a5460efa397ac6409e</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SchurComplementFactory</name>
    <filename>classMueLu_1_1SchurComplementFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>SchurComplementFactory</name>
      <anchorfile>classMueLu_1_1SchurComplementFactory.html</anchorfile>
      <anchor>a2895118961bf0c6c815acae800f8fe6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchurComplementFactory</name>
      <anchorfile>classMueLu_1_1SchurComplementFactory.html</anchorfile>
      <anchor>a197df6069cda9ae91643827855bd49dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SchurComplementFactory.html</anchorfile>
      <anchor>ac72fd36e56a3d1d766d7d38f903d523e</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SchurComplementFactory.html</anchorfile>
      <anchor>aa6478d52280f224645a384ef7be7cd55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SchurComplementFactory.html</anchorfile>
      <anchor>a3a50dada15049661823f69975d65fa67</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SegregatedAFactory</name>
    <filename>classMueLu_1_1SegregatedAFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>SegregatedAFactory</name>
      <anchorfile>classMueLu_1_1SegregatedAFactory.html</anchorfile>
      <anchor>aaf77d9d6c9e4f6fb029da15ce9a4cb0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SegregatedAFactory</name>
      <anchorfile>classMueLu_1_1SegregatedAFactory.html</anchorfile>
      <anchor>af48006279181ae7d626bad5322810b9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SegregatedAFactory.html</anchorfile>
      <anchor>a3ffec58a38f1f6e84751f9b2686de3e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SegregatedAFactory.html</anchorfile>
      <anchor>abd2a9efe80a01fda4e641ef0cf6cdaf3</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SegregatedAFactory.html</anchorfile>
      <anchor>a9c8a771439861161ea2872b2b475ed3e</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SemiCoarsenPFactory</name>
    <filename>classMueLu_1_1SemiCoarsenPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>a18e64a3e6333f5aad23f1d8fd8f39fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>LO</type>
      <name>FindCpts</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>a32828a59ab256ab07377a74f5f2f3025</anchor>
      <arglist>(LO const PtsPerLine, LO const CoarsenRate, LO const Thin, LO **LayerCpts) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>LO</type>
      <name>MakeSemiCoarsenP</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>a518f102deb62a2f2f42fa20189017b8c</anchor>
      <arglist>(LO const Ntotal, LO const nz, LO const CoarsenRate, LO const LayerId[], LO const VertLineId[], LO const DofsPerNode, RCP&lt; Matrix &gt; &amp;Amat, RCP&lt; Matrix &gt; &amp;P, RCP&lt; const Map &gt; &amp;coarseMap) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bTransferCoordinates_</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>afa58a2f38409f3c4c631100054ad9bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SemiCoarsenPFactory</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>a4b2e841e2068f2d58ae0cea2d3ffc8bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SemiCoarsenPFactory</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>ac81c254a1e5a3cdb21f67b41c86954eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>a5ef78be52b926dadd3072ffd03735456</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>aa9eec83c026d658b5b6224abf52ae375</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1SemiCoarsenPFactory.html</anchorfile>
      <anchor>ac7cc802a2c3f4bbadbb761a43fc4a8b2</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SetFactoryManager</name>
    <filename>classMueLu_1_1SetFactoryManager.html</filename>
    <member kind="variable" protection="private">
      <type>const RCP&lt; Level &gt;</type>
      <name>level_</name>
      <anchorfile>classMueLu_1_1SetFactoryManager.html</anchorfile>
      <anchor>a306642d1681e2b5ecbca5be970b39d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RCP&lt; const FactoryManagerBase &gt;</type>
      <name>prevFactoryManager_</name>
      <anchorfile>classMueLu_1_1SetFactoryManager.html</anchorfile>
      <anchor>a68ff068ac0ef924172c41bac21d48426</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SetFactoryManager</name>
      <anchorfile>classMueLu_1_1SetFactoryManager.html</anchorfile>
      <anchor>a1223f78944b798e0bd23860b4f95d4cf</anchor>
      <arglist>(const RCP&lt; Level &gt; &amp;level, const RCP&lt; const FactoryManagerBase &gt; &amp;factoryManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SetFactoryManager</name>
      <anchorfile>classMueLu_1_1SetFactoryManager.html</anchorfile>
      <anchor>a81cd27287c4372640fad591d1b19dc56</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ShiftedLaplacian</name>
    <filename>classMueLu_1_1ShiftedLaplacian.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>ShiftedLaplacian</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ac9ed581257db7fcab667e15124740567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShiftedLaplacian</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>aa8653de2819dcc2ec3d2d60b0e85f648</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a928818ae25cb0c2c100af7a6407485a1</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProblemMatrix</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ab2c4c10513513ada3a0f474c8d55eec8</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProblemMatrix</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a94a88fbac3e7a42f9d70a7dee199df5c</anchor>
      <arglist>(RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;TpetraA)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioningMatrix</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a084125886756338527668a5cc8ee126a</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;P)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioningMatrix</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ac7920f70eeb3300cb15df8dce6f0b9b7</anchor>
      <arglist>(RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;TpetraP)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setstiff</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ab2857a3a60aca2cf83740d75e1fa64c0</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;K)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setstiff</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a613e12c6a79f68c705f64c2031cb1fdb</anchor>
      <arglist>(RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;TpetraK)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setmass</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a100bca65e7395e576d2bd5b006134d25</anchor>
      <arglist>(RCP&lt; Matrix &gt; &amp;M)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setmass</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a3d2ca2e33ccfc06eab016ffaf81107a6</anchor>
      <arglist>(RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;TpetraM)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setcoords</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5f8ccdd3d6951a833d4e3f9fb1f6ec37</anchor>
      <arglist>(RCP&lt; MultiVector &gt; &amp;Coords)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNullSpace</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a390f3af35057e06c32b17bc2550d4e24</anchor>
      <arglist>(RCP&lt; MultiVector &gt; NullSpace)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelShifts</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a90095fcdf93ea938cfc0f3ec77cfb4ae</anchor>
      <arglist>(std::vector&lt; Scalar &gt; levelshifts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ad0541d7c7b5633ea4051eb8294f51b24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupFastRAP</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5f83eb1b6b7e10c0b0e460dd6a83db92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSlowRAP</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a80b1f59bf4d12adbfa3605bbacac4270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupNormalRAP</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a56e7f0b2b19f6c8fab8780a4b2d27a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSolver</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a79cbbb9aa93b4ff799feb15c5ab6de50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLinearProblem</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a33328d7224d6df2eee07040c5b747fbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a87a2ccde75310a3ec9ffaa73b45662f6</anchor>
      <arglist>(const RCP&lt; TMV &gt; B, RCP&lt; TMV &gt; &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigrid_apply</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ab86ba969e0a83384be315c6549a0c69a</anchor>
      <arglist>(const RCP&lt; MultiVector &gt; B, RCP&lt; MultiVector &gt; &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multigrid_apply</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ad6461fa1e1469ba5faea82b0c36135f4</anchor>
      <arglist>(const RCP&lt; Tpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt; B, RCP&lt; Tpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt; &amp;X)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetIterations</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a8d476c902036f3bb7735333f8b256a26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetResidual</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a3065752cb34846e2de76c0f674c382aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; FactoryManager &gt;</type>
      <name>Manager_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a9c3cffcbf03219156bc85047f1532aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; SC, LO, GO, NO &gt;</type>
      <name>TVEC</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a35ff0ff29d0905199a7f503808f1a317</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::MultiVector&lt; SC, LO, GO, NO &gt;</type>
      <name>TMV</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a16c8b5e48bec02c901729f463b16998d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Operator&lt; SC, LO, GO, NO &gt;</type>
      <name>OP</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5148982e9959b48dfae693f35246040f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPDEs_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a920e8f5da3fa23304f02c11ade611047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>Smoother_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ad563a9da339d8c587ae8b3dae879a798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>Aggregation_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a4c4651b9916addb3cb4d1ff61526dc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>Nullspace_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>add87fa06dd3ad5834ab44baf3b31c65a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numLevels_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a920d59fa17f8aaa7f9e173bfb104a4b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>coarseGridSize_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a13755d6cbec19c27ededfcfc5a6c779c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>omega_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a6ea9b605871f52bbec63af3049553df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; SC &gt;</type>
      <name>levelshifts_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a4eeee59e6b015c5b6b17213dcd04d674</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iters_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>abb94e24b196c4e0cbf9824089d905f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>blksize_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a4dbec2d81495c3314a319ba5b44278b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>tol_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a10521271ccdc5c3978bfef792657ae4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nsweeps_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ad694a916fc6751199dd97280ab002821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>ncycles_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a8703ce3ff396a957df100b7c444c3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cycles_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5d33917d3523d8815c6347e3589a8945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>subiters_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>aa600f86f040334ed5372f882796dd170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>option_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a78a235762e73a49f86a2b0401c3d39e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nproblems_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a6da453a9125fa51053966a25dfb125e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>solverType_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a9e441565bfe3ac1087b9cc01ee2eee7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>restart_size_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a35e9308602bff25de4f70e51693c2d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>recycle_size_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a6b21d20af80c4db35f8f7765039433be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>smoother_sweeps_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a268a1c97318d21e4a30eb201eb928bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scalar</type>
      <name>smoother_damping_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a91e41f3704a537dfe2bdb7cb8d072107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>krylov_type_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a6f4bc0709266272bf89a1d7f94d4c76a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>krylov_iterations_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a384d676bb88a4a45e2cbc89151e245b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>krylov_preconditioner_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a19775984085ca6b83d01a00966a143e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_leveloffill_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a3d275052b63edeeef7c306f4959ffea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_abs_thresh_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a197f14b8e7beef7ec7ebbc339767ccb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_rel_thresh_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>aa9faf3c10342815f717e91ec974e9998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_diagpivotthresh_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a188c0bee30370de86b8c61fd6dd69b4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_drop_tol_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>aead4c40043ddc29bd5dc3ab264527ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_fill_tol_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a199fdbe3ae53d4b21c9d244b41f74246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ilu_relax_val_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a91c2416bdd62a5377dc9fe5b1fbead5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ilu_rowperm_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a49ba21c24d9e7da22cee44cc33f57370</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ilu_colperm_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a9e632d6a2dcb64a5ec059df9359385e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ilu_drop_rule_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ae575f3c0c00a0da0f557e71dc58e1924</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ilu_normtype_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a1955c35c8c9f4be1065de520229845c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ilu_milutype_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a2373dae35e8fea97d2c74006f3a8d98f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>schwarz_overlap_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5ec5c7c008e1a5c9135ec3dd27d787c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>schwarz_usereorder_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a4a62cf0886f6b237168af1de19fe22e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Tpetra::CombineMode</type>
      <name>schwarz_combinemode_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>afa873338700c366b1297f8347b2ab607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>schwarz_ordermethod_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a95b49c07e820ac0c1184bdb53061cbaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>GridTransfersExist_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a6df6f91de6cfb9dcc12ac4e6f8e8c536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isSymmetric_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>acd1161b4ffe11c280f09c4541b826e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>K_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a65da1751731be2b3eba8dd3390e3f852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>M_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a67f06a2fabe1a42f8abd95f6b632c800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ade4b4faee3f4c67d3f4c2b79b8aae80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>P_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>acb6519615d099346e4022fa09370e853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>Coords_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a36da627f9095ed90f8db5d725fd5033c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MultiVector &gt;</type>
      <name>NullSpace_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a0f3d920989f6bd546ed3caeccc483d71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Hierarchy &gt;</type>
      <name>Hierarchy_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ac709fcf4af3af904d5f2d8d6c091d82c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; TentativePFactory &gt;</type>
      <name>TentPfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a686f67bb7407f2096c7c46730cad683b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; PFactory &gt;</type>
      <name>Pfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5bf622ac9f413ca69766c4ea5a372b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; PgPFactory &gt;</type>
      <name>PgPfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>af2d00941448baa199fb0c924862830b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; TransPFactory &gt;</type>
      <name>TransPfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a0d3e05938d99096eea9fa2e5e58a78ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; GenericRFactory &gt;</type>
      <name>Rfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a2b6757da330e6142e3dc33ae8e7db109</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; RAPFactory &gt;</type>
      <name>Acfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a3c66665b36fdd5176e82e516f6179505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; RAPShiftFactory &gt;</type>
      <name>Acshift_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a5b7700dbb2623e39c71a5f9eb2782e20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; CoalesceDropFactory &gt;</type>
      <name>Dropfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>aea3e6c5f7f3701b961e243159e2363de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; CoupledAggregationFactory &gt;</type>
      <name>Aggfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a9d18d8e7fc66e07ebde34ef0a3cf2486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; UncoupledAggregationFactory &gt;</type>
      <name>UCaggfact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a83cc0ef5c39c1560cba603ac10b9cbd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>smooProto_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a8562551ef1c08ff97319c347f0fe7701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>coarsestSmooProto_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a4ed2bf6657e07a97fc25a3381a6e4a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherFactory &gt;</type>
      <name>smooFact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a8792b0e97854861771666969c0007d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherFactory &gt;</type>
      <name>coarsestSmooFact_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>aee84a4f7dd0647d1e9a3d0950c4f15fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>coarsestSmooList_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>ac02103f1f4c1003019cb4e07a307e6dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>precType_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a3cca3885d19285913f327fe026f5fb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>precList_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a7edd4fcecd48dc9a214b26177aaabbb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::ShiftedLaplacianOperator&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>MueLuOp_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a43dcfe39059fc12cd954bb6212c8914a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>TpetraA_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacian.html</anchorfile>
      <anchor>a7005e2dfe20c0121d2da9ce2b53be410</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ShiftedLaplacianOperator</name>
    <filename>classMueLu_1_1ShiftedLaplacianOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>aa8d22bb81064ae8147dc2053af8e81a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>aa696b1ce7fc456447e7f0237dd4d4efa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>a677a202357a71eb6dcdb373ee2a19cba</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::one()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>ac25c63bad26d918d72a9a78fd8f5c93a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Matrix</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>acd2f57099b697426526b17e32ff9df84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrix</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>ae03d09cc45258588e75df8a4d12e7fa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MV</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>aa614ca7fc8b19a784cd63f62c3e69755</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>OP</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>af94be5ffbd0db0801df59dbc4ea31dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>MueLu::Utilities&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MUtils</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>abce9ae7cfea44960ec530e0fd31930a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Hierarchy_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>abb65eeab1a2aee96448154b76a371c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>R_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>aa9fc88acccfe63872d236b11026ea440</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>P_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>a29b874d6c8e114a53a41f27711f53d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>a7b5e545032e292d922e39f2ff5fb6848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Ac_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>ac9f93693cd77bfe6f4b8706691182973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>BelosList_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>a094289b650d79a944955905b61b42a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cycles_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>a1ed34a2e7cbcbcc20a0cee8c4b263dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iters_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>ac5b1dcdd51ac112af21538db79fbc764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>option_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>adcfdde34e07534abb89ee2abcb424398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>tol_</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>ae2368c67ea3699a8d36d37a5452353c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShiftedLaplacianOperator</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>a4b5a2e8dfeb9411757e48130019c135d</anchor>
      <arglist>(const RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;H)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ShiftedLaplacianOperator</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>ab042caba11659bf222e2a6bbd90861cc</anchor>
      <arglist>(const RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;H, const RCP&lt; Matrix &gt; A, int cycles, int iters, int option, double tol)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ShiftedLaplacianOperator</name>
      <anchorfile>classMueLu_1_1ShiftedLaplacianOperator.html</anchorfile>
      <anchor>af501b3951ea077c3dec991b95eaae74d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SimpleSmoother</name>
    <filename>classMueLu_1_1SimpleSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>abeb59fd2c25b2c2fe39734f1024765f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a7415d0994d5c8da061a0ac48fbb50cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a54522938a80a76c3a0220abbd73af6bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>AFact_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a1c56abae03504e952e82f96323486de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a0190e0d23c14a80fd1358f8201953fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>rangeMapExtractor_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>abd00bc16c3aeec9cdf2514bdc2b13b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>domainMapExtractor_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>afe3d8d21e2806deb8eae9e9943a276a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Vector &gt;</type>
      <name>diagFinv_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>ac701e081aadf83d3b6d0d91ba65243ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>F_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>ac47f9998821226d3dc2b9e0227acdaba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>G_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>aafe1a63183dd1b871e29160b5065712b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>D_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a53973f703b2cb2858dd1f79573102fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>Z_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a34d79ed3d0ec074bed01584a128a2e22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>velPredictSmoo_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>ab073eed9308681f108d1961019ea788e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>schurCompSmoo_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a96e8298027a1e0d6bbeacc3cafa13831</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a46e52b5f85d0f4b7a984e7091302eb44</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleSmoother</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>afc7679d86f3f3e325d6d996d9d2a78c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleSmoother</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a5ebd31c9810839962230a0f627b42e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>abdcfc78a1d764a1aa77c18b836ae4f58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>ac02c6e3545183d45d950535eda2d9c71</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVelocityPredictionFactoryManager</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a02628cf6882322b0368b2f8d3e4cb69b</anchor>
      <arglist>(RCP&lt; FactoryManager &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSchurCompFactoryManager</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>aef065573450dd036d3a0784a0dd0ac46</anchor>
      <arglist>(RCP&lt; FactoryManager &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a820bdf006698aabcd495d6af0030c199</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager, int pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a02bf2601ff03fb0f5df43497369b7a08</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>a45e5430b93108ce7c984715efa9c7780</anchor>
      <arglist>(MultiVector &amp;X, MultiVector const &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>ae2159aac8dd1c547ef3a948285c0d31a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1SimpleSmoother.html</anchorfile>
      <anchor>adb70de7ab82168671fe75dd1df49398e</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SingleLevelFactoryBase</name>
    <filename>classMueLu_1_1SingleLevelFactoryBase.html</filename>
    <base>MueLu::Factory</base>
    <member kind="function">
      <type></type>
      <name>SingleLevelFactoryBase</name>
      <anchorfile>classMueLu_1_1SingleLevelFactoryBase.html</anchorfile>
      <anchor>ac00df63fa5b34d49c1041dec320d88a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SingleLevelFactoryBase</name>
      <anchorfile>classMueLu_1_1SingleLevelFactoryBase.html</anchorfile>
      <anchor>a2cf77bfbc932f06adc1376654f734b89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SingleLevelFactoryBase.html</anchorfile>
      <anchor>ad1087f71fe36cadecd0eb3b32a63f0f5</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SingleLevelFactoryBase.html</anchorfile>
      <anchor>aaa326c934b798b2d13e59950b4e61e20</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1SingleLevelFactoryBase.html</anchorfile>
      <anchor>a5920d2fcb042c9b62baf2bb0524f5a38</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1SingleLevelFactoryBase.html</anchorfile>
      <anchor>acd68b6985863251f5d92dfc200302412</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SingleLevelMatlabFactory</name>
    <filename>classMueLu_1_1SingleLevelMatlabFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>SingleLevelMatlabFactory</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>a487b23eb172caa76f8f514c00235cf8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SingleLevelMatlabFactory</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>adb77fe1769eeeafc102d981d475f89ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>abe5b262d767caa3a841c7da2f194bda5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>ad9805722844c73aa29acccb66cf652e9</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>ad558d714ef966f5605e1d04c083768fb</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>a595876e387034e52798440622a49e30b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>hasDeclaredInput_</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>a3bac96949f849aa13fc8f6abc96bac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>needs_</name>
      <anchorfile>classMueLu_1_1SingleLevelMatlabFactory.html</anchorfile>
      <anchor>a9de61c90c71693ae2e7686b8433ccf82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Smoother</name>
    <filename>classMueLu_1_1Smoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>MueLu::SmootherBase</name>
    <filename>classMueLu_1_1SmootherBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">MueLu::BaseClass</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>a036dbf2c81d30aac076a9c5d59dfb43d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>a4879b4bdfa48c6f1e9ab73d4b753fbfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>aa86e1f42225600e9bbd544b84235e53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>a12a233acd4f5c6d3698c45296717798d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherBase</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>a9a601e410379b44535cc7ed0bf843976</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherBase</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>acbc02e9002ef93299a7f76dbf5b0a1a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1SmootherBase.html</anchorfile>
      <anchor>ac85fc884f0f8475a74ab31c0d294ec9b</anchor>
      <arglist>(MultiVector &amp;x, const MultiVector &amp;rhs, bool InitialGuessIsZero=false) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SmootherFactory</name>
    <filename>classMueLu_1_1SmootherFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherFactoryBase</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>ada29e53931f2f99ae9d0028cd8c829e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a5b1639ca9038e1cf2d6f96331eeee494</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a114a482ea0b9661915bd9db72e5948df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a49be1b9a1c7398aeb3a28608a468a5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CheckPrototypes</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a26489141f665c266a1449e706fe9bc47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>preSmootherPrototype_</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a3040b2bbab8ddf2e7d2cbed433b741a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>postSmootherPrototype_</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>ae6683b887a05ee7e7880c14dcfca3f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherFactory</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a9a7527c630fd23c277b9b1eb0515d0c5</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; preAndPostSmootherPrototype=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherFactory</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>ad8c32279712f48fdde492d189e23a52e</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; preSmootherPrototype, RCP&lt; SmootherPrototype &gt; postSmootherPrototype)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherFactory</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>abacda38ed2f85a98557d638b6817e5c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSmootherPrototypes</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a657e5ee100663b65544fc2155dc8f4c5</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; preAndPostSmootherPrototype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSmootherPrototypes</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a002e1aaaa933dfb7d65783b0be3d9b99</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; preSmootherPrototype, RCP&lt; SmootherPrototype &gt; postSmootherPrototype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetSmootherPrototypes</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a1b4c7dc43012ea09bd7e0d3963d59406</anchor>
      <arglist>(RCP&lt; SmootherPrototype &gt; &amp;preSmootherPrototype, RCP&lt; SmootherPrototype &gt; &amp;postSmootherPrototype) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a95764e19bdee3b54516855ab2a15244a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>aa2631c25d34aa742537a2392d7a2cfb4</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a0bf2668bcb2d837b2db0f938c97edbe3</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildSmoother</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>a97929080aade2569c2b091952f60f739</anchor>
      <arglist>(Level &amp;currentLevel, const PreOrPost preOrPost=BOTH) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>aa5a7fff3106691d3c15d2bdb4ee3bf25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classMueLu_1_1SmootherFactory.html</anchorfile>
      <anchor>aae5140d626ac932f0b6bd1ed58f5efd7</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SmootherFactoryBase</name>
    <filename>classMueLu_1_1SmootherFactoryBase.html</filename>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>SmootherFactoryBase</name>
      <anchorfile>classMueLu_1_1SmootherFactoryBase.html</anchorfile>
      <anchor>a06266dcf9e64f5226f1569600a9d77ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherFactoryBase</name>
      <anchorfile>classMueLu_1_1SmootherFactoryBase.html</anchorfile>
      <anchor>ae17467f65c64e678c1f09e3a7c4c01a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SmootherFactoryBase.html</anchorfile>
      <anchor>a9e5790cee453ccf25cb6899f9280ee9e</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>BuildSmoother</name>
      <anchorfile>classMueLu_1_1SmootherFactoryBase.html</anchorfile>
      <anchor>a05e6d53373742e7d166aef4f5bfd40c2</anchor>
      <arglist>(Level &amp;currentLevel, PreOrPost const preOrPost=BOTH) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SmootherPrototype</name>
    <filename>classMueLu_1_1SmootherPrototype.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <base>MueLu::SmootherBase</base>
    <base>MueLu::Factory</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aef9004b20f303696a87f6e25731085a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinal</type>
      <name>local_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aff57539ea13c0616d2c46a33ffc52ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>add2c083c0d95726a41c7ae4e5bc05b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a410df9ed64f2d282a67363e53973e645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isSetup_</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>adc3ba5d46ca206fbe4bb2f9fc9c9824d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a57d398a97a4610da2e3a8839ce24505b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a561f66a36918b401755558d4da161bbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ac10894ff603bf834fbc029ade5dc8a28</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a86e7fc622397ac2ea6dc96a9cb0b5c02</anchor>
      <arglist>(Level &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>af0893d3aaa13c592ecc7c4b93694d258</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ad4a22786f35375c5a18708ca4d719db0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ab54854cd5819c9fa15a583d58b34a8cd</anchor>
      <arglist>(bool const &amp;ToF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a2c772e12685a0855b665267ff3f35201</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a08c1be36c489d9b9be7015f0f1c314f9</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SmootherPrototype&lt; double, int, GlobalOrdinal, Node &gt;</name>
    <filename>classMueLu_1_1SmootherPrototype.html</filename>
    <base>MueLu::SmootherBase</base>
    <base>MueLu::Factory</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aef9004b20f303696a87f6e25731085a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aff57539ea13c0616d2c46a33ffc52ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GlobalOrdinal</type>
      <name>global_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>add2c083c0d95726a41c7ae4e5bc05b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a410df9ed64f2d282a67363e53973e645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isSetup_</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>adc3ba5d46ca206fbe4bb2f9fc9c9824d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a57d398a97a4610da2e3a8839ce24505b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a561f66a36918b401755558d4da161bbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ac10894ff603bf834fbc029ade5dc8a28</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a86e7fc622397ac2ea6dc96a9cb0b5c02</anchor>
      <arglist>(Level &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>af0893d3aaa13c592ecc7c4b93694d258</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ad4a22786f35375c5a18708ca4d719db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ab54854cd5819c9fa15a583d58b34a8cd</anchor>
      <arglist>(bool const &amp;ToF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a2c772e12685a0855b665267ff3f35201</anchor>
      <arglist>(Level &amp;requestedLevel) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a08c1be36c489d9b9be7015f0f1c314f9</anchor>
      <arglist>(Level &amp;requestedLevel) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SmootherPrototype&lt; double, int, int, Node &gt;</name>
    <filename>classMueLu_1_1SmootherPrototype.html</filename>
    <base>MueLu::SmootherBase</base>
    <base>MueLu::Factory</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aef9004b20f303696a87f6e25731085a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aff57539ea13c0616d2c46a33ffc52ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>add2c083c0d95726a41c7ae4e5bc05b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Node</type>
      <name>node_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a410df9ed64f2d282a67363e53973e645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isSetup_</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>adc3ba5d46ca206fbe4bb2f9fc9c9824d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a57d398a97a4610da2e3a8839ce24505b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a561f66a36918b401755558d4da161bbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ac10894ff603bf834fbc029ade5dc8a28</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a86e7fc622397ac2ea6dc96a9cb0b5c02</anchor>
      <arglist>(Level &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>af0893d3aaa13c592ecc7c4b93694d258</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ad4a22786f35375c5a18708ca4d719db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ab54854cd5819c9fa15a583d58b34a8cd</anchor>
      <arglist>(bool const &amp;ToF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a2c772e12685a0855b665267ff3f35201</anchor>
      <arglist>(Level &amp;requestedLevel) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a08c1be36c489d9b9be7015f0f1c314f9</anchor>
      <arglist>(Level &amp;requestedLevel) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SmootherPrototype&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classMueLu_1_1SmootherPrototype.html</filename>
    <base>MueLu::SmootherBase</base>
    <base>MueLu::Factory</base>
    <member kind="typedef">
      <type>double</type>
      <name>scalar_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aef9004b20f303696a87f6e25731085a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>local_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>aff57539ea13c0616d2c46a33ffc52ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>global_ordinal_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>add2c083c0d95726a41c7ae4e5bc05b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::EpetraNode</type>
      <name>node_type</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a410df9ed64f2d282a67363e53973e645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isSetup_</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>adc3ba5d46ca206fbe4bb2f9fc9c9824d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a57d398a97a4610da2e3a8839ce24505b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmootherPrototype</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a561f66a36918b401755558d4da161bbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ac10894ff603bf834fbc029ade5dc8a28</anchor>
      <arglist>(Level &amp;currentLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a86e7fc622397ac2ea6dc96a9cb0b5c02</anchor>
      <arglist>(Level &amp;)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>af0893d3aaa13c592ecc7c4b93694d258</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ad4a22786f35375c5a18708ca4d719db0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IsSetup</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>ab54854cd5819c9fa15a583d58b34a8cd</anchor>
      <arglist>(bool const &amp;ToF)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a2c772e12685a0855b665267ff3f35201</anchor>
      <arglist>(Level &amp;requestedLevel) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1SmootherPrototype.html</anchorfile>
      <anchor>a08c1be36c489d9b9be7015f0f1c314f9</anchor>
      <arglist>(Level &amp;requestedLevel) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos2::Solver</name>
    <filename>classAmesos2_1_1Solver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>MueLu::SolverBase</name>
    <filename>classMueLu_1_1SolverBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>SolverBase</name>
      <anchorfile>classMueLu_1_1SolverBase.html</anchorfile>
      <anchor>a81e4c24269603b54e1eabda71b79c094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SolverBase</name>
      <anchorfile>classMueLu_1_1SolverBase.html</anchorfile>
      <anchor>aafc53338ac1c63a507126979b0b2ed5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Iterate</name>
      <anchorfile>classMueLu_1_1SolverBase.html</anchorfile>
      <anchor>ac833b016626a038085bb05d947b3bfee</anchor>
      <arglist>(const Matrix &amp;A, const Constraint &amp;C, const Matrix &amp;P0, RCP&lt; Matrix &gt; &amp;P) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::StatusTestGenResSubNorm&lt; Scalar, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;, Belos::OperatorT&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</name>
    <filename>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MV</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>aa72b3de83f0b8c2d0988e87e729a4c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::BlockedCrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>BCRS</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a1280f66f8d11c751b6ab6f130bf0851f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>ME</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a7bc03b61f4618fc511223b7b1da5e71a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Belos::OperatorT&lt; MV &gt;</type>
      <name>OP</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a6ba07835ef2258912d17768989294c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;</type>
      <name>SCT</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a3f0f2507c091aff586ce5a2650200c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SCT::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a0e11abe36e204a5b79a1421de8bffb51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MultiVecTraits&lt; Scalar, MV &gt;</type>
      <name>MVT</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a66e3a71f8dbc24e54d55606de8857a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OperatorTraits&lt; Scalar, MV, OP &gt;</type>
      <name>OT</name>
      <anchorfile>classBelos_1_1StatusTestGenResSubNorm_3_01Scalar_00_01Xpetra_1_1MultiVector_3_01Scalar_00_01Loca166257dece5c4571c448ec46e50227e4.html</anchorfile>
      <anchor>a9eef4f361d9816526c6207f015759ff5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SteepestDescentSolver</name>
    <filename>classMueLu_1_1SteepestDescentSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SolverBase</base>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>nIts_</name>
      <anchorfile>classMueLu_1_1SteepestDescentSolver.html</anchorfile>
      <anchor>a0a35d1af675cbf17097172ddda26eb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SC</type>
      <name>stepLength_</name>
      <anchorfile>classMueLu_1_1SteepestDescentSolver.html</anchorfile>
      <anchor>aabc57ad2d7d1bc6eae6bfeab9a9ced1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SteepestDescentSolver</name>
      <anchorfile>classMueLu_1_1SteepestDescentSolver.html</anchorfile>
      <anchor>a75faffbdb096b1a085e26f0fca31f4d8</anchor>
      <arglist>(size_t Its, SC StepLength=Teuchos::ScalarTraits&lt; Scalar &gt;::one())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Iterate</name>
      <anchorfile>classMueLu_1_1SteepestDescentSolver.html</anchorfile>
      <anchor>a4d925649150da067c770b3a05f9667c0</anchor>
      <arglist>(const Matrix &amp;A, const Constraint &amp;C, const Matrix &amp;P0, RCP&lt; Matrix &gt; &amp;P) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SubBlockAFactory</name>
    <filename>classMueLu_1_1SubBlockAFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CheckForUserSpecifiedBlockInfo</name>
      <anchorfile>classMueLu_1_1SubBlockAFactory.html</anchorfile>
      <anchor>ac93e2c074d251ba4e97a6fb0fe5beebe</anchor>
      <arglist>(bool bRange, std::vector&lt; size_t &gt; &amp;stridingInfo, LocalOrdinal &amp;stridedBlockId) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubBlockAFactory</name>
      <anchorfile>classMueLu_1_1SubBlockAFactory.html</anchorfile>
      <anchor>a8399253def812b4355e21f1b5c89b05d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SubBlockAFactory</name>
      <anchorfile>classMueLu_1_1SubBlockAFactory.html</anchorfile>
      <anchor>a8006e32a4435fac3127c83d496a96075</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1SubBlockAFactory.html</anchorfile>
      <anchor>a943ec952946e96b9ad0096e1b60b1277</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1SubBlockAFactory.html</anchorfile>
      <anchor>ab00e58d3704e2280672bec5e3e67bb25</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1SubBlockAFactory.html</anchorfile>
      <anchor>a41e225f32274335c7cec97c30f7a3ccd</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SubFactoryMonitor</name>
    <filename>classMueLu_1_1SubFactoryMonitor.html</filename>
    <base>MueLu::SubMonitor</base>
    <member kind="function">
      <type></type>
      <name>SubFactoryMonitor</name>
      <anchorfile>classMueLu_1_1SubFactoryMonitor.html</anchorfile>
      <anchor>af2ed9ab6da6ad182f56919ac37bf7fee</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, int levelID, MsgType msgLevel=Runtime1, MsgType timerLevel=Timings1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubFactoryMonitor</name>
      <anchorfile>classMueLu_1_1SubFactoryMonitor.html</anchorfile>
      <anchor>ade723a813b868837b2b742b699e11fd7</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, const Level &amp;level, MsgType msgLevel=Runtime1, MsgType timerLevel=Timings1)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; TimeMonitor &gt;</type>
      <name>levelTimeMonitor_</name>
      <anchorfile>classMueLu_1_1SubFactoryMonitor.html</anchorfile>
      <anchor>a6279f3633f26fb40153fb79202eb28f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::SubMonitor</name>
    <filename>classMueLu_1_1SubMonitor.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>SubMonitor</name>
      <anchorfile>classMueLu_1_1SubMonitor.html</anchorfile>
      <anchor>ab9aea2a312e179bdb1a791bb0018c3e4</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, MsgType msgLevel=Runtime1, MsgType timerLevel=Timings1)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PrintMonitor</type>
      <name>printMonitor_</name>
      <anchorfile>classMueLu_1_1SubMonitor.html</anchorfile>
      <anchor>a720e1d332871861bfba5d4c2d9e1fca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>TimeMonitor</type>
      <name>timerMonitor_</name>
      <anchorfile>classMueLu_1_1SubMonitor.html</anchorfile>
      <anchor>a650163a0437186c48e40c97a9641b5e8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TekoSmoother</name>
    <filename>classMueLu_1_1TekoSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a8636d145bae2ceeabed00d8a64f86d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a06ae9be077cf32c3ef3cc53a136f8dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a8538bf9cc10898e555bfe8173f40d22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TekoSmoother</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>abb5a18cea8820e4c7905d775931e63d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TekoSmoother</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a2d16def2a7f7764fb3144c70b2d3c1e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a9fb1d4694ec94b1b3a47894e78fefe05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>ac9a606d091e6be64c13307223d1d050e</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTekoParameters</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>aab9e1827489bc983bf11494c4686022e</anchor>
      <arglist>(RCP&lt; ParameterList &gt; tekoParams)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a979c030d226ecd4cc0df7ccdea9e3c25</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a7d2d0eddb856799f537c6ce460527f93</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>a094e5ae6cf1434b379a70566164fe72b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1TekoSmoother.html</anchorfile>
      <anchor>afad93c4e92f6bc876fcd5fc73c186f58</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TekoSmoother&lt; double, int, GlobalOrdinal, Node &gt;</name>
    <filename>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>SmootherPrototype&lt; double, int, GlobalOrdinal, Node &gt;</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>aee237155a16e2557192146a3419ce9a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>ad160e510751a6947c3e34138ab37be24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a67d8d4559bed3395a4114b7b555d14aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>ad8241ef78a8cdd4d007196759abe1a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a4b28499ef41e5d6f2d8e23d818c848de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a55d4f4138cace86791a56900e52c5cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; BlockedCrsMatrix &gt;</type>
      <name>bA_</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>aa55398b86c462624fe73913715c873a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Thyra::BlockedLinearOpBase&lt; Scalar &gt; &gt;</type>
      <name>bThyOp_</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a2911bbd60d554072119e162358713806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>tekoParams_</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>abd0765c47f2f84fa835ff2501e88f302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teko::LinearOp</type>
      <name>inverseOp_</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a90fdfd97180d52b2428d409c324acb33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TekoSmoother</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>abf113074881f1a4853d29e52bcb70cf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TekoSmoother</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a75665ecbac1b23074dc8f77194a3a9ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a8ebe9f7108fe514b30484f1c888a436a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a901cf653d56fe1c3e3e052c13b35a64b</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTekoParameters</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>ae5d38728f3ec1d8bad1370726c0c25b0</anchor>
      <arglist>(RCP&lt; ParameterList &gt; tekoParams)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a65379f12211bbdff116b7d35630705a9</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a893fd8a927f3f2e0f3ae27c1a2731029</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>a7a3701815f3a99cd50bfc1231d11f517</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1TekoSmoother_3_01double_00_01int_00_01GlobalOrdinal_00_01Node_01_4.html</anchorfile>
      <anchor>aa1d39a9250d7362a980ab9d935db84f3</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TentativePFactory</name>
    <filename>classMueLu_1_1TentativePFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a6a11a7d973526b9c7ef859f2bbcb153d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BuildPuncoupled</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a0f267998044989f374e6b8989a0384af</anchor>
      <arglist>(RCP&lt; Matrix &gt; A, RCP&lt; Aggregates &gt; aggregates, RCP&lt; AmalgamationInfo &gt; amalgInfo, RCP&lt; MultiVector &gt; fineNullspace, RCP&lt; const Map &gt; coarseMap, RCP&lt; Matrix &gt; &amp;Ptentative, RCP&lt; MultiVector &gt; &amp;coarseNullspace) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>BuildPcoupled</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a8bf7ddb6e64517746c461561cbe8adc3</anchor>
      <arglist>(RCP&lt; Matrix &gt; A, RCP&lt; Aggregates &gt; aggregates, RCP&lt; AmalgamationInfo &gt; amalgInfo, RCP&lt; MultiVector &gt; fineNullspace, RCP&lt; const Map &gt; coarseMap, RCP&lt; Matrix &gt; &amp;Ptentative, RCP&lt; MultiVector &gt; &amp;coarseNullspace) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>isGoodMap</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>ae31dfe6312b17dae890d282784b78589</anchor>
      <arglist>(const Map &amp;rowMap, const Map &amp;colMap) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TentativePFactory</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a2cf3eac852ad0c8ff682faaa4b874d8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TentativePFactory</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a4120802437ee493cc08ac1c482c5eb5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a2b8f48d3fb421fda4bad30308ca71b68</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>a8007f529f858b21b0c05eec8fec6b965</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1TentativePFactory.html</anchorfile>
      <anchor>acd0895fa5e379b6176bc1afd81d8cf84</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ThresholdAFilterFactory</name>
    <filename>classMueLu_1_1ThresholdAFilterFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>varName_</name>
      <anchorfile>classMueLu_1_1ThresholdAFilterFactory.html</anchorfile>
      <anchor>a43bf919e040aac28901f1439e8900f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Scalar</type>
      <name>threshold_</name>
      <anchorfile>classMueLu_1_1ThresholdAFilterFactory.html</anchorfile>
      <anchor>aee6100e7e2b774cacbe54bf800ea5790</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ThresholdAFilterFactory</name>
      <anchorfile>classMueLu_1_1ThresholdAFilterFactory.html</anchorfile>
      <anchor>a486a97e658fb0d315076475a782d80a0</anchor>
      <arglist>(const std::string &amp;ename, const Scalar threshold)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThresholdAFilterFactory</name>
      <anchorfile>classMueLu_1_1ThresholdAFilterFactory.html</anchorfile>
      <anchor>aeb54c9d4c13e736c04d6fe7069fdbb5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1ThresholdAFilterFactory.html</anchorfile>
      <anchor>a0eda44727f8109ba5471e6523075a20b</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1ThresholdAFilterFactory.html</anchorfile>
      <anchor>abbb95b8128fd0ee9374bae5f46c03006</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TimeMonitor</name>
    <filename>classMueLu_1_1TimeMonitor.html</filename>
    <base>MueLu::BaseClass</base>
    <member kind="function">
      <type></type>
      <name>TimeMonitor</name>
      <anchorfile>classMueLu_1_1TimeMonitor.html</anchorfile>
      <anchor>afbec38eec2e19e3d067f2c30ec5e3bd0</anchor>
      <arglist>(const BaseClass &amp;object, const std::string &amp;msg, MsgType timerLevel=Timings0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeMonitor</name>
      <anchorfile>classMueLu_1_1TimeMonitor.html</anchorfile>
      <anchor>a432eeca22a254d9d4b188042c885d151</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TimeMonitor</name>
      <anchorfile>classMueLu_1_1TimeMonitor.html</anchorfile>
      <anchor>a1dd167d5b2588c7854ccee31295fa498</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Teuchos::Time &gt;</type>
      <name>timer_</name>
      <anchorfile>classMueLu_1_1TimeMonitor.html</anchorfile>
      <anchor>ad45c8af102aff667143f6b23d93cf500</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ToggleCoordinatesTransferFactory</name>
    <filename>classMueLu_1_1ToggleCoordinatesTransferFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>coordFacts_</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>a8aec4f642fcaf849dd9c2a7311892c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>hasDeclaredInput_</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>aa257ce90d82e811bb890e45edd778315</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ToggleCoordinatesTransferFactory</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>a1a11ee0fb281f6c66f79cd892afdf010</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ToggleCoordinatesTransferFactory</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>aefcdb01d5992e6fc74bb551f1522648d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>aba961eb2c1bc0a373d06c12e03923ff1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>aaed55ea171d63d2735936fd1601b62c7</anchor>
      <arglist>(Level &amp;finelevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>ac276e388063ab12da4c1cd52c9952381</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddCoordTransferFactory</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>a2f6b5fd3a631c6b86e61650f8a67963d</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumCoordTransferFactories</name>
      <anchorfile>classMueLu_1_1ToggleCoordinatesTransferFactory.html</anchorfile>
      <anchor>ae6d2bfdaa56ed47de6560f21dbd7e456</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TogglePFactory</name>
    <filename>classMueLu_1_1TogglePFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>prolongatorFacts_</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>aab98085317ee270671e66492107f15a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>ptentFacts_</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a16d64c13cba8eb21d1fb5ec6116473cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; const FactoryBase &gt; &gt;</type>
      <name>nspFacts_</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>ab4be66743e70a100975b41c2d6ed796c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>hasDeclaredInput_</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>af499bfecee6ae86ce5b6fc2b7210a8c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TogglePFactory</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a98e1660e5d4434edd0d48b88ac08fb0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TogglePFactory</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>ad45c6aa79d304c906175a0a65585e9dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>acc860930164845f144fa4213bf8f4183</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a1a40d72e9606c5b80bb4c61c482f7094</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a49bb0c2a0de3527bac552ce5c6bfac95</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a1284eb98ea418902a46ebc0cf2445959</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddProlongatorFactory</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a7bba58edd3f6d660112ff5f834c8bad7</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumProlongatorFactories</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a070c6fc5cdac27eff263c499e344c638</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPtentFactory</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a82cbbc320dcf092203e40f6028e78feb</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumPtentFactories</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>aba410597d3a49478d87c4a5f962827a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddCoarseNullspaceFactory</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>a4f14cd60509abb66e559cf46b2fa6e50</anchor>
      <arglist>(const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>NumCoarseNullspaceFactories</name>
      <anchorfile>classMueLu_1_1TogglePFactory.html</anchorfile>
      <anchor>aa8fb12b00009d8034a6a93f9ec8465f9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TopRAPFactory</name>
    <filename>classMueLu_1_1TopRAPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>TopRAPFactory</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>a403bf8452c8ba0555c52a7b9d3df42d3</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; parentFactoryManager)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TopRAPFactory</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>a2922513bacf1511fc94658d14fca028c</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; parentFactoryManagerFine, RCP&lt; const FactoryManagerBase &gt; parentFactoryManagerCoarse)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TopRAPFactory</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>a1115204d44c98591f9332d1b889d78df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>a369ba3f8ce7a76108f758716646fb697</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>afe13971da4f81bc88c09f551f730b742</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>PFact_</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>ad603a25c2b69df189f73882a34db6398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>RFact_</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>a95ba4d64bd9fc34cc28aaf3c3d19467d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>AcFact_</name>
      <anchorfile>classMueLu_1_1TopRAPFactory.html</anchorfile>
      <anchor>a31d8f66c79b3845ccaab9d8a6b35dbe0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TopSmootherFactory</name>
    <filename>classMueLu_1_1TopSmootherFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>TopSmootherFactory</name>
      <anchorfile>classMueLu_1_1TopSmootherFactory.html</anchorfile>
      <anchor>a6bee7e35884e3a8ab15f16d438b725c1</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; parentFactoryManager, const std::string &amp;varName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TopSmootherFactory</name>
      <anchorfile>classMueLu_1_1TopSmootherFactory.html</anchorfile>
      <anchor>af031c362306d36c6f3a9bad6639e034f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TopSmootherFactory.html</anchorfile>
      <anchor>ae382327009275e50abdfe3905ca338e9</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TopSmootherFactory.html</anchorfile>
      <anchor>ad9c901bd584938a5a47dc3194e39ad88</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>preSmootherFact_</name>
      <anchorfile>classMueLu_1_1TopSmootherFactory.html</anchorfile>
      <anchor>ad4c5e7b6fc71b8ecdf3b3083fe3d06e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>postSmootherFact_</name>
      <anchorfile>classMueLu_1_1TopSmootherFactory.html</anchorfile>
      <anchor>a3e120a73dfb8555625df0be233cc0909</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TpetraOperator</name>
    <filename>classMueLu_1_1TpetraOperator.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a7da2c71afb48f081f87dcd5b0f631dec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a58a7445daf7146f38e2e13dddf09d43d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a4f1f5cc19fb407b025644711bcf39a93</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::one()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a058af0efb841363ef764778ada2d5c6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, NewNode &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>ae32ab8f551937632f8ef9cfcae8416b5</anchor>
      <arglist>(const RCP&lt; NewNode &gt; &amp;new_node) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>ad14b7df6dfc4c335a376d7fefa4b2c82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Hierarchy_</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>aa2c00de299bd3a911530c3273c4afca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a82556d611ddfa02de8c6e156dd19f862</anchor>
      <arglist>(const RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;H)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraOperator</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a7a2e209fda76d690076f3b717cb2f67a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetHierarchy</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a350367e974e31154f7ebd366538a6437</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TpetraOperator&lt; double, int, int, Node &gt;</name>
    <filename>classMueLu_1_1TpetraOperator.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, int, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a7da2c71afb48f081f87dcd5b0f631dec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, int, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a58a7445daf7146f38e2e13dddf09d43d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a4f1f5cc19fb407b025644711bcf39a93</anchor>
      <arglist>(const Tpetra::MultiVector&lt; double, int, int, Node &gt; &amp;X, Tpetra::MultiVector&lt; double, int, int, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, double alpha=Teuchos::ScalarTraits&lt; double &gt;::one(), double beta=Teuchos::ScalarTraits&lt; double &gt;::one()) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a058af0efb841363ef764778ada2d5c6b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; TpetraOperator&lt; double, int, int, NewNode &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>ae32ab8f551937632f8ef9cfcae8416b5</anchor>
      <arglist>(const RCP&lt; NewNode &gt; &amp;new_node) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>ad14b7df6dfc4c335a376d7fefa4b2c82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::Hierarchy&lt; double, int, int, Node &gt; &gt;</type>
      <name>Hierarchy_</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>aa2c00de299bd3a911530c3273c4afca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraOperator</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a82556d611ddfa02de8c6e156dd19f862</anchor>
      <arglist>(const RCP&lt; MueLu::Hierarchy&lt; double, int, int, Node &gt; &gt; &amp;H)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraOperator</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a7a2e209fda76d690076f3b717cb2f67a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Hierarchy&lt; double, int, int, Node &gt; &gt;</type>
      <name>GetHierarchy</name>
      <anchorfile>classMueLu_1_1TpetraOperator.html</anchorfile>
      <anchor>a350367e974e31154f7ebd366538a6437</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TransPFactory</name>
    <filename>classMueLu_1_1TransPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>TransPFactory</name>
      <anchorfile>classMueLu_1_1TransPFactory.html</anchorfile>
      <anchor>af97f33ecd58c70e0bee7e7c32e3f4603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TransPFactory</name>
      <anchorfile>classMueLu_1_1TransPFactory.html</anchorfile>
      <anchor>a221182cddfe5ccc33b7b17e512a0b784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1TransPFactory.html</anchorfile>
      <anchor>a2d14df4987fcbbfee18296d9b43ac3f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TransPFactory.html</anchorfile>
      <anchor>a0b0a01b7877daf477bbcd86d6cea6c2c</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TransPFactory.html</anchorfile>
      <anchor>a96d611308f3ea9e6745ce6e32dc02e7c</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TrilinosSmoother</name>
    <filename>classMueLu_1_1TrilinosSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>void</type>
      <name>SetFactory</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>abdf5a21ccb13ab759d36914fac7d1cf3</anchor>
      <arglist>(const std::string &amp;varName, const RCP&lt; const FactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a81c8b64f83d0fa3d0a16d987be8ec936</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::TrilinosSmoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a7029a6b1749f51c9215eceac409bd280</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TrilinosSmoother&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a12fdd91d86f58befcd178ab0bd4ae2b4</anchor>
      <arglist>(const RCP&lt; Node2 &gt; &amp;node2, const Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;A_newnode) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>Ifpack2ToIfpack1Type</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a33cb3ba78b860533a95a55b61c607bae</anchor>
      <arglist>(const std::string &amp;type)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ParameterList</type>
      <name>Ifpack2ToIfpack1Param</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a285f703b98e71c2377309a1fab4b4481</anchor>
      <arglist>(const Teuchos::ParameterList &amp;ifpack2List)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a3fa0153e29652483280df4c34a6823cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LO</type>
      <name>overlap_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a2300746a9226aa91b9da5c0a2e581c9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FactoryBase &gt;</type>
      <name>AFact_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>adc05e0fbb336c73e7da6a4f363f62960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>sEpetra_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>aa6ddd0cdda1e93c3189c0ce9b78922d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>sTpetra_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>afaad95b3d9bfa14a3c8baa097d862b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>s_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>adbec6933500f6fd135d431b94841e9bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>triedEpetra_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>ad7f232e229e1c06794dea113f583020c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>triedTpetra_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>acfab04da20a416ed789bb3c6e2cea043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>errorEpetra_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a9f7e060a591bb22c31e7bc2994545024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>errorTpetra_</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>af8220cc777fd4b99ad4ff75d947cf531</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>TrilinosSmoother</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a7af5718120c5ab19b52029843e811963</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TrilinosSmoother</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>ab3b1040dfa902e1396ef676b8244425d</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList(), const LO &amp;overlap=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TrilinosSmoother</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>aa48165638439fe641f6c9dea4ce19cd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a9995811c8e26244d2fead83ef7ec3d3e</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a16b541458134b2f531a60a2bb0281bc4</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>ab58c71b6e8b9d7190f365241a9f5ff85</anchor>
      <arglist>(MultiVector &amp;X, const MultiVector &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>a856f5121137ed90b89d53e72792e733c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1TrilinosSmoother.html</anchorfile>
      <anchor>ada3630d3060d23e41f20ac9199279633</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MueLu::Triplet</name>
    <filename>structMueLu_1_1Triplet.html</filename>
    <templarg>T</templarg>
    <templarg>W</templarg>
    <member kind="variable">
      <type>T</type>
      <name>i</name>
      <anchorfile>structMueLu_1_1Triplet.html</anchorfile>
      <anchor>a4ee9027a8a3c2d909e10dbdd448aec47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>j</name>
      <anchorfile>structMueLu_1_1Triplet.html</anchorfile>
      <anchor>a2182ee1372500b99ab10b1c278a0ea78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>W</type>
      <name>v</name>
      <anchorfile>structMueLu_1_1Triplet.html</anchorfile>
      <anchor>ad8b4684c7233782939b10de04deaa8a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TwoLevelFactoryBase</name>
    <filename>classMueLu_1_1TwoLevelFactoryBase.html</filename>
    <base>MueLu::Factory</base>
    <member kind="function">
      <type></type>
      <name>TwoLevelFactoryBase</name>
      <anchorfile>classMueLu_1_1TwoLevelFactoryBase.html</anchorfile>
      <anchor>aede34354be45b9784e67e464219d10de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TwoLevelFactoryBase</name>
      <anchorfile>classMueLu_1_1TwoLevelFactoryBase.html</anchorfile>
      <anchor>ab35a98cefad92c92fe022c5c243c0c03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TwoLevelFactoryBase.html</anchorfile>
      <anchor>a66ff3c69015cfb5292de8bdbdf250eb3</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallDeclareInput</name>
      <anchorfile>classMueLu_1_1TwoLevelFactoryBase.html</anchorfile>
      <anchor>a00ee763f137edc26693e814d6ff059a1</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TwoLevelFactoryBase.html</anchorfile>
      <anchor>abd810e3a7dfc026065dd304882577cbb</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>CallBuild</name>
      <anchorfile>classMueLu_1_1TwoLevelFactoryBase.html</anchorfile>
      <anchor>acb098d5548be1e998190311d1056dc72</anchor>
      <arglist>(Level &amp;requestedLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::TwoLevelMatlabFactory</name>
    <filename>classMueLu_1_1TwoLevelMatlabFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::TwoLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>TwoLevelMatlabFactory</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>a70bbede3753f795cd57f319489ef5d06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TwoLevelMatlabFactory</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>a6d81c327d9671748d8c22eaa6f9b9c10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>a40491ed3b3f3ba7ca7408c2aac440a00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>adc05f761a5f9af291e271e63eebfda75</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>ad3c6aa0bb54cf215c70bb44fbcfd69bd</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>aaa6fdc2d86e3ab03fb30d6803f7eec80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>hasDeclaredInput_</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>a34c1bb3081e067a2f54c3ddb7d774b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>needsFine_</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>ab3fc4d5bf3d535cfa600cb343be8c630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>needsCoarse_</name>
      <anchorfile>classMueLu_1_1TwoLevelMatlabFactory.html</anchorfile>
      <anchor>a153c7ce8b91f94d9b283859acfd42dca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::UncoupledAggregationFactory</name>
    <filename>classMueLu_1_1UncoupledAggregationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; MueLu::AggregationAlgorithmBase&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</type>
      <name>algos_</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>affcafae93dc5621db5a60e05d5ce5e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>bDefinitionPhase_</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>ade365caa6867065cd1bbe5187fc14bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UncoupledAggregationFactory</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>ad8a49b6166da873153e725aa9aad07f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UncoupledAggregationFactory</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>ac8352e04acb37efc11c091dc6b3ee66a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a44ae4e2d2ee2a65cd7e891333458b7b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOrdering</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>ab083a6903759247a1d65ea06e5c81b75</anchor>
      <arglist>(const std::string &amp;ordering)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxNeighAlreadySelected</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a28d2b6ad0f01a96d491acc6c1567e605</anchor>
      <arglist>(int maxNeighAlreadySelected)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>abee3cc08051ae173adda64d73044f37f</anchor>
      <arglist>(int minNodesPerAggregate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetOnePtMapName</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a1c0b8f3c458967c44a935d5286c28cbb</anchor>
      <arglist>(const std::string name, Teuchos::RCP&lt; const FactoryBase &gt; mapFact)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>GetOrdering</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a8d082de0a17b54bfb07bd03b4abb9289</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMaxNeighAlreadySelected</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a10e2abf0ab05ed679cfae220c78d9c40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetMinNodesPerAggregate</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a203966a3c0174c4eefb44609d23485e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a65fadd0019d971706328c00e03953026</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1UncoupledAggregationFactory.html</anchorfile>
      <anchor>a7a2877b0f1c91509cf3c880d06451942</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::UserAggregationFactory</name>
    <filename>classMueLu_1_1UserAggregationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>UserAggregationFactory</name>
      <anchorfile>classMueLu_1_1UserAggregationFactory.html</anchorfile>
      <anchor>a76af3f4245460b27bbd2de1ddf068489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserAggregationFactory</name>
      <anchorfile>classMueLu_1_1UserAggregationFactory.html</anchorfile>
      <anchor>a93a93501cb77ff238b66f273c90c98df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1UserAggregationFactory.html</anchorfile>
      <anchor>ab94ed353bd3fd21070ca0858531b04dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1UserAggregationFactory.html</anchorfile>
      <anchor>ab9d289b684fae1a5db879cc9d5dfc0a5</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1UserAggregationFactory.html</anchorfile>
      <anchor>adb33c1bb247cbf54f6e71917981cb942</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::UserPFactory</name>
    <filename>classMueLu_1_1UserPFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::PFactory</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1UserPFactory.html</anchorfile>
      <anchor>a18f4b53e46126632ec146072161f069e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserPFactory</name>
      <anchorfile>classMueLu_1_1UserPFactory.html</anchorfile>
      <anchor>a4ab431dd248dcb8000b3ead71305bb33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserPFactory</name>
      <anchorfile>classMueLu_1_1UserPFactory.html</anchorfile>
      <anchor>af7de88fe389bc02b27aa543229249a20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1UserPFactory.html</anchorfile>
      <anchor>a3377b2e4fa233541fab7d37f019cbb0d</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1UserPFactory.html</anchorfile>
      <anchor>a7d8893de41998c4dc2a29a85895c8070</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BuildP</name>
      <anchorfile>classMueLu_1_1UserPFactory.html</anchorfile>
      <anchor>aa09e046fd7ec6e6071f8d368112ef132</anchor>
      <arglist>(Level &amp;fineLevel, Level &amp;coarseLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Utilities</name>
    <filename>classMueLu_1_1Utilities.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::UtilitiesBase</base>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>Magnitude</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a20d5ecdc102ff8ca14910b1ee7648dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>MV2TpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a9bf41ef66b1c17d2f30d3f73cc3a7fe1</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; const vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>MV2NonConstTpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>aba59affe7fe85cbf3c6d0d1e62b1060a</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>MV2NonConstTpetraMV2</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a519b3d6623339a7ec3df532f40419618</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>MV2TpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a2732cc9632e48cd77687988ef029dc0a</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>MV2NonConstTpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>aa6af4be59ad14b513d9f033f4e31cfa5</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2TpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>ac9d59b06b3d021a2e2ebd712bc462cd7</anchor>
      <arglist>(RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2NonConstTpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a17cb32939093c9fc1cd37d5628e72f08</anchor>
      <arglist>(RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>Op2TpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a169375eb1f0b31eee1ac703b924416b7</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>Op2NonConstTpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a32b7a765602e8471b633a7526e40e3ed</anchor>
      <arglist>(Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2TpetraRow</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a0d484f007ad414f7eee10f1a45929314</anchor>
      <arglist>(RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2NonConstTpetraRow</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a1140f4a44c725e96a4202e2337ddd662</anchor>
      <arglist>(RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Map2TpetraMap</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a91bb86d3221e9716c4ed06e4510b8091</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Crs2Op</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a72909e2af0aaab17ba842918836c0383</anchor>
      <arglist>(RCP&lt; Xpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>GetMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a1e6eedf65eb0f80cd6f9be9b01bb0ca2</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetMatrixDiagonalInverse</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a5bf150db157227b565758e0c2838fbac</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, Magnitude tol=Teuchos::ScalarTraits&lt; Scalar &gt;::eps()*100)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a3759a7c52da2049dabd441b24d9d225c</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>aafc21e80b077f177766469b88e858121</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetMatrixOverlappedDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>aaaabd5c693f31437e56a6b2f12f56bb9</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetInverse</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a0f38b667440abdab3b8c281d391b3218</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; v, Magnitude tol=Teuchos::ScalarTraits&lt; Scalar &gt;::eps()*100, Scalar tolReplacement=Teuchos::ScalarTraits&lt; Scalar &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::Array&lt; Magnitude &gt;</type>
      <name>ResidualNorm</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a3424286fe6c62a11a2eddc7111cffb01</anchor>
      <arglist>(const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Residual</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a35d1a4d433caa0479a4f002007c4e336</anchor>
      <arglist>(const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PauseForDebugger</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>af66da34bfc3dec726e393f5455e60351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>MakeFancy</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>af30bbd5775860d6b9241b654fa04c295</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>Distance2</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a4159b7c58c6ceeeda4d710547cda4825</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;v, LocalOrdinal i0, LocalOrdinal i1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; const bool &gt;</type>
      <name>DetectDirichletRows</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>ac1aeac4be32d06dea25e0a2756a7eae9</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Magnitude &amp;tol=Teuchos::ScalarTraits&lt; Scalar &gt;::magnitude(0.))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetRandomSeed</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>ade1ff26e6b32c826ef59cec7d4bc8f5f</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>PowerMethod</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a68b04651136f973aa99c7988cdaa92a6</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, bool scaleByDiag=true, LocalOrdinal niters=10, Magnitude tolerance=1e-2, bool verbose=false, unsigned int seed=123)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>Frobenius</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>ab0ad782c0cf4466b1dae2a1702d661d9</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MyOldScaleMatrix</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a9c4f01e891094067a922b94731ce31eb</anchor>
      <arglist>(Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Teuchos::ArrayRCP&lt; const Scalar &gt; &amp;scalingVector, bool doInverse=true, bool doFillComplete=true, bool doOptimizeStorage=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MyOldScaleMatrix_Epetra</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>aad7857cbe660e0c2bcb362b0f5942dfb</anchor>
      <arglist>(Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Teuchos::ArrayRCP&lt; Scalar &gt; &amp;scalingVector, bool doFillComplete, bool doOptimizeStorage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MyOldScaleMatrix_Tpetra</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a285780a7789af8da88b942385e7475aa</anchor>
      <arglist>(Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Teuchos::ArrayRCP&lt; Scalar &gt; &amp;scalingVector, bool doFillComplete, bool doOptimizeStorage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Transpose</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a3617d82f8d10a4d15cd0798142d9af59</anchor>
      <arglist>(Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, bool optimizeTranspose=false, const std::string &amp;label=std::string())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ExtractCoordinatesFromParameterList</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>ab9902210d02da25945a0f75bc048591e</anchor>
      <arglist>(ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>MV2EpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>adb68e5b249a098f23ece03e774774326</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; const vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_MultiVector &gt;</type>
      <name>MV2NonConstEpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>abdfe4bed77be53354bdc8180c773654e</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_MultiVector &amp;</type>
      <name>MV2EpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a414f88e59418838a4b7ecc981ce96a18</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Epetra_MultiVector &amp;</type>
      <name>MV2NonConstEpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a962ed0bcc75bf70e1a36943af96f4404</anchor>
      <arglist>(Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Epetra_CrsMatrix &gt;</type>
      <name>Op2EpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a4b759c64dd0c014708309549c0c289e5</anchor>
      <arglist>(RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>Op2NonConstEpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>ac9219d998e7f1b07864fa4b1ae57e155</anchor>
      <arglist>(RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_CrsMatrix &amp;</type>
      <name>Op2EpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>acfaf52ec29cdcd3c59c1ea6be0f916cc</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Epetra_CrsMatrix &amp;</type>
      <name>Op2NonConstEpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a546633e802c659c5543fb69375566fa3</anchor>
      <arglist>(Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_Map &amp;</type>
      <name>Map2EpetraMap</name>
      <anchorfile>classMueLu_1_1Utilities.html</anchorfile>
      <anchor>a6e0f316c86a44249a09b676cfc71e89f</anchor>
      <arglist>(const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &amp;map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Utilities&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <base>UtilitiesBase&lt; double, int, int, Xpetra::EpetraNode &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a06ea4c733d7d6e077a9e3590c785e987</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aeb169c64aff3d6e41fe613fb3f69a5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aee494ff8eb39698806904e4b68acfd2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a785ac5716d1bf3bdceea32cfa5e56bee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>Magnitude</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a25e4deb04a5ec8bde3acbaf3137f76a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>MV2TpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ab89ab9bde1b66fa02de966ba219000b7</anchor>
      <arglist>(RCP&lt; MultiVector &gt; const vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>MV2NonConstTpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ad8318885538c26ce93460c5197187ed6</anchor>
      <arglist>(RCP&lt; MultiVector &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>MV2NonConstTpetraMV2</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a775c83a2000b427bcf7c6c558aec4478</anchor>
      <arglist>(MultiVector &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>MV2TpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5968c7bfe5b1e6c4ce593219c7b368c2</anchor>
      <arglist>(const MultiVector &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>MV2NonConstTpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa4276ff1c32f544e5d46a07b088d67a1</anchor>
      <arglist>(MultiVector &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2TpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a624f517ee16616c72344c85ea6bb474a</anchor>
      <arglist>(RCP&lt; const Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2NonConstTpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ae5d909f73993b17f5a1e1593869df981</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>Op2TpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5462c33e14183470198c9222e28eff24</anchor>
      <arglist>(const Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;</type>
      <name>Op2NonConstTpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>afc6cc0911ff62558a04fab8b9d480240</anchor>
      <arglist>(Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2TpetraRow</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0bf01cc982a87b51475fa1628209fe8d</anchor>
      <arglist>(RCP&lt; const Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Tpetra::RowMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op2NonConstTpetraRow</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ad36f557424a46185124ace28343c53a3</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const RCP&lt; const Tpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Map2TpetraMap</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a61a399e18891e2922d303dfd1ebea251</anchor>
      <arglist>(const Map &amp;map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Crs2Op</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a02126100c34d2cef349ffdf83a7c63b3</anchor>
      <arglist>(RCP&lt; CrsMatrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>GetMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>afd9d69541290bff5c707ed6939b571a8</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetMatrixDiagonalInverse</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a83727cafbdba0c6671add70f33832349</anchor>
      <arglist>(const Matrix &amp;A, Magnitude tol=Teuchos::ScalarTraits&lt; Scalar &gt;::eps()*100)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aba8d230b23eb3e3fe6475075b416eba0</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ac401c29cff9c31d9905889f2372f9844</anchor>
      <arglist>(Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetMatrixOverlappedDiagonal</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aaa448b7765e7dc1b88a8ec8e801c2c52</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetInverse</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a36b5a537b14bdd2f9a0e480d5d866a18</anchor>
      <arglist>(Teuchos::RCP&lt; const Vector &gt; v, Magnitude tol=Teuchos::ScalarTraits&lt; Scalar &gt;::eps()*100, Scalar tolReplacement=Teuchos::ScalarTraits&lt; Scalar &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::Array&lt; Magnitude &gt;</type>
      <name>ResidualNorm</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aff19a074c44eade6a421e760811f3405</anchor>
      <arglist>(const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; MultiVector &gt;</type>
      <name>Residual</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ade7a04dad8cf4a5a27f35cdac23b2c00</anchor>
      <arglist>(const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PauseForDebugger</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a83eb466611ce0fbb4de77b8f6ad37bb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>MakeFancy</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a7f64e2ada4f5cb717286b57f8b24a11d</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>Distance2</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a102e38e9bb3750810c6a4f01eaf3fcfb</anchor>
      <arglist>(const MultiVector &amp;v, LocalOrdinal i0, LocalOrdinal i1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; const bool &gt;</type>
      <name>DetectDirichletRows</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5bb2ffbda37e486912cbb2228be25025</anchor>
      <arglist>(const Matrix &amp;A, const Magnitude &amp;tol=Teuchos::ScalarTraits&lt; Scalar &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetRandomSeed</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a408fd21ecc22aec48efb6f15214d7d70</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>PowerMethod</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>afcd0dd1318d66295e8b393474cd57936</anchor>
      <arglist>(const Matrix &amp;A, bool scaleByDiag=true, LocalOrdinal niters=10, Magnitude tolerance=1e-2, bool verbose=false, unsigned int seed=123)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>Frobenius</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a6b9eb4d7b540728ae47427c5cc241431</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MyOldScaleMatrix</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a3150f9fa8e953de441a0246253d6222d</anchor>
      <arglist>(Matrix &amp;Op, const Teuchos::ArrayRCP&lt; const Scalar &gt; &amp;scalingVector, bool doInverse=true, bool doFillComplete=true, bool doOptimizeStorage=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MyOldScaleMatrix_Tpetra</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a536740899a2d0f5e236c4dc2b9c8e54d</anchor>
      <arglist>(Matrix &amp;Op, const Teuchos::ArrayRCP&lt; Scalar &gt; &amp;scalingVector, bool doFillComplete, bool doOptimizeStorage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MyOldScaleMatrix_Epetra</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a78ce1759d59a17a823bb7a5e39fb192a</anchor>
      <arglist>(Matrix &amp;Op, const Teuchos::ArrayRCP&lt; Scalar &gt; &amp;scalingVector, bool doFillComplete, bool doOptimizeStorage)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Transpose</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ada90ded6f2e3b28ed0207bdf72daf577</anchor>
      <arglist>(Matrix &amp;Op, bool optimizeTranspose=false, const std::string &amp;label=std::string())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Xpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>ExtractCoordinatesFromParameterList</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a633bf4a6c2893da39f9791e9b2f610fd</anchor>
      <arglist>(ParameterList &amp;paramList)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrixWrap&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a731f56635687bf87ea7ef21dcecaab6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrix</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a49c7b738ec27159a7aeacaaaf92a84a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Matrix</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a9b344a26b2621214449e35d5a65d9b7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Vector</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ad14138a3fd64b41edb6cfa2715cb6974</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ae84178d6e63df49fe805b2adb744e078</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ab3feb68a12749933acf25080c70affb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraMapT&lt; GlobalOrdinal, Node &gt;</type>
      <name>EpetraMap</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>acddbb673a3c850a4aa67a802ccae06bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraMultiVectorT&lt; GlobalOrdinal, Node &gt;</type>
      <name>EpetraMultiVector</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ae4eded77c5b55eb386b8874661510746</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraCrsMatrixT&lt; GlobalOrdinal, Node &gt;</type>
      <name>EpetraCrsMatrix</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a3060aa767bc737df59cbc4dc6f0c3e17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>MV2EpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>af6b3b74147ae9f698760bfed35a1c409</anchor>
      <arglist>(RCP&lt; MultiVector &gt; const vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_MultiVector &gt;</type>
      <name>MV2NonConstEpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a7b09a605d518136e8099545ed85e631a</anchor>
      <arglist>(RCP&lt; MultiVector &gt; vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_MultiVector &amp;</type>
      <name>MV2EpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a36e8915e919688a478878d4fd1d3d170</anchor>
      <arglist>(const MultiVector &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Epetra_MultiVector &amp;</type>
      <name>MV2NonConstEpetraMV</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>adfd3a58e115c3dfcc309155ca74f244a</anchor>
      <arglist>(MultiVector &amp;vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const Epetra_CrsMatrix &gt;</type>
      <name>Op2EpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a5b8492d172962bfdaff3f0e91b225e12</anchor>
      <arglist>(RCP&lt; const Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>Op2NonConstEpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a1d64c7cbf02adcb2d9fc8b81c1db3a21</anchor>
      <arglist>(RCP&lt; Matrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_CrsMatrix &amp;</type>
      <name>Op2EpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a23405a6327f52cd78b51232ea406ded1</anchor>
      <arglist>(const Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Epetra_CrsMatrix &amp;</type>
      <name>Op2NonConstEpetraCrs</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a6cbe75e183f664868142d89e7533599d</anchor>
      <arglist>(Matrix &amp;Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Epetra_Map &amp;</type>
      <name>Map2EpetraMap</name>
      <anchorfile>classMueLu_1_1Utilities_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aded40b50c8ddae30389be51bde7b00ab</anchor>
      <arglist>(const Map &amp;map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::UtilitiesBase</name>
    <filename>classMueLu_1_1UtilitiesBase.html</filename>
    <templarg>Scalar</templarg>
    <templarg>LocalOrdinal</templarg>
    <templarg>GlobalOrdinal</templarg>
    <templarg>Node</templarg>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>Magnitude</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a25f9f3f3ab255efcb865639b84de9cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Crs2Op</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a47583fa41fba50472a7d8db4e56c6966</anchor>
      <arglist>(RCP&lt; CrsMatrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>GetMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>ac937395854f089fd9dd832952a312418</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetMatrixDiagonalInverse</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a5e1146e6b7c345e82edb390f74677dfc</anchor>
      <arglist>(const Matrix &amp;A, Magnitude tol=Teuchos::ScalarTraits&lt; Scalar &gt;::eps()*100)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; Scalar &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a82f8ca140f3ce9906f79093e4d922142</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Vector &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a622ddd6c635bcc840e928cd580adf086</anchor>
      <arglist>(Teuchos::RCP&lt; const Matrix &gt; rcpA)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Vector &gt;</type>
      <name>GetInverse</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a0a37d794bdb03f54f74ed8f65ddc4dd1</anchor>
      <arglist>(Teuchos::RCP&lt; const Vector &gt; v, Magnitude tol=Teuchos::ScalarTraits&lt; Scalar &gt;::eps()*100, Scalar tolReplacement=Teuchos::ScalarTraits&lt; Scalar &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetMatrixOverlappedDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>afd082b797b37743c19682823fbc4da33</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::Array&lt; Magnitude &gt;</type>
      <name>ResidualNorm</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>af37e6c666ba8a11682b10e136e84a16e</anchor>
      <arglist>(const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const MultiVector &amp;X, const MultiVector &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; MultiVector &gt;</type>
      <name>Residual</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a8ea3866f3656d9d4bb5d3fad0ee76901</anchor>
      <arglist>(const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op, const MultiVector &amp;X, const MultiVector &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PauseForDebugger</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a9544dfa0c6361538c8ec14fad778616f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>PowerMethod</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a56ca409dd7f83de8595195f92358509e</anchor>
      <arglist>(const Matrix &amp;A, bool scaleByDiag=true, LocalOrdinal niters=10, Magnitude tolerance=1e-2, bool verbose=false, unsigned int seed=123)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>MakeFancy</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a8a867d3ef4ab43682e2d43d9cb0dccfb</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>Distance2</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a5e311ec6c5fc5eb89a9dce620a434fc1</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;v, LocalOrdinal i0, LocalOrdinal i1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; const bool &gt;</type>
      <name>DetectDirichletRows</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a2de7d85089f68914be807bd2d8275280</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Magnitude &amp;tol=Teuchos::ScalarTraits&lt; Scalar &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>Frobenius</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a4e0b4c5bb477024d902c57e9928d0371</anchor>
      <arglist>(const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;A, const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetRandomSeed</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a3531975d4bb1b6880435c4c93e328a72</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrixWrap&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a5ed67c2eedeba2fb2d52469405def4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>CrsMatrix</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a9c30ea1ecc8dd2b95a4c414317093b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Matrix</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a4f27f758965eb9fd8f54d2d3461fd5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Vector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Vector</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a57094e5631830a88f114413e32881f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>ad603252cd76966b84a15ee066d81cb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a6e58aaa8437ffdb3b9c5abd30597d938</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UtilitiesBase&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classMueLu_1_1UtilitiesBase.html</filename>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>Magnitude</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a25f9f3f3ab255efcb865639b84de9cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Matrix &gt;</type>
      <name>Crs2Op</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a47583fa41fba50472a7d8db4e56c6966</anchor>
      <arglist>(RCP&lt; CrsMatrix &gt; Op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; double &gt;</type>
      <name>GetMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>ac937395854f089fd9dd832952a312418</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetMatrixDiagonalInverse</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a5e1146e6b7c345e82edb390f74677dfc</anchor>
      <arglist>(const Matrix &amp;A, Magnitude tol=Teuchos::ScalarTraits&lt; double &gt;::eps()*100)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; double &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a82f8ca140f3ce9906f79093e4d922142</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Vector &gt;</type>
      <name>GetLumpedMatrixDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a622ddd6c635bcc840e928cd580adf086</anchor>
      <arglist>(Teuchos::RCP&lt; const Matrix &gt; rcpA)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Vector &gt;</type>
      <name>GetInverse</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a0a37d794bdb03f54f74ed8f65ddc4dd1</anchor>
      <arglist>(Teuchos::RCP&lt; const Vector &gt; v, Magnitude tol=Teuchos::ScalarTraits&lt; double &gt;::eps()*100, double tolReplacement=Teuchos::ScalarTraits&lt; double &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Vector &gt;</type>
      <name>GetMatrixOverlappedDiagonal</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>afd082b797b37743c19682823fbc4da33</anchor>
      <arglist>(const Matrix &amp;A)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::Array&lt; Magnitude &gt;</type>
      <name>ResidualNorm</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>af37e6c666ba8a11682b10e136e84a16e</anchor>
      <arglist>(const Xpetra::Operator&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;Op, const MultiVector &amp;X, const MultiVector &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; MultiVector &gt;</type>
      <name>Residual</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a8ea3866f3656d9d4bb5d3fad0ee76901</anchor>
      <arglist>(const Xpetra::Operator&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;Op, const MultiVector &amp;X, const MultiVector &amp;RHS)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>PauseForDebugger</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a9544dfa0c6361538c8ec14fad778616f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>PowerMethod</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a56ca409dd7f83de8595195f92358509e</anchor>
      <arglist>(const Matrix &amp;A, bool scaleByDiag=true, int niters=10, Magnitude tolerance=1e-2, bool verbose=false, unsigned int seed=123)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>MakeFancy</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a8a867d3ef4ab43682e2d43d9cb0dccfb</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ScalarTraits&lt; double &gt;::magnitudeType</type>
      <name>Distance2</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a5e311ec6c5fc5eb89a9dce620a434fc1</anchor>
      <arglist>(const Xpetra::MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;v, int i0, int i1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ArrayRCP&lt; const bool &gt;</type>
      <name>DetectDirichletRows</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a2de7d85089f68914be807bd2d8275280</anchor>
      <arglist>(const Xpetra::Matrix&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;A, const Magnitude &amp;tol=Teuchos::ScalarTraits&lt; double &gt;::zero())</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Frobenius</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a4e0b4c5bb477024d902c57e9928d0371</anchor>
      <arglist>(const Xpetra::Matrix&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;A, const Xpetra::Matrix&lt; double, int, int, Xpetra::EpetraNode &gt; &amp;B)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetRandomSeed</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a3531975d4bb1b6880435c4c93e328a72</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrixWrap&lt; double, int, int, Xpetra::EpetraNode &gt;</type>
      <name>CrsMatrixWrap</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a5ed67c2eedeba2fb2d52469405def4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::CrsMatrix&lt; double, int, int, Xpetra::EpetraNode &gt;</type>
      <name>CrsMatrix</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a9c30ea1ecc8dd2b95a4c414317093b21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Matrix&lt; double, int, int, Xpetra::EpetraNode &gt;</type>
      <name>Matrix</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a4f27f758965eb9fd8f54d2d3461fd5d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Vector&lt; double, int, int, Xpetra::EpetraNode &gt;</type>
      <name>Vector</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a57094e5631830a88f114413e32881f95</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt;</type>
      <name>MultiVector</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>ad603252cd76966b84a15ee066d81cb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::Map&lt; int, int, Xpetra::EpetraNode &gt;</type>
      <name>Map</name>
      <anchorfile>classMueLu_1_1UtilitiesBase.html</anchorfile>
      <anchor>a6e58aaa8437ffdb3b9c5abd30597d938</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::UzawaSmoother</name>
    <filename>classMueLu_1_1UzawaSmoother.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SmootherPrototype</base>
    <member kind="function">
      <type>RCP&lt; SmootherPrototype &gt;</type>
      <name>Copy</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>af82acfd99e62927ed923b5d1113d0fb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::MapExtractor&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;</type>
      <name>MapExtractorClass</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>ac7c24ae42cdfc6f1623919fbc31b746e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a6675ee583e4e00945e3958c154247d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FactoryBase &gt;</type>
      <name>AFact_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>ac1b12444e4dffa0455e444b538337482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a0059f27984eb98267343e309aeff6435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>rangeMapExtractor_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>af9f779260fb33ee70b7efa6ef82845fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const MapExtractorClass &gt;</type>
      <name>domainMapExtractor_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a6dd07bc25ed6a5d73e544feb6f4f03b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Vector &gt;</type>
      <name>diagFinv_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>acbe2c167d6debadf965e75ab57417e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>F_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>aca72f4afcaa79945837cb58711dfe44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>G_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a7a95ed859ecf69f9bdc675fb35648e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>D_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a170b27693499e58fb914e91de04b1115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Matrix &gt;</type>
      <name>Z_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a4340717dae4185e819b0a2da55ece5d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>velPredictSmoo_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a555472694f926f7652f8b936dc170dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; SmootherBase &gt;</type>
      <name>schurCompSmoo_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a604c180280938ea004f41fd770455fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const FactoryManagerBase &gt; &gt;</type>
      <name>FactManager_</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a0e49ca0ba7dbc8f03cafb170fa0d6387</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UzawaSmoother</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a072e789a78220bc28e00a403a2795378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UzawaSmoother</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>aa853c570dd0b7769934157df824fcf58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a70367fa1c39062975f3a809f1d954752</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a45e1fe6c41ed06d9f9a6090ee6d1f186</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVelocityPredictionFactoryManager</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>ab6b085c10e6627611878b142c95b34be</anchor>
      <arglist>(RCP&lt; FactoryManager &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSchurCompFactoryManager</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a5b276cc9cb9fd221836b4f87b0b3d340</anchor>
      <arglist>(RCP&lt; FactoryManager &gt; FactManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddFactoryManager</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a1aa38f4ab22eada13c093800f251db91</anchor>
      <arglist>(RCP&lt; const FactoryManagerBase &gt; FactManager, int pos)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a0d5b2aeb8cd4a10ecbab6e91efb48471</anchor>
      <arglist>(Level &amp;currentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a514354b85c1c76c86b7946fb44ac5bc9</anchor>
      <arglist>(MultiVector &amp;X, MultiVector const &amp;B, bool InitialGuessIsZero=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>aa60cb438ce5c9ea65e92dde7aab54b66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classMueLu_1_1UzawaSmoother.html</anchorfile>
      <anchor>a841b6fc429a3307d147e6017775d557d</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const VerbLevel verbLevel=Default) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::VariableContainer</name>
    <filename>classMueLu_1_1VariableContainer.html</filename>
    <base>MueLu::BaseClass</base>
    <class kind="class">MueLu::VariableContainer::Data</class>
    <class kind="class">MueLu::VariableContainer::DataBase</class>
    <class kind="struct">MueLu::VariableContainer::Getter</class>
    <class kind="struct">MueLu::VariableContainer::Getter&lt; Teuchos::RCP&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</class>
    <member kind="typedef">
      <type>std::map&lt; const FactoryBase *, int &gt;</type>
      <name>request_container</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a060078bea90a4f854d5db693fd202f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DataBase *</type>
      <name>data_</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a059088151ccaecfc7eee347a9f8047f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DataBase *</type>
      <name>datah_</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a3e85f2b994711c1934172234e0571f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>available_</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>aad70731836ab9334ca26ba5cf7a11d1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>KeepType</type>
      <name>keep_</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>ac0d912766b00eb521f619ccc08aba784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>count_</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>ab058904f72ab8a573fc0dd4945b8e616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>request_container</type>
      <name>requests_</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>aa7156f7549ae90cdd7009ee7c5624724</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VariableContainer</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>ab3225ead130d03fe988c6a8c4c491cc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VariableContainer</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a81c2535f88dd08ec7f9726c0ddfcf682</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetData</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a89f4d14b5b82abe9abec6f2a21f30a6f</anchor>
      <arglist>(const T &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>GetData</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a1ae2db9848fe7ea34c05d50b0a838c12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>GetData</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>ae5a3ffa6dd608469f8e2b1e6a4992c2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetTypeName</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a1ee2b9813ea095bfbdc72bdfddf6ee0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAvailable</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a08d88a208c779320b45e0bacab342de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Request</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a5bad9fc525e9c3ae0db89b61abc89abd</anchor>
      <arglist>(const FactoryBase *reqFactory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Release</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>ab7b045883471ce7a4ba96c92c6330102</anchor>
      <arglist>(const FactoryBase *reqFactory)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumRequests</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a068c94a821612202fb1bcddce3b6a961</anchor>
      <arglist>(const FactoryBase *reqFactory) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumAllRequests</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a334c828ccdf93bf0b0f81380edb05c7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRequested</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a5e416ba4e926c18a6f9a8d4f45fffa9b</anchor>
      <arglist>(const FactoryBase *reqFactory) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRequested</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a840e350f1ac15f00aacc080b313d08b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const request_container &amp;</type>
      <name>Requests</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a75af2bf82a8c330b435233a19dbe3728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsKept</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>ada564906b8dfe14857aab9f352538ea3</anchor>
      <arglist>(KeepType keep) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddKeepFlag</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a2818501a5a4cc42771c750d94176bff4</anchor>
      <arglist>(KeepType keep=UserData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveKeepFlag</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a13906831f89764cf026eeed73dbf9720</anchor>
      <arglist>(KeepType keep=UserData)</arglist>
    </member>
    <member kind="function">
      <type>KeepType</type>
      <name>GetKeepFlag</name>
      <anchorfile>classMueLu_1_1VariableContainer.html</anchorfile>
      <anchor>a2cbba03c60982d52a009a33ff78aef9c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::VerboseObject</name>
    <filename>classMueLu_1_1VerboseObject.html</filename>
    <member kind="function">
      <type>VerbLevel</type>
      <name>GetVerbLevel</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>ad937dc401c30b5a4f6a755b8113aacb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetVerbLevel</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a4fd6d23fffa7646d65083e192aa74e3a</anchor>
      <arglist>(const VerbLevel verbLevel)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetProcRankVerbose</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a0f9409970a434c501933e0721cf0da7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetProcRankVerbose</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>acb24cb8c9e90b5afe5a9b081c2b49df1</anchor>
      <arglist>(int procRank) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsPrint</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a1fcc828bd9284cde0c065de39e259dc5</anchor>
      <arglist>(MsgType type, int thisProcRankOnly=-1) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::FancyOStream &amp;</type>
      <name>GetOStream</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a482501380c1c880ab6a58e80b90195d2</anchor>
      <arglist>(MsgType type, int thisProcRankOnly=0) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::FancyOStream &amp;</type>
      <name>GetBlackHole</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a289b73cdaf793ca739aaf7e0d95b18a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDefaultOStream</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a137294bbea8c3a24c603270591f4e956</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::FancyOStream &gt; &amp;defaultOStream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>GetDefaultOStream</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>ab4ef4517d428b2ff1bf556eef68f7d1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VerbLevel</type>
      <name>verbLevel_</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a29a1cdec060f03e2d62f9018f2961608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>procRank_</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a2542e3f7d3b0ac0779192279f7309fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numProcs_</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>ac87222805b302f7c5df8c66ba9d58a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>blackHole_</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a4287e3e40198773de4fd20a8103891f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static VerbLevel</type>
      <name>globalVerbLevel_</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a94317238a22380d3c33d762a3a6ecec8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VerboseObject</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>ac6e1d0ad954a370243c5e07692b8c4f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VerboseObject</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>ae49e8bf6d1f4445072a2bea13172ebb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetDefaultVerbLevel</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>acb0e1cb557d90dd3e7ba062e19ad6cfc</anchor>
      <arglist>(const VerbLevel defaultVerbLevel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VerbLevel</type>
      <name>GetDefaultVerbLevel</name>
      <anchorfile>classMueLu_1_1VerboseObject.html</anchorfile>
      <anchor>a45b550ea354629ae4d2a7dec476bbf55</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::VisualizationHelpers</name>
    <filename>classMueLu_1_1VisualizationHelpers.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a348d804f3862bd416ff61387199b6582</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeFileVTKOpening</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>aefd9aa2515cff408d17b27e160d33f4a</anchor>
      <arglist>(std::ofstream &amp;fout, std::vector&lt; int &gt; &amp;uniqueFine, std::vector&lt; int &gt; &amp;geomSizesFine) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeFileVTKNodes</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a2598aaf2cee86181c8eac1091ee65ed9</anchor>
      <arglist>(std::ofstream &amp;fout, std::vector&lt; int &gt; &amp;uniqueFine, Teuchos::RCP&lt; const Map &gt; &amp;nodeMap) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeFileVTKData</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a5a89b0688aefb7b57d19242f6d19f641</anchor>
      <arglist>(std::ofstream &amp;fout, std::vector&lt; int &gt; &amp;uniqueFine, LocalOrdinal myAggOffset, ArrayRCP&lt; LocalOrdinal &gt; &amp;vertex2AggId, int myRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeFileVTKCoordinates</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>ab97a04db0f9df274c25967dbf4d8d514</anchor>
      <arglist>(std::ofstream &amp;fout, std::vector&lt; int &gt; &amp;uniqueFine, Teuchos::ArrayRCP&lt; const double &gt; &amp;fx, Teuchos::ArrayRCP&lt; const double &gt; &amp;fy, Teuchos::ArrayRCP&lt; const double &gt; &amp;fz, int dim) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeFileVTKCells</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a0015aec37d938bf8b2bc0fd9a9675173</anchor>
      <arglist>(std::ofstream &amp;fout, std::vector&lt; int &gt; &amp;uniqueFine, std::vector&lt; LocalOrdinal &gt; &amp;vertices, std::vector&lt; LocalOrdinal &gt; &amp;geomSize) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writeFileVTKClosing</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a34e6f414b5eb3dce0d54ff4c1f164378</anchor>
      <arglist>(std::ofstream &amp;fout) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>writePVTU</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>ac07ef3ea75452f54385309901841b705</anchor>
      <arglist>(std::ofstream &amp;pvtu, std::string baseFname, int numProcs, bool bFineEdges=false, bool bCoarseEdges=false) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildColormap</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a843b74f19ae6ba6ddb666928e06a8376</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getFileName</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>aa4505f0fb1661bfb2de0f079fab2fcbd</anchor>
      <arglist>(int numProcs, int myRank, int level, const Teuchos::ParameterList &amp;pL) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBaseFileName</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a14041972957d5a1c743034d15f8cb1dd</anchor>
      <arglist>(int numProcs, int level, const Teuchos::ParameterList &amp;pL) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getPVTUFileName</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a4d98adf0f4bbae1a6f6869fcebd4c13b</anchor>
      <arglist>(int numProcs, int myRank, int level, const Teuchos::ParameterList &amp;pL) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>replaceAll</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a9e5bc879bfe498e13a660c80324800d0</anchor>
      <arglist>(std::string result, const std::string &amp;replaceWhat, const std::string &amp;replaceWithWhat) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>makeUnique</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>ae224637f4d7cfb808d6e637993f0345a</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices) const </arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doPointCloud</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>abe7a55f57c0c4da7f1e3729dad6ced04</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, LO numLocalAggs, LO numFineNodes)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doJacks</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>aee1120cdadcbd2a44d9ce81e98b4f002</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, LO numLocalAggs, LO numFineNodes, const std::vector&lt; bool &gt; &amp;isRoot, const ArrayRCP&lt; LO &gt; &amp;vertex2AggId)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doConvexHulls2D</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>afc940cb32c89038c2a7f9c6246d250ed</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, LO numLocalAggs, LO numFineNodes, const std::vector&lt; bool &gt; &amp;isRoot, const ArrayRCP&lt; LO &gt; &amp;vertex2AggId, const Teuchos::ArrayRCP&lt; const double &gt; &amp;xCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;yCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;zCoords)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doConvexHulls3D</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>aca36686b10cbb94ea8bf0e77640f2486</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, LO numLocalAggs, LO numFineNodes, const std::vector&lt; bool &gt; &amp;isRoot, const ArrayRCP&lt; LO &gt; &amp;vertex2AggId, const Teuchos::ArrayRCP&lt; const double &gt; &amp;xCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;yCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;zCoords)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doCGALConvexHulls2D</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a937569506a397951b51259aade6815a3</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, LO numLocalAggs, LO numFineNodes, const std::vector&lt; bool &gt; &amp;isRoot, const ArrayRCP&lt; LO &gt; &amp;vertex2AggId, const Teuchos::ArrayRCP&lt; const double &gt; &amp;xCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;yCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;zCoords)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doCGALConvexHulls3D</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>abec34a3c8b664c1bd106cdc7a0cecebb</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, LO numLocalAggs, LO numFineNodes, const std::vector&lt; bool &gt; &amp;isRoot, const ArrayRCP&lt; LO &gt; &amp;vertex2AggId, const Teuchos::ArrayRCP&lt; const double &gt; &amp;xCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;yCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;zCoords)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>doGraphEdges</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a6f528b8cd243d91ac8de92027ca8be94</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;vertices, std::vector&lt; int &gt; &amp;geomSizes, Teuchos::RCP&lt; GraphBase &gt; &amp;G, Teuchos::ArrayRCP&lt; const double &gt; &amp;fx, Teuchos::ArrayRCP&lt; const double &gt; &amp;fy, Teuchos::ArrayRCP&lt; const double &gt; &amp;fz)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static myVec3</type>
      <name>crossProduct</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a1f99a21d65237d176a64da0671b64537</anchor>
      <arglist>(myVec3 v1, myVec3 v2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>dotProduct</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a73f5a8c3b6130d875992c8e75f7ad9c8</anchor>
      <arglist>(myVec2 v1, myVec2 v2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>dotProduct</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>ace40d754e83bf9b54ef3c8e04477576b</anchor>
      <arglist>(myVec3 v1, myVec3 v2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>isInFront</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a9d30041d95d18534247461c11b25d907</anchor>
      <arglist>(myVec3 point, myVec3 inPlane, myVec3 n)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>mymagnitude</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>ad01fcb8ebfdc239041f654504a2708ab</anchor>
      <arglist>(myVec2 vec)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>mymagnitude</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>ab65dbd0b4e14c2eed5e948c61dfab6d8</anchor>
      <arglist>(myVec3 vec)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>distance</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>aa82a51f16cd6497ae05d9b626baab8e3</anchor>
      <arglist>(myVec2 p1, myVec2 p2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>distance</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a17e18781913f0137b7a678b1b52715ca</anchor>
      <arglist>(myVec3 p1, myVec3 p2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static myVec2</type>
      <name>vecSubtract</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a2ffa22b5576e8526ce8d3eec1bd75bfa</anchor>
      <arglist>(myVec2 v1, myVec2 v2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static myVec3</type>
      <name>vecSubtract</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a292be04c73c2bc2f0b62a7e5f26ec698</anchor>
      <arglist>(myVec3 v1, myVec3 v2)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static myVec2</type>
      <name>getNorm</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a649a937a650bc64654b221144e57cf66</anchor>
      <arglist>(myVec2 v)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static myVec3</type>
      <name>getNorm</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a6744077579fc3c3d31e9cc72b29b92b3</anchor>
      <arglist>(myVec3 v1, myVec3 v2, myVec3 v3)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static double</type>
      <name>pointDistFromTri</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a10fe92776ff5f710039ee87e4dff7620</anchor>
      <arglist>(myVec3 point, myVec3 v1, myVec3 v2, myVec3 v3)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::vector&lt; myTriangle &gt;</type>
      <name>processTriangle</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a898854db6b6e7e791916c94003225a6c</anchor>
      <arglist>(std::list&lt; myTriangle &gt; &amp;tris, myTriangle tri, std::list&lt; int &gt; &amp;pointsInFront, myVec3 &amp;barycenter, const Teuchos::ArrayRCP&lt; const double &gt; &amp;xCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;yCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;zCoords)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::vector&lt; int &gt;</type>
      <name>giftWrap</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>aec269946ef0fd1e66d2fef7d19cf7b34</anchor>
      <arglist>(std::vector&lt; myVec2 &gt; &amp;points, std::vector&lt; int &gt; &amp;nodes, const Teuchos::ArrayRCP&lt; const double &gt; &amp;xCoords, const Teuchos::ArrayRCP&lt; const double &gt; &amp;yCoords)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualizationHelpers</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a4bd5eaaba615ddef4d0ca4ceb24a7fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisualizationHelpers</name>
      <anchorfile>classMueLu_1_1VisualizationHelpers.html</anchorfile>
      <anchor>a7c192737d09320e28ce90baa0df71bdc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::XpetraLinearOp</name>
    <filename>classThyra_1_1XpetraLinearOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeImpl</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>ac7f47f156f1a2dc4b86a77c2b1201c36</anchor>
      <arglist>(const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;rangeSpace, const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;domainSpace, const RCP&lt; XpetraOperator_t &gt; &amp;xpetraOperator)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>rangeSpace_</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>aca1e7c45db3e1855a72fdfa7ce11c218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>domainSpace_</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a4f9bc964daa249d0eace396a634c5a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ConstNonconstObjectContainer&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>xpetraOperator_</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a4ba3a4adcd49abfdd630df9594a9e050</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; XpetraLinearOp&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>xpetraLinearOp</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a92bbd1fd3686caae28dcf4b45b6ecc9f</anchor>
      <arglist>(const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;rangeSpace, const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;domainSpace, const RCP&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;xpetraOperator)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const XpetraLinearOp&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>constXpetraLinearOp</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a4fb4adc48c24259ea9523150fe3959a6</anchor>
      <arglist>(const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;rangeSpace, const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;domainSpace, const RCP&lt; const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;xpetraOperator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XpetraLinearOp</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>afbbe114b7c31c822b1a5a5035617bca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>ababe1c8da17a9f163680e9ea01aed6e0</anchor>
      <arglist>(const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;rangeSpace, const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;domainSpace, const RCP&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;xpetraOperator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>constInitialize</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a2581311005530b5b7e9b1ffcba648362</anchor>
      <arglist>(const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;rangeSpace, const RCP&lt; const VectorSpaceBase&lt; Scalar &gt; &gt; &amp;domainSpace, const RCP&lt; const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;xpetraOperator)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getXpetraOperator</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>abe610fd1daa53de9c9d412e9388c3dd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getConstXpetraOperator</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>aae9dbef199bafe4922561c7a156423c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>range</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a57b1d935b4cffec073831147154d37ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>domain</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a1b6a387833e5af420dfa571c2701446b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>opSupportedImpl</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a746376acd4dec4c8bfb274281cc52fe0</anchor>
      <arglist>(Thyra::EOpTransp M_trans) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyImpl</name>
      <anchorfile>classThyra_1_1XpetraLinearOp.html</anchorfile>
      <anchor>a28addda7637644f96566d694c8c39f04</anchor>
      <arglist>(const Thyra::EOpTransp M_trans, const Thyra::MultiVectorBase&lt; Scalar &gt; &amp;X_in, const Teuchos::Ptr&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; &amp;Y_inout, const Scalar alpha, const Scalar beta) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::XpetraOp</name>
    <filename>classBelos_1_1XpetraOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>OperatorT&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>XpetraOp</name>
      <anchorfile>classBelos_1_1XpetraOp.html</anchorfile>
      <anchor>ad94c149c46c58e804ac39a2bb39567f7</anchor>
      <arglist>(const RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XpetraOp</name>
      <anchorfile>classBelos_1_1XpetraOp.html</anchorfile>
      <anchor>ad6b2da2476ab1a7c7f47a646daf2e10f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op_</name>
      <anchorfile>classBelos_1_1XpetraOp.html</anchorfile>
      <anchor>ad0454ac030fb18350495e1f026d1c1b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1XpetraOp.html</anchorfile>
      <anchor>affecd5f2cc3dfeb76790b69921b2d65d</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;y, ETrans trans=NOTRANS) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getOperator</name>
      <anchorfile>classBelos_1_1XpetraOp.html</anchorfile>
      <anchor>a767dff06edcc2d736b0050f0a4b90445</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::XpetraOp&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <base>OperatorT&lt; Xpetra::MultiVector&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>XpetraOp</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0961221e736f2e39e3a4c722d7ea329e</anchor>
      <arglist>(const RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XpetraOp</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>afe6f9c1d8b56e425730692ff211c7834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a135d17f34f67a4bb88691c102e037c01</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;y, ETrans trans=NOTRANS) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getOperator</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a2d27f5716a66841e550e983e18e39ca7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a7ce453697fb75b694316511deb13e177</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a4dd026b0bc70d1b4a5b0ec7eb97138ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a52dd9228a68bd90bb391f324ad8c9837</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aaf7cf5bd3502f7d747446f244d42510d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op_</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ab262d218467f1d95b52e247bcd4e371a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::XpetraOp&lt; double, int, long long, Xpetra::EpetraNode &gt;</name>
    <filename>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <base>OperatorT&lt; Xpetra::MultiVector&lt; double, int, long long, Xpetra::EpetraNode &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>XpetraOp</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a96139525a4bff7a046814a670aa82274</anchor>
      <arglist>(const RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Op)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XpetraOp</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0910689b715aa675a951e0aff4cc9d98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Apply</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a80760d34fb7138372d67c4361d325d6b</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;x, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;y, ETrans trans=NOTRANS) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getOperator</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0cf08548cd636bca40ac7a6e330041a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>aa2b01426e84be981376a9675f6de05e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a79fbd820e2ec33dc826c574c46c06d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>long long</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>ad8438a194b9289cf9aa25052cf7068f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a6c1783a0933e0d62f90dc4641eb84ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Op_</name>
      <anchorfile>classBelos_1_1XpetraOp_3_01double_00_01int_00_01long_01long_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a530ec85807febd52beb2d8e86a816877</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::XpetraOperator</name>
    <filename>classMueLu_1_1XpetraOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getDomainMap</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>a184d0610c7698609ec3bfd305d828ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Xpetra::Map&lt; LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>getRangeMap</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>af9dffa062aaff026ea2c70d5303b6235</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>a06617dda78a3128862b767d967250567</anchor>
      <arglist>(const Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;X, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Y, Teuchos::ETransp mode=Teuchos::NO_TRANS, Scalar alpha=Teuchos::ScalarTraits&lt; Scalar &gt;::one(), Scalar beta=Teuchos::ScalarTraits&lt; Scalar &gt;::one()) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasTransposeApply</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>aeea33e480a9d717d1ca9c441101a5517</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; XpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, NewNode &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>ad819601c756775363bb7257e98c6cae8</anchor>
      <arglist>(const RCP&lt; NewNode &gt; &amp;new_node) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>XpetraOperator</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>a9c077cc01939d3f8f562929f67f93f85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>Hierarchy_</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>a60022217afb683b658e084558ece6585</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XpetraOperator</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>a928fcfa5c64f8fa24d87b6b30f561fdd</anchor>
      <arglist>(const RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;H)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XpetraOperator</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>afe2634246f2bc75e21bdbc83f986095c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetHierarchy</name>
      <anchorfile>classMueLu_1_1XpetraOperator.html</anchorfile>
      <anchor>a925b6f3f90475fb074aae8afe39bb838</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::XpetraOpFailure</name>
    <filename>classBelos_1_1XpetraOpFailure.html</filename>
    <member kind="function">
      <type></type>
      <name>XpetraOpFailure</name>
      <anchorfile>classBelos_1_1XpetraOpFailure.html</anchorfile>
      <anchor>a16d4ee90da69d4c82764dc834e2c2f1c</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Zoltan2Interface</name>
    <filename>classMueLu_1_1Zoltan2Interface.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface.html</anchorfile>
      <anchor>a36205e86bc536996382a0c74c9fcd51d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>defaultZoltan2Params</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface.html</anchorfile>
      <anchor>ae807465b217f86569fc51906482423ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Zoltan2Interface</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface.html</anchorfile>
      <anchor>a22cc4b44d4c6d3644a44e15d2410a660</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Zoltan2Interface</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface.html</anchorfile>
      <anchor>aceff2c0f8e75bca8c5bd6d6788dde8ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface.html</anchorfile>
      <anchor>a2c340a4b04a139659f927df4064b04aa</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface.html</anchorfile>
      <anchor>aadb0d91c6db96058088f1aa3b99a59c5</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::Zoltan2Interface&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
    <filename>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</filename>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>Zoltan2Interface</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>add568b42db9a225265eb7414b1e64351</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Zoltan2Interface</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a25f13529453056eef86638736956d460</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a3bc581f1e2820d92588735c8fe11536d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a257480ae6b90f13627fb77018ce935c1</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a9a91a469a45dd66c860e9070a640d59f</anchor>
      <arglist>(Level &amp;currentLevel) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>double</type>
      <name>Scalar</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a0c25da3c7fa6915eaf4baa08ab73dd5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>af8e064c80a5d646ee386a62cd185bf69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>int</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>acec1385be3cd67110b7ff912d4097521</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Xpetra::EpetraNode</type>
      <name>Node</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a066936abb9179d4592d5ba5404c19b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Level &gt;</type>
      <name>level_</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a62a57540889e2a61605c067cab7de1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; ZoltanInterface &gt;</type>
      <name>zoltanInterface_</name>
      <anchorfile>classMueLu_1_1Zoltan2Interface_3_01double_00_01int_00_01int_00_01Xpetra_1_1EpetraNode_01_4.html</anchorfile>
      <anchor>a267216b500e158a9d296d6ca32d25db7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MueLu::ZoltanInterface</name>
    <filename>classMueLu_1_1ZoltanInterface.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>MueLu::SingleLevelFactoryBase</base>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>GetValidParameterList</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a597e9f1a115f652a3f55af7d95419075</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ArrayRCP&lt; double &gt;</type>
      <name>coalesceCoordinates</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a99b85af7bf75ddb2ef86dc58c5eaa247</anchor>
      <arglist>(ArrayRCP&lt; double &gt; coord, LocalOrdinal blksize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ZoltanInterface</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a2f9452c469e520bf4b56052888d9fb64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ZoltanInterface</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a1f2a29783593a4f6e9a0a8f478af61b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeclareInput</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a484b75e910232f0be2a5088a1a4e241a</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Build</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a875a65fcc4eec114586922c9e4ac05f0</anchor>
      <arglist>(Level &amp;level) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetLocalNumberOfRows</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a0e75f367072fd575f8edd605004f4cef</anchor>
      <arglist>(void *data, int *ierr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetLocalNumberOfNonzeros</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>a0a8924652c22d5aaf65909af8d3493c9</anchor>
      <arglist>(void *data, int NumGidEntries, int NumLidEntries, ZOLTAN_ID_PTR gids, ZOLTAN_ID_PTR lids, int wgtDim, float *weights, int *ierr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GetProblemDimension</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>ae1d38f1757c814e63b131ff3ba277f58</anchor>
      <arglist>(void *data, int *ierr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetProblemGeometry</name>
      <anchorfile>classMueLu_1_1ZoltanInterface.html</anchorfile>
      <anchor>ad3a8c20a46fc2e2f45329dc062d62310</anchor>
      <arglist>(void *data, int numGIDEntries, int numLIDEntries, int numObjectIDs, ZOLTAN_ID_PTR gids, ZOLTAN_ID_PTR lids, int dim, double *coordinates, int *ierr)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Amesos2</name>
    <filename>namespaceAmesos2.html</filename>
    <class kind="class">Amesos2::Solver</class>
  </compound>
  <compound kind="namespace">
    <name>Belos</name>
    <filename>namespaceBelos.html</filename>
    <class kind="class">Belos::MueLuOp</class>
    <class kind="class">Belos::MueLuOpFailure</class>
    <class kind="class">Belos::MultiVecTraits&lt; Scalar, Xpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &gt;</class>
    <class kind="class">Belos::OperatorT</class>
    <class kind="class">Belos::OperatorTraits&lt; ScalarType, MV, OperatorT&lt; MV &gt; &gt;</class>
    <class kind="class">Belos::StatusTestGenResSubNorm&lt; Scalar, Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;, Belos::OperatorT&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &gt;</class>
    <class kind="class">Belos::XpetraOp</class>
    <class kind="class">Belos::XpetraOp&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">Belos::XpetraOp&lt; double, int, long long, Xpetra::EpetraNode &gt;</class>
    <class kind="class">Belos::XpetraOpFailure</class>
  </compound>
  <compound kind="namespace">
    <name>MueLu</name>
    <filename>namespaceMueLu.html</filename>
    <namespace>MueLu::Details</namespace>
    <namespace>MueLu::Exceptions</namespace>
    <namespace>MueLu::MemUtils</namespace>
    <namespace>MueLu::YAMLParameterList</namespace>
    <class kind="class">MueLu::AdaptiveSaMLParameterListInterpreter</class>
    <class kind="class">MueLu::AdvSmootherPrototype</class>
    <class kind="class">MueLu::Aggregates</class>
    <class kind="class">MueLu::AggregationAlgorithmBase</class>
    <class kind="class">MueLu::AggregationExportFactory</class>
    <class kind="class">MueLu::AggregationPhase1Algorithm</class>
    <class kind="class">MueLu::AggregationPhase2aAlgorithm</class>
    <class kind="class">MueLu::AggregationPhase2bAlgorithm</class>
    <class kind="class">MueLu::AggregationPhase3Algorithm</class>
    <class kind="class">MueLu::AlgebraicPermutationStrategy</class>
    <class kind="class">MueLu::AmalgamationFactory</class>
    <class kind="class">MueLu::AmalgamationInfo</class>
    <class kind="class">MueLu::Amesos2Smoother</class>
    <class kind="class">MueLu::Amesos2Smoother&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">MueLu::AmesosSmoother</class>
    <class kind="class">MueLu::AMGXOperator</class>
    <class kind="class">MueLu::AMGXOperator&lt; double, int, int, Node &gt;</class>
    <class kind="class">MueLu::BaseClass</class>
    <class kind="class">MueLu::BlockedCoarseMapFactory</class>
    <class kind="class">MueLu::BlockedDirectSolver</class>
    <class kind="class">MueLu::BlockedGaussSeidelSmoother</class>
    <class kind="class">MueLu::BlockedPFactory</class>
    <class kind="class">MueLu::BlockedRAPFactory</class>
    <class kind="class">MueLu::BraessSarazinSmoother</class>
    <class kind="class">MueLu::BrickAggregationFactory</class>
    <class kind="class">MueLu::CGSolver</class>
    <class kind="class">MueLu::CloneRepartitionInterface</class>
    <class kind="class">MueLu::CoalesceDropFactory</class>
    <class kind="class">MueLu::CoarseMapFactory</class>
    <class kind="class">MueLu::CoarseningVisualizationFactory</class>
    <class kind="struct">MueLu::CompPairs</class>
    <class kind="class">MueLu::ComputeAggregateSizesFunctor</class>
    <class kind="class">MueLu::Constraint</class>
    <class kind="class">MueLu::ConstraintFactory</class>
    <class kind="class">MueLu::CoordinatesTransferFactory</class>
    <class kind="class">MueLu::CoupledAggregationCommHelper</class>
    <class kind="class">MueLu::CoupledAggregationFactory</class>
    <class kind="class">MueLu::CoupledRBMFactory</class>
    <class kind="class">MueLu::DefaultProblemStrings</class>
    <class kind="class">MueLu::DemoFactory</class>
    <class kind="class">MueLu::Describable</class>
    <class kind="class">MueLu::DetectDirichletFunctor</class>
    <class kind="class">MueLu::DirectSolver</class>
    <class kind="class">MueLu::DisableMultipleCallCheck</class>
    <class kind="class">MueLu::DropNegativeEntriesFactory</class>
    <class kind="class">MueLu::EminPFactory</class>
    <class kind="class">MueLu::FacadeBGS2x2</class>
    <class kind="class">MueLu::FacadeClassBase</class>
    <class kind="class">MueLu::FacadeClassFactory</class>
    <class kind="class">MueLu::FacadeSimple</class>
    <class kind="class">MueLu::Factory</class>
    <class kind="class">MueLu::FactoryAcceptor</class>
    <class kind="class">MueLu::FactoryBase</class>
    <class kind="class">MueLu::FactoryFactory</class>
    <class kind="class">MueLu::FactoryManager</class>
    <class kind="class">MueLu::FactoryManagerBase</class>
    <class kind="class">MueLu::FactoryMonitor</class>
    <class kind="class">MueLu::FakeSmootherPrototype</class>
    <class kind="class">MueLu::FilteredAFactory</class>
    <class kind="class">MueLu::GenericRFactory</class>
    <class kind="class">MueLu::GeoInterpFactory</class>
    <class kind="class">MueLu::GMRESSolver</class>
    <class kind="class">MueLu::Graph</class>
    <class kind="class">MueLu::GraphBase</class>
    <class kind="class">MueLu::Hierarchy</class>
    <class kind="class">MueLu::HierarchyFactory</class>
    <class kind="class">MueLu::HierarchyManager</class>
    <class kind="class">MueLu::HierarchyUtils</class>
    <class kind="class">MueLu::Ifpack2Smoother</class>
    <class kind="class">MueLu::Ifpack2Smoother&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">MueLu::IfpackSmoother</class>
    <class kind="class">MueLu::IndefBlockedDiagonalSmoother</class>
    <class kind="class">MueLu::IsolatedNodeAggregationAlgorithm</class>
    <class kind="class">MueLu::IsorropiaInterface</class>
    <class kind="class">MueLu::LeftoverAggregationAlgorithm</class>
    <class kind="class">MueLu::Level</class>
    <class kind="class">MueLu::LineDetectionFactory</class>
    <class kind="class">MueLu::LinkedList</class>
    <class kind="class">MueLu::LocalAggregationAlgorithm</class>
    <class kind="class">MueLu::LocalPermutationStrategy</class>
    <class kind="class">MueLu::LWGraph</class>
    <class kind="class">MueLu::MapTransferFactory</class>
    <class kind="class">MueLu::MasterList</class>
    <class kind="class">MueLu::MatlabSmoother</class>
    <class kind="class">MueLu::MatrixAnalysisFactory</class>
    <class kind="class">MueLu::MergedBlockedMatrixFactory</class>
    <class kind="class">MueLu::MergedSmoother</class>
    <class kind="class">MueLu::MHDRAPFactory</class>
    <class kind="class">MueLu::ML2MueLuParameterTranslator</class>
    <class kind="class">MueLu::MLParameterListInterpreter</class>
    <class kind="class">MueLu::Monitor</class>
    <class kind="class">MueLu::MpiTypeTraits</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; int &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; long &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; long long &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; short &gt;</class>
    <class kind="class">MueLu::MpiTypeTraits&lt; unsigned &gt;</class>
    <class kind="struct">MueLu::MueLu_Node_Struct</class>
    <class kind="struct">MueLu::MueLu_SuperNode_Struct</class>
    <class kind="class">MueLu::MuemexArg</class>
    <class kind="class">MueLu::MuemexData</class>
    <class kind="class">MueLu::MultiVectorTransferFactory</class>
    <class kind="class">MueLu::MutuallyExclusiveTime</class>
    <class kind="class">MueLu::MutuallyExclusiveTimeMonitor</class>
    <class kind="class">MueLu::myTriangle</class>
    <class kind="class">MueLu::myVec2</class>
    <class kind="class">MueLu::myVec3</class>
    <class kind="class">MueLu::NoFactory</class>
    <class kind="class">MueLu::NullspaceFactory</class>
    <class kind="class">MueLu::NullspacePresmoothFactory</class>
    <class kind="class">MueLu::OnePtAggregationAlgorithm</class>
    <class kind="class">MueLu::ParameterListAcceptor</class>
    <class kind="class">MueLu::ParameterListAcceptorImpl</class>
    <class kind="class">MueLu::ParameterListInterpreter</class>
    <class kind="class">MueLu::PatternFactory</class>
    <class kind="class">MueLu::PerfUtils</class>
    <class kind="class">MueLu::PermutationFactory</class>
    <class kind="class">MueLu::PermutingSmoother</class>
    <class kind="class">MueLu::PFactory</class>
    <class kind="class">MueLu::PgPFactory</class>
    <class kind="class">MueLu::PreDropFunctionBaseClass</class>
    <class kind="class">MueLu::PreDropFunctionConstVal</class>
    <class kind="class">MueLu::PreserveDirichletAggregationAlgorithm</class>
    <class kind="class">MueLu::PRFactory</class>
    <class kind="class">MueLu::PrintMonitor</class>
    <class kind="class">MueLu::ProjectorSmoother</class>
    <class kind="class">MueLu::Q2Q1Q2CoarseGridFactory</class>
    <class kind="class">MueLu::QR_InterfaceEx</class>
    <class kind="class">MueLu::RAPFactory</class>
    <class kind="class">MueLu::RAPShiftFactory</class>
    <class kind="class">MueLu::RebalanceAcFactory</class>
    <class kind="class">MueLu::RebalanceBlockAcFactory</class>
    <class kind="class">MueLu::RebalanceBlockInterpolationFactory</class>
    <class kind="class">MueLu::RebalanceBlockRestrictionFactory</class>
    <class kind="class">MueLu::RebalanceMapFactory</class>
    <class kind="class">MueLu::RebalanceTransferFactory</class>
    <class kind="class">MueLu::RefMaxwell</class>
    <class kind="class">MueLu::ReorderBlockAFactory</class>
    <class kind="class">MueLu::RepartitionFactory</class>
    <class kind="class">MueLu::RepartitionHeuristicFactory</class>
    <class kind="class">MueLu::RepartitionInterface</class>
    <class kind="class">MueLu::RigidBodyModeFactory</class>
    <class kind="class">MueLu::SaPFactory</class>
    <class kind="class">MueLu::SchurComplementFactory</class>
    <class kind="class">MueLu::SegregatedAFactory</class>
    <class kind="class">MueLu::SemiCoarsenPFactory</class>
    <class kind="class">MueLu::SetFactoryManager</class>
    <class kind="class">MueLu::ShiftedLaplacian</class>
    <class kind="class">MueLu::ShiftedLaplacianOperator</class>
    <class kind="class">MueLu::SimpleSmoother</class>
    <class kind="class">MueLu::SingleLevelFactoryBase</class>
    <class kind="class">MueLu::SingleLevelMatlabFactory</class>
    <class kind="class">MueLu::Smoother</class>
    <class kind="class">MueLu::SmootherBase</class>
    <class kind="class">MueLu::SmootherFactory</class>
    <class kind="class">MueLu::SmootherFactoryBase</class>
    <class kind="class">MueLu::SmootherPrototype</class>
    <class kind="class">MueLu::SolverBase</class>
    <class kind="class">MueLu::SteepestDescentSolver</class>
    <class kind="class">MueLu::SubBlockAFactory</class>
    <class kind="class">MueLu::SubFactoryMonitor</class>
    <class kind="class">MueLu::SubMonitor</class>
    <class kind="class">MueLu::TekoSmoother</class>
    <class kind="class">MueLu::TekoSmoother&lt; double, int, GlobalOrdinal, Node &gt;</class>
    <class kind="class">MueLu::TentativePFactory</class>
    <class kind="class">MueLu::ThresholdAFilterFactory</class>
    <class kind="class">MueLu::TimeMonitor</class>
    <class kind="class">MueLu::ToggleCoordinatesTransferFactory</class>
    <class kind="class">MueLu::TogglePFactory</class>
    <class kind="class">MueLu::TopRAPFactory</class>
    <class kind="class">MueLu::TopSmootherFactory</class>
    <class kind="class">MueLu::TpetraOperator</class>
    <class kind="class">MueLu::TransPFactory</class>
    <class kind="class">MueLu::TrilinosSmoother</class>
    <class kind="struct">MueLu::Triplet</class>
    <class kind="class">MueLu::TwoLevelFactoryBase</class>
    <class kind="class">MueLu::TwoLevelMatlabFactory</class>
    <class kind="class">MueLu::UncoupledAggregationFactory</class>
    <class kind="class">MueLu::UserAggregationFactory</class>
    <class kind="class">MueLu::UserPFactory</class>
    <class kind="class">MueLu::Utilities</class>
    <class kind="class">MueLu::Utilities&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">MueLu::UtilitiesBase</class>
    <class kind="class">MueLu::UzawaSmoother</class>
    <class kind="class">MueLu::VariableContainer</class>
    <class kind="class">MueLu::VerboseObject</class>
    <class kind="class">MueLu::VisualizationHelpers</class>
    <class kind="class">MueLu::XpetraOperator</class>
    <class kind="class">MueLu::Zoltan2Interface</class>
    <class kind="class">MueLu::Zoltan2Interface&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">MueLu::ZoltanInterface</class>
    <member kind="typedef">
      <type>struct MueLu::MueLu_Node_Struct</type>
      <name>MueLu_Node</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a67d5c1ec1e04dcdd63ec5e92f5dfdb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct MueLu::MueLu_SuperNode_Struct</type>
      <name>MueLu_SuperNode</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a83c005c50b4d62384fec5df2948c750c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short</type>
      <name>KeepType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a76ac5d9fd642b090d75beb67401d8db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>VerbLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0265bde4f2d409b3d8414b59a20a5168</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosDeviceWrapperNode&lt; Kokkos::Serial, Kokkos::HostSpace &gt;</type>
      <name>mm_node_t</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afe3c8592479323ff34e00058640e691d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>mm_LocalOrd</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2c2f209674415901b39d1d2ed5b0e706</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>mm_GlobalOrd</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a851100c269a23851ba8e091f18cb18b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>complex_t</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abae36bab95061a0947692ec7a39503d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map</type>
      <name>muemex_map_type</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa0dbec2a89e828cbe9674cb259c8fc87</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_CrsMatrix_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0a6cb4dc21b9e82d17cf18683d60ecea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_CrsMatrix_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aca457bdc128f82d7b1ceca7075cd7098</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_MultiVector_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a12c4810d19b136c5e2a4739244b27429</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Tpetra_MultiVector_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58598a0c4287dc0b4efe2eec5ff591e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Map&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_map</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aadd7e952313dd2bec5addf51a191c67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Vector&lt; mm_LocalOrd, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_ordinal_vector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a14c1f139d43e86e5d952086289e03572</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Matrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_Matrix_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a97cbe293ae62c75cfb2ad22961917966</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::Matrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_Matrix_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0e0990ac13abc044997e22a387fd1a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_MultiVector_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a41e14dc27828d6408d6413d5c64780c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Xpetra_MultiVector_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad0cc9a4e46bc657eb5570977d62cfe83</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::Hierarchy&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Hierarchy_double</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afeaf6f9ed0c190a74b8cc0f619714061</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::Hierarchy&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>Hierarchy_complex</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3082b9ef021a3f5dd68418fa263380c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::Aggregates&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>MAggregates</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9e63e08a41e1ba5960ea0e6ae7a3670d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::AmalgamationInfo&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>MAmalInfo</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac05d8213e88fdd623527c382e0c58eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MueLu::GraphBase&lt; mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;</type>
      <name>MGraph</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9d0bf6382c072ef39dc76a714fc17544</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CANodeState</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA_READY</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3a3e8e18015711f6093173c41df9857262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA_NOTSEL</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3a7c5187a4353692005573735e0c15c3f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CA_SELECTED</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afa94a7cd8ff32fc0014acf00494f1bc3afeefe1e8249badc4b9beb15eb843f8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CycleType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae3c686f4ee7f191c037cef47adc0c9d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VCYCLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae3c686f4ee7f191c037cef47adc0c9d5aac22bb2e2d8d8dd8ce3973719b59ecd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WCYCLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae3c686f4ee7f191c037cef47adc0c9d5a6f79ecf2544584e8cf8e08943b9311af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PreOrPost</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07cad46a9040e87200a3a8515e928ecb53be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POST</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07cabc5415e8b813aef3c0306a141d9c41d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOTH</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac810e5eb1da90fbbe32b977cc964c07cac781172a0019766747736e50d90dbfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>NodeState</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READY</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a13a08b8749f10fa66cf6b75e61db3ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NOTSEL</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a02d1ea3f826d319ca64fa1846f3c8834</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGREGATED</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911ae74579d54f8f07c80658137176055ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ONEPT</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a454af139db31b2baf5f1eed7dfaf1a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IGNORED</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a632d712b1f0dce52ab1067f1e132df62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOUNDARY</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6885fdcb5195a495f93a25255638e911a57536ec6aa30bd6df106563486d752d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ReturnType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Converged</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0ab944a3755991891aae5e181bc0b3de93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Unconverged</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0aea2dba6b1f1f15bf549f035ffc224d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Undefined</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ade8f7202da2d4f7784978ff1a7e8f2e0a65239f2d049e1df7a64925b1a35c4f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>KeepEnum</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UserData</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbead7a304b24689a836e7fea0ce1c8f6cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Keep</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbea6e9188562d239e004c6f6b23e377fd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Final</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbea6cb56427f81c2b6d8022f820707836e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NextRun</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbeac62ab56b663b722d273c91dd9a4f4927</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>All</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a16a5d3ba44dac8c44bb095e39b731cbea674bc15290b86a1b4c3b9e9cc626233a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MsgType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Errors</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa70ef0e1234e22dd76b09217202d3595c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa1804a250088d64143eda40094c28d224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings00</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa0266f6d174e7209b88113732c803373e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faed1560bbde7be732234dc50d94e2a4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfWarnings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fabac4731693d0c773dfdc9d60ed936327</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Runtime0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fabcf3f2fd68507cefed497403ab07a54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Runtime1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fac0a17b52bf9e5c5f14f0d3bdbd3ba637</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RuntimeTimings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa3c7782b54618266152c0ddd502c9cf70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NoTimeReport</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa9781a1a04c6263ba001301e0ed0496af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf380d18f674872fe2bd4ca526f51bbf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf9a2394955219647f1b426bf2d026ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf487f4b7e739a4d39611284e8f24f05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa83a3214cf3b7416fa80a3de3d1965e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics2</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa18d960e5bd7364c1ea53ae67f5891ff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timings0</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faaa4d4c6c2abe574fe7222c78e3cc89db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timings1</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa0c18ff65eb02d5002ba1c674c5d0efd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimingsByLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faebba10f17b7058eaeca4978a313e72c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>External</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa8844d4aee6f17d6329d46d2f8c0653b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Debug</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa6a391ac1916a6d1f5e3b952fc5e248b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Test</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fae3bcec1c3c42d6334f6e4e1c76312075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Warnings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa5d2457d01820d3c019842442c4ed9d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Runtime</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa90f4dae353b7535917273458e0bddf23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Parameters</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fac9ba86044b49a2755530877e446b34ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Statistics</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1facf0a2cc000c9e94c7c637c3c53440716</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timings</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faeed6207041b4d12935e395dcf691d725</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>None</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fab8c8aa4808f7b61fa47e6d96d08cd895</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Low</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa1f2a7ebce260fd64b5fcc4849d6f1496</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Medium</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faa754ef39fda0cd9ffb86ec8261051f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>High</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fadc14d17962743ba8a03918e9724d4559</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Extreme</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fad44d3836eab1bdc92477d518ec18ada7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Default</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1fa47815c062d008efd5aa66650a143824e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NotSpecified</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1f14cd8d51f6e963d8e5a8dd03dbcf1faf9652e7be634b8627e5b736c62456991</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MinimizationNorm</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ANORM</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1aca2cd4bf6c50bbbd89c6a5e53cb69684e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>L2NORM</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1aca9c7fad2ecdb94eb17bfb3131acd87200</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DINVANORM</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad48eb649d8503d42f939f9e53a75e1acabf04f49a5a9beec4cdb2468ed2bb315c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a526cda6806394f43200c061930f93b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BOOL</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033aa2cf8c8cf92ee3a39fa2eaa6ff7dc43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a202613a707416b5886abda5435ab9859</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a6c937decca5a3aa17323883661534d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ad7734ed3828d75aa025afc234f8aed17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MAP</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a84c9961f006c9f3ece44cc16b4334abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_ORDINAL_VECTOR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a41abce024f776d3534959c81c6762988</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MULTIVECTOR_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033af1cc6dc5817218c0df0de53fcb52e7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MULTIVECTOR_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a996a08d43e4fb1ca7a037a9ab15f32c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MATRIX_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a7526c40cfd575671b0f38d3f3c04aecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TPETRA_MATRIX_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033aa567100c2bcae7a9b3e74e74aa0d1d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MATRIX_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a35fb67e5aa97d001ecc5693fe5c45465</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MATRIX_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a08e917b487e64ab1b0bd1cc22d980024</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MULTIVECTOR_DOUBLE</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a46976661a8951857960b4d75d4142f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XPETRA_MULTIVECTOR_COMPLEX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a49fc80c0a0ede375950e005fc23b00e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EPETRA_CRSMATRIX</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ac8a0c4ea23c3215aaee06e6af161a40e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EPETRA_MULTIVECTOR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033a3920c16650633a885a1ac8d49c438fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AGGREGATES</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ad38a56fde076d810fcf4ad208a81e4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AMALGAMATION_INFO</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033aeb12219fdd1205ad9d3684e35721bc41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GRAPH</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6da7829994ac1d91a749c3cbf89e2033ae60abe8a2ee424cd2d9fe77daaf7addf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string const</type>
      <name>Version</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab643586a83060a7cf1a8d72e3f61ae14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateSublists</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a209823e7ed0fa0a706c8c13627b10f9b</anchor>
      <arglist>(const ParameterList &amp;List, ParameterList &amp;newList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LevenshteinDistance</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa965228cb767b85ad71cf37aa48134e8</anchor>
      <arglist>(const char *s, size_t len_s, const char *t, size_t len_t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>areSame</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab5f09969a87478f8802199f3c42757d1</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compare</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac0d048ce3767f733d13246b65bfdf062</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MergeParameterList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a85fa5a5f20e1b6f2f7d3f56737d8c1bd</anchor>
      <arglist>(const Teuchos::ParameterList &amp;source, Teuchos::ParameterList &amp;dest, bool overWrite)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateSublists</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a017efb7ec052bca043a548044982d15e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;List, Teuchos::ParameterList &amp;newList)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>GetMLSubList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abde174656d7beadb4519294ffdf44167</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const std::string &amp;type, int levelID)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>ExtractSetOfParameters</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a137542f74b426c9f6c991a818d564177</anchor>
      <arglist>(const Teuchos::ParameterList &amp;paramList, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAll</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a28cc2d953f9e734910c598332da53b80</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;from, const std::string &amp;to)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>replacePlaceholder</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5df3b1b973676b508aa961cf4a92a445</anchor>
      <arglist>(std::string &amp;str, const std::string &amp;placeholder, Type data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>actionInterpretParameter</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a585a3feef1cd7b2540c49e1153ab8198</anchor>
      <arglist>(Teuchos::ParameterList &amp;mlParams, const std::string &amp;paramName, std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlFile</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abbf23758c06ada4403aa379cfd7d9d68</anchor>
      <arglist>(const std::string &amp;yamlFileName, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58cc28b7c2d448646150bebc99f20570</anchor>
      <arglist>(const std::string &amp;yamlData, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlCString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7de881c813847b978229a3e6086d1bad</anchor>
      <arglist>(const char *const yamlData, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getParametersFromYamlFile</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6fdef9a410d0cbb973e637cd9d19fa41</anchor>
      <arglist>(const std::string &amp;yamlFileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParametersFromYamlFileAndBroadcast</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a23f5e1f5c2c5c255cb4808d1486a0653</anchor>
      <arglist>(const std::string &amp;yamlFileName, const Teuchos::Ptr&lt; Teuchos::ParameterList &gt; &amp;paramList, const Teuchos::Comm&lt; int &gt; &amp;comm, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>convertXmlToYaml</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a57a40ce1f14ef811b5c6637f9baf479a</anchor>
      <arglist>(const std::string &amp;xmlFileName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertXmlToYaml</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aacf3fbc6f88b8256a35030de222fd44a</anchor>
      <arglist>(const std::string &amp;xmlFileName, const std::string &amp;yamlFileName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveSameValuesUnordered</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abaf0d1bec7a1861a965b295ae79a824c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;lhs, const Teuchos::ParameterList &amp;rhs, bool verbose=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printParameterListOptions</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad52ee67b34f0014826bde10e90af6333</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>VerbLevel</type>
      <name>toMueLuVerbLevel</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aea20491ed7cacf9cdab417be4719702c</anchor>
      <arglist>(const Teuchos::EVerbosityLevel verbLevel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>compareTriplets</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1e11f0991e08e92080b0db5b4578dbce</anchor>
      <arglist>(const Triplet&lt; T, W &gt; &amp;a, const Triplet&lt; T, W &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::SmootherPrototype&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetAmesosSmoother</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad2ea072d4515c442f99efbe8a18b0a26</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::SmootherPrototype&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>GetIfpackSmoother</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab22f10d5b5f4588a5cc848ca81332876</anchor>
      <arglist>(const std::string &amp;type=&quot;&quot;, const Teuchos::ParameterList &amp;paramList=Teuchos::ParameterList(), const LocalOrdinal &amp;overlap=0)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MueLu::SmootherPrototype&lt; double, int, int, Xpetra::EpetraNode &gt; &gt;</type>
      <name>GetIfpackSmoother&lt; double, int, int, Xpetra::EpetraNode &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a738e0b9c5ca3db82c6f26387b23d721f</anchor>
      <arglist>(const std::string &amp;type, const Teuchos::ParameterList &amp;paramList, const int &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; SmootherBase&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt;</type>
      <name>clone</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a92161cf1eb87780943e53436618931f7</anchor>
      <arglist>(const Teuchos::RCP&lt; SmootherBase&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node1 &gt; &gt; &amp;SB, const Teuchos::RCP&lt; const Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node2 &gt; &gt; &amp;cloneA, const RCP&lt; Node2 &gt; &amp;node2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LapackQR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a08f1f9610a301f7a8c312618f003aca4</anchor>
      <arglist>(Teuchos::LAPACK&lt; LocalOrdinal, Scalar &gt; &amp;lapack, LocalOrdinal myAggSize, int intFineNSDim, ArrayRCP&lt; Scalar &gt; &amp;localQR, ArrayRCP&lt; Scalar &gt; &amp;tau, ArrayRCP&lt; Scalar &gt; &amp;work, LocalOrdinal &amp;workSize, LocalOrdinal &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LapackQR</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af4e2d04c09b90c647486ea29d5f6e2e6</anchor>
      <arglist>(Teuchos::LAPACK&lt; LocalOrdinal, std::complex&lt; double &gt; &gt; &amp;lapack, LocalOrdinal myAggSize, int intFineNSDim, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;localQR, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;tau, ArrayRCP&lt; std::complex&lt; double &gt; &gt; &amp;work, LocalOrdinal &amp;workSize, LocalOrdinal &amp;info)</arglist>
    </member>
    <member kind="function">
      <type>CompPairs&lt; Scalar, LocalOrdinal &gt;</type>
      <name>CreateCmpPairs</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a29de57801d9d4b1ff5ef3e61c7a61da4</anchor>
      <arglist>(const std::vector&lt; Scalar &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortingPermutation</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6b36bdc743a37b311107a0b7687159f9</anchor>
      <arglist>(const std::vector&lt; Scalar &gt; &amp;values, std::vector&lt; LocalOrdinal &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calculateStats</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adf0876d7c4d0bc296a7ca25f53b37711</anchor>
      <arglist>(Type &amp;minVal, Type &amp;maxVal, double &amp;avgVal, double &amp;devVal, const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>stringStats</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a12074b46bd87b5fcd30f0e694a90932d</anchor>
      <arglist>(const RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Type &amp;v, RCP&lt; ParameterList &gt; paramList=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cmp_less</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a04121b17cfe1f5aa7d2e677fc42db437</anchor>
      <arglist>(typename Map::value_type &amp;v1, typename Map::value_type &amp;v2)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>ExtractNonSerializableData</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1b81fa817bd38bc45cfaebaeafa1210b</anchor>
      <arglist>(const Teuchos::ParameterList &amp;inList, Teuchos::ParameterList &amp;serialList, Teuchos::ParameterList &amp;nonSerialList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokenizeStringAndStripWhiteSpace</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa2e6058c0bae595f2930bf1f52b33557</anchor>
      <arglist>(const std::string &amp;stream, std::vector&lt; std::string &gt; &amp;tokenList, const char *delimChars)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsParamMuemexVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a02541672e606249c8598820d5a1e9e59</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::CrsMatrixWrap&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>Convert_Epetra_CrsMatrix_ToXpetra_CrsMatrixWrap</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad08acbb17a884d4b3f15f2aea31ae00b</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;epAB)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>EpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af944843a77e6c2035b97f8235e68405d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>EpetraMultiVector_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7e7a26ed6cbb86fe5c468e9f9a4defb6</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>TpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2bba21b1bf37edecc31a3301abe0418e</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; SC, LO, GO, NO &gt; &gt; &amp;Atpetra)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt;</type>
      <name>TpetraCrs_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5f958e78301a32272070b478e0bb46b2</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; SC, LO, GO, NO &gt; &gt; &amp;Vtpetra)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>EpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab7da282d8f66e6a2e9c9ff32e80435c7</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>EpetraMultiVector_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a77287bdcd926ae958616eafd6e1a0c35</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;V)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>TpetraCrs_To_XpetraMatrix</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1bdec1074f6292471409d25e2e074be0</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Atpetra)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>TpetraMultiVector_To_XpetraMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a42c07cadfff061386864fef2da43f69f</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;Vtpetra)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adffcd9a4c5dd0a4b2cbf6c8e77f27e6b</anchor>
      <arglist>(const T &amp;what)</arglist>
    </member>
    <member kind="function">
      <type>Kokkos::View&lt; const bool *, typename NO::device_type &gt;</type>
      <name>DetectDirichletRows</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a844fdb19a143e351602b1baa8bf8889b</anchor>
      <arglist>(const Xpetra::Matrix&lt; SC, LO, GO, NO &gt; &amp;A, const typename Teuchos::ScalarTraits&lt; SC &gt;::magnitudeType &amp;tol)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::EpetraOperator &gt;</type>
      <name>CreateEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3cfde35a1b1bc70086a84b267ec2bd7d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;inA, Teuchos::ParameterList &amp;paramListIn, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::EpetraOperator &gt;</type>
      <name>CreateEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a97d184eb3165220f7290b09ee8944ec3</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;inA, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::EpetraOperator &gt;</type>
      <name>CreateEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad175d92344a0733289d13cbdf11bf684</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;A, const std::string &amp;xmlFileName, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReuseEpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a44cc2b8d64e3c8f1dace0bfa7875da31</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;inA, MueLu::EpetraOperator &amp;Op)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa91980cf02bc9f78890859902e9687d7</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, Teuchos::ParameterList &amp;inParamList, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>MUELU_DEPRECATED Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a067377ee3d4b9274780fb70f682483c3</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, Teuchos::ParameterList &amp;inParamList, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>MUELU_DEPRECATED Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5027d71ffd62265a309e1ab62ad50122</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>MUELU_DEPRECATED Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0b0ac4064a971513fbc565dab1837de1</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const std::string &amp;xmlFileName, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a305ddcd4133d7d9a731f892e20db7a74</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af8fcf9d564b636835f4ba60a835cc68f</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::Operator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, const std::string &amp;xmlFileName, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inCoords=Teuchos::null, const Teuchos::RCP&lt; Tpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;inNullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReuseTpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7437b4b04f90580b704de49cb9a10fee</anchor>
      <arglist>(const Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;inA, MueLu::TpetraOperator&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &amp;Op)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt;</type>
      <name>CreateXpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a611a7ff9294409496c7a15d5d67704a2</anchor>
      <arglist>(Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; op, const Teuchos::ParameterList &amp;inParamList, Teuchos::RCP&lt; Xpetra::MultiVector&lt; double, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; coords=Teuchos::null, Teuchos::RCP&lt; Xpetra::MultiVector&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; nullspace=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReuseXpetraPreconditioner</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa7e58c84b80e5ea38419cfc2033f7106</anchor>
      <arglist>(const Teuchos::RCP&lt; Xpetra::Matrix&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt; &gt; &amp;A, Teuchos::RCP&lt; MueLu::Hierarchy&lt; Scalar, LocalOrdinal, GlobalOrdinal, Node &gt;&gt; &amp;H)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>mwIndex_to_int</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a7de7a50f215b0f5bd6ad6906ce95ee0c</anchor>
      <arglist>(int N, mwIndex *mwi_array)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a44f5b05792c0f30e5eadfa24c002ca24</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad4bd8ff70647ae6bdc7f68149e5efa18</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a85d1dd0161ea5f885856e832eeaf905c</anchor>
      <arglist>(double *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa2511ccc55e6f51f8a4ccef975a4eae8</anchor>
      <arglist>(complex_t *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>callMatlabNoArgs</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adcf56027097169b30abbfaeac9599e29</anchor>
      <arglist>(std::string function)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RCP&lt; MuemexArg &gt; &gt;</type>
      <name>callMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a319407c0face0e5bed293f1b9ab44b89</anchor>
      <arglist>(std::string function, int numOutputs, std::vector&lt; RCP&lt; MuemexArg &gt;&gt; args)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae5f38e40c3a227c222b01e2bf779df57</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab23c8d1d30d3341833a473d038bf3232</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveAmalInfo</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4b23cd7ba867bf30bce9b02156ea0df2</anchor>
      <arglist>(RCP&lt; MAmalInfo &gt; &amp;amalInfo)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidMatlabAggregates</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a58a2dd02eab7cf4ac412d819f4fd2b38</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValidMatlabGraph</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a120f98f438d2ed34f7fa174c91be7542</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>tokenizeList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acf545ae277047b60e2e413b16c586827</anchor>
      <arglist>(const std::string &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getInputParamList</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a176b687afc744a6f92781a78f42d8c81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MuemexArg &gt;</type>
      <name>convertMatlabVar</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a343e030b3116faf2d8a8f63eb8bf5410</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template bool</type>
      <name>loadDataFromMatlab&lt; bool &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab63c195a1e157659b5bfbaed4b49e2ab</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template int</type>
      <name>loadDataFromMatlab&lt; int &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a968d1ba9ae7174319e2bafbc9aac835b</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>loadDataFromMatlab&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acee660b43d7f54fe26d2ac6ea224d484</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template complex_t</type>
      <name>loadDataFromMatlab&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9a06431d82959130d8b87a317e688306</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template string</type>
      <name>loadDataFromMatlab&lt; string &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6e7c795ff4eb18b0bf0fe4eb7504d805</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_ordinal_vector &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_ordinal_vector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac6977e6ff3351afdbf405be2cf477e5d</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_MultiVector_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1b1715fa34e1831e922e6ad4e927db48</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_MultiVector_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a05ce2ff6518de15755151c7c8ada879e</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_CrsMatrix_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_CrsMatrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4447c10801be5cb7f05bc02d4916b682</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Tpetra_CrsMatrix_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Tpetra_CrsMatrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4a83b1e9f88c3bf01fb6298b5a1283d6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_Matrix_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_Matrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae5518ce351587e881bb5421a2d2f6692</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_Matrix_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_Matrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a26e0d8c9dda557b4a800b28763b07ae5</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_MultiVector_double &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a82ac89ffebe6e8bd72d92d77dccbb4f0</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Xpetra_MultiVector_complex &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac65e7401084626d9ac1816be3cf4be89</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Epetra_CrsMatrix &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4f9f81dbdadd970a5fc1016f422819ed</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; Epetra_MultiVector &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Epetra_MultiVector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17d75aee14deb23e50ec65ad5b7827a6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MAggregates &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MAggregates &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adffe36a91a39dc74a03b820164c6b6c4</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template RCP&lt; MAmalInfo &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MAmalInfo &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a867a8a4f3cacd1d4756c748f2380335c</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5c56222e4dd0c4d2a5daf8816da1c614</anchor>
      <arglist>(bool &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acace229417c411eb6c868a790aafe984</anchor>
      <arglist>(int &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a19ac2fde745a2500a16c1d7439df9525</anchor>
      <arglist>(double &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ada0ba38e14a1c0e891b9dc634c9a0a54</anchor>
      <arglist>(complex_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa43967b4058d0e5ff79f2e60ff34135d</anchor>
      <arglist>(string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a57d138e579265e5dd8db2bd0d27e24db</anchor>
      <arglist>(RCP&lt; Xpetra_ordinal_vector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af6da111cc64f00a0185aac1f664741c1</anchor>
      <arglist>(RCP&lt; Tpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1e6bf1edfa9343738549949d0445ce52</anchor>
      <arglist>(RCP&lt; Tpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a740da07cd9f72b22fffb9c2aa420640e</anchor>
      <arglist>(RCP&lt; Tpetra_CrsMatrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4423295030114c9b959516d6088fd1cb</anchor>
      <arglist>(RCP&lt; Tpetra_CrsMatrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac3f8ddeb4a1777dfad66ef782c2fd97d</anchor>
      <arglist>(RCP&lt; Xpetra_Matrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0551e5953983c8c3b4393bdd8aa63cbd</anchor>
      <arglist>(RCP&lt; Xpetra_Matrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab4cd16b110f1f5be9bb8d56f6ed60c3c</anchor>
      <arglist>(RCP&lt; Xpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a229b43e8c662c514ba9aab3c64453e06</anchor>
      <arglist>(RCP&lt; Xpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae2d94121db50f7232ea9860a14f5ec0c</anchor>
      <arglist>(RCP&lt; Epetra_CrsMatrix &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acffd341eec2353cb5e33497fd6f53a57</anchor>
      <arglist>(RCP&lt; Epetra_MultiVector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2bd659029574a15a24a1f7871496aef5</anchor>
      <arglist>(RCP&lt; MAggregates &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a8fc7e7f7a553ad4d8e90a48b44f0fb3c</anchor>
      <arglist>(RCP&lt; MAmalInfo &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>template vector&lt; RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5b19546e7459af6628ef96252d148604</anchor>
      <arglist>(const Factory *factory, string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>template vector&lt; RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad0717b1a03bc216339dc6acd6900ab3d</anchor>
      <arglist>(const Factory *factory, string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>processProvides&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac80c8eac3b631c0f71504883122c2564</anchor>
      <arglist>(vector&lt; RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>processProvides&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a74c476d960ba06724326caa37bde28a2</anchor>
      <arglist>(vector&lt; RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3493c98c911b4f6ccc7f640cf692158c</anchor>
      <arglist>(const T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a073ae207a9e3319ee380db9dec7ec2c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>loadDataFromMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>adbf54063fe9749f163d82006f3b67c83</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>affa71e24d5b734a2d911e88ddf07c27d</anchor>
      <arglist>(T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9bba5518d09baeb92c34b2f38e50a8f8</anchor>
      <arglist>(const T &amp;data, std::string &amp;name, Level &amp;lvl, Factory *fact=NoFactory::get())</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>getLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa80760abd8cf70eb123834ba341c7ce4</anchor>
      <arglist>(std::string &amp;name, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a830d70c6aab3d042d26a9d89e326b04a</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2a1a2f29da15d3c1b98cba81ac52d6b1</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabSparse</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad68b716bf5d9b3cf27c0f8cb4d987f9f</anchor>
      <arglist>(int numRows, int numCols, int nnz)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>createMatlabMultiVector</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa4cf62e6cb27b8f1f746786225bad463</anchor>
      <arglist>(int numRows, int numCols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillMatlabArray</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab0ce03261b518f5559875cd34582d64f</anchor>
      <arglist>(Scalar *array, const mxArray *mxa, int n)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>callMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a9448f5a887f562b194f507be00616594</anchor>
      <arglist>(std::string function, int numOutputs, std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; args)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>ltrim</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac69d742da0989b05a561262ce00b018b</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>rtrim</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac950da14487749288e3a5c945c1736fa</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string &amp;</type>
      <name>trim</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a30fc38686417f3c5da4aed26a8e09cf5</anchor>
      <arglist>(std::string &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac273a6dd0a1a74e4a8885ac23d17cb09</anchor>
      <arglist>(const int &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; int &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4e7e536e2ab3774529dcd7847644b8bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; bool &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab9a7af3bfb4b88fa0c3a416c13a63cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a37a3ef47f4e21f46c25f6bebb29a0c3c</anchor>
      <arglist>(const double &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; double &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a2d0434bd4bfb9678026b383abfedbc5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5d0e332a7b1e014abe7166a51690fc01</anchor>
      <arglist>(const std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; string &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac704514811179f583c312bf621f60ea3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0f5ef1d13eb97a478d59a8d1f878280d</anchor>
      <arglist>(const complex_t &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; complex_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a4397f6e8a495f0ba47b8d345248995b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5e33d94cfcc019be2560f3ac0748a432</anchor>
      <arglist>(const RCP&lt; Xpetra_map &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_map &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a760d3aa71648ba5863a5cabab8185d6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>add0a6f4e273d92c20c2e9d889e5d7db6</anchor>
      <arglist>(const RCP&lt; Xpetra_ordinal_vector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_ordinal_vector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a702ca13a1567857ab9f937e64b7e163a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3238fcf96dd886d91cceda72a300dbbd</anchor>
      <arglist>(const RCP&lt; Tpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad46232fbe6fd3f1725210a8dab337006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae859eff3e28c65edfc7815c7c555664d</anchor>
      <arglist>(const RCP&lt; Tpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5e87df08977dac64099b6438af5c19cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae160469cb0e5a43d984b2fd8b08ed74e</anchor>
      <arglist>(const RCP&lt; Tpetra_CrsMatrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_CrsMatrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a642589ad641d4981fbbaf8325aa96bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab44f4a7984a4690dc566fe4b84655f57</anchor>
      <arglist>(const RCP&lt; Tpetra_CrsMatrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Tpetra_CrsMatrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a190fecaf281b8a7a97831484021c489b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>acd9e88cb0b46789668ed7fdd4b46c248</anchor>
      <arglist>(const RCP&lt; Xpetra_MultiVector_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_MultiVector_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a621ad7212f2f192ccb2e21c55b983419</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>af1eec6b900da9fa65deb2d15ccc0434f</anchor>
      <arglist>(const RCP&lt; Xpetra_MultiVector_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_MultiVector_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>abc51a1185f6562306e32e79b18c475e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aa34d0a6ef844c7fc9e47cdbeba174c7c</anchor>
      <arglist>(const RCP&lt; Xpetra_Matrix_double &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_Matrix_double &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab137a62828eb4f32993a6e53dbb0aacb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a88e36cac7956ad499cc932a11fc04088</anchor>
      <arglist>(const RCP&lt; Xpetra_Matrix_complex &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Xpetra_Matrix_complex &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac0a66d48b7547396caa6a4a55cfc0535</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a62415fbfbcd34b1aae8ce5fcc4cbaac9</anchor>
      <arglist>(const RCP&lt; Epetra_CrsMatrix &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Epetra_CrsMatrix &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a78457ea2b1770a65b6743f64802c2eac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17bea840230600de3f1ffcd1b31d66a1</anchor>
      <arglist>(const RCP&lt; Epetra_MultiVector &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; Epetra_MultiVector &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a17a2b9583a8296885f9d1c5b4bd2ab10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a22bc39786210b486e8f2466cf6f73ff5</anchor>
      <arglist>(const RCP&lt; MAggregates &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; MAggregates &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a035ad26730e93507d602a12e15dc892f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a5dbf2e41011550e7ce91d73421c08646</anchor>
      <arglist>(const RCP&lt; MAmalInfo &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; MAmalInfo &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a107e4ea667c2e01eaa99524f17eb5983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a693cb8fb32520f7725a5cdab1da55921</anchor>
      <arglist>(const RCP&lt; MGraph &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>MuemexType</type>
      <name>getMuemexType&lt; RCP&lt; MGraph &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad43f520f749f242ee6f47611f2214adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra_map &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra_map &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6efb543439d94266e0bae1243f6f8fa6</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::Matrix&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6b3c40a65c87a8f864d45a80e3525d3f</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::Matrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::Matrix&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a23f51bd5895d26c933cae2ce89b7500e</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6fe01dcee34660f5c7ea46974d40eaa1</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt; &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ad41020f8fa02bf393bb889b4f8788497</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MGraph &gt;</type>
      <name>loadDataFromMatlab&lt; RCP&lt; MGraph &gt; &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1647a5850ec9276895b801d53c6c6f2c</anchor>
      <arglist>(const mxArray *mxa)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0ab38875b42f6846852572a398779f7e</anchor>
      <arglist>(RCP&lt; Xpetra_map &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ab9452f4954dcaecfcb131da1d7e4295d</anchor>
      <arglist>(RCP&lt; Tpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0a776e18ba89aa6390b38bed63e15610</anchor>
      <arglist>(RCP&lt; Tpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>aaa608aa6f0406b77b75006cba4ad20a0</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; double, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a6b49aa6e43cfbb701fd02633d8edde41</anchor>
      <arglist>(RCP&lt; Xpetra::MultiVector&lt; complex_t, mm_LocalOrd, mm_GlobalOrd, mm_node_t &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>mxArray *</type>
      <name>saveDataToMatlab</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac62243148e0eaa5a2cce4b7d04398a54</anchor>
      <arglist>(RCP&lt; MGraph &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLevelVariable</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a434c3dec0a23616044f49956d000ad2e</anchor>
      <arglist>(const T &amp;data, std::string &amp;name, Level &amp;lvl, const Factory *fact)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; double, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a1246ea5c5217260e52189334a60e8986</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt; &gt;</type>
      <name>processNeeds&lt; complex_t, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ae0ff8da16adcd29bbde587c82b57ed89</anchor>
      <arglist>(const Factory *factory, std::string &amp;needsParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides&lt; double, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a3a8a778fd53e6fcd4e9c7f5e2dbc9c4d</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processProvides&lt; complex_t, mm_LocalOrd, long long, mm_node_t &gt;</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>ac380aa16063d57ad4aec4319139b6a87</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; MuemexArg &gt;&gt; &amp;mexOutput, const Factory *factory, std::string &amp;providesParam, Level &amp;lvl)</arglist>
    </member>
    <member kind="variable">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>myParent_</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>a0017ae57c70f76ace9804f9d22ab21a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rewrap_ints</name>
      <anchorfile>namespaceMueLu.html</anchorfile>
      <anchor>afc0105f44df4ccc289220f3c87b41494</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>MueLu::Details</name>
    <filename>namespaceMueLu_1_1Details.html</filename>
    <class kind="class">MueLu::Details::LinearSolver</class>
    <class kind="class">MueLu::Details::LinearSolver&lt; Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt;,                                                                                                                                                                                                                                                                                   Tpetra::Operator&lt; Scalar, LO, GO, Node &gt;,                                                                                                                                                                                                                                                                   typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &gt;</class>
    <class kind="class">MueLu::Details::LinearSolverFactory</class>
    <member kind="function">
      <type>void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>namespaceMueLu_1_1Details.html</anchorfile>
      <anchor>aa0557065da82040695a4468c554e76f7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>MueLu::Exceptions</name>
    <filename>namespaceMueLu_1_1Exceptions.html</filename>
    <class kind="class">MueLu::Exceptions::BadCast</class>
    <class kind="class">MueLu::Exceptions::DependencyError</class>
    <class kind="class">MueLu::Exceptions::Incompatible</class>
    <class kind="class">MueLu::Exceptions::InvalidArgument</class>
    <class kind="class">MueLu::Exceptions::NotImplemented</class>
    <class kind="class">MueLu::Exceptions::Overflow</class>
    <class kind="class">MueLu::Exceptions::RuntimeError</class>
  </compound>
  <compound kind="namespace">
    <name>MueLu::MemUtils</name>
    <filename>namespaceMueLu_1_1MemUtils.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>PrintMemoryUsage</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>a11c27664227aac4e4dd39acfb87bb5af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>PrintMemoryInfo</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>af8e87a10f8546fc4338c78cc7c38cb83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReportTimeAndMemory</name>
      <anchorfile>namespaceMueLu_1_1MemUtils.html</anchorfile>
      <anchor>aa8bc7137204e52950ca852a6fdf8b5b0</anchor>
      <arglist>(Teuchos::Time const &amp;timer, Teuchos::Comm&lt; int &gt; const &amp;Comm)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>MueLu::YAMLParameterList</name>
    <filename>namespaceMueLu_1_1YAMLParameterList.html</filename>
    <member kind="typedef">
      <type>Teuchos::ParameterList::ConstIterator</type>
      <name>PLIter</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aa8d79f1918f5b6ca2c9bc8c3cefe84d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlText</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab4ca6e6373ed544a074f2b09df930468</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlText</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>af4eda3847c9e64482aac681e6d5530d0</anchor>
      <arglist>(const char *text)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>parseYamlFile</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a320a6624244f930fef01eb4d695baf46</anchor>
      <arglist>(const std::string &amp;yamlFile)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeYamlFile</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aa18d31fa840b4a8d08656272d376e382</anchor>
      <arglist>(const std::string &amp;yamlFile, Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>readParams</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a1b0b6fe665fa0caa031e1cfdddc173fe</anchor>
      <arglist>(std::vector&lt; YAML::Node &gt; &amp;lists)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processMapNode</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab3b77e8413521ea3ac8fb3c2af8c67a4</anchor>
      <arglist>(const YAML::Node &amp;node, Teuchos::ParameterList &amp;parent, bool topLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processKeyValueNode</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a08e2bd7677f4dbcc8bf50fc8c41b4a8a</anchor>
      <arglist>(const std::string &amp;key, const YAML::Node &amp;node, Teuchos::ParameterList &amp;parent, bool topLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; T &gt;</type>
      <name>getYamlArray</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>aef7ea8f59bc69d1caa998b2e49b21599</anchor>
      <arglist>(const YAML::Node &amp;node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeParameterList</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a89178df6a3a704ab0c0c2439d2925fe1</anchor>
      <arglist>(Teuchos::ParameterList &amp;pl, std::ofstream &amp;yaml, int indentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeParameter</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a5d0d2d9070ddb5bccb0715d68557fc07</anchor>
      <arglist>(const std::string &amp;paramName, const Teuchos::ParameterEntry &amp;entry, std::ofstream &amp;yaml, int indentLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generalWriteString</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>ab5986cb49c0f4cf048b6d2262fc83f97</anchor>
      <arglist>(const std::string &amp;str, std::ofstream &amp;yaml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generalWriteDouble</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>a200517d706cafbc5631be07e7c366270</anchor>
      <arglist>(double d, std::ofstream &amp;yaml)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stringNeedsQuotes</name>
      <anchorfile>namespaceMueLu_1_1YAMLParameterList.html</anchorfile>
      <anchor>acb688f0983df254b94041d6228b15f1b</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Stratimikos</name>
    <filename>namespaceStratimikos.html</filename>
    <member kind="function">
      <type>void</type>
      <name>enableMueLu</name>
      <anchorfile>namespaceStratimikos.html</anchorfile>
      <anchor>ac191b5b3282c82bc6876dafd5190953b</anchor>
      <arglist>(DefaultLinearSolverBuilder &amp;builder, const std::string &amp;stratName=&quot;MueLu&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableMueLuTpetraQ2Q1</name>
      <anchorfile>namespaceStratimikos.html</anchorfile>
      <anchor>a44bf7da5f2151ec70cd877b05362ccc6</anchor>
      <arglist>(DefaultLinearSolverBuilder &amp;builder, const std::string &amp;stratName=&quot;MueLu&quot;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos</name>
    <filename>namespaceTeuchos.html</filename>
    <class kind="class">Teuchos::Comm</class>
  </compound>
  <compound kind="namespace">
    <name>Thyra</name>
    <filename>namespaceThyra.html</filename>
    <class kind="class">Thyra::MueLuPreconditionerFactory</class>
    <class kind="class">Thyra::MueLuPreconditionerFactory&lt; double, int, int, Xpetra::EpetraNode &gt;</class>
    <class kind="class">Thyra::MueLuTpetraQ2Q1PreconditionerFactory</class>
    <class kind="class">Thyra::XpetraLinearOp</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Table of Contents">muelu_index</docanchor>
    <docanchor file="index" title="MueLu Overview">muelu_overview</docanchor>
    <docanchor file="index" title="Documentation">muelu_documentation</docanchor>
    <docanchor file="index" title="Authors and Contributors">muelu_authors</docanchor>
    <docanchor file="index" title="Copyright and License">muelu_copyright</docanchor>
    <docanchor file="index" title="For All Questions and Comments...">muelu_questions</docanchor>
    <docanchor file="index" title="Table of Contents">ifp_table</docanchor>
    <docanchor file="index" title="Introduction">ifp_intro</docanchor>
    <docanchor file="index" title="Download IFPACK">ifp_download</docanchor>
    <docanchor file="index" title="Configuring IFPACK">ifp_configure</docanchor>
    <docanchor file="index" title="Examples of Usage">ifp_example</docanchor>
    <docanchor file="index" title="List of Supported Parameters">ifp_params</docanchor>
    <docanchor file="index" title="Brief Description IFPACK Classes">ifp_tools</docanchor>
    <docanchor file="index" title="Error Table">ifp_error</docanchor>
    <docanchor file="index" title="Known Bugs and Future Developments">ifp_bugs</docanchor>
    <docanchor file="index" title="Copyright">ifp_copyright</docanchor>
    <docanchor file="index" title="Browse all of Ifpack as a single doxygen collection">ifp_browser</docanchor>
    <docanchor file="index" title="Outline">Epetra_outline</docanchor>
    <docanchor file="index" title="Introduction">Epetra_intro</docanchor>
    <docanchor file="index" title="Overview of Epetra.">Epetra_startup</docanchor>
    <docanchor file="index" title="Epetra Classes">Epetra_formulations</docanchor>
    <docanchor file="index" title="Fortran and C Support">Epetra_wrappers</docanchor>
    <docanchor file="index" title="Trilinos and Epetra">Epetra_trilinos</docanchor>
    <docanchor file="index" title="Transition support for current Aztec users">Epetra_aztec2trilinos</docanchor>
    <docanchor file="index" title="Extending Epetra functionality">Epetra_extending</docanchor>
    <docanchor file="index" title="Why not abstract multivector and vector classes?">why_not_abstract_vector</docanchor>
    <docanchor file="index" title="Tutorial lessons">Epetra_example</docanchor>
    <docanchor file="index" title="Epetra adapters for Thyra and PyTrilinos">Epetra_adapters</docanchor>
    <docanchor file="index" title="Browse all of Epetra as a single doxygen collection">Epetra_browser</docanchor>
    <docanchor file="index" title="What is Ifpack2?">Ifpack2_intro</docanchor>
    <docanchor file="index" title="Why Ifpack2?">Ifpack2_why</docanchor>
    <docanchor file="index" title="Methods that Ifpack2 implements">Ifpack2_methods</docanchor>
    <docanchor file="index" title="Relaxations and smoothers">Ifpack2_methods_relax</docanchor>
    <docanchor file="index" title="Incomplete factorizations">Ifpack2_methods_fact</docanchor>
    <docanchor file="index" title="Domain decomposition">Ifpack2_methods_dom</docanchor>
    <docanchor file="index" title="Interface to Ifpack2 methods">Ifpack2_interface</docanchor>
    <docanchor file="index" title="Examples">Ifpack2_examples</docanchor>
    <docanchor file="index" title="How do I add a preconditioner?">Ifpack2_AddPrec</docanchor>
    <docanchor file="index" title="How do I name my new class?">Ifpack2_AddPrec_ClassName</docanchor>
    <docanchor file="index" title="Naming functions, methods, etc.">Ifpack2_AddPrec_FuncName</docanchor>
    <docanchor file="index" title="Template parameters">Ifpack2_AddPrec_TmplParams</docanchor>
    <docanchor file="index" title="Initialization and finalization">Ifpack2_AddPrec_InitFini</docanchor>
    <docanchor file="index" title="Current Linear Solvers">solvers</docanchor>
    <docanchor file="index" title="Belos Contributors">contributors</docanchor>
    <docanchor file="index" title="Where to start">starting_place</docanchor>
    <docanchor file="index" title="Browse all of Belos as a single doxygen collection">belos_browser</docanchor>
    <docanchor file="index" title="Thyra support">belos_thyra</docanchor>
    <docanchor file="index" title="Frequently Asked Questions">belos_faq</docanchor>
    <docanchor file="index" title="Introduction">intro</docanchor>
    <docanchor file="index" title="Table of Contents">am_toc</docanchor>
    <docanchor file="index" title="Introduction">am_intro</docanchor>
    <docanchor file="index" title="Copyright and licensing of the third party codes">am_copyright</docanchor>
    <docanchor file="index" title="Quick comparison of the Amesos classes">am_comparison</docanchor>
    <docanchor file="index" title="Supported Matrix Formats.">am_matrix</docanchor>
    <docanchor file="index" title="Installing Amesos">am_install</docanchor>
    <docanchor file="index" title="Example of Use of Amesos Classes">am_example</docanchor>
    <docanchor file="index" title="Browse all of Amesos as a single doxygen collection">am_browser</docanchor>
    <docanchor file="index" title="Python support">am_python</docanchor>
    <docanchor file="index" title="Thyra support">am_thyra</docanchor>
    <docanchor file="index" title="Known bugs and future developments">am_future</docanchor>
    <docanchor file="index" title="Incompatibility between old versions of SuperLU">old_incompatibilities</docanchor>
    <docanchor file="index" title="bugs">known_bugs</docanchor>
    <docanchor file="index" title="Final Remarks">am_final</docanchor>
    <docanchor file="index" title="Introduction">EpetraExt_intro</docanchor>
    <docanchor file="index" title="Overview of EpetraExt">EpetraExt_startup</docanchor>
    <docanchor file="index" title="EpetraExt Classes">EpetraExt_formulations</docanchor>
    <docanchor file="index" title="EpetraExt Functions">EpetraExt_functions</docanchor>
    <docanchor file="index" title="EpetraExt adapters">EpetraExt_adapters</docanchor>
    <docanchor file="index" title="Browse all of Epetraext as a single doxygen collection">EpetraExt_browser</docanchor>
    <docanchor file="index" title="Introduction">Kokkos_Intro</docanchor>
    <docanchor file="index" title="The %Kokkos programming model">Kokkos_Kokkos</docanchor>
    <docanchor file="index" title="%Kokkos Classic">Kokkos_Classic</docanchor>
  </compound>
</tagfile>
